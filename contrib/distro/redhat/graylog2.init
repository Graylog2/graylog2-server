#!/bin/bash
#
# graylog2-server - This script starts and stops the graylog2-server daemon
#
# chkconfig:   - 85 15
# description: graylog2 is a syslog implementation that stores logs in MongoDB
 
### BEGIN INIT INFO
# Provides:
# Required-Start:           $network
# Required-Stop:            $network
# Default-Stop:             0 1 2 6
# Short-Description:    Start/stop the graylog2-server daemon
# Description:              A syslog implementation that stores logs in MongoDB
### END INIT INFO
 
# Source function library.
. /etc/init.d/functions
 
# Check networking
. /etc/sysconfig/network
[[ $NETWORKING == no ]] && exit 0
 
name="graylog2"
prog="$name-server"
jar="/usr/share/$name/$prog.jar"
configfile="/etc/$name/$name.conf"
lockfile="/var/lock/subsys/$prog"
logfile="/var/log/$name/$prog.log"
pidfile="/var/run/$name.pid"
 
JAVA_BIN="/usr/bin/java"
 
unset pid
 
gl2_run() {
  # Disable csh style history expansion for safety
  set +H
    daemon "( $JAVA_BIN -jar \"$jar\" --configfile $configfile > \"$logfile\" 2>&1 & echo \"\$!\" > \"$pidfile\" )"
    pid=$(<"$pidfile")
  sleep 1
    if kill -0 "$pid" >/dev/null 2>&1
    then
        return 0
    else
        return 1
    fi
}
 
gl2_status() {
    [[ -f $pidfile ]] && pid=$(<"$pidfile")
    [[ -z $pid ]] && return 1
    if kill -0 "$pid" >/dev/null 2>&1
    then
        return 0
    else
        return 1
    fi
}
 
status() {
    if gl2_status
    then
        echo $"$prog (pid $pid) is running..."
        return 0
    else
        if [[ -f $lockfile ]]
        then
            echo $"$prog dead but subsys locked"
            return 2
        fi
        echo $"$prog is stopped"
        return 3
    fi
}
 
start() {
  [[ -r $jar ]] || exit 5
    gl2_run >/dev/null 2>&1
    if [[ $? -eq 0 ]]
    then
        retval=0
        touch "$lockfile"
        success
    else
        retval=1
        failure
    fi
 
    echo $"Starting $prog: "
  return "$retval"
}
 
stop() {
    killproc -p "$pidfile"
    if [[ $? -eq 0 ]]
    then
        retval=0
        rm -f "$lockfile"
    success
    else
        retval=1
    failure
    fi
 
  echo $"Stopping $prog: "
  return "$retval"
}
 
restart() {
  stop
  start
}
 
reload() {
  restart
}
 
force_reload() {
  restart
}
 
case "$1" in
  start)
      gl2_status && exit 0
      $1
      ;;
  stop)
      gl2_status || exit 0
      $1
      ;;
  restart)
      $1
      ;;
  reload)
      gl2_status || exit 7
      $1
      ;;
  force-reload)
      force_reload
      ;;
  status)
      $1
      ;;
  condrestart|try-restart)
      gl2_status || exit 0
      restart
      ;;
  *)
      echo $"Usage: $0 {start|stop|status|restart|condrestart|try-restart|reload|force-reload}"
      exit 2
esac
exit $?

