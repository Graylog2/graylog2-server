/*
 * Copyright (C) 2020 Graylog, Inc.
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the Server Side Public License, version 1,
 * as published by MongoDB, Inc.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * Server Side Public License for more details.
 *
 * You should have received a copy of the Server Side Public License
 * along with this program. If not, see
 * <http://www.mongodb.com/licensing/server-side-public-license>.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: src/main/resources/ipfix_journal.proto

// Protobuf Java Version: 3.25.6
package org.graylog.integrations.ipfix;

public final class IpfixJournal {
  private IpfixJournal() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface RawIpfixOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.graylog.integrations.ipfix.RawIpfix)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * all applicable templates that are referenced by the data sets
     * </pre>
     *
     * <code>map&lt;uint32, bytes&gt; templates = 1;</code>
     */
    int getTemplatesCount();
    /**
     * <pre>
     * all applicable templates that are referenced by the data sets
     * </pre>
     *
     * <code>map&lt;uint32, bytes&gt; templates = 1;</code>
     */
    boolean containsTemplates(
        int key);
    /**
     * Use {@link #getTemplatesMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, com.google.protobuf.ByteString>
    getTemplates();
    /**
     * <pre>
     * all applicable templates that are referenced by the data sets
     * </pre>
     *
     * <code>map&lt;uint32, bytes&gt; templates = 1;</code>
     */
    java.util.Map<java.lang.Integer, com.google.protobuf.ByteString>
    getTemplatesMap();
    /**
     * <pre>
     * all applicable templates that are referenced by the data sets
     * </pre>
     *
     * <code>map&lt;uint32, bytes&gt; templates = 1;</code>
     */
    /* nullable */
com.google.protobuf.ByteString getTemplatesOrDefault(
        int key,
        /* nullable */
com.google.protobuf.ByteString defaultValue);
    /**
     * <pre>
     * all applicable templates that are referenced by the data sets
     * </pre>
     *
     * <code>map&lt;uint32, bytes&gt; templates = 1;</code>
     */
    com.google.protobuf.ByteString getTemplatesOrThrow(
        int key);

    /**
     * <pre>
     * all applicable options templates that are references by the data sets
     * </pre>
     *
     * <code>map&lt;uint32, bytes&gt; optionTemplates = 2;</code>
     */
    int getOptionTemplatesCount();
    /**
     * <pre>
     * all applicable options templates that are references by the data sets
     * </pre>
     *
     * <code>map&lt;uint32, bytes&gt; optionTemplates = 2;</code>
     */
    boolean containsOptionTemplates(
        int key);
    /**
     * Use {@link #getOptionTemplatesMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, com.google.protobuf.ByteString>
    getOptionTemplates();
    /**
     * <pre>
     * all applicable options templates that are references by the data sets
     * </pre>
     *
     * <code>map&lt;uint32, bytes&gt; optionTemplates = 2;</code>
     */
    java.util.Map<java.lang.Integer, com.google.protobuf.ByteString>
    getOptionTemplatesMap();
    /**
     * <pre>
     * all applicable options templates that are references by the data sets
     * </pre>
     *
     * <code>map&lt;uint32, bytes&gt; optionTemplates = 2;</code>
     */
    /* nullable */
com.google.protobuf.ByteString getOptionTemplatesOrDefault(
        int key,
        /* nullable */
com.google.protobuf.ByteString defaultValue);
    /**
     * <pre>
     * all applicable options templates that are references by the data sets
     * </pre>
     *
     * <code>map&lt;uint32, bytes&gt; optionTemplates = 2;</code>
     */
    com.google.protobuf.ByteString getOptionTemplatesOrThrow(
        int key);

    /**
     * <code>repeated .org.graylog.integrations.ipfix.DataSet dataSets = 3;</code>
     */
    java.util.List<org.graylog.integrations.ipfix.IpfixJournal.DataSet> 
        getDataSetsList();
    /**
     * <code>repeated .org.graylog.integrations.ipfix.DataSet dataSets = 3;</code>
     */
    org.graylog.integrations.ipfix.IpfixJournal.DataSet getDataSets(int index);
    /**
     * <code>repeated .org.graylog.integrations.ipfix.DataSet dataSets = 3;</code>
     */
    int getDataSetsCount();
    /**
     * <code>repeated .org.graylog.integrations.ipfix.DataSet dataSets = 3;</code>
     */
    java.util.List<? extends org.graylog.integrations.ipfix.IpfixJournal.DataSetOrBuilder> 
        getDataSetsOrBuilderList();
    /**
     * <code>repeated .org.graylog.integrations.ipfix.DataSet dataSets = 3;</code>
     */
    org.graylog.integrations.ipfix.IpfixJournal.DataSetOrBuilder getDataSetsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code org.graylog.integrations.ipfix.RawIpfix}
   */
  public static final class RawIpfix extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.graylog.integrations.ipfix.RawIpfix)
      RawIpfixOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use RawIpfix.newBuilder() to construct.
    private RawIpfix(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private RawIpfix() {
      dataSets_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new RawIpfix();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.graylog.integrations.ipfix.IpfixJournal.internal_static_org_graylog_integrations_ipfix_RawIpfix_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    @java.lang.Override
    protected com.google.protobuf.MapFieldReflectionAccessor internalGetMapFieldReflection(
        int number) {
      switch (number) {
        case 1:
          return internalGetTemplates();
        case 2:
          return internalGetOptionTemplates();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.graylog.integrations.ipfix.IpfixJournal.internal_static_org_graylog_integrations_ipfix_RawIpfix_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.graylog.integrations.ipfix.IpfixJournal.RawIpfix.class, org.graylog.integrations.ipfix.IpfixJournal.RawIpfix.Builder.class);
    }

    public static final int TEMPLATES_FIELD_NUMBER = 1;
    private static final class TemplatesDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, com.google.protobuf.ByteString> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, com.google.protobuf.ByteString>newDefaultInstance(
                  org.graylog.integrations.ipfix.IpfixJournal.internal_static_org_graylog_integrations_ipfix_RawIpfix_TemplatesEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.UINT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.BYTES,
                  com.google.protobuf.ByteString.EMPTY);
    }
    @SuppressWarnings("serial")
    private com.google.protobuf.MapField<
        java.lang.Integer, com.google.protobuf.ByteString> templates_;
    private com.google.protobuf.MapField<java.lang.Integer, com.google.protobuf.ByteString>
    internalGetTemplates() {
      if (templates_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            TemplatesDefaultEntryHolder.defaultEntry);
      }
      return templates_;
    }
    public int getTemplatesCount() {
      return internalGetTemplates().getMap().size();
    }
    /**
     * <pre>
     * all applicable templates that are referenced by the data sets
     * </pre>
     *
     * <code>map&lt;uint32, bytes&gt; templates = 1;</code>
     */
    @java.lang.Override
    public boolean containsTemplates(
        int key) {

      return internalGetTemplates().getMap().containsKey(key);
    }
    /**
     * Use {@link #getTemplatesMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, com.google.protobuf.ByteString> getTemplates() {
      return getTemplatesMap();
    }
    /**
     * <pre>
     * all applicable templates that are referenced by the data sets
     * </pre>
     *
     * <code>map&lt;uint32, bytes&gt; templates = 1;</code>
     */
    @java.lang.Override
    public java.util.Map<java.lang.Integer, com.google.protobuf.ByteString> getTemplatesMap() {
      return internalGetTemplates().getMap();
    }
    /**
     * <pre>
     * all applicable templates that are referenced by the data sets
     * </pre>
     *
     * <code>map&lt;uint32, bytes&gt; templates = 1;</code>
     */
    @java.lang.Override
    public /* nullable */
com.google.protobuf.ByteString getTemplatesOrDefault(
        int key,
        /* nullable */
com.google.protobuf.ByteString defaultValue) {

      java.util.Map<java.lang.Integer, com.google.protobuf.ByteString> map =
          internalGetTemplates().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * all applicable templates that are referenced by the data sets
     * </pre>
     *
     * <code>map&lt;uint32, bytes&gt; templates = 1;</code>
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getTemplatesOrThrow(
        int key) {

      java.util.Map<java.lang.Integer, com.google.protobuf.ByteString> map =
          internalGetTemplates().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int OPTIONTEMPLATES_FIELD_NUMBER = 2;
    private static final class OptionTemplatesDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, com.google.protobuf.ByteString> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, com.google.protobuf.ByteString>newDefaultInstance(
                  org.graylog.integrations.ipfix.IpfixJournal.internal_static_org_graylog_integrations_ipfix_RawIpfix_OptionTemplatesEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.UINT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.BYTES,
                  com.google.protobuf.ByteString.EMPTY);
    }
    @SuppressWarnings("serial")
    private com.google.protobuf.MapField<
        java.lang.Integer, com.google.protobuf.ByteString> optionTemplates_;
    private com.google.protobuf.MapField<java.lang.Integer, com.google.protobuf.ByteString>
    internalGetOptionTemplates() {
      if (optionTemplates_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            OptionTemplatesDefaultEntryHolder.defaultEntry);
      }
      return optionTemplates_;
    }
    public int getOptionTemplatesCount() {
      return internalGetOptionTemplates().getMap().size();
    }
    /**
     * <pre>
     * all applicable options templates that are references by the data sets
     * </pre>
     *
     * <code>map&lt;uint32, bytes&gt; optionTemplates = 2;</code>
     */
    @java.lang.Override
    public boolean containsOptionTemplates(
        int key) {

      return internalGetOptionTemplates().getMap().containsKey(key);
    }
    /**
     * Use {@link #getOptionTemplatesMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, com.google.protobuf.ByteString> getOptionTemplates() {
      return getOptionTemplatesMap();
    }
    /**
     * <pre>
     * all applicable options templates that are references by the data sets
     * </pre>
     *
     * <code>map&lt;uint32, bytes&gt; optionTemplates = 2;</code>
     */
    @java.lang.Override
    public java.util.Map<java.lang.Integer, com.google.protobuf.ByteString> getOptionTemplatesMap() {
      return internalGetOptionTemplates().getMap();
    }
    /**
     * <pre>
     * all applicable options templates that are references by the data sets
     * </pre>
     *
     * <code>map&lt;uint32, bytes&gt; optionTemplates = 2;</code>
     */
    @java.lang.Override
    public /* nullable */
com.google.protobuf.ByteString getOptionTemplatesOrDefault(
        int key,
        /* nullable */
com.google.protobuf.ByteString defaultValue) {

      java.util.Map<java.lang.Integer, com.google.protobuf.ByteString> map =
          internalGetOptionTemplates().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * all applicable options templates that are references by the data sets
     * </pre>
     *
     * <code>map&lt;uint32, bytes&gt; optionTemplates = 2;</code>
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getOptionTemplatesOrThrow(
        int key) {

      java.util.Map<java.lang.Integer, com.google.protobuf.ByteString> map =
          internalGetOptionTemplates().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int DATASETS_FIELD_NUMBER = 3;
    @SuppressWarnings("serial")
    private java.util.List<org.graylog.integrations.ipfix.IpfixJournal.DataSet> dataSets_;
    /**
     * <code>repeated .org.graylog.integrations.ipfix.DataSet dataSets = 3;</code>
     */
    @java.lang.Override
    public java.util.List<org.graylog.integrations.ipfix.IpfixJournal.DataSet> getDataSetsList() {
      return dataSets_;
    }
    /**
     * <code>repeated .org.graylog.integrations.ipfix.DataSet dataSets = 3;</code>
     */
    @java.lang.Override
    public java.util.List<? extends org.graylog.integrations.ipfix.IpfixJournal.DataSetOrBuilder> 
        getDataSetsOrBuilderList() {
      return dataSets_;
    }
    /**
     * <code>repeated .org.graylog.integrations.ipfix.DataSet dataSets = 3;</code>
     */
    @java.lang.Override
    public int getDataSetsCount() {
      return dataSets_.size();
    }
    /**
     * <code>repeated .org.graylog.integrations.ipfix.DataSet dataSets = 3;</code>
     */
    @java.lang.Override
    public org.graylog.integrations.ipfix.IpfixJournal.DataSet getDataSets(int index) {
      return dataSets_.get(index);
    }
    /**
     * <code>repeated .org.graylog.integrations.ipfix.DataSet dataSets = 3;</code>
     */
    @java.lang.Override
    public org.graylog.integrations.ipfix.IpfixJournal.DataSetOrBuilder getDataSetsOrBuilder(
        int index) {
      return dataSets_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      for (int i = 0; i < getDataSetsCount(); i++) {
        if (!getDataSets(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetTemplates(),
          TemplatesDefaultEntryHolder.defaultEntry,
          1);
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetOptionTemplates(),
          OptionTemplatesDefaultEntryHolder.defaultEntry,
          2);
      for (int i = 0; i < dataSets_.size(); i++) {
        output.writeMessage(3, dataSets_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (java.util.Map.Entry<java.lang.Integer, com.google.protobuf.ByteString> entry
           : internalGetTemplates().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, com.google.protobuf.ByteString>
        templates__ = TemplatesDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, templates__);
      }
      for (java.util.Map.Entry<java.lang.Integer, com.google.protobuf.ByteString> entry
           : internalGetOptionTemplates().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, com.google.protobuf.ByteString>
        optionTemplates__ = OptionTemplatesDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, optionTemplates__);
      }
      for (int i = 0; i < dataSets_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, dataSets_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.graylog.integrations.ipfix.IpfixJournal.RawIpfix)) {
        return super.equals(obj);
      }
      org.graylog.integrations.ipfix.IpfixJournal.RawIpfix other = (org.graylog.integrations.ipfix.IpfixJournal.RawIpfix) obj;

      if (!internalGetTemplates().equals(
          other.internalGetTemplates())) return false;
      if (!internalGetOptionTemplates().equals(
          other.internalGetOptionTemplates())) return false;
      if (!getDataSetsList()
          .equals(other.getDataSetsList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (!internalGetTemplates().getMap().isEmpty()) {
        hash = (37 * hash) + TEMPLATES_FIELD_NUMBER;
        hash = (53 * hash) + internalGetTemplates().hashCode();
      }
      if (!internalGetOptionTemplates().getMap().isEmpty()) {
        hash = (37 * hash) + OPTIONTEMPLATES_FIELD_NUMBER;
        hash = (53 * hash) + internalGetOptionTemplates().hashCode();
      }
      if (getDataSetsCount() > 0) {
        hash = (37 * hash) + DATASETS_FIELD_NUMBER;
        hash = (53 * hash) + getDataSetsList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.graylog.integrations.ipfix.IpfixJournal.RawIpfix parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.graylog.integrations.ipfix.IpfixJournal.RawIpfix parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.graylog.integrations.ipfix.IpfixJournal.RawIpfix parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.graylog.integrations.ipfix.IpfixJournal.RawIpfix parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.graylog.integrations.ipfix.IpfixJournal.RawIpfix parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.graylog.integrations.ipfix.IpfixJournal.RawIpfix parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.graylog.integrations.ipfix.IpfixJournal.RawIpfix parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.graylog.integrations.ipfix.IpfixJournal.RawIpfix parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static org.graylog.integrations.ipfix.IpfixJournal.RawIpfix parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static org.graylog.integrations.ipfix.IpfixJournal.RawIpfix parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.graylog.integrations.ipfix.IpfixJournal.RawIpfix parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.graylog.integrations.ipfix.IpfixJournal.RawIpfix parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.graylog.integrations.ipfix.IpfixJournal.RawIpfix prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.graylog.integrations.ipfix.RawIpfix}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.graylog.integrations.ipfix.RawIpfix)
        org.graylog.integrations.ipfix.IpfixJournal.RawIpfixOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.graylog.integrations.ipfix.IpfixJournal.internal_static_org_graylog_integrations_ipfix_RawIpfix_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapFieldReflectionAccessor internalGetMapFieldReflection(
          int number) {
        switch (number) {
          case 1:
            return internalGetTemplates();
          case 2:
            return internalGetOptionTemplates();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapFieldReflectionAccessor internalGetMutableMapFieldReflection(
          int number) {
        switch (number) {
          case 1:
            return internalGetMutableTemplates();
          case 2:
            return internalGetMutableOptionTemplates();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.graylog.integrations.ipfix.IpfixJournal.internal_static_org_graylog_integrations_ipfix_RawIpfix_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.graylog.integrations.ipfix.IpfixJournal.RawIpfix.class, org.graylog.integrations.ipfix.IpfixJournal.RawIpfix.Builder.class);
      }

      // Construct using org.graylog.integrations.ipfix.IpfixJournal.RawIpfix.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        internalGetMutableTemplates().clear();
        internalGetMutableOptionTemplates().clear();
        if (dataSetsBuilder_ == null) {
          dataSets_ = java.util.Collections.emptyList();
        } else {
          dataSets_ = null;
          dataSetsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.graylog.integrations.ipfix.IpfixJournal.internal_static_org_graylog_integrations_ipfix_RawIpfix_descriptor;
      }

      @java.lang.Override
      public org.graylog.integrations.ipfix.IpfixJournal.RawIpfix getDefaultInstanceForType() {
        return org.graylog.integrations.ipfix.IpfixJournal.RawIpfix.getDefaultInstance();
      }

      @java.lang.Override
      public org.graylog.integrations.ipfix.IpfixJournal.RawIpfix build() {
        org.graylog.integrations.ipfix.IpfixJournal.RawIpfix result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.graylog.integrations.ipfix.IpfixJournal.RawIpfix buildPartial() {
        org.graylog.integrations.ipfix.IpfixJournal.RawIpfix result = new org.graylog.integrations.ipfix.IpfixJournal.RawIpfix(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(org.graylog.integrations.ipfix.IpfixJournal.RawIpfix result) {
        if (dataSetsBuilder_ == null) {
          if (((bitField0_ & 0x00000004) != 0)) {
            dataSets_ = java.util.Collections.unmodifiableList(dataSets_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.dataSets_ = dataSets_;
        } else {
          result.dataSets_ = dataSetsBuilder_.build();
        }
      }

      private void buildPartial0(org.graylog.integrations.ipfix.IpfixJournal.RawIpfix result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.templates_ = internalGetTemplates();
          result.templates_.makeImmutable();
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.optionTemplates_ = internalGetOptionTemplates();
          result.optionTemplates_.makeImmutable();
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.graylog.integrations.ipfix.IpfixJournal.RawIpfix) {
          return mergeFrom((org.graylog.integrations.ipfix.IpfixJournal.RawIpfix)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.graylog.integrations.ipfix.IpfixJournal.RawIpfix other) {
        if (other == org.graylog.integrations.ipfix.IpfixJournal.RawIpfix.getDefaultInstance()) return this;
        internalGetMutableTemplates().mergeFrom(
            other.internalGetTemplates());
        bitField0_ |= 0x00000001;
        internalGetMutableOptionTemplates().mergeFrom(
            other.internalGetOptionTemplates());
        bitField0_ |= 0x00000002;
        if (dataSetsBuilder_ == null) {
          if (!other.dataSets_.isEmpty()) {
            if (dataSets_.isEmpty()) {
              dataSets_ = other.dataSets_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureDataSetsIsMutable();
              dataSets_.addAll(other.dataSets_);
            }
            onChanged();
          }
        } else {
          if (!other.dataSets_.isEmpty()) {
            if (dataSetsBuilder_.isEmpty()) {
              dataSetsBuilder_.dispose();
              dataSetsBuilder_ = null;
              dataSets_ = other.dataSets_;
              bitField0_ = (bitField0_ & ~0x00000004);
              dataSetsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getDataSetsFieldBuilder() : null;
            } else {
              dataSetsBuilder_.addAllMessages(other.dataSets_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        for (int i = 0; i < getDataSetsCount(); i++) {
          if (!getDataSets(i).isInitialized()) {
            return false;
          }
        }
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                com.google.protobuf.MapEntry<java.lang.Integer, com.google.protobuf.ByteString>
                templates__ = input.readMessage(
                    TemplatesDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
                internalGetMutableTemplates().getMutableMap().put(
                    templates__.getKey(), templates__.getValue());
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 18: {
                com.google.protobuf.MapEntry<java.lang.Integer, com.google.protobuf.ByteString>
                optionTemplates__ = input.readMessage(
                    OptionTemplatesDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
                internalGetMutableOptionTemplates().getMutableMap().put(
                    optionTemplates__.getKey(), optionTemplates__.getValue());
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              case 26: {
                org.graylog.integrations.ipfix.IpfixJournal.DataSet m =
                    input.readMessage(
                        org.graylog.integrations.ipfix.IpfixJournal.DataSet.PARSER,
                        extensionRegistry);
                if (dataSetsBuilder_ == null) {
                  ensureDataSetsIsMutable();
                  dataSets_.add(m);
                } else {
                  dataSetsBuilder_.addMessage(m);
                }
                break;
              } // case 26
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.MapField<
          java.lang.Integer, com.google.protobuf.ByteString> templates_;
      private com.google.protobuf.MapField<java.lang.Integer, com.google.protobuf.ByteString>
          internalGetTemplates() {
        if (templates_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              TemplatesDefaultEntryHolder.defaultEntry);
        }
        return templates_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, com.google.protobuf.ByteString>
          internalGetMutableTemplates() {
        if (templates_ == null) {
          templates_ = com.google.protobuf.MapField.newMapField(
              TemplatesDefaultEntryHolder.defaultEntry);
        }
        if (!templates_.isMutable()) {
          templates_ = templates_.copy();
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return templates_;
      }
      public int getTemplatesCount() {
        return internalGetTemplates().getMap().size();
      }
      /**
       * <pre>
       * all applicable templates that are referenced by the data sets
       * </pre>
       *
       * <code>map&lt;uint32, bytes&gt; templates = 1;</code>
       */
      @java.lang.Override
      public boolean containsTemplates(
          int key) {

        return internalGetTemplates().getMap().containsKey(key);
      }
      /**
       * Use {@link #getTemplatesMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, com.google.protobuf.ByteString> getTemplates() {
        return getTemplatesMap();
      }
      /**
       * <pre>
       * all applicable templates that are referenced by the data sets
       * </pre>
       *
       * <code>map&lt;uint32, bytes&gt; templates = 1;</code>
       */
      @java.lang.Override
      public java.util.Map<java.lang.Integer, com.google.protobuf.ByteString> getTemplatesMap() {
        return internalGetTemplates().getMap();
      }
      /**
       * <pre>
       * all applicable templates that are referenced by the data sets
       * </pre>
       *
       * <code>map&lt;uint32, bytes&gt; templates = 1;</code>
       */
      @java.lang.Override
      public /* nullable */
com.google.protobuf.ByteString getTemplatesOrDefault(
          int key,
          /* nullable */
com.google.protobuf.ByteString defaultValue) {

        java.util.Map<java.lang.Integer, com.google.protobuf.ByteString> map =
            internalGetTemplates().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       * all applicable templates that are referenced by the data sets
       * </pre>
       *
       * <code>map&lt;uint32, bytes&gt; templates = 1;</code>
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getTemplatesOrThrow(
          int key) {

        java.util.Map<java.lang.Integer, com.google.protobuf.ByteString> map =
            internalGetTemplates().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }
      public Builder clearTemplates() {
        bitField0_ = (bitField0_ & ~0x00000001);
        internalGetMutableTemplates().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <pre>
       * all applicable templates that are referenced by the data sets
       * </pre>
       *
       * <code>map&lt;uint32, bytes&gt; templates = 1;</code>
       */
      public Builder removeTemplates(
          int key) {

        internalGetMutableTemplates().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, com.google.protobuf.ByteString>
          getMutableTemplates() {
        bitField0_ |= 0x00000001;
        return internalGetMutableTemplates().getMutableMap();
      }
      /**
       * <pre>
       * all applicable templates that are referenced by the data sets
       * </pre>
       *
       * <code>map&lt;uint32, bytes&gt; templates = 1;</code>
       */
      public Builder putTemplates(
          int key,
          com.google.protobuf.ByteString value) {

        if (value == null) { throw new NullPointerException("map value"); }
        internalGetMutableTemplates().getMutableMap()
            .put(key, value);
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <pre>
       * all applicable templates that are referenced by the data sets
       * </pre>
       *
       * <code>map&lt;uint32, bytes&gt; templates = 1;</code>
       */
      public Builder putAllTemplates(
          java.util.Map<java.lang.Integer, com.google.protobuf.ByteString> values) {
        internalGetMutableTemplates().getMutableMap()
            .putAll(values);
        bitField0_ |= 0x00000001;
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Integer, com.google.protobuf.ByteString> optionTemplates_;
      private com.google.protobuf.MapField<java.lang.Integer, com.google.protobuf.ByteString>
          internalGetOptionTemplates() {
        if (optionTemplates_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              OptionTemplatesDefaultEntryHolder.defaultEntry);
        }
        return optionTemplates_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, com.google.protobuf.ByteString>
          internalGetMutableOptionTemplates() {
        if (optionTemplates_ == null) {
          optionTemplates_ = com.google.protobuf.MapField.newMapField(
              OptionTemplatesDefaultEntryHolder.defaultEntry);
        }
        if (!optionTemplates_.isMutable()) {
          optionTemplates_ = optionTemplates_.copy();
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return optionTemplates_;
      }
      public int getOptionTemplatesCount() {
        return internalGetOptionTemplates().getMap().size();
      }
      /**
       * <pre>
       * all applicable options templates that are references by the data sets
       * </pre>
       *
       * <code>map&lt;uint32, bytes&gt; optionTemplates = 2;</code>
       */
      @java.lang.Override
      public boolean containsOptionTemplates(
          int key) {

        return internalGetOptionTemplates().getMap().containsKey(key);
      }
      /**
       * Use {@link #getOptionTemplatesMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, com.google.protobuf.ByteString> getOptionTemplates() {
        return getOptionTemplatesMap();
      }
      /**
       * <pre>
       * all applicable options templates that are references by the data sets
       * </pre>
       *
       * <code>map&lt;uint32, bytes&gt; optionTemplates = 2;</code>
       */
      @java.lang.Override
      public java.util.Map<java.lang.Integer, com.google.protobuf.ByteString> getOptionTemplatesMap() {
        return internalGetOptionTemplates().getMap();
      }
      /**
       * <pre>
       * all applicable options templates that are references by the data sets
       * </pre>
       *
       * <code>map&lt;uint32, bytes&gt; optionTemplates = 2;</code>
       */
      @java.lang.Override
      public /* nullable */
com.google.protobuf.ByteString getOptionTemplatesOrDefault(
          int key,
          /* nullable */
com.google.protobuf.ByteString defaultValue) {

        java.util.Map<java.lang.Integer, com.google.protobuf.ByteString> map =
            internalGetOptionTemplates().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       * all applicable options templates that are references by the data sets
       * </pre>
       *
       * <code>map&lt;uint32, bytes&gt; optionTemplates = 2;</code>
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getOptionTemplatesOrThrow(
          int key) {

        java.util.Map<java.lang.Integer, com.google.protobuf.ByteString> map =
            internalGetOptionTemplates().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }
      public Builder clearOptionTemplates() {
        bitField0_ = (bitField0_ & ~0x00000002);
        internalGetMutableOptionTemplates().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <pre>
       * all applicable options templates that are references by the data sets
       * </pre>
       *
       * <code>map&lt;uint32, bytes&gt; optionTemplates = 2;</code>
       */
      public Builder removeOptionTemplates(
          int key) {

        internalGetMutableOptionTemplates().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, com.google.protobuf.ByteString>
          getMutableOptionTemplates() {
        bitField0_ |= 0x00000002;
        return internalGetMutableOptionTemplates().getMutableMap();
      }
      /**
       * <pre>
       * all applicable options templates that are references by the data sets
       * </pre>
       *
       * <code>map&lt;uint32, bytes&gt; optionTemplates = 2;</code>
       */
      public Builder putOptionTemplates(
          int key,
          com.google.protobuf.ByteString value) {

        if (value == null) { throw new NullPointerException("map value"); }
        internalGetMutableOptionTemplates().getMutableMap()
            .put(key, value);
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <pre>
       * all applicable options templates that are references by the data sets
       * </pre>
       *
       * <code>map&lt;uint32, bytes&gt; optionTemplates = 2;</code>
       */
      public Builder putAllOptionTemplates(
          java.util.Map<java.lang.Integer, com.google.protobuf.ByteString> values) {
        internalGetMutableOptionTemplates().getMutableMap()
            .putAll(values);
        bitField0_ |= 0x00000002;
        return this;
      }

      private java.util.List<org.graylog.integrations.ipfix.IpfixJournal.DataSet> dataSets_ =
        java.util.Collections.emptyList();
      private void ensureDataSetsIsMutable() {
        if (!((bitField0_ & 0x00000004) != 0)) {
          dataSets_ = new java.util.ArrayList<org.graylog.integrations.ipfix.IpfixJournal.DataSet>(dataSets_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.graylog.integrations.ipfix.IpfixJournal.DataSet, org.graylog.integrations.ipfix.IpfixJournal.DataSet.Builder, org.graylog.integrations.ipfix.IpfixJournal.DataSetOrBuilder> dataSetsBuilder_;

      /**
       * <code>repeated .org.graylog.integrations.ipfix.DataSet dataSets = 3;</code>
       */
      public java.util.List<org.graylog.integrations.ipfix.IpfixJournal.DataSet> getDataSetsList() {
        if (dataSetsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(dataSets_);
        } else {
          return dataSetsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .org.graylog.integrations.ipfix.DataSet dataSets = 3;</code>
       */
      public int getDataSetsCount() {
        if (dataSetsBuilder_ == null) {
          return dataSets_.size();
        } else {
          return dataSetsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .org.graylog.integrations.ipfix.DataSet dataSets = 3;</code>
       */
      public org.graylog.integrations.ipfix.IpfixJournal.DataSet getDataSets(int index) {
        if (dataSetsBuilder_ == null) {
          return dataSets_.get(index);
        } else {
          return dataSetsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .org.graylog.integrations.ipfix.DataSet dataSets = 3;</code>
       */
      public Builder setDataSets(
          int index, org.graylog.integrations.ipfix.IpfixJournal.DataSet value) {
        if (dataSetsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDataSetsIsMutable();
          dataSets_.set(index, value);
          onChanged();
        } else {
          dataSetsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .org.graylog.integrations.ipfix.DataSet dataSets = 3;</code>
       */
      public Builder setDataSets(
          int index, org.graylog.integrations.ipfix.IpfixJournal.DataSet.Builder builderForValue) {
        if (dataSetsBuilder_ == null) {
          ensureDataSetsIsMutable();
          dataSets_.set(index, builderForValue.build());
          onChanged();
        } else {
          dataSetsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.graylog.integrations.ipfix.DataSet dataSets = 3;</code>
       */
      public Builder addDataSets(org.graylog.integrations.ipfix.IpfixJournal.DataSet value) {
        if (dataSetsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDataSetsIsMutable();
          dataSets_.add(value);
          onChanged();
        } else {
          dataSetsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .org.graylog.integrations.ipfix.DataSet dataSets = 3;</code>
       */
      public Builder addDataSets(
          int index, org.graylog.integrations.ipfix.IpfixJournal.DataSet value) {
        if (dataSetsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDataSetsIsMutable();
          dataSets_.add(index, value);
          onChanged();
        } else {
          dataSetsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .org.graylog.integrations.ipfix.DataSet dataSets = 3;</code>
       */
      public Builder addDataSets(
          org.graylog.integrations.ipfix.IpfixJournal.DataSet.Builder builderForValue) {
        if (dataSetsBuilder_ == null) {
          ensureDataSetsIsMutable();
          dataSets_.add(builderForValue.build());
          onChanged();
        } else {
          dataSetsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.graylog.integrations.ipfix.DataSet dataSets = 3;</code>
       */
      public Builder addDataSets(
          int index, org.graylog.integrations.ipfix.IpfixJournal.DataSet.Builder builderForValue) {
        if (dataSetsBuilder_ == null) {
          ensureDataSetsIsMutable();
          dataSets_.add(index, builderForValue.build());
          onChanged();
        } else {
          dataSetsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.graylog.integrations.ipfix.DataSet dataSets = 3;</code>
       */
      public Builder addAllDataSets(
          java.lang.Iterable<? extends org.graylog.integrations.ipfix.IpfixJournal.DataSet> values) {
        if (dataSetsBuilder_ == null) {
          ensureDataSetsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, dataSets_);
          onChanged();
        } else {
          dataSetsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .org.graylog.integrations.ipfix.DataSet dataSets = 3;</code>
       */
      public Builder clearDataSets() {
        if (dataSetsBuilder_ == null) {
          dataSets_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          dataSetsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .org.graylog.integrations.ipfix.DataSet dataSets = 3;</code>
       */
      public Builder removeDataSets(int index) {
        if (dataSetsBuilder_ == null) {
          ensureDataSetsIsMutable();
          dataSets_.remove(index);
          onChanged();
        } else {
          dataSetsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .org.graylog.integrations.ipfix.DataSet dataSets = 3;</code>
       */
      public org.graylog.integrations.ipfix.IpfixJournal.DataSet.Builder getDataSetsBuilder(
          int index) {
        return getDataSetsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .org.graylog.integrations.ipfix.DataSet dataSets = 3;</code>
       */
      public org.graylog.integrations.ipfix.IpfixJournal.DataSetOrBuilder getDataSetsOrBuilder(
          int index) {
        if (dataSetsBuilder_ == null) {
          return dataSets_.get(index);  } else {
          return dataSetsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .org.graylog.integrations.ipfix.DataSet dataSets = 3;</code>
       */
      public java.util.List<? extends org.graylog.integrations.ipfix.IpfixJournal.DataSetOrBuilder> 
           getDataSetsOrBuilderList() {
        if (dataSetsBuilder_ != null) {
          return dataSetsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(dataSets_);
        }
      }
      /**
       * <code>repeated .org.graylog.integrations.ipfix.DataSet dataSets = 3;</code>
       */
      public org.graylog.integrations.ipfix.IpfixJournal.DataSet.Builder addDataSetsBuilder() {
        return getDataSetsFieldBuilder().addBuilder(
            org.graylog.integrations.ipfix.IpfixJournal.DataSet.getDefaultInstance());
      }
      /**
       * <code>repeated .org.graylog.integrations.ipfix.DataSet dataSets = 3;</code>
       */
      public org.graylog.integrations.ipfix.IpfixJournal.DataSet.Builder addDataSetsBuilder(
          int index) {
        return getDataSetsFieldBuilder().addBuilder(
            index, org.graylog.integrations.ipfix.IpfixJournal.DataSet.getDefaultInstance());
      }
      /**
       * <code>repeated .org.graylog.integrations.ipfix.DataSet dataSets = 3;</code>
       */
      public java.util.List<org.graylog.integrations.ipfix.IpfixJournal.DataSet.Builder> 
           getDataSetsBuilderList() {
        return getDataSetsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.graylog.integrations.ipfix.IpfixJournal.DataSet, org.graylog.integrations.ipfix.IpfixJournal.DataSet.Builder, org.graylog.integrations.ipfix.IpfixJournal.DataSetOrBuilder> 
          getDataSetsFieldBuilder() {
        if (dataSetsBuilder_ == null) {
          dataSetsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              org.graylog.integrations.ipfix.IpfixJournal.DataSet, org.graylog.integrations.ipfix.IpfixJournal.DataSet.Builder, org.graylog.integrations.ipfix.IpfixJournal.DataSetOrBuilder>(
                  dataSets_,
                  ((bitField0_ & 0x00000004) != 0),
                  getParentForChildren(),
                  isClean());
          dataSets_ = null;
        }
        return dataSetsBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:org.graylog.integrations.ipfix.RawIpfix)
    }

    // @@protoc_insertion_point(class_scope:org.graylog.integrations.ipfix.RawIpfix)
    private static final org.graylog.integrations.ipfix.IpfixJournal.RawIpfix DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.graylog.integrations.ipfix.IpfixJournal.RawIpfix();
    }

    public static org.graylog.integrations.ipfix.IpfixJournal.RawIpfix getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<RawIpfix>
        PARSER = new com.google.protobuf.AbstractParser<RawIpfix>() {
      @java.lang.Override
      public RawIpfix parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<RawIpfix> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<RawIpfix> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.graylog.integrations.ipfix.IpfixJournal.RawIpfix getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface DataSetOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.graylog.integrations.ipfix.DataSet)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required uint64 timestampEpochSeconds = 1;</code>
     * @return Whether the timestampEpochSeconds field is set.
     */
    boolean hasTimestampEpochSeconds();
    /**
     * <code>required uint64 timestampEpochSeconds = 1;</code>
     * @return The timestampEpochSeconds.
     */
    long getTimestampEpochSeconds();

    /**
     * <code>required uint32 templateId = 2;</code>
     * @return Whether the templateId field is set.
     */
    boolean hasTemplateId();
    /**
     * <code>required uint32 templateId = 2;</code>
     * @return The templateId.
     */
    int getTemplateId();

    /**
     * <code>required bytes dataRecords = 3;</code>
     * @return Whether the dataRecords field is set.
     */
    boolean hasDataRecords();
    /**
     * <code>required bytes dataRecords = 3;</code>
     * @return The dataRecords.
     */
    com.google.protobuf.ByteString getDataRecords();
  }
  /**
   * Protobuf type {@code org.graylog.integrations.ipfix.DataSet}
   */
  public static final class DataSet extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.graylog.integrations.ipfix.DataSet)
      DataSetOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use DataSet.newBuilder() to construct.
    private DataSet(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private DataSet() {
      dataRecords_ = com.google.protobuf.ByteString.EMPTY;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new DataSet();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.graylog.integrations.ipfix.IpfixJournal.internal_static_org_graylog_integrations_ipfix_DataSet_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.graylog.integrations.ipfix.IpfixJournal.internal_static_org_graylog_integrations_ipfix_DataSet_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.graylog.integrations.ipfix.IpfixJournal.DataSet.class, org.graylog.integrations.ipfix.IpfixJournal.DataSet.Builder.class);
    }

    private int bitField0_;
    public static final int TIMESTAMPEPOCHSECONDS_FIELD_NUMBER = 1;
    private long timestampEpochSeconds_ = 0L;
    /**
     * <code>required uint64 timestampEpochSeconds = 1;</code>
     * @return Whether the timestampEpochSeconds field is set.
     */
    @java.lang.Override
    public boolean hasTimestampEpochSeconds() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>required uint64 timestampEpochSeconds = 1;</code>
     * @return The timestampEpochSeconds.
     */
    @java.lang.Override
    public long getTimestampEpochSeconds() {
      return timestampEpochSeconds_;
    }

    public static final int TEMPLATEID_FIELD_NUMBER = 2;
    private int templateId_ = 0;
    /**
     * <code>required uint32 templateId = 2;</code>
     * @return Whether the templateId field is set.
     */
    @java.lang.Override
    public boolean hasTemplateId() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>required uint32 templateId = 2;</code>
     * @return The templateId.
     */
    @java.lang.Override
    public int getTemplateId() {
      return templateId_;
    }

    public static final int DATARECORDS_FIELD_NUMBER = 3;
    private com.google.protobuf.ByteString dataRecords_ = com.google.protobuf.ByteString.EMPTY;
    /**
     * <code>required bytes dataRecords = 3;</code>
     * @return Whether the dataRecords field is set.
     */
    @java.lang.Override
    public boolean hasDataRecords() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <code>required bytes dataRecords = 3;</code>
     * @return The dataRecords.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getDataRecords() {
      return dataRecords_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasTimestampEpochSeconds()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTemplateId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasDataRecords()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeUInt64(1, timestampEpochSeconds_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeUInt32(2, templateId_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeBytes(3, dataRecords_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(1, timestampEpochSeconds_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, templateId_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, dataRecords_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.graylog.integrations.ipfix.IpfixJournal.DataSet)) {
        return super.equals(obj);
      }
      org.graylog.integrations.ipfix.IpfixJournal.DataSet other = (org.graylog.integrations.ipfix.IpfixJournal.DataSet) obj;

      if (hasTimestampEpochSeconds() != other.hasTimestampEpochSeconds()) return false;
      if (hasTimestampEpochSeconds()) {
        if (getTimestampEpochSeconds()
            != other.getTimestampEpochSeconds()) return false;
      }
      if (hasTemplateId() != other.hasTemplateId()) return false;
      if (hasTemplateId()) {
        if (getTemplateId()
            != other.getTemplateId()) return false;
      }
      if (hasDataRecords() != other.hasDataRecords()) return false;
      if (hasDataRecords()) {
        if (!getDataRecords()
            .equals(other.getDataRecords())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasTimestampEpochSeconds()) {
        hash = (37 * hash) + TIMESTAMPEPOCHSECONDS_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getTimestampEpochSeconds());
      }
      if (hasTemplateId()) {
        hash = (37 * hash) + TEMPLATEID_FIELD_NUMBER;
        hash = (53 * hash) + getTemplateId();
      }
      if (hasDataRecords()) {
        hash = (37 * hash) + DATARECORDS_FIELD_NUMBER;
        hash = (53 * hash) + getDataRecords().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.graylog.integrations.ipfix.IpfixJournal.DataSet parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.graylog.integrations.ipfix.IpfixJournal.DataSet parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.graylog.integrations.ipfix.IpfixJournal.DataSet parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.graylog.integrations.ipfix.IpfixJournal.DataSet parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.graylog.integrations.ipfix.IpfixJournal.DataSet parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.graylog.integrations.ipfix.IpfixJournal.DataSet parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.graylog.integrations.ipfix.IpfixJournal.DataSet parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.graylog.integrations.ipfix.IpfixJournal.DataSet parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static org.graylog.integrations.ipfix.IpfixJournal.DataSet parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static org.graylog.integrations.ipfix.IpfixJournal.DataSet parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.graylog.integrations.ipfix.IpfixJournal.DataSet parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.graylog.integrations.ipfix.IpfixJournal.DataSet parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.graylog.integrations.ipfix.IpfixJournal.DataSet prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.graylog.integrations.ipfix.DataSet}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.graylog.integrations.ipfix.DataSet)
        org.graylog.integrations.ipfix.IpfixJournal.DataSetOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.graylog.integrations.ipfix.IpfixJournal.internal_static_org_graylog_integrations_ipfix_DataSet_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.graylog.integrations.ipfix.IpfixJournal.internal_static_org_graylog_integrations_ipfix_DataSet_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.graylog.integrations.ipfix.IpfixJournal.DataSet.class, org.graylog.integrations.ipfix.IpfixJournal.DataSet.Builder.class);
      }

      // Construct using org.graylog.integrations.ipfix.IpfixJournal.DataSet.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        timestampEpochSeconds_ = 0L;
        templateId_ = 0;
        dataRecords_ = com.google.protobuf.ByteString.EMPTY;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.graylog.integrations.ipfix.IpfixJournal.internal_static_org_graylog_integrations_ipfix_DataSet_descriptor;
      }

      @java.lang.Override
      public org.graylog.integrations.ipfix.IpfixJournal.DataSet getDefaultInstanceForType() {
        return org.graylog.integrations.ipfix.IpfixJournal.DataSet.getDefaultInstance();
      }

      @java.lang.Override
      public org.graylog.integrations.ipfix.IpfixJournal.DataSet build() {
        org.graylog.integrations.ipfix.IpfixJournal.DataSet result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.graylog.integrations.ipfix.IpfixJournal.DataSet buildPartial() {
        org.graylog.integrations.ipfix.IpfixJournal.DataSet result = new org.graylog.integrations.ipfix.IpfixJournal.DataSet(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(org.graylog.integrations.ipfix.IpfixJournal.DataSet result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.timestampEpochSeconds_ = timestampEpochSeconds_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.templateId_ = templateId_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.dataRecords_ = dataRecords_;
          to_bitField0_ |= 0x00000004;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.graylog.integrations.ipfix.IpfixJournal.DataSet) {
          return mergeFrom((org.graylog.integrations.ipfix.IpfixJournal.DataSet)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.graylog.integrations.ipfix.IpfixJournal.DataSet other) {
        if (other == org.graylog.integrations.ipfix.IpfixJournal.DataSet.getDefaultInstance()) return this;
        if (other.hasTimestampEpochSeconds()) {
          setTimestampEpochSeconds(other.getTimestampEpochSeconds());
        }
        if (other.hasTemplateId()) {
          setTemplateId(other.getTemplateId());
        }
        if (other.hasDataRecords()) {
          setDataRecords(other.getDataRecords());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        if (!hasTimestampEpochSeconds()) {
          return false;
        }
        if (!hasTemplateId()) {
          return false;
        }
        if (!hasDataRecords()) {
          return false;
        }
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                timestampEpochSeconds_ = input.readUInt64();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 16: {
                templateId_ = input.readUInt32();
                bitField0_ |= 0x00000002;
                break;
              } // case 16
              case 26: {
                dataRecords_ = input.readBytes();
                bitField0_ |= 0x00000004;
                break;
              } // case 26
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private long timestampEpochSeconds_ ;
      /**
       * <code>required uint64 timestampEpochSeconds = 1;</code>
       * @return Whether the timestampEpochSeconds field is set.
       */
      @java.lang.Override
      public boolean hasTimestampEpochSeconds() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>required uint64 timestampEpochSeconds = 1;</code>
       * @return The timestampEpochSeconds.
       */
      @java.lang.Override
      public long getTimestampEpochSeconds() {
        return timestampEpochSeconds_;
      }
      /**
       * <code>required uint64 timestampEpochSeconds = 1;</code>
       * @param value The timestampEpochSeconds to set.
       * @return This builder for chaining.
       */
      public Builder setTimestampEpochSeconds(long value) {

        timestampEpochSeconds_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>required uint64 timestampEpochSeconds = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearTimestampEpochSeconds() {
        bitField0_ = (bitField0_ & ~0x00000001);
        timestampEpochSeconds_ = 0L;
        onChanged();
        return this;
      }

      private int templateId_ ;
      /**
       * <code>required uint32 templateId = 2;</code>
       * @return Whether the templateId field is set.
       */
      @java.lang.Override
      public boolean hasTemplateId() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>required uint32 templateId = 2;</code>
       * @return The templateId.
       */
      @java.lang.Override
      public int getTemplateId() {
        return templateId_;
      }
      /**
       * <code>required uint32 templateId = 2;</code>
       * @param value The templateId to set.
       * @return This builder for chaining.
       */
      public Builder setTemplateId(int value) {

        templateId_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>required uint32 templateId = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearTemplateId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        templateId_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString dataRecords_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>required bytes dataRecords = 3;</code>
       * @return Whether the dataRecords field is set.
       */
      @java.lang.Override
      public boolean hasDataRecords() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>required bytes dataRecords = 3;</code>
       * @return The dataRecords.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getDataRecords() {
        return dataRecords_;
      }
      /**
       * <code>required bytes dataRecords = 3;</code>
       * @param value The dataRecords to set.
       * @return This builder for chaining.
       */
      public Builder setDataRecords(com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        dataRecords_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>required bytes dataRecords = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearDataRecords() {
        bitField0_ = (bitField0_ & ~0x00000004);
        dataRecords_ = getDefaultInstance().getDataRecords();
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:org.graylog.integrations.ipfix.DataSet)
    }

    // @@protoc_insertion_point(class_scope:org.graylog.integrations.ipfix.DataSet)
    private static final org.graylog.integrations.ipfix.IpfixJournal.DataSet DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.graylog.integrations.ipfix.IpfixJournal.DataSet();
    }

    public static org.graylog.integrations.ipfix.IpfixJournal.DataSet getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<DataSet>
        PARSER = new com.google.protobuf.AbstractParser<DataSet>() {
      @java.lang.Override
      public DataSet parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<DataSet> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<DataSet> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.graylog.integrations.ipfix.IpfixJournal.DataSet getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_graylog_integrations_ipfix_RawIpfix_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_graylog_integrations_ipfix_RawIpfix_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_graylog_integrations_ipfix_RawIpfix_TemplatesEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_graylog_integrations_ipfix_RawIpfix_TemplatesEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_graylog_integrations_ipfix_RawIpfix_OptionTemplatesEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_graylog_integrations_ipfix_RawIpfix_OptionTemplatesEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_graylog_integrations_ipfix_DataSet_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_graylog_integrations_ipfix_DataSet_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n&src/main/resources/ipfix_journal.proto" +
      "\022\036org.graylog.integrations.ipfix\"\323\002\n\010Raw" +
      "Ipfix\022J\n\ttemplates\030\001 \003(\01327.org.graylog.i" +
      "ntegrations.ipfix.RawIpfix.TemplatesEntr" +
      "y\022V\n\017optionTemplates\030\002 \003(\0132=.org.graylog" +
      ".integrations.ipfix.RawIpfix.OptionTempl" +
      "atesEntry\0229\n\010dataSets\030\003 \003(\0132\'.org.graylo" +
      "g.integrations.ipfix.DataSet\0320\n\016Template" +
      "sEntry\022\013\n\003key\030\001 \001(\r\022\r\n\005value\030\002 \001(\014:\0028\001\0326" +
      "\n\024OptionTemplatesEntry\022\013\n\003key\030\001 \001(\r\022\r\n\005v" +
      "alue\030\002 \001(\014:\0028\001\"Q\n\007DataSet\022\035\n\025timestampEp" +
      "ochSeconds\030\001 \002(\004\022\022\n\ntemplateId\030\002 \002(\r\022\023\n\013" +
      "dataRecords\030\003 \002(\014B.\n\036org.graylog.integra" +
      "tions.ipfixB\014IpfixJournal"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_org_graylog_integrations_ipfix_RawIpfix_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_org_graylog_integrations_ipfix_RawIpfix_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_graylog_integrations_ipfix_RawIpfix_descriptor,
        new java.lang.String[] { "Templates", "OptionTemplates", "DataSets", });
    internal_static_org_graylog_integrations_ipfix_RawIpfix_TemplatesEntry_descriptor =
      internal_static_org_graylog_integrations_ipfix_RawIpfix_descriptor.getNestedTypes().get(0);
    internal_static_org_graylog_integrations_ipfix_RawIpfix_TemplatesEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_graylog_integrations_ipfix_RawIpfix_TemplatesEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_org_graylog_integrations_ipfix_RawIpfix_OptionTemplatesEntry_descriptor =
      internal_static_org_graylog_integrations_ipfix_RawIpfix_descriptor.getNestedTypes().get(1);
    internal_static_org_graylog_integrations_ipfix_RawIpfix_OptionTemplatesEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_graylog_integrations_ipfix_RawIpfix_OptionTemplatesEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_org_graylog_integrations_ipfix_DataSet_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_org_graylog_integrations_ipfix_DataSet_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_graylog_integrations_ipfix_DataSet_descriptor,
        new java.lang.String[] { "TimestampEpochSeconds", "TemplateId", "DataRecords", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
