name: Request dispatched PR Build

on:
  - pull_request

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  dispatchedPR:
    name: Dispatch wait and check
    runs-on: ubuntu-latest

    steps:
      - name: Check if enterprise PR depends on core PR
        id: retrieve_core_pr
        if: ${{ github.repository == 'Graylog2/graylog-plugin-enterprise' }}
        run: |
          echo "pr=$(jq -r .pull_request.body $GITHUB_EVENT_PATH|grep -E '^/(jenkins-pr-deps|jpd)'|grep -oP '(Graylog2/graylog2-server#|https?://github.com/Graylog2/graylog2-server/pull/)([0-9]+)')" >> $GITHUB_OUTPUT
      - name: Check if core PR depends on enterprise
        id: retrieve_enterprise_pr
        if: ${{ github.repository == 'Graylog2/graylog2-server' }}
        run: |
          echo "pr=$(jq -r .pull_request.body $GITHUB_EVENT_PATH|grep -E '^/(jenkins-pr-deps|jpd)'|grep -oP '(Graylog2/graylog-plugin-enterprise#|https?://github.com/Graylog2/graylog-plugin-enterprise/pull/)([0-9]+)')" >> $GITHUB_OUTPUT
      - name: Build pull requests string
        id: pr_string
        shell: bash
        run: |
          pull_nr=${{ github.event_name == 'pull_request' && github.event.number }}
          [ "$pull_nr" ] && pull_pr=${{ github.repository }}\#$pull_nr

          if [ "${{ github.repository }}" = Graylog2/graylog2-server ]; then
              core_pr=$pull_pr
              enterprise_pr=${{ steps.retrieve_enterprise_pr.outputs.pr }}
          else
              core_pr="${{ steps.retrieve_core_pr.outputs.pr }}"
              enterprise_pr=$pull_pr
          fi
          echo pr_nr="$pull_nr" >> $GITHUB_OUTPUT
          PRS=( $core_pr $enterprise_pr )
          echo pr_string=$(echo ${PRS[@]} | tr ' ' ',') >> $GITHUB_OUTPUT

      - name: dispatch job to graylog-project-internal
        run: >
          gh workflow run -R Graylog2/graylog-project-internal pr-build.yml
          -f caller_repo=${{ github.repository }}
          -f caller_pr_nr=${{ steps.pr_string.outputs.pr_nr }}
          -f caller_base_branch=${{ github.base_ref || github.ref_name }}
          -f caller_head_branch=${{ github.head_ref }}
          -f head_sha=${{ github.event.pull_request.head.sha }}
          -f pull_requests="${{ steps.pr_string.outputs.pr_string }}"
          -f initial_actor="${{ github.actor }}/${{ github.triggering_actor }}"
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_GRAYLOG_PROJECT_INTERNAL_WORKFLOW_RW }}

      - name: Give dispatched build time to add its status
        run: sleep 20
        # This is mostly cosmetic. If this workflow finishes before the dispatched
        # build creates the status on the PR, the build will show up green for a while.
