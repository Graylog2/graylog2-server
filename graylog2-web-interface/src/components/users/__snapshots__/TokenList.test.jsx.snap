// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<TokenList /> should render with empty tokens 1`] = `
<TokenList
  creatingToken={false}
  onCreate={[Function]}
  onDelete={[Function]}
  tokens={Array []}
>
  <span>
    <form
      onSubmit={[Function]}
    >
      <div
        className="form-group"
      >
        <Row>
          <Row
            bsClass="row"
            className="Row-sc-3iisrt-0 gPzTHl"
            componentClass="div"
          >
            <div
              className="Row-sc-3iisrt-0 gPzTHl row"
            >
              <Col
                bsClass="col"
                componentClass="div"
                sm={2}
              >
                <div
                  className="col-sm-2"
                >
                  <ControlLabel
                    className="tokenNewNameLabel"
                  >
                    <ControlLabel
                      bsClass="control-label"
                      className="ControlLabel-sc-1edmum5-0 jKzIRX tokenNewNameLabel"
                      srOnly={false}
                    >
                      <label
                        className="ControlLabel-sc-1edmum5-0 jKzIRX tokenNewNameLabel control-label"
                      >
                        Token Name
                      </label>
                    </ControlLabel>
                  </ControlLabel>
                </div>
              </Col>
              <Col
                bsClass="col"
                componentClass="div"
                sm={4}
              >
                <div
                  className="col-sm-4"
                >
                  <FormControl
                    id="create-token-input"
                    onChange={[Function]}
                    placeholder="e.g ServiceName"
                    type="text"
                    value=""
                  >
                    <FormControl
                      bsClass="form-control"
                      className="FormControl-sc-1amoaox-0 kmJcge"
                      componentClass="input"
                      id="create-token-input"
                      onChange={[Function]}
                      placeholder="e.g ServiceName"
                      type="text"
                      value=""
                    >
                      <input
                        className="FormControl-sc-1amoaox-0 kmJcge form-control"
                        id="create-token-input"
                        onChange={[Function]}
                        placeholder="e.g ServiceName"
                        type="text"
                        value=""
                      />
                    </FormControl>
                  </FormControl>
                </div>
              </Col>
              <Col
                bsClass="col"
                componentClass="div"
                sm={2}
              >
                <div
                  className="col-sm-2"
                >
                  <ForwardRef
                    bsStyle="primary"
                    disabled={true}
                    id="create-token"
                    type="submit"
                  >
                    <Button__StyledButton
                      bsStyle="primary"
                      disabled={true}
                      id="create-token"
                      type="submit"
                    >
                      <Button
                        active={false}
                        block={false}
                        bsClass="btn"
                        bsStyle="primary"
                        className="Button__StyledButton-c9cbmb-0 laZUlH"
                        disabled={true}
                        id="create-token"
                        type="submit"
                      >
                        <button
                          className="Button__StyledButton-c9cbmb-0 laZUlH btn btn-primary"
                          disabled={true}
                          id="create-token"
                          type="submit"
                        >
                          Create Token
                        </button>
                      </Button>
                    </Button__StyledButton>
                  </ForwardRef>
                </div>
              </Col>
            </div>
          </Row>
        </Row>
      </div>
      <hr />
    </form>
    <TableList
      bulkActionsFactory={[Function]}
      descriptionKey="token"
      enableBulkActions={false}
      enableFilter={true}
      filterKeys={
        Array [
          "name",
          "token",
        ]
      }
      filterLabel="Filter"
      hideDescription={true}
      idKey="token"
      itemActionsFactory={[Function]}
      items={Immutable.List []}
      titleKey="name"
    >
      <div>
        <Row>
          <Row
            bsClass="row"
            className="Row-sc-3iisrt-0 gPzTHl"
            componentClass="div"
          >
            <div
              className="Row-sc-3iisrt-0 gPzTHl row"
            >
              <Col
                bsClass="col"
                componentClass="div"
                md={12}
              >
                <div
                  className="col-md-12"
                >
                  <TypeAheadDataFilter
                    data={Array []}
                    displayKey="value"
                    filterBy=""
                    filterSuggestionAccessor=""
                    filterSuggestions={Array []}
                    id="filter-data-filter"
                    label="Filter"
                    onDataFiltered={[Function]}
                    searchInKeys={
                      Array [
                        "name",
                        "token",
                      ]
                    }
                  >
                    <div
                      className="filter"
                    >
                      <form
                        className="form-inline"
                        onSubmit={[Function]}
                        style={
                          Object {
                            "display": "inline",
                          }
                        }
                      >
                        <TypeAheadInput
                          displayKey="value"
                          id="filter-data-filter"
                          label="Filter"
                          onSuggestionSelected={[Function]}
                          suggestionText="Filter by : "
                          suggestions={Array []}
                        >
                          <Input
                            addonAfter={null}
                            bsStyle={null}
                            buttonAfter={null}
                            help=""
                            id="filter-data-filter"
                            label="Filter"
                            placeholder=""
                            type="text"
                            wrapperClassName="typeahead-wrapper"
                          >
                            <Component
                              controlId="filter-data-filter"
                              validationState={null}
                            >
                              <FormGroup__StyledFormGroup
                                controlId="filter-data-filter"
                                validationState={null}
                              >
                                <FormGroup
                                  bsClass="form-group"
                                  className="FormGroup__StyledFormGroup-sc-1wv4cm9-0 giUuGy"
                                  controlId="filter-data-filter"
                                  validationState={null}
                                >
                                  <div
                                    className="FormGroup__StyledFormGroup-sc-1wv4cm9-0 giUuGy form-group"
                                  >
                                    <ControlLabel>
                                      <ControlLabel
                                        bsClass="control-label"
                                        className="ControlLabel-sc-1edmum5-0 jKzIRX"
                                        srOnly={false}
                                      >
                                        <label
                                          className="ControlLabel-sc-1edmum5-0 jKzIRX control-label"
                                          htmlFor="filter-data-filter"
                                        >
                                          Filter
                                        </label>
                                      </ControlLabel>
                                    </ControlLabel>
                                    <InputWrapper
                                      className="typeahead-wrapper"
                                    >
                                      <div
                                        className="typeahead-wrapper"
                                      >
                                        <FormControl
                                          componentClass="input"
                                          inputRef={[Function]}
                                          label="Filter"
                                          name="filter-data-filter"
                                          placeholder=""
                                          type="text"
                                        >
                                          <FormControl
                                            bsClass="form-control"
                                            className="FormControl-sc-1amoaox-0 kmJcge"
                                            componentClass="input"
                                            inputRef={[Function]}
                                            label="Filter"
                                            name="filter-data-filter"
                                            placeholder=""
                                            type="text"
                                          >
                                            <input
                                              className="FormControl-sc-1amoaox-0 kmJcge form-control"
                                              id="filter-data-filter"
                                              label="Filter"
                                              name="filter-data-filter"
                                              placeholder=""
                                              type="text"
                                            />
                                          </FormControl>
                                        </FormControl>
                                      </div>
                                    </InputWrapper>
                                  </div>
                                </FormGroup>
                              </FormGroup__StyledFormGroup>
                            </Component>
                          </Input>
                        </TypeAheadInput>
                        <ForwardRef
                          style={
                            Object {
                              "marginLeft": 5,
                            }
                          }
                          type="submit"
                        >
                          <Button__StyledButton
                            style={
                              Object {
                                "marginLeft": 5,
                              }
                            }
                            type="submit"
                          >
                            <Button
                              active={false}
                              block={false}
                              bsClass="btn"
                              bsStyle="default"
                              className="Button__StyledButton-c9cbmb-0 laZUlH"
                              disabled={false}
                              style={
                                Object {
                                  "marginLeft": 5,
                                }
                              }
                              type="submit"
                            >
                              <button
                                className="Button__StyledButton-c9cbmb-0 laZUlH btn btn-default"
                                disabled={false}
                                style={
                                  Object {
                                    "marginLeft": 5,
                                  }
                                }
                                type="submit"
                              >
                                Filter
                              </button>
                            </Button>
                          </Button__StyledButton>
                        </ForwardRef>
                        <ForwardRef
                          disabled={true}
                          onClick={[Function]}
                          style={
                            Object {
                              "marginLeft": 5,
                            }
                          }
                          type="button"
                        >
                          <Button__StyledButton
                            disabled={true}
                            onClick={[Function]}
                            style={
                              Object {
                                "marginLeft": 5,
                              }
                            }
                            type="button"
                          >
                            <Button
                              active={false}
                              block={false}
                              bsClass="btn"
                              bsStyle="default"
                              className="Button__StyledButton-c9cbmb-0 laZUlH"
                              disabled={true}
                              onClick={[Function]}
                              style={
                                Object {
                                  "marginLeft": 5,
                                }
                              }
                              type="button"
                            >
                              <button
                                className="Button__StyledButton-c9cbmb-0 laZUlH btn btn-default"
                                disabled={true}
                                onClick={[Function]}
                                style={
                                  Object {
                                    "marginLeft": 5,
                                  }
                                }
                                type="button"
                              >
                                Reset
                              </button>
                            </Button>
                          </Button__StyledButton>
                        </ForwardRef>
                      </form>
                      <ul
                        className="pill-list"
                      >
                        <Component />
                      </ul>
                    </div>
                  </TypeAheadDataFilter>
                </div>
              </Col>
            </div>
          </Row>
        </Row>
        <ControlledTableList>
          <div>
            <ListGroup>
              <ListGroup
                bsClass="list-group"
              >
                <div
                  className="list-group"
                >
                  <ControlledTableListHeader>
                    <ControlledTableListHeader__StyledListGroupItem>
                      <ForwardRef
                        className="ControlledTableListHeader__StyledListGroupItem-tr2y34-0 gaqdPi"
                      >
                        <ListGroupItem__StyledListGroupItem
                          className="ControlledTableListHeader__StyledListGroupItem-tr2y34-0 gaqdPi"
                        >
                          <ListGroupItem
                            bsClass="list-group-item"
                            className="ListGroupItem__StyledListGroupItem-sc-1ky0joo-0 fIiBmX ControlledTableListHeader__StyledListGroupItem-tr2y34-0 gaqdPi"
                            listItem={false}
                          >
                            <span
                              className="ListGroupItem__StyledListGroupItem-sc-1ky0joo-0 fIiBmX ControlledTableListHeader__StyledListGroupItem-tr2y34-0 gaqdPi list-group-item"
                            >
                              <ControlledTableListHeader__HeaderWrapper>
                                <div
                                  className="ControlledTableListHeader__HeaderWrapper-tr2y34-1 fnWrsM"
                                />
                              </ControlledTableListHeader__HeaderWrapper>
                            </span>
                          </ListGroupItem>
                        </ListGroupItem__StyledListGroupItem>
                      </ForwardRef>
                    </ControlledTableListHeader__StyledListGroupItem>
                  </ControlledTableListHeader>
                  <ControlledTableListItem>
                    <ForwardRef>
                      <ListGroupItem__StyledListGroupItem>
                        <ListGroupItem
                          bsClass="list-group-item"
                          className="ListGroupItem__StyledListGroupItem-sc-1ky0joo-0 fIiBmX"
                          listItem={false}
                        >
                          <span
                            className="ListGroupItem__StyledListGroupItem-sc-1ky0joo-0 fIiBmX list-group-item"
                          >
                            No items to display
                          </span>
                        </ListGroupItem>
                      </ListGroupItem__StyledListGroupItem>
                    </ForwardRef>
                  </ControlledTableListItem>
                </div>
              </ListGroup>
            </ListGroup>
          </div>
        </ControlledTableList>
      </div>
    </TableList>
    <Checkbox
      bsClass="checkbox"
      checked={true}
      disabled={false}
      id="hide-tokens"
      inline={false}
      onChange={[Function]}
      title=""
    >
      <div
        className="checkbox"
      >
        <label
          title=""
        >
          <input
            checked={true}
            disabled={false}
            id="hide-tokens"
            onChange={[Function]}
            type="checkbox"
          />
          Hide Tokens
        </label>
      </div>
    </Checkbox>
  </span>
</TokenList>
`;

exports[`<TokenList /> should render with tokens 1`] = `
<TokenList
  creatingToken={false}
  onCreate={[Function]}
  onDelete={[Function]}
  tokens={
    Array [
      Object {
        "id": "abc1",
        "name": "Acme",
        "token": "beef2001",
      },
      Object {
        "id": "abc2",
        "name": "Hamfred",
        "token": "beef2002",
      },
    ]
  }
>
  <span>
    <form
      onSubmit={[Function]}
    >
      <div
        className="form-group"
      >
        <Row>
          <Row
            bsClass="row"
            className="Row-sc-3iisrt-0 gPzTHl"
            componentClass="div"
          >
            <div
              className="Row-sc-3iisrt-0 gPzTHl row"
            >
              <Col
                bsClass="col"
                componentClass="div"
                sm={2}
              >
                <div
                  className="col-sm-2"
                >
                  <ControlLabel
                    className="tokenNewNameLabel"
                  >
                    <ControlLabel
                      bsClass="control-label"
                      className="ControlLabel-sc-1edmum5-0 jKzIRX tokenNewNameLabel"
                      srOnly={false}
                    >
                      <label
                        className="ControlLabel-sc-1edmum5-0 jKzIRX tokenNewNameLabel control-label"
                      >
                        Token Name
                      </label>
                    </ControlLabel>
                  </ControlLabel>
                </div>
              </Col>
              <Col
                bsClass="col"
                componentClass="div"
                sm={4}
              >
                <div
                  className="col-sm-4"
                >
                  <FormControl
                    id="create-token-input"
                    onChange={[Function]}
                    placeholder="e.g ServiceName"
                    type="text"
                    value=""
                  >
                    <FormControl
                      bsClass="form-control"
                      className="FormControl-sc-1amoaox-0 kmJcge"
                      componentClass="input"
                      id="create-token-input"
                      onChange={[Function]}
                      placeholder="e.g ServiceName"
                      type="text"
                      value=""
                    >
                      <input
                        className="FormControl-sc-1amoaox-0 kmJcge form-control"
                        id="create-token-input"
                        onChange={[Function]}
                        placeholder="e.g ServiceName"
                        type="text"
                        value=""
                      />
                    </FormControl>
                  </FormControl>
                </div>
              </Col>
              <Col
                bsClass="col"
                componentClass="div"
                sm={2}
              >
                <div
                  className="col-sm-2"
                >
                  <ForwardRef
                    bsStyle="primary"
                    disabled={true}
                    id="create-token"
                    type="submit"
                  >
                    <Button__StyledButton
                      bsStyle="primary"
                      disabled={true}
                      id="create-token"
                      type="submit"
                    >
                      <Button
                        active={false}
                        block={false}
                        bsClass="btn"
                        bsStyle="primary"
                        className="Button__StyledButton-c9cbmb-0 laZUlH"
                        disabled={true}
                        id="create-token"
                        type="submit"
                      >
                        <button
                          className="Button__StyledButton-c9cbmb-0 laZUlH btn btn-primary"
                          disabled={true}
                          id="create-token"
                          type="submit"
                        >
                          Create Token
                        </button>
                      </Button>
                    </Button__StyledButton>
                  </ForwardRef>
                </div>
              </Col>
            </div>
          </Row>
        </Row>
      </div>
      <hr />
    </form>
    <TableList
      bulkActionsFactory={[Function]}
      descriptionKey="token"
      enableBulkActions={false}
      enableFilter={true}
      filterKeys={
        Array [
          "name",
          "token",
        ]
      }
      filterLabel="Filter"
      hideDescription={true}
      idKey="token"
      itemActionsFactory={[Function]}
      items={
        Immutable.List [
          Object {
            "id": "abc1",
            "name": "Acme",
            "token": "beef2001",
          },
          Object {
            "id": "abc2",
            "name": "Hamfred",
            "token": "beef2002",
          },
        ]
      }
      titleKey="name"
    >
      <div>
        <Row>
          <Row
            bsClass="row"
            className="Row-sc-3iisrt-0 gPzTHl"
            componentClass="div"
          >
            <div
              className="Row-sc-3iisrt-0 gPzTHl row"
            >
              <Col
                bsClass="col"
                componentClass="div"
                md={12}
              >
                <div
                  className="col-md-12"
                >
                  <TypeAheadDataFilter
                    data={
                      Array [
                        Object {
                          "id": "abc1",
                          "name": "Acme",
                          "token": "beef2001",
                        },
                        Object {
                          "id": "abc2",
                          "name": "Hamfred",
                          "token": "beef2002",
                        },
                      ]
                    }
                    displayKey="value"
                    filterBy=""
                    filterSuggestionAccessor=""
                    filterSuggestions={Array []}
                    id="filter-data-filter"
                    label="Filter"
                    onDataFiltered={[Function]}
                    searchInKeys={
                      Array [
                        "name",
                        "token",
                      ]
                    }
                  >
                    <div
                      className="filter"
                    >
                      <form
                        className="form-inline"
                        onSubmit={[Function]}
                        style={
                          Object {
                            "display": "inline",
                          }
                        }
                      >
                        <TypeAheadInput
                          displayKey="value"
                          id="filter-data-filter"
                          label="Filter"
                          onSuggestionSelected={[Function]}
                          suggestionText="Filter by : "
                          suggestions={Array []}
                        >
                          <Input
                            addonAfter={null}
                            bsStyle={null}
                            buttonAfter={null}
                            help=""
                            id="filter-data-filter"
                            label="Filter"
                            placeholder=""
                            type="text"
                            wrapperClassName="typeahead-wrapper"
                          >
                            <Component
                              controlId="filter-data-filter"
                              validationState={null}
                            >
                              <FormGroup__StyledFormGroup
                                controlId="filter-data-filter"
                                validationState={null}
                              >
                                <FormGroup
                                  bsClass="form-group"
                                  className="FormGroup__StyledFormGroup-sc-1wv4cm9-0 giUuGy"
                                  controlId="filter-data-filter"
                                  validationState={null}
                                >
                                  <div
                                    className="FormGroup__StyledFormGroup-sc-1wv4cm9-0 giUuGy form-group"
                                  >
                                    <ControlLabel>
                                      <ControlLabel
                                        bsClass="control-label"
                                        className="ControlLabel-sc-1edmum5-0 jKzIRX"
                                        srOnly={false}
                                      >
                                        <label
                                          className="ControlLabel-sc-1edmum5-0 jKzIRX control-label"
                                          htmlFor="filter-data-filter"
                                        >
                                          Filter
                                        </label>
                                      </ControlLabel>
                                    </ControlLabel>
                                    <InputWrapper
                                      className="typeahead-wrapper"
                                    >
                                      <div
                                        className="typeahead-wrapper"
                                      >
                                        <FormControl
                                          componentClass="input"
                                          inputRef={[Function]}
                                          label="Filter"
                                          name="filter-data-filter"
                                          placeholder=""
                                          type="text"
                                        >
                                          <FormControl
                                            bsClass="form-control"
                                            className="FormControl-sc-1amoaox-0 kmJcge"
                                            componentClass="input"
                                            inputRef={[Function]}
                                            label="Filter"
                                            name="filter-data-filter"
                                            placeholder=""
                                            type="text"
                                          >
                                            <input
                                              className="FormControl-sc-1amoaox-0 kmJcge form-control"
                                              id="filter-data-filter"
                                              label="Filter"
                                              name="filter-data-filter"
                                              placeholder=""
                                              type="text"
                                            />
                                          </FormControl>
                                        </FormControl>
                                      </div>
                                    </InputWrapper>
                                  </div>
                                </FormGroup>
                              </FormGroup__StyledFormGroup>
                            </Component>
                          </Input>
                        </TypeAheadInput>
                        <ForwardRef
                          style={
                            Object {
                              "marginLeft": 5,
                            }
                          }
                          type="submit"
                        >
                          <Button__StyledButton
                            style={
                              Object {
                                "marginLeft": 5,
                              }
                            }
                            type="submit"
                          >
                            <Button
                              active={false}
                              block={false}
                              bsClass="btn"
                              bsStyle="default"
                              className="Button__StyledButton-c9cbmb-0 laZUlH"
                              disabled={false}
                              style={
                                Object {
                                  "marginLeft": 5,
                                }
                              }
                              type="submit"
                            >
                              <button
                                className="Button__StyledButton-c9cbmb-0 laZUlH btn btn-default"
                                disabled={false}
                                style={
                                  Object {
                                    "marginLeft": 5,
                                  }
                                }
                                type="submit"
                              >
                                Filter
                              </button>
                            </Button>
                          </Button__StyledButton>
                        </ForwardRef>
                        <ForwardRef
                          disabled={true}
                          onClick={[Function]}
                          style={
                            Object {
                              "marginLeft": 5,
                            }
                          }
                          type="button"
                        >
                          <Button__StyledButton
                            disabled={true}
                            onClick={[Function]}
                            style={
                              Object {
                                "marginLeft": 5,
                              }
                            }
                            type="button"
                          >
                            <Button
                              active={false}
                              block={false}
                              bsClass="btn"
                              bsStyle="default"
                              className="Button__StyledButton-c9cbmb-0 laZUlH"
                              disabled={true}
                              onClick={[Function]}
                              style={
                                Object {
                                  "marginLeft": 5,
                                }
                              }
                              type="button"
                            >
                              <button
                                className="Button__StyledButton-c9cbmb-0 laZUlH btn btn-default"
                                disabled={true}
                                onClick={[Function]}
                                style={
                                  Object {
                                    "marginLeft": 5,
                                  }
                                }
                                type="button"
                              >
                                Reset
                              </button>
                            </Button>
                          </Button__StyledButton>
                        </ForwardRef>
                      </form>
                      <ul
                        className="pill-list"
                      >
                        <Component />
                      </ul>
                    </div>
                  </TypeAheadDataFilter>
                </div>
              </Col>
            </div>
          </Row>
        </Row>
        <ControlledTableList>
          <div>
            <ListGroup>
              <ListGroup
                bsClass="list-group"
              >
                <div
                  className="list-group"
                >
                  <ControlledTableListHeader>
                    <ControlledTableListHeader__StyledListGroupItem>
                      <ForwardRef
                        className="ControlledTableListHeader__StyledListGroupItem-tr2y34-0 gaqdPi"
                      >
                        <ListGroupItem__StyledListGroupItem
                          className="ControlledTableListHeader__StyledListGroupItem-tr2y34-0 gaqdPi"
                        >
                          <ListGroupItem
                            bsClass="list-group-item"
                            className="ListGroupItem__StyledListGroupItem-sc-1ky0joo-0 fIiBmX ControlledTableListHeader__StyledListGroupItem-tr2y34-0 gaqdPi"
                            listItem={false}
                          >
                            <span
                              className="ListGroupItem__StyledListGroupItem-sc-1ky0joo-0 fIiBmX ControlledTableListHeader__StyledListGroupItem-tr2y34-0 gaqdPi list-group-item"
                            >
                              <ControlledTableListHeader__HeaderWrapper>
                                <div
                                  className="ControlledTableListHeader__HeaderWrapper-tr2y34-1 fnWrsM"
                                />
                              </ControlledTableListHeader__HeaderWrapper>
                            </span>
                          </ListGroupItem>
                        </ListGroupItem__StyledListGroupItem>
                      </ForwardRef>
                    </ControlledTableListHeader__StyledListGroupItem>
                  </ControlledTableListHeader>
                  <ControlledTableListItem
                    key="item-beef2001"
                  >
                    <ForwardRef>
                      <ListGroupItem__StyledListGroupItem>
                        <ListGroupItem
                          bsClass="list-group-item"
                          className="ListGroupItem__StyledListGroupItem-sc-1ky0joo-0 fIiBmX"
                          listItem={false}
                        >
                          <span
                            className="ListGroupItem__StyledListGroupItem-sc-1ky0joo-0 fIiBmX list-group-item"
                          >
                            <div
                              className="itemWrapper itemWrapperStatic"
                            >
                              <div
                                className="itemActionsWrapper"
                              >
                                <ButtonGroup
                                  block={false}
                                  bsClass="btn-group"
                                  justified={false}
                                  vertical={false}
                                >
                                  <div
                                    className="btn-group"
                                  >
                                    <clipboard-button
                                      bsSize="xsmall"
                                      text="beef2001"
                                      title="Copy to clipboard"
                                    />
                                    <ForwardRef
                                      bsSize="xsmall"
                                      bsStyle="primary"
                                      disabled={false}
                                      onClick={[Function]}
                                    >
                                      <Button__StyledButton
                                        bsSize="xsmall"
                                        bsStyle="primary"
                                        disabled={false}
                                        onClick={[Function]}
                                      >
                                        <Button
                                          active={false}
                                          block={false}
                                          bsClass="btn"
                                          bsSize="xsmall"
                                          bsStyle="primary"
                                          className="Button__StyledButton-c9cbmb-0 laZUlH"
                                          disabled={false}
                                          onClick={[Function]}
                                        >
                                          <button
                                            className="Button__StyledButton-c9cbmb-0 laZUlH btn btn-xs btn-primary"
                                            disabled={false}
                                            onClick={[Function]}
                                            type="button"
                                          >
                                            Delete
                                          </button>
                                        </Button>
                                      </Button__StyledButton>
                                    </ForwardRef>
                                  </div>
                                </ButtonGroup>
                              </div>
                              <div
                                className="header"
                                id="token-input"
                              >
                                Acme
                              </div>
                            </div>
                          </span>
                        </ListGroupItem>
                      </ListGroupItem__StyledListGroupItem>
                    </ForwardRef>
                  </ControlledTableListItem>
                  <ControlledTableListItem
                    key="item-beef2002"
                  >
                    <ForwardRef>
                      <ListGroupItem__StyledListGroupItem>
                        <ListGroupItem
                          bsClass="list-group-item"
                          className="ListGroupItem__StyledListGroupItem-sc-1ky0joo-0 fIiBmX"
                          listItem={false}
                        >
                          <span
                            className="ListGroupItem__StyledListGroupItem-sc-1ky0joo-0 fIiBmX list-group-item"
                          >
                            <div
                              className="itemWrapper itemWrapperStatic"
                            >
                              <div
                                className="itemActionsWrapper"
                              >
                                <ButtonGroup
                                  block={false}
                                  bsClass="btn-group"
                                  justified={false}
                                  vertical={false}
                                >
                                  <div
                                    className="btn-group"
                                  >
                                    <clipboard-button
                                      bsSize="xsmall"
                                      text="beef2002"
                                      title="Copy to clipboard"
                                    />
                                    <ForwardRef
                                      bsSize="xsmall"
                                      bsStyle="primary"
                                      disabled={false}
                                      onClick={[Function]}
                                    >
                                      <Button__StyledButton
                                        bsSize="xsmall"
                                        bsStyle="primary"
                                        disabled={false}
                                        onClick={[Function]}
                                      >
                                        <Button
                                          active={false}
                                          block={false}
                                          bsClass="btn"
                                          bsSize="xsmall"
                                          bsStyle="primary"
                                          className="Button__StyledButton-c9cbmb-0 laZUlH"
                                          disabled={false}
                                          onClick={[Function]}
                                        >
                                          <button
                                            className="Button__StyledButton-c9cbmb-0 laZUlH btn btn-xs btn-primary"
                                            disabled={false}
                                            onClick={[Function]}
                                            type="button"
                                          >
                                            Delete
                                          </button>
                                        </Button>
                                      </Button__StyledButton>
                                    </ForwardRef>
                                  </div>
                                </ButtonGroup>
                              </div>
                              <div
                                className="header"
                                id="token-input"
                              >
                                Hamfred
                              </div>
                            </div>
                          </span>
                        </ListGroupItem>
                      </ListGroupItem__StyledListGroupItem>
                    </ForwardRef>
                  </ControlledTableListItem>
                </div>
              </ListGroup>
            </ListGroup>
          </div>
        </ControlledTableList>
      </div>
    </TableList>
    <Checkbox
      bsClass="checkbox"
      checked={true}
      disabled={false}
      id="hide-tokens"
      inline={false}
      onChange={[Function]}
      title=""
    >
      <div
        className="checkbox"
      >
        <label
          title=""
        >
          <input
            checked={true}
            disabled={false}
            id="hide-tokens"
            onChange={[Function]}
            type="checkbox"
          />
          Hide Tokens
        </label>
      </div>
    </Checkbox>
  </span>
</TokenList>
`;
