// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<TokenList /> should render with empty tokens 1`] = `
<TokenList
  creatingToken={false}
  onCreate={[Function]}
  onDelete={[Function]}
  tokens={Array []}
>
  <span>
    <form
      onSubmit={[Function]}
    >
      <div
        className="form-group"
      >
        <Row
          bsClass="row"
          componentClass="div"
        >
          <div
            className="row"
          >
            <Col
              bsClass="col"
              componentClass="div"
              sm={2}
            >
              <div
                className="col-sm-2"
              >
                <ControlLabel
                  className="tokenNewNameLabel"
                >
                  <StyledComponent
                    className="tokenNewNameLabel"
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "ControlLabel-sc-1edmum5-0",
                          "isStatic": true,
                          "lastClassName": "iZJNbd",
                          "rules": Array [
                            "color:",
                            "#1F1F1F",
                            ";font-weight:bold;margin-bottom:5px;display:inline-block;",
                          ],
                        },
                        "displayName": "ControlLabel",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "ControlLabel-sc-1edmum5-0",
                        "target": [Function],
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <ControlLabel
                      bsClass="control-label"
                      className="tokenNewNameLabel ControlLabel-sc-1edmum5-0 iZJNbd"
                      srOnly={false}
                    >
                      <label
                        className="tokenNewNameLabel ControlLabel-sc-1edmum5-0 iZJNbd control-label"
                      >
                        Token Name
                      </label>
                    </ControlLabel>
                  </StyledComponent>
                </ControlLabel>
              </div>
            </Col>
            <Col
              bsClass="col"
              componentClass="div"
              sm={4}
            >
              <div
                className="col-sm-4"
              >
                <FormControl
                  id="create-token-input"
                  onChange={[Function]}
                  placeholder="e.g ServiceName"
                  type="text"
                  value=""
                >
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "Feedback": [Function],
                        "SIZES": Array [
                          "small",
                          "large",
                        ],
                        "Static": [Function],
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "FormControl-sc-1amoaox-0",
                          "isStatic": true,
                          "lastClassName": "hdNTyr",
                          "rules": Array [
                            "color:",
                            "#1F1F1F",
                            ";background-color:",
                            "#FFF",
                            ";border-color:",
                            "#DCE1E5",
                            ";&:focus{border-color:",
                            "#6DC6E7",
                            ";box-shadow(inset 0 1px 1px rgba(0,0,0,.075),0 0 8px ",
                            "rgba(109,198,231,0.4)",
                            ");}&::-moz-placeholder,&:-ms-input-placeholder,&::-webkit-input-placeholder{color:",
                            "#b8b8b8",
                            ";}&[disabled],&[readonly],fieldset[disabled] &{background-color:",
                            "#DCE1E5",
                            ";}~ .form-control-feedback.glyphicon{display:none;}",
                          ],
                        },
                        "displayName": "FormControl",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "FormControl-sc-1amoaox-0",
                        "target": [Function],
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    id="create-token-input"
                    onChange={[Function]}
                    placeholder="e.g ServiceName"
                    type="text"
                    value=""
                  >
                    <FormControl
                      bsClass="form-control"
                      className="FormControl-sc-1amoaox-0 hdNTyr"
                      componentClass="input"
                      id="create-token-input"
                      onChange={[Function]}
                      placeholder="e.g ServiceName"
                      type="text"
                      value=""
                    >
                      <input
                        className="FormControl-sc-1amoaox-0 hdNTyr form-control"
                        id="create-token-input"
                        onChange={[Function]}
                        placeholder="e.g ServiceName"
                        type="text"
                        value=""
                      />
                    </FormControl>
                  </StyledComponent>
                </FormControl>
              </div>
            </Col>
            <Col
              bsClass="col"
              componentClass="div"
              sm={2}
            >
              <div
                className="col-sm-2"
              >
                <ForwardRef
                  bsStyle="primary"
                  disabled={true}
                  id="create-token"
                  type="submit"
                >
                  <Button
                    bsStyle="primary"
                    disabled={true}
                    id="create-token"
                    type="submit"
                  >
                    <StyledComponent
                      bsStyle="primary"
                      disabled={true}
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "SIZES": Array [
                            "large",
                            "small",
                            "xsmall",
                          ],
                          "STYLES": Array [
                            "success",
                            "warning",
                            "danger",
                            "info",
                            "default",
                            "primary",
                            "link",
                          ],
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "Button-c9cbmb-0",
                            "isStatic": false,
                            "lastClassName": "ghlLDE",
                            "rules": Array [
                              [Function],
                            ],
                          },
                          "displayName": "Button",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "Button-c9cbmb-0",
                          "target": [Function],
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                      id="create-token"
                      type="submit"
                    >
                      <Button
                        active={false}
                        block={false}
                        bsClass="btn"
                        bsStyle="primary"
                        className="Button-c9cbmb-0 ghlLDE"
                        disabled={true}
                        id="create-token"
                        type="submit"
                      >
                        <button
                          className="Button-c9cbmb-0 ghlLDE btn btn-primary"
                          disabled={true}
                          id="create-token"
                          type="submit"
                        >
                          Create Token
                        </button>
                      </Button>
                    </StyledComponent>
                  </Button>
                </ForwardRef>
              </div>
            </Col>
          </div>
        </Row>
      </div>
      <hr />
    </form>
    <TableList
      bulkActionsFactory={[Function]}
      descriptionKey="token"
      enableBulkActions={false}
      enableFilter={true}
      filterKeys={
        Array [
          "name",
          "token",
        ]
      }
      filterLabel="Filter"
      hideDescription={true}
      idKey="token"
      itemActionsFactory={[Function]}
      items={Immutable.List []}
      titleKey="name"
    >
      <div>
        <Row
          bsClass="row"
          componentClass="div"
        >
          <div
            className="row"
          >
            <Col
              bsClass="col"
              componentClass="div"
              md={12}
            >
              <div
                className="col-md-12"
              >
                <TypeAheadDataFilter
                  data={Array []}
                  displayKey="value"
                  filterBy=""
                  filterSuggestionAccessor=""
                  filterSuggestions={Array []}
                  id="filter-data-filter"
                  label="Filter"
                  onDataFiltered={[Function]}
                  searchInKeys={
                    Array [
                      "name",
                      "token",
                    ]
                  }
                >
                  <div
                    className="filter"
                  >
                    <form
                      className="form-inline"
                      onSubmit={[Function]}
                      style={
                        Object {
                          "display": "inline",
                        }
                      }
                    >
                      <TypeAheadInput
                        displayKey="value"
                        id="filter-data-filter"
                        label="Filter"
                        onSuggestionSelected={[Function]}
                        suggestionText="Filter by : "
                        suggestions={Array []}
                      >
                        <Input
                          addonAfter={null}
                          bsStyle={null}
                          buttonAfter={null}
                          help=""
                          id="filter-data-filter"
                          label="Filter"
                          placeholder=""
                          type="text"
                          wrapperClassName="typeahead-wrapper"
                        >
                          <Component
                            controlId="filter-data-filter"
                            validationState={null}
                          >
                            <FormGroup__StyledFormGroup
                              controlId="filter-data-filter"
                              validationState={null}
                            >
                              <StyledComponent
                                controlId="filter-data-filter"
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "SIZES": Array [
                                      "large",
                                      "small",
                                    ],
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "FormGroup__StyledFormGroup-sc-1wv4cm9-0",
                                      "isStatic": false,
                                      "lastClassName": "ekazNr",
                                      "rules": Array [
                                        [Function],
                                        ";",
                                      ],
                                    },
                                    "displayName": "FormGroup__StyledFormGroup",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "FormGroup__StyledFormGroup-sc-1wv4cm9-0",
                                    "target": [Function],
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                validationState={null}
                              >
                                <FormGroup
                                  bsClass="form-group"
                                  className="FormGroup__StyledFormGroup-sc-1wv4cm9-0 ekazNr"
                                  controlId="filter-data-filter"
                                  validationState={null}
                                >
                                  <div
                                    className="FormGroup__StyledFormGroup-sc-1wv4cm9-0 ekazNr form-group"
                                  >
                                    <ControlLabel>
                                      <StyledComponent
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "attrs": Array [],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "ControlLabel-sc-1edmum5-0",
                                              "isStatic": true,
                                              "lastClassName": "iZJNbd",
                                              "rules": Array [
                                                "color:",
                                                "#1F1F1F",
                                                ";font-weight:bold;margin-bottom:5px;display:inline-block;",
                                              ],
                                            },
                                            "displayName": "ControlLabel",
                                            "foldedComponentIds": Array [],
                                            "render": [Function],
                                            "styledComponentId": "ControlLabel-sc-1edmum5-0",
                                            "target": [Function],
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                      >
                                        <ControlLabel
                                          bsClass="control-label"
                                          className="ControlLabel-sc-1edmum5-0 iZJNbd"
                                          srOnly={false}
                                        >
                                          <label
                                            className="ControlLabel-sc-1edmum5-0 iZJNbd control-label"
                                            htmlFor="filter-data-filter"
                                          >
                                            Filter
                                          </label>
                                        </ControlLabel>
                                      </StyledComponent>
                                    </ControlLabel>
                                    <InputWrapper
                                      className="typeahead-wrapper"
                                    >
                                      <div
                                        className="typeahead-wrapper"
                                      >
                                        <FormControl
                                          componentClass="input"
                                          inputRef={[Function]}
                                          label="Filter"
                                          name="filter-data-filter"
                                          placeholder=""
                                          type="text"
                                        >
                                          <StyledComponent
                                            componentClass="input"
                                            forwardedComponent={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "Feedback": [Function],
                                                "SIZES": Array [
                                                  "small",
                                                  "large",
                                                ],
                                                "Static": [Function],
                                                "attrs": Array [],
                                                "componentStyle": ComponentStyle {
                                                  "componentId": "FormControl-sc-1amoaox-0",
                                                  "isStatic": true,
                                                  "lastClassName": "hdNTyr",
                                                  "rules": Array [
                                                    "color:",
                                                    "#1F1F1F",
                                                    ";background-color:",
                                                    "#FFF",
                                                    ";border-color:",
                                                    "#DCE1E5",
                                                    ";&:focus{border-color:",
                                                    "#6DC6E7",
                                                    ";box-shadow(inset 0 1px 1px rgba(0,0,0,.075),0 0 8px ",
                                                    "rgba(109,198,231,0.4)",
                                                    ");}&::-moz-placeholder,&:-ms-input-placeholder,&::-webkit-input-placeholder{color:",
                                                    "#b8b8b8",
                                                    ";}&[disabled],&[readonly],fieldset[disabled] &{background-color:",
                                                    "#DCE1E5",
                                                    ";}~ .form-control-feedback.glyphicon{display:none;}",
                                                  ],
                                                },
                                                "displayName": "FormControl",
                                                "foldedComponentIds": Array [],
                                                "render": [Function],
                                                "styledComponentId": "FormControl-sc-1amoaox-0",
                                                "target": [Function],
                                                "toString": [Function],
                                                "warnTooManyClasses": [Function],
                                                "withComponent": [Function],
                                              }
                                            }
                                            forwardedRef={null}
                                            inputRef={[Function]}
                                            label="Filter"
                                            name="filter-data-filter"
                                            placeholder=""
                                            type="text"
                                          >
                                            <FormControl
                                              bsClass="form-control"
                                              className="FormControl-sc-1amoaox-0 hdNTyr"
                                              componentClass="input"
                                              inputRef={[Function]}
                                              label="Filter"
                                              name="filter-data-filter"
                                              placeholder=""
                                              type="text"
                                            >
                                              <input
                                                className="FormControl-sc-1amoaox-0 hdNTyr form-control"
                                                id="filter-data-filter"
                                                label="Filter"
                                                name="filter-data-filter"
                                                placeholder=""
                                                type="text"
                                              />
                                            </FormControl>
                                          </StyledComponent>
                                        </FormControl>
                                      </div>
                                    </InputWrapper>
                                  </div>
                                </FormGroup>
                              </StyledComponent>
                            </FormGroup__StyledFormGroup>
                          </Component>
                        </Input>
                      </TypeAheadInput>
                      <ForwardRef
                        bsStyle="default"
                        style={
                          Object {
                            "marginLeft": 5,
                          }
                        }
                        type="submit"
                      >
                        <Button
                          bsStyle="default"
                          style={
                            Object {
                              "marginLeft": 5,
                            }
                          }
                          type="submit"
                        >
                          <StyledComponent
                            bsStyle="default"
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "SIZES": Array [
                                  "large",
                                  "small",
                                  "xsmall",
                                ],
                                "STYLES": Array [
                                  "success",
                                  "warning",
                                  "danger",
                                  "info",
                                  "default",
                                  "primary",
                                  "link",
                                ],
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "Button-c9cbmb-0",
                                  "isStatic": false,
                                  "lastClassName": "iKWoaE",
                                  "rules": Array [
                                    [Function],
                                  ],
                                },
                                "displayName": "Button",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "Button-c9cbmb-0",
                                "target": [Function],
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                            style={
                              Object {
                                "marginLeft": 5,
                              }
                            }
                            type="submit"
                          >
                            <Button
                              active={false}
                              block={false}
                              bsClass="btn"
                              bsStyle="default"
                              className="Button-c9cbmb-0 iKWoaE"
                              disabled={false}
                              style={
                                Object {
                                  "marginLeft": 5,
                                }
                              }
                              type="submit"
                            >
                              <button
                                className="Button-c9cbmb-0 iKWoaE btn btn-default"
                                disabled={false}
                                style={
                                  Object {
                                    "marginLeft": 5,
                                  }
                                }
                                type="submit"
                              >
                                Filter
                              </button>
                            </Button>
                          </StyledComponent>
                        </Button>
                      </ForwardRef>
                      <ForwardRef
                        bsStyle="default"
                        disabled={true}
                        onClick={[Function]}
                        style={
                          Object {
                            "marginLeft": 5,
                          }
                        }
                        type="button"
                      >
                        <Button
                          bsStyle="default"
                          disabled={true}
                          onClick={[Function]}
                          style={
                            Object {
                              "marginLeft": 5,
                            }
                          }
                          type="button"
                        >
                          <StyledComponent
                            bsStyle="default"
                            disabled={true}
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "SIZES": Array [
                                  "large",
                                  "small",
                                  "xsmall",
                                ],
                                "STYLES": Array [
                                  "success",
                                  "warning",
                                  "danger",
                                  "info",
                                  "default",
                                  "primary",
                                  "link",
                                ],
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "Button-c9cbmb-0",
                                  "isStatic": false,
                                  "lastClassName": "iKWoaE",
                                  "rules": Array [
                                    [Function],
                                  ],
                                },
                                "displayName": "Button",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "Button-c9cbmb-0",
                                "target": [Function],
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                            onClick={[Function]}
                            style={
                              Object {
                                "marginLeft": 5,
                              }
                            }
                            type="button"
                          >
                            <Button
                              active={false}
                              block={false}
                              bsClass="btn"
                              bsStyle="default"
                              className="Button-c9cbmb-0 iKWoaE"
                              disabled={true}
                              onClick={[Function]}
                              style={
                                Object {
                                  "marginLeft": 5,
                                }
                              }
                              type="button"
                            >
                              <button
                                className="Button-c9cbmb-0 iKWoaE btn btn-default"
                                disabled={true}
                                onClick={[Function]}
                                style={
                                  Object {
                                    "marginLeft": 5,
                                  }
                                }
                                type="button"
                              >
                                Reset
                              </button>
                            </Button>
                          </StyledComponent>
                        </Button>
                      </ForwardRef>
                    </form>
                    <ul
                      className="pill-list"
                    >
                      <Component />
                    </ul>
                  </div>
                </TypeAheadDataFilter>
              </div>
            </Col>
          </div>
        </Row>
        <ControlledTableList>
          <div>
            <ListGroup
              bsClass="list-group"
            >
              <div
                className="list-group"
              >
                <ControlledTableListHeader>
                  <ForwardRef
                    className="listGroupHeader"
                  >
                    <ListGroupItem
                      className="listGroupHeader"
                    >
                      <StyledComponent
                        className="listGroupHeader"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "STYLES": Array [
                              "success",
                              "warning",
                              "danger",
                              "info",
                            ],
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "ListGroupItem-sc-1ky0joo-0",
                              "isStatic": false,
                              "lastClassName": "igGIXt",
                              "rules": Array [
                                [Function],
                              ],
                            },
                            "displayName": "ListGroupItem",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "ListGroupItem-sc-1ky0joo-0",
                            "target": [Function],
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                      >
                        <ListGroupItem
                          bsClass="list-group-item"
                          className="listGroupHeader ListGroupItem-sc-1ky0joo-0 igGIXt"
                          listItem={false}
                        >
                          <span
                            className="listGroupHeader ListGroupItem-sc-1ky0joo-0 igGIXt list-group-item"
                          >
                            <div
                              className="headerWrapper"
                            />
                          </span>
                        </ListGroupItem>
                      </StyledComponent>
                    </ListGroupItem>
                  </ForwardRef>
                </ControlledTableListHeader>
                <ControlledTableListItem>
                  <ForwardRef>
                    <ListGroupItem>
                      <StyledComponent
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "STYLES": Array [
                              "success",
                              "warning",
                              "danger",
                              "info",
                            ],
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "ListGroupItem-sc-1ky0joo-0",
                              "isStatic": false,
                              "lastClassName": "igGIXt",
                              "rules": Array [
                                [Function],
                              ],
                            },
                            "displayName": "ListGroupItem",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "ListGroupItem-sc-1ky0joo-0",
                            "target": [Function],
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                      >
                        <ListGroupItem
                          bsClass="list-group-item"
                          className="ListGroupItem-sc-1ky0joo-0 igGIXt"
                          listItem={false}
                        >
                          <span
                            className="ListGroupItem-sc-1ky0joo-0 igGIXt list-group-item"
                          >
                            No items to display
                          </span>
                        </ListGroupItem>
                      </StyledComponent>
                    </ListGroupItem>
                  </ForwardRef>
                </ControlledTableListItem>
              </div>
            </ListGroup>
          </div>
        </ControlledTableList>
      </div>
    </TableList>
    <Checkbox
      bsClass="checkbox"
      checked={true}
      disabled={false}
      id="hide-tokens"
      inline={false}
      onChange={[Function]}
      title=""
    >
      <div
        className="checkbox"
      >
        <label
          title=""
        >
          <input
            checked={true}
            disabled={false}
            id="hide-tokens"
            onChange={[Function]}
            type="checkbox"
          />
          Hide Tokens
        </label>
      </div>
    </Checkbox>
  </span>
</TokenList>
`;

exports[`<TokenList /> should render with tokens 1`] = `
<TokenList
  creatingToken={false}
  onCreate={[Function]}
  onDelete={[Function]}
  tokens={
    Array [
      Object {
        "name": "Acme",
        "token": "beef2001",
      },
      Object {
        "name": "Hamfred",
        "token": "beef2002",
      },
    ]
  }
>
  <span>
    <form
      onSubmit={[Function]}
    >
      <div
        className="form-group"
      >
        <Row
          bsClass="row"
          componentClass="div"
        >
          <div
            className="row"
          >
            <Col
              bsClass="col"
              componentClass="div"
              sm={2}
            >
              <div
                className="col-sm-2"
              >
                <ControlLabel
                  className="tokenNewNameLabel"
                >
                  <StyledComponent
                    className="tokenNewNameLabel"
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "ControlLabel-sc-1edmum5-0",
                          "isStatic": true,
                          "lastClassName": "iZJNbd",
                          "rules": Array [
                            "color:",
                            "#1F1F1F",
                            ";font-weight:bold;margin-bottom:5px;display:inline-block;",
                          ],
                        },
                        "displayName": "ControlLabel",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "ControlLabel-sc-1edmum5-0",
                        "target": [Function],
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <ControlLabel
                      bsClass="control-label"
                      className="tokenNewNameLabel ControlLabel-sc-1edmum5-0 iZJNbd"
                      srOnly={false}
                    >
                      <label
                        className="tokenNewNameLabel ControlLabel-sc-1edmum5-0 iZJNbd control-label"
                      >
                        Token Name
                      </label>
                    </ControlLabel>
                  </StyledComponent>
                </ControlLabel>
              </div>
            </Col>
            <Col
              bsClass="col"
              componentClass="div"
              sm={4}
            >
              <div
                className="col-sm-4"
              >
                <FormControl
                  id="create-token-input"
                  onChange={[Function]}
                  placeholder="e.g ServiceName"
                  type="text"
                  value=""
                >
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "Feedback": [Function],
                        "SIZES": Array [
                          "small",
                          "large",
                        ],
                        "Static": [Function],
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "FormControl-sc-1amoaox-0",
                          "isStatic": true,
                          "lastClassName": "hdNTyr",
                          "rules": Array [
                            "color:",
                            "#1F1F1F",
                            ";background-color:",
                            "#FFF",
                            ";border-color:",
                            "#DCE1E5",
                            ";&:focus{border-color:",
                            "#6DC6E7",
                            ";box-shadow(inset 0 1px 1px rgba(0,0,0,.075),0 0 8px ",
                            "rgba(109,198,231,0.4)",
                            ");}&::-moz-placeholder,&:-ms-input-placeholder,&::-webkit-input-placeholder{color:",
                            "#b8b8b8",
                            ";}&[disabled],&[readonly],fieldset[disabled] &{background-color:",
                            "#DCE1E5",
                            ";}~ .form-control-feedback.glyphicon{display:none;}",
                          ],
                        },
                        "displayName": "FormControl",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "FormControl-sc-1amoaox-0",
                        "target": [Function],
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    id="create-token-input"
                    onChange={[Function]}
                    placeholder="e.g ServiceName"
                    type="text"
                    value=""
                  >
                    <FormControl
                      bsClass="form-control"
                      className="FormControl-sc-1amoaox-0 hdNTyr"
                      componentClass="input"
                      id="create-token-input"
                      onChange={[Function]}
                      placeholder="e.g ServiceName"
                      type="text"
                      value=""
                    >
                      <input
                        className="FormControl-sc-1amoaox-0 hdNTyr form-control"
                        id="create-token-input"
                        onChange={[Function]}
                        placeholder="e.g ServiceName"
                        type="text"
                        value=""
                      />
                    </FormControl>
                  </StyledComponent>
                </FormControl>
              </div>
            </Col>
            <Col
              bsClass="col"
              componentClass="div"
              sm={2}
            >
              <div
                className="col-sm-2"
              >
                <ForwardRef
                  bsStyle="primary"
                  disabled={true}
                  id="create-token"
                  type="submit"
                >
                  <Button
                    bsStyle="primary"
                    disabled={true}
                    id="create-token"
                    type="submit"
                  >
                    <StyledComponent
                      bsStyle="primary"
                      disabled={true}
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "SIZES": Array [
                            "large",
                            "small",
                            "xsmall",
                          ],
                          "STYLES": Array [
                            "success",
                            "warning",
                            "danger",
                            "info",
                            "default",
                            "primary",
                            "link",
                          ],
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "Button-c9cbmb-0",
                            "isStatic": false,
                            "lastClassName": "ghlLDE",
                            "rules": Array [
                              [Function],
                            ],
                          },
                          "displayName": "Button",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "Button-c9cbmb-0",
                          "target": [Function],
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                      id="create-token"
                      type="submit"
                    >
                      <Button
                        active={false}
                        block={false}
                        bsClass="btn"
                        bsStyle="primary"
                        className="Button-c9cbmb-0 ghlLDE"
                        disabled={true}
                        id="create-token"
                        type="submit"
                      >
                        <button
                          className="Button-c9cbmb-0 ghlLDE btn btn-primary"
                          disabled={true}
                          id="create-token"
                          type="submit"
                        >
                          Create Token
                        </button>
                      </Button>
                    </StyledComponent>
                  </Button>
                </ForwardRef>
              </div>
            </Col>
          </div>
        </Row>
      </div>
      <hr />
    </form>
    <TableList
      bulkActionsFactory={[Function]}
      descriptionKey="token"
      enableBulkActions={false}
      enableFilter={true}
      filterKeys={
        Array [
          "name",
          "token",
        ]
      }
      filterLabel="Filter"
      hideDescription={true}
      idKey="token"
      itemActionsFactory={[Function]}
      items={
        Immutable.List [
          Object {
            "name": "Acme",
            "token": "beef2001",
          },
          Object {
            "name": "Hamfred",
            "token": "beef2002",
          },
        ]
      }
      titleKey="name"
    >
      <div>
        <Row
          bsClass="row"
          componentClass="div"
        >
          <div
            className="row"
          >
            <Col
              bsClass="col"
              componentClass="div"
              md={12}
            >
              <div
                className="col-md-12"
              >
                <TypeAheadDataFilter
                  data={
                    Array [
                      Object {
                        "name": "Acme",
                        "token": "beef2001",
                      },
                      Object {
                        "name": "Hamfred",
                        "token": "beef2002",
                      },
                    ]
                  }
                  displayKey="value"
                  filterBy=""
                  filterSuggestionAccessor=""
                  filterSuggestions={Array []}
                  id="filter-data-filter"
                  label="Filter"
                  onDataFiltered={[Function]}
                  searchInKeys={
                    Array [
                      "name",
                      "token",
                    ]
                  }
                >
                  <div
                    className="filter"
                  >
                    <form
                      className="form-inline"
                      onSubmit={[Function]}
                      style={
                        Object {
                          "display": "inline",
                        }
                      }
                    >
                      <TypeAheadInput
                        displayKey="value"
                        id="filter-data-filter"
                        label="Filter"
                        onSuggestionSelected={[Function]}
                        suggestionText="Filter by : "
                        suggestions={Array []}
                      >
                        <Input
                          addonAfter={null}
                          bsStyle={null}
                          buttonAfter={null}
                          help=""
                          id="filter-data-filter"
                          label="Filter"
                          placeholder=""
                          type="text"
                          wrapperClassName="typeahead-wrapper"
                        >
                          <Component
                            controlId="filter-data-filter"
                            validationState={null}
                          >
                            <FormGroup__StyledFormGroup
                              controlId="filter-data-filter"
                              validationState={null}
                            >
                              <StyledComponent
                                controlId="filter-data-filter"
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "SIZES": Array [
                                      "large",
                                      "small",
                                    ],
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "FormGroup__StyledFormGroup-sc-1wv4cm9-0",
                                      "isStatic": false,
                                      "lastClassName": "ekazNr",
                                      "rules": Array [
                                        [Function],
                                        ";",
                                      ],
                                    },
                                    "displayName": "FormGroup__StyledFormGroup",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "FormGroup__StyledFormGroup-sc-1wv4cm9-0",
                                    "target": [Function],
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                validationState={null}
                              >
                                <FormGroup
                                  bsClass="form-group"
                                  className="FormGroup__StyledFormGroup-sc-1wv4cm9-0 ekazNr"
                                  controlId="filter-data-filter"
                                  validationState={null}
                                >
                                  <div
                                    className="FormGroup__StyledFormGroup-sc-1wv4cm9-0 ekazNr form-group"
                                  >
                                    <ControlLabel>
                                      <StyledComponent
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "attrs": Array [],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "ControlLabel-sc-1edmum5-0",
                                              "isStatic": true,
                                              "lastClassName": "iZJNbd",
                                              "rules": Array [
                                                "color:",
                                                "#1F1F1F",
                                                ";font-weight:bold;margin-bottom:5px;display:inline-block;",
                                              ],
                                            },
                                            "displayName": "ControlLabel",
                                            "foldedComponentIds": Array [],
                                            "render": [Function],
                                            "styledComponentId": "ControlLabel-sc-1edmum5-0",
                                            "target": [Function],
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                      >
                                        <ControlLabel
                                          bsClass="control-label"
                                          className="ControlLabel-sc-1edmum5-0 iZJNbd"
                                          srOnly={false}
                                        >
                                          <label
                                            className="ControlLabel-sc-1edmum5-0 iZJNbd control-label"
                                            htmlFor="filter-data-filter"
                                          >
                                            Filter
                                          </label>
                                        </ControlLabel>
                                      </StyledComponent>
                                    </ControlLabel>
                                    <InputWrapper
                                      className="typeahead-wrapper"
                                    >
                                      <div
                                        className="typeahead-wrapper"
                                      >
                                        <FormControl
                                          componentClass="input"
                                          inputRef={[Function]}
                                          label="Filter"
                                          name="filter-data-filter"
                                          placeholder=""
                                          type="text"
                                        >
                                          <StyledComponent
                                            componentClass="input"
                                            forwardedComponent={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "Feedback": [Function],
                                                "SIZES": Array [
                                                  "small",
                                                  "large",
                                                ],
                                                "Static": [Function],
                                                "attrs": Array [],
                                                "componentStyle": ComponentStyle {
                                                  "componentId": "FormControl-sc-1amoaox-0",
                                                  "isStatic": true,
                                                  "lastClassName": "hdNTyr",
                                                  "rules": Array [
                                                    "color:",
                                                    "#1F1F1F",
                                                    ";background-color:",
                                                    "#FFF",
                                                    ";border-color:",
                                                    "#DCE1E5",
                                                    ";&:focus{border-color:",
                                                    "#6DC6E7",
                                                    ";box-shadow(inset 0 1px 1px rgba(0,0,0,.075),0 0 8px ",
                                                    "rgba(109,198,231,0.4)",
                                                    ");}&::-moz-placeholder,&:-ms-input-placeholder,&::-webkit-input-placeholder{color:",
                                                    "#b8b8b8",
                                                    ";}&[disabled],&[readonly],fieldset[disabled] &{background-color:",
                                                    "#DCE1E5",
                                                    ";}~ .form-control-feedback.glyphicon{display:none;}",
                                                  ],
                                                },
                                                "displayName": "FormControl",
                                                "foldedComponentIds": Array [],
                                                "render": [Function],
                                                "styledComponentId": "FormControl-sc-1amoaox-0",
                                                "target": [Function],
                                                "toString": [Function],
                                                "warnTooManyClasses": [Function],
                                                "withComponent": [Function],
                                              }
                                            }
                                            forwardedRef={null}
                                            inputRef={[Function]}
                                            label="Filter"
                                            name="filter-data-filter"
                                            placeholder=""
                                            type="text"
                                          >
                                            <FormControl
                                              bsClass="form-control"
                                              className="FormControl-sc-1amoaox-0 hdNTyr"
                                              componentClass="input"
                                              inputRef={[Function]}
                                              label="Filter"
                                              name="filter-data-filter"
                                              placeholder=""
                                              type="text"
                                            >
                                              <input
                                                className="FormControl-sc-1amoaox-0 hdNTyr form-control"
                                                id="filter-data-filter"
                                                label="Filter"
                                                name="filter-data-filter"
                                                placeholder=""
                                                type="text"
                                              />
                                            </FormControl>
                                          </StyledComponent>
                                        </FormControl>
                                      </div>
                                    </InputWrapper>
                                  </div>
                                </FormGroup>
                              </StyledComponent>
                            </FormGroup__StyledFormGroup>
                          </Component>
                        </Input>
                      </TypeAheadInput>
                      <ForwardRef
                        bsStyle="default"
                        style={
                          Object {
                            "marginLeft": 5,
                          }
                        }
                        type="submit"
                      >
                        <Button
                          bsStyle="default"
                          style={
                            Object {
                              "marginLeft": 5,
                            }
                          }
                          type="submit"
                        >
                          <StyledComponent
                            bsStyle="default"
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "SIZES": Array [
                                  "large",
                                  "small",
                                  "xsmall",
                                ],
                                "STYLES": Array [
                                  "success",
                                  "warning",
                                  "danger",
                                  "info",
                                  "default",
                                  "primary",
                                  "link",
                                ],
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "Button-c9cbmb-0",
                                  "isStatic": false,
                                  "lastClassName": "iKWoaE",
                                  "rules": Array [
                                    [Function],
                                  ],
                                },
                                "displayName": "Button",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "Button-c9cbmb-0",
                                "target": [Function],
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                            style={
                              Object {
                                "marginLeft": 5,
                              }
                            }
                            type="submit"
                          >
                            <Button
                              active={false}
                              block={false}
                              bsClass="btn"
                              bsStyle="default"
                              className="Button-c9cbmb-0 iKWoaE"
                              disabled={false}
                              style={
                                Object {
                                  "marginLeft": 5,
                                }
                              }
                              type="submit"
                            >
                              <button
                                className="Button-c9cbmb-0 iKWoaE btn btn-default"
                                disabled={false}
                                style={
                                  Object {
                                    "marginLeft": 5,
                                  }
                                }
                                type="submit"
                              >
                                Filter
                              </button>
                            </Button>
                          </StyledComponent>
                        </Button>
                      </ForwardRef>
                      <ForwardRef
                        bsStyle="default"
                        disabled={true}
                        onClick={[Function]}
                        style={
                          Object {
                            "marginLeft": 5,
                          }
                        }
                        type="button"
                      >
                        <Button
                          bsStyle="default"
                          disabled={true}
                          onClick={[Function]}
                          style={
                            Object {
                              "marginLeft": 5,
                            }
                          }
                          type="button"
                        >
                          <StyledComponent
                            bsStyle="default"
                            disabled={true}
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "SIZES": Array [
                                  "large",
                                  "small",
                                  "xsmall",
                                ],
                                "STYLES": Array [
                                  "success",
                                  "warning",
                                  "danger",
                                  "info",
                                  "default",
                                  "primary",
                                  "link",
                                ],
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "Button-c9cbmb-0",
                                  "isStatic": false,
                                  "lastClassName": "iKWoaE",
                                  "rules": Array [
                                    [Function],
                                  ],
                                },
                                "displayName": "Button",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "Button-c9cbmb-0",
                                "target": [Function],
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                            onClick={[Function]}
                            style={
                              Object {
                                "marginLeft": 5,
                              }
                            }
                            type="button"
                          >
                            <Button
                              active={false}
                              block={false}
                              bsClass="btn"
                              bsStyle="default"
                              className="Button-c9cbmb-0 iKWoaE"
                              disabled={true}
                              onClick={[Function]}
                              style={
                                Object {
                                  "marginLeft": 5,
                                }
                              }
                              type="button"
                            >
                              <button
                                className="Button-c9cbmb-0 iKWoaE btn btn-default"
                                disabled={true}
                                onClick={[Function]}
                                style={
                                  Object {
                                    "marginLeft": 5,
                                  }
                                }
                                type="button"
                              >
                                Reset
                              </button>
                            </Button>
                          </StyledComponent>
                        </Button>
                      </ForwardRef>
                    </form>
                    <ul
                      className="pill-list"
                    >
                      <Component />
                    </ul>
                  </div>
                </TypeAheadDataFilter>
              </div>
            </Col>
          </div>
        </Row>
        <ControlledTableList>
          <div>
            <ListGroup
              bsClass="list-group"
            >
              <div
                className="list-group"
              >
                <ControlledTableListHeader>
                  <ForwardRef
                    className="listGroupHeader"
                  >
                    <ListGroupItem
                      className="listGroupHeader"
                    >
                      <StyledComponent
                        className="listGroupHeader"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "STYLES": Array [
                              "success",
                              "warning",
                              "danger",
                              "info",
                            ],
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "ListGroupItem-sc-1ky0joo-0",
                              "isStatic": false,
                              "lastClassName": "igGIXt",
                              "rules": Array [
                                [Function],
                              ],
                            },
                            "displayName": "ListGroupItem",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "ListGroupItem-sc-1ky0joo-0",
                            "target": [Function],
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                      >
                        <ListGroupItem
                          bsClass="list-group-item"
                          className="listGroupHeader ListGroupItem-sc-1ky0joo-0 igGIXt"
                          listItem={false}
                        >
                          <span
                            className="listGroupHeader ListGroupItem-sc-1ky0joo-0 igGIXt list-group-item"
                          >
                            <div
                              className="headerWrapper"
                            />
                          </span>
                        </ListGroupItem>
                      </StyledComponent>
                    </ListGroupItem>
                  </ForwardRef>
                </ControlledTableListHeader>
                <ControlledTableListItem
                  key="item-beef2001"
                >
                  <ForwardRef>
                    <ListGroupItem>
                      <StyledComponent
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "STYLES": Array [
                              "success",
                              "warning",
                              "danger",
                              "info",
                            ],
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "ListGroupItem-sc-1ky0joo-0",
                              "isStatic": false,
                              "lastClassName": "igGIXt",
                              "rules": Array [
                                [Function],
                              ],
                            },
                            "displayName": "ListGroupItem",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "ListGroupItem-sc-1ky0joo-0",
                            "target": [Function],
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                      >
                        <ListGroupItem
                          bsClass="list-group-item"
                          className="ListGroupItem-sc-1ky0joo-0 igGIXt"
                          listItem={false}
                        >
                          <span
                            className="ListGroupItem-sc-1ky0joo-0 igGIXt list-group-item"
                          >
                            <div
                              className="itemWrapper itemWrapperStatic"
                            >
                              <div
                                className="itemActionsWrapper"
                              >
                                <ButtonGroup
                                  block={false}
                                  bsClass="btn-group"
                                  justified={false}
                                  vertical={false}
                                >
                                  <div
                                    className="btn-group"
                                  >
                                    <clipboard-button
                                      bsSize="xsmall"
                                      text="beef2001"
                                      title="Copy to clipboard"
                                    />
                                    <ForwardRef
                                      bsSize="xsmall"
                                      bsStyle="primary"
                                      disabled={false}
                                      onClick={[Function]}
                                    >
                                      <Button
                                        bsSize="xsmall"
                                        bsStyle="primary"
                                        disabled={false}
                                        onClick={[Function]}
                                      >
                                        <StyledComponent
                                          bsSize="xsmall"
                                          bsStyle="primary"
                                          disabled={false}
                                          forwardedComponent={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "SIZES": Array [
                                                "large",
                                                "small",
                                                "xsmall",
                                              ],
                                              "STYLES": Array [
                                                "success",
                                                "warning",
                                                "danger",
                                                "info",
                                                "default",
                                                "primary",
                                                "link",
                                              ],
                                              "attrs": Array [],
                                              "componentStyle": ComponentStyle {
                                                "componentId": "Button-c9cbmb-0",
                                                "isStatic": false,
                                                "lastClassName": "ghlLDE",
                                                "rules": Array [
                                                  [Function],
                                                ],
                                              },
                                              "displayName": "Button",
                                              "foldedComponentIds": Array [],
                                              "render": [Function],
                                              "styledComponentId": "Button-c9cbmb-0",
                                              "target": [Function],
                                              "toString": [Function],
                                              "warnTooManyClasses": [Function],
                                              "withComponent": [Function],
                                            }
                                          }
                                          forwardedRef={null}
                                          onClick={[Function]}
                                        >
                                          <Button
                                            active={false}
                                            block={false}
                                            bsClass="btn"
                                            bsSize="xsmall"
                                            bsStyle="primary"
                                            className="Button-c9cbmb-0 ghlLDE"
                                            disabled={false}
                                            onClick={[Function]}
                                          >
                                            <button
                                              className="Button-c9cbmb-0 ghlLDE btn btn-xs btn-primary"
                                              disabled={false}
                                              onClick={[Function]}
                                              type="button"
                                            >
                                              Delete
                                            </button>
                                          </Button>
                                        </StyledComponent>
                                      </Button>
                                    </ForwardRef>
                                  </div>
                                </ButtonGroup>
                              </div>
                              <div
                                className="header"
                                id="token-input"
                              >
                                Acme
                              </div>
                            </div>
                          </span>
                        </ListGroupItem>
                      </StyledComponent>
                    </ListGroupItem>
                  </ForwardRef>
                </ControlledTableListItem>
                <ControlledTableListItem
                  key="item-beef2002"
                >
                  <ForwardRef>
                    <ListGroupItem>
                      <StyledComponent
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "STYLES": Array [
                              "success",
                              "warning",
                              "danger",
                              "info",
                            ],
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "ListGroupItem-sc-1ky0joo-0",
                              "isStatic": false,
                              "lastClassName": "igGIXt",
                              "rules": Array [
                                [Function],
                              ],
                            },
                            "displayName": "ListGroupItem",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "ListGroupItem-sc-1ky0joo-0",
                            "target": [Function],
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                      >
                        <ListGroupItem
                          bsClass="list-group-item"
                          className="ListGroupItem-sc-1ky0joo-0 igGIXt"
                          listItem={false}
                        >
                          <span
                            className="ListGroupItem-sc-1ky0joo-0 igGIXt list-group-item"
                          >
                            <div
                              className="itemWrapper itemWrapperStatic"
                            >
                              <div
                                className="itemActionsWrapper"
                              >
                                <ButtonGroup
                                  block={false}
                                  bsClass="btn-group"
                                  justified={false}
                                  vertical={false}
                                >
                                  <div
                                    className="btn-group"
                                  >
                                    <clipboard-button
                                      bsSize="xsmall"
                                      text="beef2002"
                                      title="Copy to clipboard"
                                    />
                                    <ForwardRef
                                      bsSize="xsmall"
                                      bsStyle="primary"
                                      disabled={false}
                                      onClick={[Function]}
                                    >
                                      <Button
                                        bsSize="xsmall"
                                        bsStyle="primary"
                                        disabled={false}
                                        onClick={[Function]}
                                      >
                                        <StyledComponent
                                          bsSize="xsmall"
                                          bsStyle="primary"
                                          disabled={false}
                                          forwardedComponent={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "SIZES": Array [
                                                "large",
                                                "small",
                                                "xsmall",
                                              ],
                                              "STYLES": Array [
                                                "success",
                                                "warning",
                                                "danger",
                                                "info",
                                                "default",
                                                "primary",
                                                "link",
                                              ],
                                              "attrs": Array [],
                                              "componentStyle": ComponentStyle {
                                                "componentId": "Button-c9cbmb-0",
                                                "isStatic": false,
                                                "lastClassName": "ghlLDE",
                                                "rules": Array [
                                                  [Function],
                                                ],
                                              },
                                              "displayName": "Button",
                                              "foldedComponentIds": Array [],
                                              "render": [Function],
                                              "styledComponentId": "Button-c9cbmb-0",
                                              "target": [Function],
                                              "toString": [Function],
                                              "warnTooManyClasses": [Function],
                                              "withComponent": [Function],
                                            }
                                          }
                                          forwardedRef={null}
                                          onClick={[Function]}
                                        >
                                          <Button
                                            active={false}
                                            block={false}
                                            bsClass="btn"
                                            bsSize="xsmall"
                                            bsStyle="primary"
                                            className="Button-c9cbmb-0 ghlLDE"
                                            disabled={false}
                                            onClick={[Function]}
                                          >
                                            <button
                                              className="Button-c9cbmb-0 ghlLDE btn btn-xs btn-primary"
                                              disabled={false}
                                              onClick={[Function]}
                                              type="button"
                                            >
                                              Delete
                                            </button>
                                          </Button>
                                        </StyledComponent>
                                      </Button>
                                    </ForwardRef>
                                  </div>
                                </ButtonGroup>
                              </div>
                              <div
                                className="header"
                                id="token-input"
                              >
                                Hamfred
                              </div>
                            </div>
                          </span>
                        </ListGroupItem>
                      </StyledComponent>
                    </ListGroupItem>
                  </ForwardRef>
                </ControlledTableListItem>
              </div>
            </ListGroup>
          </div>
        </ControlledTableList>
      </div>
    </TableList>
    <Checkbox
      bsClass="checkbox"
      checked={true}
      disabled={false}
      id="hide-tokens"
      inline={false}
      onChange={[Function]}
      title=""
    >
      <div
        className="checkbox"
      >
        <label
          title=""
        >
          <input
            checked={true}
            disabled={false}
            id="hide-tokens"
            onChange={[Function]}
            type="checkbox"
          />
          Hide Tokens
        </label>
      </div>
    </Checkbox>
  </span>
</TokenList>
`;
