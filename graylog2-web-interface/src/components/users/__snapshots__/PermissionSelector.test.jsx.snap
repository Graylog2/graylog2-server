// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<PermissionSelector /> should render with empty permissions 1`] = `
.c4.btn-danger {
  background-color: #ad0707;
  border-color: #b23939;
  color: rgb(252,249,249);
  -webkit-transition: background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;
  transition: background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;
}

.c4.btn-danger:hover {
  background-color: #a00e0e;
  border-color: #a53636;
  color: #e9e6e6;
}

.c4.btn-danger.active {
  background-color: #b75151;
  border-color: #bc6363;
  color: rgb(252,249,249);
}

.c4.btn-danger.active:hover {
  background-color: #a94c4c;
  border-color: #ad5c5c;
  color: #e9e6e6;
}

.c4.btn-danger[disabled],
.c4.btn-danger.disabled {
  background-color: #c07272;
  border-color: #bc6363;
  color: rgb(252,250,250);
}

.c4.btn-danger[disabled]:hover,
.c4.btn-danger.disabled:hover {
  background-color: #c07272;
  border-color: #bc6363;
  color: rgb(252,250,250);
}

.c4.btn-default {
  background-color: #e6e6e6;
  border-color: #e0e0e0;
  color: rgb(73,73,73);
  -webkit-transition: background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;
  transition: background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;
}

.c4.btn-default:hover {
  background-color: #d4d4d4;
  border-color: #cfcfcf;
  color: #444444;
}

.c4.btn-default.active {
  background-color: #dadada;
  border-color: #d4d4d4;
  color: rgb(49,49,49);
}

.c4.btn-default.active:hover {
  background-color: #cacaca;
  border-color: #c4c4c4;
  color: #2f2f2f;
}

.c4.btn-default[disabled],
.c4.btn-default.disabled {
  background-color: #cecece;
  border-color: #d4d4d4;
  color: rgb(80,80,80);
}

.c4.btn-default[disabled]:hover,
.c4.btn-default.disabled:hover {
  background-color: #cecece;
  border-color: #d4d4d4;
  color: rgb(80,80,80);
}

.c4.btn-info {
  background-color: #0063be;
  border-color: #3970c2;
  color: rgb(249,250,252);
  -webkit-transition: background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;
  transition: background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;
}

.c4.btn-info:hover {
  background-color: #0c5cb0;
  border-color: #3668b3;
  color: #e6e7e9;
}

.c4.btn-info.active {
  background-color: #517cc5;
  border-color: #6386c9;
  color: rgb(249,250,252);
}

.c4.btn-info.active:hover {
  background-color: #4b73b6;
  border-color: #5c7dba;
  color: #e6e7e9;
}

.c4.btn-info[disabled],
.c4.btn-info.disabled {
  background-color: #7290cd;
  border-color: #6386c9;
  color: rgb(250,251,253);
}

.c4.btn-info[disabled]:hover,
.c4.btn-info.disabled:hover {
  background-color: #7290cd;
  border-color: #6386c9;
  color: rgb(250,251,253);
}

.c4.btn-link {
  background-color: rgba(255,255,255,0);
  border-color: rgba(255,255,255,0);
  color: #702785;
  -webkit-transition: background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;
  transition: background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;
}

.c4.btn-link:hover {
  background-color: #ebebeb26;
  border-color: #ebebeb26;
  color: #68267b;
}

.c4.btn-link.active {
  background-color: rgba(255,255,255,0);
  border-color: rgba(255,255,255,0);
  color: #410057;
}

.c4.btn-link.active:hover {
  background-color: rgba(255,255,255,0);
  border-color: #ebebeb26;
  color: #3d0c51;
}

.c4.btn-link[disabled],
.c4.btn-link.disabled {
  background-color: rgba(255,255,255,0);
  border-color: rgba(255,255,255,0);
  color: #702785;
}

.c4.btn-link[disabled]:hover,
.c4.btn-link.disabled:hover {
  background-color: rgba(255,255,255,0);
  border-color: rgba(255,255,255,0);
  color: #702785;
}

.c4.btn-primary {
  background-color: #702785;
  border-color: #7b458e;
  color: rgb(234,229,236);
  -webkit-transition: background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;
  transition: background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;
}

.c4.btn-primary:hover {
  background-color: #68267b;
  border-color: #724083;
  color: #d8d3da;
}

.c4.btn-primary.active {
  background-color: #855996;
  border-color: #8f699d;
  color: rgb(250,249,251);
}

.c4.btn-primary.active:hover {
  background-color: #7c538b;
  border-color: #846292;
  color: #e7e6e8;
}

.c4.btn-primary[disabled],
.c4.btn-primary.disabled {
  background-color: #9877a5;
  border-color: #8f699d;
  color: rgb(251,250,251);
}

.c4.btn-primary[disabled]:hover,
.c4.btn-primary.disabled:hover {
  background-color: #9877a5;
  border-color: #8f699d;
  color: rgb(251,250,251);
}

.c4.btn-success {
  background-color: #00ae42;
  border-color: #39b356;
  color: rgb(249,252,249);
  -webkit-transition: background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;
  transition: background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;
}

.c4.btn-success:hover {
  background-color: #0ca13e;
  border-color: #36a550;
  color: #e6e9e6;
}

.c4.btn-success.active {
  background-color: #51b866;
  border-color: #63bc74;
  color: rgb(249,252,250);
}

.c4.btn-success.active:hover {
  background-color: #4baa5f;
  border-color: #5cae6c;
  color: #e6e9e7;
}

.c4.btn-success[disabled],
.c4.btn-success.disabled {
  background-color: #72c180;
  border-color: #63bc74;
  color: rgb(250,252,250);
}

.c4.btn-success[disabled]:hover,
.c4.btn-success.disabled:hover {
  background-color: #72c180;
  border-color: #63bc74;
  color: rgb(250,252,250);
}

.c4.btn-warning {
  background-color: #ffd200;
  border-color: #f9cd07;
  color: rgb(57,47,0);
  -webkit-transition: background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;
  transition: background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;
}

.c4.btn-warning:hover {
  background-color: #ebc20c;
  border-color: #e6bd0e;
  color: #362d0c;
}

.c4.btn-warning.active {
  background-color: #f2c70a;
  border-color: #ebc20c;
  color: rgb(54,45,2);
}

.c4.btn-warning.active:hover {
  background-color: #e0b80f;
  border-color: #d9b310;
  color: #332b0c;
}

.c4.btn-warning[disabled],
.c4.btn-warning.disabled {
  background-color: #e4bc0e;
  border-color: #ebc20c;
  color: rgb(88,73,5);
}

.c4.btn-warning[disabled]:hover,
.c4.btn-warning.disabled:hover {
  background-color: #e4bc0e;
  border-color: #ebc20c;
  color: rgb(88,73,5);
}

.c2 {
  color: #1f1f1f;
  font-weight: bold;
  margin-bottom: 5px;
  display: inline-block;
}

.c3 {
  color: #1f1f1f;
  background-color: #fff;
  border-color: #cdcdcd;
}

.c3::-webkit-input-placeholder {
  color: #9b9b9b;
}

.c3::-moz-placeholder {
  color: #9b9b9b;
}

.c3:-ms-input-placeholder {
  color: #9b9b9b;
}

.c3::placeholder {
  color: #9b9b9b;
}

.c3:focus {
  border-color: #6386c9;
  box-shadow: inset 0 1px 1px rgba(0,0,0,0.075),0 0 8px rgba(99,134,201,0.4);
}

.c3[disabled],
.c3[readonly],
fieldset[disabled] .c3 {
  background-color: #cdcdcd;
}

.c3 ~ .form-control-feedback.glyphicon {
  display: none;
}

.c6 {
  background-color: #fff;
  border-color: #cdcdcd;
}

.c6 .list-group-item-heading {
  font-weight: bold;
}

.c6.disabled,
.c6.disabled:hover,
.c6.disabled:focus {
  color: #9b9b9b;
  background-color: #e6e6e6;
}

.c6.disabled .list-group-item-heading,
.c6.disabled:hover .list-group-item-heading,
.c6.disabled:focus .list-group-item-heading {
  color: inherit;
  font-weight: bold;
}

.c6.disabled .list-group-item-text,
.c6.disabled:hover .list-group-item-text,
.c6.disabled:focus .list-group-item-text {
  color: #9b9b9b;
}

.c6.active,
.c6.active:hover,
.c6.active:focus {
  color: #ffffff;
  background-color: #8f699d;
  border-color: #8f699d;
  z-index: auto;
}

.c6.active .list-group-item-heading,
.c6.active:hover .list-group-item-heading,
.c6.active:focus .list-group-item-heading,
.c6.active .list-group-item-heading > small,
.c6.active:hover .list-group-item-heading > small,
.c6.active:focus .list-group-item-heading > small,
.c6.active .list-group-item-heading > .small,
.c6.active:hover .list-group-item-heading > .small,
.c6.active:focus .list-group-item-heading > .small {
  color: inherit;
  font-weight: bold;
}

.c6.active .list-group-item-text,
.c6.active:hover .list-group-item-text,
.c6.active:focus .list-group-item-text {
  color: #8f699d;
}

a.c6,
button.c6 {
  color: #702785;
}

a.c6 .list-group-item-heading,
button.c6 .list-group-item-heading {
  color: #383838;
  font-weight: bold;
}

a.c6:hover:not(.disabled),
button.c6:hover:not(.disabled),
a.c6:focus:not(.disabled),
button.c6:focus:not(.disabled) {
  background-color: #6a6a6a;
  color: #fff;
}

a.c6:hover:not(.disabled).active,
button.c6:hover:not(.disabled).active,
a.c6:focus:not(.disabled).active,
button.c6:focus:not(.disabled).active {
  color: #fff;
  border-color: #702785;
  background-color: #702785;
}

a.c6:hover:not(.disabled) .list-group-item-heading,
button.c6:hover:not(.disabled) .list-group-item-heading,
a.c6:focus:not(.disabled) .list-group-item-heading,
button.c6:focus:not(.disabled) .list-group-item-heading {
  color: #fff;
}

.c1 {
  background-color: #fff;
  border: 1px solid rgb(198,207,231);
  border-top: 0;
  border-radius: 0 0 4px 4px;
  padding: 9px;
}

.c0 .nav-tabs {
  border-bottom-color: rgb(198,207,231);
}

.c0 .nav-tabs > li > a {
  -webkit-transition: background-color 150ms ease-in-out;
  transition: background-color 150ms ease-in-out;
  color: #1f1f1f;
  border-color: #cdcdcd #cdcdcd rgb(198,207,231);
}

.c0 .nav-tabs > li > a:hover {
  background-color: #cdcdcd;
  color: rgb(46,46,46);
}

.c0 .nav-tabs > li.active > a,
.c0 .nav-tabs > li.active > a:hover,
.c0 .nav-tabs > li.active > a:focus {
  color: #1f1f1f;
  background-color: #ffffff;
  border-color: rgb(198,207,231);
  border-bottom-color: transparent;
}

.c0 .nav-tabs > li.disabled > a,
.c0 .nav-tabs > li.disabled > a:hover,
.c0 .nav-tabs > li.disabled > a:focus {
  color: #9b9b9b;
  background-color: #ffffff;
  border-color: #ffffff #ffffff rgb(198,207,231);
  cursor: not-allowed;
}

.c0.nav-justified > .active > a,
.c0.nav-justified > .active > a:hover,
.c0.nav-justified > .active > a:focus {
  border-color: rgb(198,207,231);
}

.c5 {
  background-color: #e6e6e6;
  font-size: 14px;
  padding: 0 15px;
}

.c5 .form-group {
  margin: 0;
}

@media (min-width:768px) {
  .c0.nav-justified > li > a {
    border-bottom-color: rgb(198,207,231);
  }

  .c0.nav-justified > .active > a,
  .c0.nav-justified > .active > a:hover,
  .c0.nav-justified > .active > a:focus {
    border-bottom-color: #ffffff;
  }
}

<PermissionSelector
  dashboards={
    Immutable.List [
      Object {
        "description": "dashboard1",
        "id": "01",
      },
      Object {
        "description": "dashboard2",
        "id": "02",
      },
    ]
  }
  onChange={[Function]}
  permissions={Immutable.Set []}
  streams={
    Immutable.List [
      Object {
        "description": "stream1",
        "id": "01",
      },
      Object {
        "description": "stream2",
        "id": "02",
      },
    ]
  }
>
  <div>
    <Tabs
      animation={false}
      defaultActiveKey={1}
      id="permissionSelectorTabs"
    >
      <StyledComponent
        animation={false}
        defaultActiveKey={1}
        forwardedComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "ControlledComponent": [Function],
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "Tabs-sc-1hzj2zf-0",
              "isStatic": false,
              "lastClassName": "c0",
              "rules": Array [
                [Function],
                ";",
              ],
            },
            "deferControlTo": [Function],
            "displayName": "Tabs",
            "foldedComponentIds": Array [],
            "propTypes": Object {
              "activeKey": [Function],
              "defaultActiveKey": [Function],
              "innerRef": [Function],
            },
            "render": [Function],
            "styledComponentId": "Tabs-sc-1hzj2zf-0",
            "target": Object {
              "$$typeof": Symbol(react.forward_ref),
              "ControlledComponent": [Function],
              "deferControlTo": [Function],
              "propTypes": Object {
                "activeKey": [Function],
                "defaultActiveKey": [Function],
                "innerRef": [Function],
              },
              "render": [Function],
            },
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
        id="permissionSelectorTabs"
      >
        <ForwardRef
          animation={false}
          className="c0"
          defaultActiveKey={1}
          id="permissionSelectorTabs"
        >
          <Uncontrolled(Tabs)
            animation={false}
            className="c0"
            defaultActiveKey={1}
            id="permissionSelectorTabs"
            innerRef={null}
          >
            <Tabs
              activeKey={1}
              animation={false}
              bsClass="tab"
              bsStyle="tabs"
              className="c0"
              id="permissionSelectorTabs"
              mountOnEnter={false}
              onSelect={[Function]}
              unmountOnExit={false}
            >
              <TabContainer
                activeKey={1}
                className="c0"
                id="permissionSelectorTabs"
                onSelect={[Function]}
              >
                <div
                  className="c0"
                  id="permissionSelectorTabs"
                >
                  <Nav
                    bsClass="nav"
                    bsStyle="tabs"
                    justified={false}
                    pullLeft={false}
                    pullRight={false}
                    role="tablist"
                    stacked={false}
                  >
                    <ul
                      className="nav nav-tabs"
                      role="tablist"
                    >
                      <NavItem
                        active={true}
                        activeKey={1}
                        aria-controls="permissionSelectorTabs-pane-1"
                        disabled={false}
                        eventKey={1}
                        id="permissionSelectorTabs-tab-1"
                        key=".$.0"
                        onKeyDown={[Function]}
                        onSelect={[Function]}
                        role="tab"
                      >
                        <li
                          className="active"
                          role="presentation"
                        >
                          <SafeAnchor
                            aria-controls="permissionSelectorTabs-pane-1"
                            aria-selected={true}
                            componentClass="a"
                            disabled={false}
                            id="permissionSelectorTabs-tab-1"
                            onClick={[Function]}
                            onKeyDown={[Function]}
                            role="tab"
                          >
                            <a
                              aria-controls="permissionSelectorTabs-pane-1"
                              aria-selected={true}
                              href="#"
                              id="permissionSelectorTabs-tab-1"
                              onClick={[Function]}
                              onKeyDown={[Function]}
                              role="tab"
                            >
                              Streams
                            </a>
                          </SafeAnchor>
                        </li>
                      </NavItem>
                      <NavItem
                        active={false}
                        activeKey={1}
                        aria-controls="permissionSelectorTabs-pane-2"
                        disabled={false}
                        eventKey={2}
                        id="permissionSelectorTabs-tab-2"
                        key=".$.1"
                        onKeyDown={[Function]}
                        onSelect={[Function]}
                        role="tab"
                        tabIndex={-1}
                      >
                        <li
                          className=""
                          role="presentation"
                        >
                          <SafeAnchor
                            aria-controls="permissionSelectorTabs-pane-2"
                            aria-selected={false}
                            componentClass="a"
                            disabled={false}
                            id="permissionSelectorTabs-tab-2"
                            onClick={[Function]}
                            onKeyDown={[Function]}
                            role="tab"
                            tabIndex={-1}
                          >
                            <a
                              aria-controls="permissionSelectorTabs-pane-2"
                              aria-selected={false}
                              href="#"
                              id="permissionSelectorTabs-tab-2"
                              onClick={[Function]}
                              onKeyDown={[Function]}
                              role="tab"
                              tabIndex={-1}
                            >
                              Dashboards
                            </a>
                          </SafeAnchor>
                        </li>
                      </NavItem>
                    </ul>
                  </Nav>
                  <TabContent
                    animation={false}
                    bsClass="tab"
                    componentClass="div"
                    mountOnEnter={false}
                    unmountOnExit={false}
                  >
                    <div
                      className="tab-content"
                    >
                      <Tab
                        eventKey={1}
                        title="Streams"
                      >
                        <StyledComponent
                          eventKey={1}
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "Container": Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "ControlledComponent": [Function],
                                "deferControlTo": [Function],
                                "propTypes": Object {
                                  "activeKey": [Function],
                                  "defaultActiveKey": [Function],
                                  "innerRef": [Function],
                                },
                                "render": [Function],
                              },
                              "Content": [Function],
                              "Pane": [Function],
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "Tab-loa0kh-0",
                                "isStatic": false,
                                "lastClassName": "c1",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Tab",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "Tab-loa0kh-0",
                              "target": [Function],
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          title="Streams"
                        >
                          <Tab
                            className="c1"
                            eventKey={1}
                            title="Streams"
                          >
                            <TabPane
                              bsClass="tab-pane"
                              className="c1"
                              eventKey={1}
                            >
                              <div
                                aria-hidden={false}
                                aria-labelledby="permissionSelectorTabs-tab-1"
                                className="c1 tab-pane active"
                                id="permissionSelectorTabs-pane-1"
                                role="tabpanel"
                              >
                                <div
                                  style={
                                    Object {
                                      "marginTop": 10,
                                    }
                                  }
                                >
                                  <TableList
                                    bulkActionsFactory={[Function]}
                                    descriptionKey="description"
                                    enableBulkActions={true}
                                    enableFilter={true}
                                    filterKeys={
                                      Array [
                                        "title",
                                      ]
                                    }
                                    filterLabel="Filter Streams"
                                    idKey="id"
                                    itemActionsFactory={[Function]}
                                    items={
                                      Immutable.List [
                                        Object {
                                          "description": "stream1",
                                          "id": "01",
                                        },
                                        Object {
                                          "description": "stream2",
                                          "id": "02",
                                        },
                                      ]
                                    }
                                    titleKey="title"
                                  >
                                    <div>
                                      <Row
                                        bsClass="row"
                                        componentClass="div"
                                      >
                                        <div
                                          className="row"
                                        >
                                          <Col
                                            bsClass="col"
                                            componentClass="div"
                                            md={12}
                                          >
                                            <div
                                              className="col-md-12"
                                            >
                                              <TypeAheadDataFilter
                                                data={
                                                  Array [
                                                    Object {
                                                      "description": "stream1",
                                                      "id": "01",
                                                    },
                                                    Object {
                                                      "description": "stream2",
                                                      "id": "02",
                                                    },
                                                  ]
                                                }
                                                displayKey="value"
                                                filterBy=""
                                                filterSuggestionAccessor=""
                                                filterSuggestions={Array []}
                                                id="filter-streams-data-filter"
                                                label="Filter Streams"
                                                onDataFiltered={[Function]}
                                                searchInKeys={
                                                  Array [
                                                    "title",
                                                  ]
                                                }
                                              >
                                                <div
                                                  className="filter"
                                                >
                                                  <form
                                                    className="form-inline"
                                                    onSubmit={[Function]}
                                                    style={
                                                      Object {
                                                        "display": "inline",
                                                      }
                                                    }
                                                  >
                                                    <TypeAheadInput
                                                      displayKey="value"
                                                      id="filter-streams-data-filter"
                                                      label="Filter Streams"
                                                      onSuggestionSelected={[Function]}
                                                      suggestionText="Filter by : "
                                                      suggestions={Array []}
                                                    >
                                                      <Input
                                                        addonAfter={null}
                                                        bsStyle={null}
                                                        buttonAfter={null}
                                                        help=""
                                                        id="filter-streams-data-filter"
                                                        label="Filter Streams"
                                                        placeholder=""
                                                        type="text"
                                                        wrapperClassName="typeahead-wrapper"
                                                      >
                                                        <Component
                                                          controlId="filter-streams-data-filter"
                                                          validationState={null}
                                                        >
                                                          <FormGroup__StyledFormGroup
                                                            controlId="filter-streams-data-filter"
                                                            validationState={null}
                                                          >
                                                            <StyledComponent
                                                              controlId="filter-streams-data-filter"
                                                              forwardedComponent={
                                                                Object {
                                                                  "$$typeof": Symbol(react.forward_ref),
                                                                  "SIZES": Array [
                                                                    "large",
                                                                    "small",
                                                                  ],
                                                                  "attrs": Array [],
                                                                  "componentStyle": ComponentStyle {
                                                                    "componentId": "FormGroup__StyledFormGroup-sc-1wv4cm9-0",
                                                                    "isStatic": false,
                                                                    "lastClassName": "ekazNr",
                                                                    "rules": Array [
                                                                      [Function],
                                                                      ";",
                                                                    ],
                                                                  },
                                                                  "displayName": "FormGroup__StyledFormGroup",
                                                                  "foldedComponentIds": Array [],
                                                                  "render": [Function],
                                                                  "styledComponentId": "FormGroup__StyledFormGroup-sc-1wv4cm9-0",
                                                                  "target": [Function],
                                                                  "toString": [Function],
                                                                  "warnTooManyClasses": [Function],
                                                                  "withComponent": [Function],
                                                                }
                                                              }
                                                              forwardedRef={null}
                                                              validationState={null}
                                                            >
                                                              <FormGroup
                                                                bsClass="form-group"
                                                                className=""
                                                                controlId="filter-streams-data-filter"
                                                                validationState={null}
                                                              >
                                                                <div
                                                                  className="form-group"
                                                                >
                                                                  <ControlLabel>
                                                                    <StyledComponent
                                                                      forwardedComponent={
                                                                        Object {
                                                                          "$$typeof": Symbol(react.forward_ref),
                                                                          "attrs": Array [],
                                                                          "componentStyle": ComponentStyle {
                                                                            "componentId": "ControlLabel-sc-1edmum5-0",
                                                                            "isStatic": false,
                                                                            "lastClassName": "c2",
                                                                            "rules": Array [
                                                                              [Function],
                                                                            ],
                                                                          },
                                                                          "displayName": "ControlLabel",
                                                                          "foldedComponentIds": Array [],
                                                                          "render": [Function],
                                                                          "styledComponentId": "ControlLabel-sc-1edmum5-0",
                                                                          "target": [Function],
                                                                          "toString": [Function],
                                                                          "warnTooManyClasses": [Function],
                                                                          "withComponent": [Function],
                                                                        }
                                                                      }
                                                                      forwardedRef={null}
                                                                    >
                                                                      <ControlLabel
                                                                        bsClass="control-label"
                                                                        className="c2"
                                                                        srOnly={false}
                                                                      >
                                                                        <label
                                                                          className="c2 control-label"
                                                                          htmlFor="filter-streams-data-filter"
                                                                        >
                                                                          Filter Streams
                                                                        </label>
                                                                      </ControlLabel>
                                                                    </StyledComponent>
                                                                  </ControlLabel>
                                                                  <InputWrapper
                                                                    className="typeahead-wrapper"
                                                                  >
                                                                    <div
                                                                      className="typeahead-wrapper"
                                                                    >
                                                                      <FormControl
                                                                        componentClass="input"
                                                                        inputRef={[Function]}
                                                                        label="Filter Streams"
                                                                        name="filter-streams-data-filter"
                                                                        placeholder=""
                                                                        type="text"
                                                                      >
                                                                        <StyledComponent
                                                                          componentClass="input"
                                                                          forwardedComponent={
                                                                            Object {
                                                                              "$$typeof": Symbol(react.forward_ref),
                                                                              "Feedback": [Function],
                                                                              "SIZES": Array [
                                                                                "small",
                                                                                "large",
                                                                              ],
                                                                              "Static": [Function],
                                                                              "attrs": Array [],
                                                                              "componentStyle": ComponentStyle {
                                                                                "componentId": "FormControl-sc-1amoaox-0",
                                                                                "isStatic": false,
                                                                                "lastClassName": "c3",
                                                                                "rules": Array [
                                                                                  [Function],
                                                                                ],
                                                                              },
                                                                              "displayName": "FormControl",
                                                                              "foldedComponentIds": Array [],
                                                                              "render": [Function],
                                                                              "styledComponentId": "FormControl-sc-1amoaox-0",
                                                                              "target": [Function],
                                                                              "toString": [Function],
                                                                              "warnTooManyClasses": [Function],
                                                                              "withComponent": [Function],
                                                                            }
                                                                          }
                                                                          forwardedRef={null}
                                                                          inputRef={[Function]}
                                                                          label="Filter Streams"
                                                                          name="filter-streams-data-filter"
                                                                          placeholder=""
                                                                          type="text"
                                                                        >
                                                                          <FormControl
                                                                            bsClass="form-control"
                                                                            className="c3"
                                                                            componentClass="input"
                                                                            inputRef={[Function]}
                                                                            label="Filter Streams"
                                                                            name="filter-streams-data-filter"
                                                                            placeholder=""
                                                                            type="text"
                                                                          >
                                                                            <input
                                                                              className="c3 form-control"
                                                                              id="filter-streams-data-filter"
                                                                              label="Filter Streams"
                                                                              name="filter-streams-data-filter"
                                                                              placeholder=""
                                                                              type="text"
                                                                            />
                                                                          </FormControl>
                                                                        </StyledComponent>
                                                                      </FormControl>
                                                                    </div>
                                                                  </InputWrapper>
                                                                </div>
                                                              </FormGroup>
                                                            </StyledComponent>
                                                          </FormGroup__StyledFormGroup>
                                                        </Component>
                                                      </Input>
                                                    </TypeAheadInput>
                                                    <ForwardRef
                                                      bsStyle="default"
                                                      style={
                                                        Object {
                                                          "marginLeft": 5,
                                                        }
                                                      }
                                                      type="submit"
                                                    >
                                                      <Button__StyledButton
                                                        bsStyle="default"
                                                        style={
                                                          Object {
                                                            "marginLeft": 5,
                                                          }
                                                        }
                                                        type="submit"
                                                      >
                                                        <StyledComponent
                                                          bsStyle="default"
                                                          forwardedComponent={
                                                            Object {
                                                              "$$typeof": Symbol(react.forward_ref),
                                                              "SIZES": Array [
                                                                "large",
                                                                "small",
                                                                "xsmall",
                                                              ],
                                                              "STYLES": Array [
                                                                "success",
                                                                "warning",
                                                                "danger",
                                                                "info",
                                                                "default",
                                                                "primary",
                                                                "link",
                                                              ],
                                                              "attrs": Array [],
                                                              "componentStyle": ComponentStyle {
                                                                "componentId": "Button__StyledButton-c9cbmb-0",
                                                                "isStatic": false,
                                                                "lastClassName": "c4",
                                                                "rules": Array [
                                                                  [Function],
                                                                ],
                                                              },
                                                              "displayName": "Button__StyledButton",
                                                              "foldedComponentIds": Array [],
                                                              "render": [Function],
                                                              "styledComponentId": "Button__StyledButton-c9cbmb-0",
                                                              "target": [Function],
                                                              "toString": [Function],
                                                              "warnTooManyClasses": [Function],
                                                              "withComponent": [Function],
                                                            }
                                                          }
                                                          forwardedRef={null}
                                                          style={
                                                            Object {
                                                              "marginLeft": 5,
                                                            }
                                                          }
                                                          type="submit"
                                                        >
                                                          <Button
                                                            active={false}
                                                            block={false}
                                                            bsClass="btn"
                                                            bsStyle="default"
                                                            className="c4"
                                                            disabled={false}
                                                            style={
                                                              Object {
                                                                "marginLeft": 5,
                                                              }
                                                            }
                                                            type="submit"
                                                          >
                                                            <button
                                                              className="c4 btn btn-default"
                                                              disabled={false}
                                                              style={
                                                                Object {
                                                                  "marginLeft": 5,
                                                                }
                                                              }
                                                              type="submit"
                                                            >
                                                              Filter
                                                            </button>
                                                          </Button>
                                                        </StyledComponent>
                                                      </Button__StyledButton>
                                                    </ForwardRef>
                                                    <ForwardRef
                                                      bsStyle="default"
                                                      disabled={true}
                                                      onClick={[Function]}
                                                      style={
                                                        Object {
                                                          "marginLeft": 5,
                                                        }
                                                      }
                                                      type="button"
                                                    >
                                                      <Button__StyledButton
                                                        bsStyle="default"
                                                        disabled={true}
                                                        onClick={[Function]}
                                                        style={
                                                          Object {
                                                            "marginLeft": 5,
                                                          }
                                                        }
                                                        type="button"
                                                      >
                                                        <StyledComponent
                                                          bsStyle="default"
                                                          disabled={true}
                                                          forwardedComponent={
                                                            Object {
                                                              "$$typeof": Symbol(react.forward_ref),
                                                              "SIZES": Array [
                                                                "large",
                                                                "small",
                                                                "xsmall",
                                                              ],
                                                              "STYLES": Array [
                                                                "success",
                                                                "warning",
                                                                "danger",
                                                                "info",
                                                                "default",
                                                                "primary",
                                                                "link",
                                                              ],
                                                              "attrs": Array [],
                                                              "componentStyle": ComponentStyle {
                                                                "componentId": "Button__StyledButton-c9cbmb-0",
                                                                "isStatic": false,
                                                                "lastClassName": "c4",
                                                                "rules": Array [
                                                                  [Function],
                                                                ],
                                                              },
                                                              "displayName": "Button__StyledButton",
                                                              "foldedComponentIds": Array [],
                                                              "render": [Function],
                                                              "styledComponentId": "Button__StyledButton-c9cbmb-0",
                                                              "target": [Function],
                                                              "toString": [Function],
                                                              "warnTooManyClasses": [Function],
                                                              "withComponent": [Function],
                                                            }
                                                          }
                                                          forwardedRef={null}
                                                          onClick={[Function]}
                                                          style={
                                                            Object {
                                                              "marginLeft": 5,
                                                            }
                                                          }
                                                          type="button"
                                                        >
                                                          <Button
                                                            active={false}
                                                            block={false}
                                                            bsClass="btn"
                                                            bsStyle="default"
                                                            className="c4"
                                                            disabled={true}
                                                            onClick={[Function]}
                                                            style={
                                                              Object {
                                                                "marginLeft": 5,
                                                              }
                                                            }
                                                            type="button"
                                                          >
                                                            <button
                                                              className="c4 btn btn-default"
                                                              disabled={true}
                                                              onClick={[Function]}
                                                              style={
                                                                Object {
                                                                  "marginLeft": 5,
                                                                }
                                                              }
                                                              type="button"
                                                            >
                                                              Reset
                                                            </button>
                                                          </Button>
                                                        </StyledComponent>
                                                      </Button__StyledButton>
                                                    </ForwardRef>
                                                  </form>
                                                  <ul
                                                    className="pill-list"
                                                  >
                                                    <Component />
                                                  </ul>
                                                </div>
                                              </TypeAheadDataFilter>
                                            </div>
                                          </Col>
                                        </div>
                                      </Row>
                                      <ControlledTableList>
                                        <div>
                                          <ListGroup>
                                            <ListGroup
                                              bsClass="list-group"
                                            >
                                              <div
                                                className="list-group"
                                              >
                                                <ControlledTableListHeader>
                                                  <ControlledTableListHeader__StyledListGroupItem>
                                                    <StyledComponent
                                                      forwardedComponent={
                                                        Object {
                                                          "$$typeof": Symbol(react.forward_ref),
                                                          "attrs": Array [],
                                                          "componentStyle": ComponentStyle {
                                                            "componentId": "ControlledTableListHeader__StyledListGroupItem-tr2y34-0",
                                                            "isStatic": false,
                                                            "lastClassName": "c5",
                                                            "rules": Array [
                                                              [Function],
                                                            ],
                                                          },
                                                          "displayName": "ControlledTableListHeader__StyledListGroupItem",
                                                          "foldedComponentIds": Array [],
                                                          "propTypes": Object {
                                                            "bsStyle": [Function],
                                                          },
                                                          "render": [Function],
                                                          "styledComponentId": "ControlledTableListHeader__StyledListGroupItem-tr2y34-0",
                                                          "target": Object {
                                                            "$$typeof": Symbol(react.forward_ref),
                                                            "defaultProps": Object {
                                                              "bsStyle": undefined,
                                                            },
                                                            "propTypes": Object {
                                                              "bsStyle": [Function],
                                                            },
                                                            "render": [Function],
                                                          },
                                                          "toString": [Function],
                                                          "warnTooManyClasses": [Function],
                                                          "withComponent": [Function],
                                                        }
                                                      }
                                                      forwardedRef={null}
                                                    >
                                                      <ForwardRef
                                                        className="c5"
                                                      >
                                                        <ListGroupItem__StyledListGroupItem
                                                          className="c5"
                                                        >
                                                          <StyledComponent
                                                            className="c5"
                                                            forwardedComponent={
                                                              Object {
                                                                "$$typeof": Symbol(react.forward_ref),
                                                                "STYLES": Array [
                                                                  "success",
                                                                  "warning",
                                                                  "danger",
                                                                  "info",
                                                                ],
                                                                "attrs": Array [],
                                                                "componentStyle": ComponentStyle {
                                                                  "componentId": "ListGroupItem__StyledListGroupItem-sc-1ky0joo-0",
                                                                  "isStatic": false,
                                                                  "lastClassName": "c6",
                                                                  "rules": Array [
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "displayName": "ListGroupItem__StyledListGroupItem",
                                                                "foldedComponentIds": Array [],
                                                                "render": [Function],
                                                                "styledComponentId": "ListGroupItem__StyledListGroupItem-sc-1ky0joo-0",
                                                                "target": [Function],
                                                                "toString": [Function],
                                                                "warnTooManyClasses": [Function],
                                                                "withComponent": [Function],
                                                              }
                                                            }
                                                            forwardedRef={null}
                                                          >
                                                            <ListGroupItem
                                                              bsClass="list-group-item"
                                                              className="c6 c5"
                                                              listItem={false}
                                                            >
                                                              <span
                                                                className="c6 c5 list-group-item"
                                                              >
                                                                <Input
                                                                  addonAfter={null}
                                                                  bsStyle={null}
                                                                  buttonAfter={null}
                                                                  checked={false}
                                                                  disabled={false}
                                                                  help=""
                                                                  id="select-all-checkbox"
                                                                  label="Select all"
                                                                  onChange={[Function]}
                                                                  placeholder=""
                                                                  type="checkbox"
                                                                  wrapperClassName="form-group-inline"
                                                                >
                                                                  <Component
                                                                    controlId="select-all-checkbox"
                                                                    validationState={null}
                                                                  >
                                                                    <FormGroup__StyledFormGroup
                                                                      controlId="select-all-checkbox"
                                                                      validationState={null}
                                                                    >
                                                                      <StyledComponent
                                                                        controlId="select-all-checkbox"
                                                                        forwardedComponent={
                                                                          Object {
                                                                            "$$typeof": Symbol(react.forward_ref),
                                                                            "SIZES": Array [
                                                                              "large",
                                                                              "small",
                                                                            ],
                                                                            "attrs": Array [],
                                                                            "componentStyle": ComponentStyle {
                                                                              "componentId": "FormGroup__StyledFormGroup-sc-1wv4cm9-0",
                                                                              "isStatic": false,
                                                                              "lastClassName": "ekazNr",
                                                                              "rules": Array [
                                                                                [Function],
                                                                                ";",
                                                                              ],
                                                                            },
                                                                            "displayName": "FormGroup__StyledFormGroup",
                                                                            "foldedComponentIds": Array [],
                                                                            "render": [Function],
                                                                            "styledComponentId": "FormGroup__StyledFormGroup-sc-1wv4cm9-0",
                                                                            "target": [Function],
                                                                            "toString": [Function],
                                                                            "warnTooManyClasses": [Function],
                                                                            "withComponent": [Function],
                                                                          }
                                                                        }
                                                                        forwardedRef={null}
                                                                        validationState={null}
                                                                      >
                                                                        <FormGroup
                                                                          bsClass="form-group"
                                                                          className=""
                                                                          controlId="select-all-checkbox"
                                                                          validationState={null}
                                                                        >
                                                                          <div
                                                                            className="form-group"
                                                                          >
                                                                            <InputWrapper
                                                                              className="form-group-inline"
                                                                            >
                                                                              <div
                                                                                className="form-group-inline"
                                                                              >
                                                                                <Checkbox
                                                                                  bsClass="checkbox"
                                                                                  checked={false}
                                                                                  disabled={false}
                                                                                  inline={false}
                                                                                  inputRef={[Function]}
                                                                                  label="Select all"
                                                                                  name="select-all-checkbox"
                                                                                  onChange={[Function]}
                                                                                  placeholder=""
                                                                                  title=""
                                                                                  type="checkbox"
                                                                                >
                                                                                  <div
                                                                                    className="checkbox"
                                                                                  >
                                                                                    <label
                                                                                      title=""
                                                                                    >
                                                                                      <input
                                                                                        checked={false}
                                                                                        disabled={false}
                                                                                        label="Select all"
                                                                                        name="select-all-checkbox"
                                                                                        onChange={[Function]}
                                                                                        placeholder=""
                                                                                        type="checkbox"
                                                                                      />
                                                                                      Select all
                                                                                    </label>
                                                                                  </div>
                                                                                </Checkbox>
                                                                              </div>
                                                                            </InputWrapper>
                                                                          </div>
                                                                        </FormGroup>
                                                                      </StyledComponent>
                                                                    </FormGroup__StyledFormGroup>
                                                                  </Component>
                                                                </Input>
                                                              </span>
                                                            </ListGroupItem>
                                                          </StyledComponent>
                                                        </ListGroupItem__StyledListGroupItem>
                                                      </ForwardRef>
                                                    </StyledComponent>
                                                  </ControlledTableListHeader__StyledListGroupItem>
                                                </ControlledTableListHeader>
                                                <ControlledTableListItem
                                                  key="item-01"
                                                >
                                                  <ForwardRef>
                                                    <ListGroupItem__StyledListGroupItem>
                                                      <StyledComponent
                                                        forwardedComponent={
                                                          Object {
                                                            "$$typeof": Symbol(react.forward_ref),
                                                            "STYLES": Array [
                                                              "success",
                                                              "warning",
                                                              "danger",
                                                              "info",
                                                            ],
                                                            "attrs": Array [],
                                                            "componentStyle": ComponentStyle {
                                                              "componentId": "ListGroupItem__StyledListGroupItem-sc-1ky0joo-0",
                                                              "isStatic": false,
                                                              "lastClassName": "c6",
                                                              "rules": Array [
                                                                [Function],
                                                              ],
                                                            },
                                                            "displayName": "ListGroupItem__StyledListGroupItem",
                                                            "foldedComponentIds": Array [],
                                                            "render": [Function],
                                                            "styledComponentId": "ListGroupItem__StyledListGroupItem-sc-1ky0joo-0",
                                                            "target": [Function],
                                                            "toString": [Function],
                                                            "warnTooManyClasses": [Function],
                                                            "withComponent": [Function],
                                                          }
                                                        }
                                                        forwardedRef={null}
                                                      >
                                                        <ListGroupItem
                                                          bsClass="list-group-item"
                                                          className="c6"
                                                          listItem={false}
                                                        >
                                                          <span
                                                            className="c6 list-group-item"
                                                          >
                                                            <div
                                                              className="itemWrapper "
                                                            >
                                                              <div
                                                                className="itemActionsWrapper"
                                                              >
                                                                <ButtonGroup
                                                                  block={false}
                                                                  bsClass="btn-group"
                                                                  bsSize="small"
                                                                  justified={false}
                                                                  vertical={false}
                                                                >
                                                                  <div
                                                                    className="btn-group btn-group-sm"
                                                                  >
                                                                    <ForwardRef
                                                                      active={false}
                                                                      bsStyle="default"
                                                                      onClick={[Function]}
                                                                    >
                                                                      <Button__StyledButton
                                                                        active={false}
                                                                        bsStyle="default"
                                                                        onClick={[Function]}
                                                                      >
                                                                        <StyledComponent
                                                                          active={false}
                                                                          bsStyle="default"
                                                                          forwardedComponent={
                                                                            Object {
                                                                              "$$typeof": Symbol(react.forward_ref),
                                                                              "SIZES": Array [
                                                                                "large",
                                                                                "small",
                                                                                "xsmall",
                                                                              ],
                                                                              "STYLES": Array [
                                                                                "success",
                                                                                "warning",
                                                                                "danger",
                                                                                "info",
                                                                                "default",
                                                                                "primary",
                                                                                "link",
                                                                              ],
                                                                              "attrs": Array [],
                                                                              "componentStyle": ComponentStyle {
                                                                                "componentId": "Button__StyledButton-c9cbmb-0",
                                                                                "isStatic": false,
                                                                                "lastClassName": "c4",
                                                                                "rules": Array [
                                                                                  [Function],
                                                                                ],
                                                                              },
                                                                              "displayName": "Button__StyledButton",
                                                                              "foldedComponentIds": Array [],
                                                                              "render": [Function],
                                                                              "styledComponentId": "Button__StyledButton-c9cbmb-0",
                                                                              "target": [Function],
                                                                              "toString": [Function],
                                                                              "warnTooManyClasses": [Function],
                                                                              "withComponent": [Function],
                                                                            }
                                                                          }
                                                                          forwardedRef={null}
                                                                          onClick={[Function]}
                                                                        >
                                                                          <Button
                                                                            active={false}
                                                                            block={false}
                                                                            bsClass="btn"
                                                                            bsStyle="default"
                                                                            className="c4"
                                                                            disabled={false}
                                                                            onClick={[Function]}
                                                                          >
                                                                            <button
                                                                              className="c4 btn btn-default"
                                                                              disabled={false}
                                                                              onClick={[Function]}
                                                                              type="button"
                                                                            >
                                                                              Allow reading
                                                                            </button>
                                                                          </Button>
                                                                        </StyledComponent>
                                                                      </Button__StyledButton>
                                                                    </ForwardRef>
                                                                    <ForwardRef
                                                                      active={false}
                                                                      bsStyle="default"
                                                                      onClick={[Function]}
                                                                    >
                                                                      <Button__StyledButton
                                                                        active={false}
                                                                        bsStyle="default"
                                                                        onClick={[Function]}
                                                                      >
                                                                        <StyledComponent
                                                                          active={false}
                                                                          bsStyle="default"
                                                                          forwardedComponent={
                                                                            Object {
                                                                              "$$typeof": Symbol(react.forward_ref),
                                                                              "SIZES": Array [
                                                                                "large",
                                                                                "small",
                                                                                "xsmall",
                                                                              ],
                                                                              "STYLES": Array [
                                                                                "success",
                                                                                "warning",
                                                                                "danger",
                                                                                "info",
                                                                                "default",
                                                                                "primary",
                                                                                "link",
                                                                              ],
                                                                              "attrs": Array [],
                                                                              "componentStyle": ComponentStyle {
                                                                                "componentId": "Button__StyledButton-c9cbmb-0",
                                                                                "isStatic": false,
                                                                                "lastClassName": "c4",
                                                                                "rules": Array [
                                                                                  [Function],
                                                                                ],
                                                                              },
                                                                              "displayName": "Button__StyledButton",
                                                                              "foldedComponentIds": Array [],
                                                                              "render": [Function],
                                                                              "styledComponentId": "Button__StyledButton-c9cbmb-0",
                                                                              "target": [Function],
                                                                              "toString": [Function],
                                                                              "warnTooManyClasses": [Function],
                                                                              "withComponent": [Function],
                                                                            }
                                                                          }
                                                                          forwardedRef={null}
                                                                          onClick={[Function]}
                                                                        >
                                                                          <Button
                                                                            active={false}
                                                                            block={false}
                                                                            bsClass="btn"
                                                                            bsStyle="default"
                                                                            className="c4"
                                                                            disabled={false}
                                                                            onClick={[Function]}
                                                                          >
                                                                            <button
                                                                              className="c4 btn btn-default"
                                                                              disabled={false}
                                                                              onClick={[Function]}
                                                                              type="button"
                                                                            >
                                                                              Allow editing
                                                                            </button>
                                                                          </Button>
                                                                        </StyledComponent>
                                                                      </Button__StyledButton>
                                                                    </ForwardRef>
                                                                  </div>
                                                                </ButtonGroup>
                                                              </div>
                                                              <Input
                                                                addonAfter={null}
                                                                bsStyle={null}
                                                                buttonAfter={null}
                                                                checked={false}
                                                                help=""
                                                                id="id-checkbox"
                                                                label=""
                                                                onChange={[Function]}
                                                                placeholder=""
                                                                type="checkbox"
                                                                wrapperClassName="form-group-inline"
                                                              >
                                                                <Component
                                                                  controlId="id-checkbox"
                                                                  validationState={null}
                                                                >
                                                                  <FormGroup__StyledFormGroup
                                                                    controlId="id-checkbox"
                                                                    validationState={null}
                                                                  >
                                                                    <StyledComponent
                                                                      controlId="id-checkbox"
                                                                      forwardedComponent={
                                                                        Object {
                                                                          "$$typeof": Symbol(react.forward_ref),
                                                                          "SIZES": Array [
                                                                            "large",
                                                                            "small",
                                                                          ],
                                                                          "attrs": Array [],
                                                                          "componentStyle": ComponentStyle {
                                                                            "componentId": "FormGroup__StyledFormGroup-sc-1wv4cm9-0",
                                                                            "isStatic": false,
                                                                            "lastClassName": "ekazNr",
                                                                            "rules": Array [
                                                                              [Function],
                                                                              ";",
                                                                            ],
                                                                          },
                                                                          "displayName": "FormGroup__StyledFormGroup",
                                                                          "foldedComponentIds": Array [],
                                                                          "render": [Function],
                                                                          "styledComponentId": "FormGroup__StyledFormGroup-sc-1wv4cm9-0",
                                                                          "target": [Function],
                                                                          "toString": [Function],
                                                                          "warnTooManyClasses": [Function],
                                                                          "withComponent": [Function],
                                                                        }
                                                                      }
                                                                      forwardedRef={null}
                                                                      validationState={null}
                                                                    >
                                                                      <FormGroup
                                                                        bsClass="form-group"
                                                                        className=""
                                                                        controlId="id-checkbox"
                                                                        validationState={null}
                                                                      >
                                                                        <div
                                                                          className="form-group"
                                                                        >
                                                                          <InputWrapper
                                                                            className="form-group-inline"
                                                                          >
                                                                            <div
                                                                              className="form-group-inline"
                                                                            >
                                                                              <Checkbox
                                                                                bsClass="checkbox"
                                                                                checked={false}
                                                                                disabled={false}
                                                                                inline={false}
                                                                                inputRef={[Function]}
                                                                                label=""
                                                                                name="id-checkbox"
                                                                                onChange={[Function]}
                                                                                placeholder=""
                                                                                title=""
                                                                                type="checkbox"
                                                                              >
                                                                                <div
                                                                                  className="checkbox"
                                                                                >
                                                                                  <label
                                                                                    title=""
                                                                                  >
                                                                                    <input
                                                                                      checked={false}
                                                                                      disabled={false}
                                                                                      label=""
                                                                                      name="id-checkbox"
                                                                                      onChange={[Function]}
                                                                                      placeholder=""
                                                                                      type="checkbox"
                                                                                    />
                                                                                  </label>
                                                                                </div>
                                                                              </Checkbox>
                                                                            </div>
                                                                          </InputWrapper>
                                                                        </div>
                                                                      </FormGroup>
                                                                    </StyledComponent>
                                                                  </FormGroup__StyledFormGroup>
                                                                </Component>
                                                              </Input>
                                                              <span
                                                                className="description"
                                                              >
                                                                stream1
                                                              </span>
                                                            </div>
                                                          </span>
                                                        </ListGroupItem>
                                                      </StyledComponent>
                                                    </ListGroupItem__StyledListGroupItem>
                                                  </ForwardRef>
                                                </ControlledTableListItem>
                                                <ControlledTableListItem
                                                  key="item-02"
                                                >
                                                  <ForwardRef>
                                                    <ListGroupItem__StyledListGroupItem>
                                                      <StyledComponent
                                                        forwardedComponent={
                                                          Object {
                                                            "$$typeof": Symbol(react.forward_ref),
                                                            "STYLES": Array [
                                                              "success",
                                                              "warning",
                                                              "danger",
                                                              "info",
                                                            ],
                                                            "attrs": Array [],
                                                            "componentStyle": ComponentStyle {
                                                              "componentId": "ListGroupItem__StyledListGroupItem-sc-1ky0joo-0",
                                                              "isStatic": false,
                                                              "lastClassName": "c6",
                                                              "rules": Array [
                                                                [Function],
                                                              ],
                                                            },
                                                            "displayName": "ListGroupItem__StyledListGroupItem",
                                                            "foldedComponentIds": Array [],
                                                            "render": [Function],
                                                            "styledComponentId": "ListGroupItem__StyledListGroupItem-sc-1ky0joo-0",
                                                            "target": [Function],
                                                            "toString": [Function],
                                                            "warnTooManyClasses": [Function],
                                                            "withComponent": [Function],
                                                          }
                                                        }
                                                        forwardedRef={null}
                                                      >
                                                        <ListGroupItem
                                                          bsClass="list-group-item"
                                                          className="c6"
                                                          listItem={false}
                                                        >
                                                          <span
                                                            className="c6 list-group-item"
                                                          >
                                                            <div
                                                              className="itemWrapper "
                                                            >
                                                              <div
                                                                className="itemActionsWrapper"
                                                              >
                                                                <ButtonGroup
                                                                  block={false}
                                                                  bsClass="btn-group"
                                                                  bsSize="small"
                                                                  justified={false}
                                                                  vertical={false}
                                                                >
                                                                  <div
                                                                    className="btn-group btn-group-sm"
                                                                  >
                                                                    <ForwardRef
                                                                      active={false}
                                                                      bsStyle="default"
                                                                      onClick={[Function]}
                                                                    >
                                                                      <Button__StyledButton
                                                                        active={false}
                                                                        bsStyle="default"
                                                                        onClick={[Function]}
                                                                      >
                                                                        <StyledComponent
                                                                          active={false}
                                                                          bsStyle="default"
                                                                          forwardedComponent={
                                                                            Object {
                                                                              "$$typeof": Symbol(react.forward_ref),
                                                                              "SIZES": Array [
                                                                                "large",
                                                                                "small",
                                                                                "xsmall",
                                                                              ],
                                                                              "STYLES": Array [
                                                                                "success",
                                                                                "warning",
                                                                                "danger",
                                                                                "info",
                                                                                "default",
                                                                                "primary",
                                                                                "link",
                                                                              ],
                                                                              "attrs": Array [],
                                                                              "componentStyle": ComponentStyle {
                                                                                "componentId": "Button__StyledButton-c9cbmb-0",
                                                                                "isStatic": false,
                                                                                "lastClassName": "c4",
                                                                                "rules": Array [
                                                                                  [Function],
                                                                                ],
                                                                              },
                                                                              "displayName": "Button__StyledButton",
                                                                              "foldedComponentIds": Array [],
                                                                              "render": [Function],
                                                                              "styledComponentId": "Button__StyledButton-c9cbmb-0",
                                                                              "target": [Function],
                                                                              "toString": [Function],
                                                                              "warnTooManyClasses": [Function],
                                                                              "withComponent": [Function],
                                                                            }
                                                                          }
                                                                          forwardedRef={null}
                                                                          onClick={[Function]}
                                                                        >
                                                                          <Button
                                                                            active={false}
                                                                            block={false}
                                                                            bsClass="btn"
                                                                            bsStyle="default"
                                                                            className="c4"
                                                                            disabled={false}
                                                                            onClick={[Function]}
                                                                          >
                                                                            <button
                                                                              className="c4 btn btn-default"
                                                                              disabled={false}
                                                                              onClick={[Function]}
                                                                              type="button"
                                                                            >
                                                                              Allow reading
                                                                            </button>
                                                                          </Button>
                                                                        </StyledComponent>
                                                                      </Button__StyledButton>
                                                                    </ForwardRef>
                                                                    <ForwardRef
                                                                      active={false}
                                                                      bsStyle="default"
                                                                      onClick={[Function]}
                                                                    >
                                                                      <Button__StyledButton
                                                                        active={false}
                                                                        bsStyle="default"
                                                                        onClick={[Function]}
                                                                      >
                                                                        <StyledComponent
                                                                          active={false}
                                                                          bsStyle="default"
                                                                          forwardedComponent={
                                                                            Object {
                                                                              "$$typeof": Symbol(react.forward_ref),
                                                                              "SIZES": Array [
                                                                                "large",
                                                                                "small",
                                                                                "xsmall",
                                                                              ],
                                                                              "STYLES": Array [
                                                                                "success",
                                                                                "warning",
                                                                                "danger",
                                                                                "info",
                                                                                "default",
                                                                                "primary",
                                                                                "link",
                                                                              ],
                                                                              "attrs": Array [],
                                                                              "componentStyle": ComponentStyle {
                                                                                "componentId": "Button__StyledButton-c9cbmb-0",
                                                                                "isStatic": false,
                                                                                "lastClassName": "c4",
                                                                                "rules": Array [
                                                                                  [Function],
                                                                                ],
                                                                              },
                                                                              "displayName": "Button__StyledButton",
                                                                              "foldedComponentIds": Array [],
                                                                              "render": [Function],
                                                                              "styledComponentId": "Button__StyledButton-c9cbmb-0",
                                                                              "target": [Function],
                                                                              "toString": [Function],
                                                                              "warnTooManyClasses": [Function],
                                                                              "withComponent": [Function],
                                                                            }
                                                                          }
                                                                          forwardedRef={null}
                                                                          onClick={[Function]}
                                                                        >
                                                                          <Button
                                                                            active={false}
                                                                            block={false}
                                                                            bsClass="btn"
                                                                            bsStyle="default"
                                                                            className="c4"
                                                                            disabled={false}
                                                                            onClick={[Function]}
                                                                          >
                                                                            <button
                                                                              className="c4 btn btn-default"
                                                                              disabled={false}
                                                                              onClick={[Function]}
                                                                              type="button"
                                                                            >
                                                                              Allow editing
                                                                            </button>
                                                                          </Button>
                                                                        </StyledComponent>
                                                                      </Button__StyledButton>
                                                                    </ForwardRef>
                                                                  </div>
                                                                </ButtonGroup>
                                                              </div>
                                                              <Input
                                                                addonAfter={null}
                                                                bsStyle={null}
                                                                buttonAfter={null}
                                                                checked={false}
                                                                help=""
                                                                id="id-checkbox"
                                                                label=""
                                                                onChange={[Function]}
                                                                placeholder=""
                                                                type="checkbox"
                                                                wrapperClassName="form-group-inline"
                                                              >
                                                                <Component
                                                                  controlId="id-checkbox"
                                                                  validationState={null}
                                                                >
                                                                  <FormGroup__StyledFormGroup
                                                                    controlId="id-checkbox"
                                                                    validationState={null}
                                                                  >
                                                                    <StyledComponent
                                                                      controlId="id-checkbox"
                                                                      forwardedComponent={
                                                                        Object {
                                                                          "$$typeof": Symbol(react.forward_ref),
                                                                          "SIZES": Array [
                                                                            "large",
                                                                            "small",
                                                                          ],
                                                                          "attrs": Array [],
                                                                          "componentStyle": ComponentStyle {
                                                                            "componentId": "FormGroup__StyledFormGroup-sc-1wv4cm9-0",
                                                                            "isStatic": false,
                                                                            "lastClassName": "ekazNr",
                                                                            "rules": Array [
                                                                              [Function],
                                                                              ";",
                                                                            ],
                                                                          },
                                                                          "displayName": "FormGroup__StyledFormGroup",
                                                                          "foldedComponentIds": Array [],
                                                                          "render": [Function],
                                                                          "styledComponentId": "FormGroup__StyledFormGroup-sc-1wv4cm9-0",
                                                                          "target": [Function],
                                                                          "toString": [Function],
                                                                          "warnTooManyClasses": [Function],
                                                                          "withComponent": [Function],
                                                                        }
                                                                      }
                                                                      forwardedRef={null}
                                                                      validationState={null}
                                                                    >
                                                                      <FormGroup
                                                                        bsClass="form-group"
                                                                        className=""
                                                                        controlId="id-checkbox"
                                                                        validationState={null}
                                                                      >
                                                                        <div
                                                                          className="form-group"
                                                                        >
                                                                          <InputWrapper
                                                                            className="form-group-inline"
                                                                          >
                                                                            <div
                                                                              className="form-group-inline"
                                                                            >
                                                                              <Checkbox
                                                                                bsClass="checkbox"
                                                                                checked={false}
                                                                                disabled={false}
                                                                                inline={false}
                                                                                inputRef={[Function]}
                                                                                label=""
                                                                                name="id-checkbox"
                                                                                onChange={[Function]}
                                                                                placeholder=""
                                                                                title=""
                                                                                type="checkbox"
                                                                              >
                                                                                <div
                                                                                  className="checkbox"
                                                                                >
                                                                                  <label
                                                                                    title=""
                                                                                  >
                                                                                    <input
                                                                                      checked={false}
                                                                                      disabled={false}
                                                                                      label=""
                                                                                      name="id-checkbox"
                                                                                      onChange={[Function]}
                                                                                      placeholder=""
                                                                                      type="checkbox"
                                                                                    />
                                                                                  </label>
                                                                                </div>
                                                                              </Checkbox>
                                                                            </div>
                                                                          </InputWrapper>
                                                                        </div>
                                                                      </FormGroup>
                                                                    </StyledComponent>
                                                                  </FormGroup__StyledFormGroup>
                                                                </Component>
                                                              </Input>
                                                              <span
                                                                className="description"
                                                              >
                                                                stream2
                                                              </span>
                                                            </div>
                                                          </span>
                                                        </ListGroupItem>
                                                      </StyledComponent>
                                                    </ListGroupItem__StyledListGroupItem>
                                                  </ForwardRef>
                                                </ControlledTableListItem>
                                              </div>
                                            </ListGroup>
                                          </ListGroup>
                                        </div>
                                      </ControlledTableList>
                                    </div>
                                  </TableList>
                                </div>
                              </div>
                            </TabPane>
                          </Tab>
                        </StyledComponent>
                      </Tab>
                      <Tab
                        eventKey={2}
                        title="Dashboards"
                      >
                        <StyledComponent
                          eventKey={2}
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "Container": Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "ControlledComponent": [Function],
                                "deferControlTo": [Function],
                                "propTypes": Object {
                                  "activeKey": [Function],
                                  "defaultActiveKey": [Function],
                                  "innerRef": [Function],
                                },
                                "render": [Function],
                              },
                              "Content": [Function],
                              "Pane": [Function],
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "Tab-loa0kh-0",
                                "isStatic": false,
                                "lastClassName": "c1",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Tab",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "Tab-loa0kh-0",
                              "target": [Function],
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          title="Dashboards"
                        >
                          <Tab
                            className="c1"
                            eventKey={2}
                            title="Dashboards"
                          >
                            <TabPane
                              bsClass="tab-pane"
                              className="c1"
                              eventKey={2}
                            >
                              <div
                                aria-hidden={true}
                                aria-labelledby="permissionSelectorTabs-tab-2"
                                className="c1 tab-pane"
                                id="permissionSelectorTabs-pane-2"
                                role="tabpanel"
                              >
                                <div
                                  style={
                                    Object {
                                      "marginTop": 10,
                                    }
                                  }
                                >
                                  <TableList
                                    bulkActionsFactory={[Function]}
                                    descriptionKey="description"
                                    enableBulkActions={true}
                                    enableFilter={true}
                                    filterKeys={
                                      Array [
                                        "title",
                                      ]
                                    }
                                    filterLabel="Filter Dashboards"
                                    idKey="id"
                                    itemActionsFactory={[Function]}
                                    items={
                                      Immutable.List [
                                        Object {
                                          "description": "dashboard1",
                                          "id": "01",
                                        },
                                        Object {
                                          "description": "dashboard2",
                                          "id": "02",
                                        },
                                      ]
                                    }
                                    titleKey="title"
                                  >
                                    <div>
                                      <Row
                                        bsClass="row"
                                        componentClass="div"
                                      >
                                        <div
                                          className="row"
                                        >
                                          <Col
                                            bsClass="col"
                                            componentClass="div"
                                            md={12}
                                          >
                                            <div
                                              className="col-md-12"
                                            >
                                              <TypeAheadDataFilter
                                                data={
                                                  Array [
                                                    Object {
                                                      "description": "dashboard1",
                                                      "id": "01",
                                                    },
                                                    Object {
                                                      "description": "dashboard2",
                                                      "id": "02",
                                                    },
                                                  ]
                                                }
                                                displayKey="value"
                                                filterBy=""
                                                filterSuggestionAccessor=""
                                                filterSuggestions={Array []}
                                                id="filter-dashboards-data-filter"
                                                label="Filter Dashboards"
                                                onDataFiltered={[Function]}
                                                searchInKeys={
                                                  Array [
                                                    "title",
                                                  ]
                                                }
                                              >
                                                <div
                                                  className="filter"
                                                >
                                                  <form
                                                    className="form-inline"
                                                    onSubmit={[Function]}
                                                    style={
                                                      Object {
                                                        "display": "inline",
                                                      }
                                                    }
                                                  >
                                                    <TypeAheadInput
                                                      displayKey="value"
                                                      id="filter-dashboards-data-filter"
                                                      label="Filter Dashboards"
                                                      onSuggestionSelected={[Function]}
                                                      suggestionText="Filter by : "
                                                      suggestions={Array []}
                                                    >
                                                      <Input
                                                        addonAfter={null}
                                                        bsStyle={null}
                                                        buttonAfter={null}
                                                        help=""
                                                        id="filter-dashboards-data-filter"
                                                        label="Filter Dashboards"
                                                        placeholder=""
                                                        type="text"
                                                        wrapperClassName="typeahead-wrapper"
                                                      >
                                                        <Component
                                                          controlId="filter-dashboards-data-filter"
                                                          validationState={null}
                                                        >
                                                          <FormGroup__StyledFormGroup
                                                            controlId="filter-dashboards-data-filter"
                                                            validationState={null}
                                                          >
                                                            <StyledComponent
                                                              controlId="filter-dashboards-data-filter"
                                                              forwardedComponent={
                                                                Object {
                                                                  "$$typeof": Symbol(react.forward_ref),
                                                                  "SIZES": Array [
                                                                    "large",
                                                                    "small",
                                                                  ],
                                                                  "attrs": Array [],
                                                                  "componentStyle": ComponentStyle {
                                                                    "componentId": "FormGroup__StyledFormGroup-sc-1wv4cm9-0",
                                                                    "isStatic": false,
                                                                    "lastClassName": "ekazNr",
                                                                    "rules": Array [
                                                                      [Function],
                                                                      ";",
                                                                    ],
                                                                  },
                                                                  "displayName": "FormGroup__StyledFormGroup",
                                                                  "foldedComponentIds": Array [],
                                                                  "render": [Function],
                                                                  "styledComponentId": "FormGroup__StyledFormGroup-sc-1wv4cm9-0",
                                                                  "target": [Function],
                                                                  "toString": [Function],
                                                                  "warnTooManyClasses": [Function],
                                                                  "withComponent": [Function],
                                                                }
                                                              }
                                                              forwardedRef={null}
                                                              validationState={null}
                                                            >
                                                              <FormGroup
                                                                bsClass="form-group"
                                                                className=""
                                                                controlId="filter-dashboards-data-filter"
                                                                validationState={null}
                                                              >
                                                                <div
                                                                  className="form-group"
                                                                >
                                                                  <ControlLabel>
                                                                    <StyledComponent
                                                                      forwardedComponent={
                                                                        Object {
                                                                          "$$typeof": Symbol(react.forward_ref),
                                                                          "attrs": Array [],
                                                                          "componentStyle": ComponentStyle {
                                                                            "componentId": "ControlLabel-sc-1edmum5-0",
                                                                            "isStatic": false,
                                                                            "lastClassName": "c2",
                                                                            "rules": Array [
                                                                              [Function],
                                                                            ],
                                                                          },
                                                                          "displayName": "ControlLabel",
                                                                          "foldedComponentIds": Array [],
                                                                          "render": [Function],
                                                                          "styledComponentId": "ControlLabel-sc-1edmum5-0",
                                                                          "target": [Function],
                                                                          "toString": [Function],
                                                                          "warnTooManyClasses": [Function],
                                                                          "withComponent": [Function],
                                                                        }
                                                                      }
                                                                      forwardedRef={null}
                                                                    >
                                                                      <ControlLabel
                                                                        bsClass="control-label"
                                                                        className="c2"
                                                                        srOnly={false}
                                                                      >
                                                                        <label
                                                                          className="c2 control-label"
                                                                          htmlFor="filter-dashboards-data-filter"
                                                                        >
                                                                          Filter Dashboards
                                                                        </label>
                                                                      </ControlLabel>
                                                                    </StyledComponent>
                                                                  </ControlLabel>
                                                                  <InputWrapper
                                                                    className="typeahead-wrapper"
                                                                  >
                                                                    <div
                                                                      className="typeahead-wrapper"
                                                                    >
                                                                      <FormControl
                                                                        componentClass="input"
                                                                        inputRef={[Function]}
                                                                        label="Filter Dashboards"
                                                                        name="filter-dashboards-data-filter"
                                                                        placeholder=""
                                                                        type="text"
                                                                      >
                                                                        <StyledComponent
                                                                          componentClass="input"
                                                                          forwardedComponent={
                                                                            Object {
                                                                              "$$typeof": Symbol(react.forward_ref),
                                                                              "Feedback": [Function],
                                                                              "SIZES": Array [
                                                                                "small",
                                                                                "large",
                                                                              ],
                                                                              "Static": [Function],
                                                                              "attrs": Array [],
                                                                              "componentStyle": ComponentStyle {
                                                                                "componentId": "FormControl-sc-1amoaox-0",
                                                                                "isStatic": false,
                                                                                "lastClassName": "c3",
                                                                                "rules": Array [
                                                                                  [Function],
                                                                                ],
                                                                              },
                                                                              "displayName": "FormControl",
                                                                              "foldedComponentIds": Array [],
                                                                              "render": [Function],
                                                                              "styledComponentId": "FormControl-sc-1amoaox-0",
                                                                              "target": [Function],
                                                                              "toString": [Function],
                                                                              "warnTooManyClasses": [Function],
                                                                              "withComponent": [Function],
                                                                            }
                                                                          }
                                                                          forwardedRef={null}
                                                                          inputRef={[Function]}
                                                                          label="Filter Dashboards"
                                                                          name="filter-dashboards-data-filter"
                                                                          placeholder=""
                                                                          type="text"
                                                                        >
                                                                          <FormControl
                                                                            bsClass="form-control"
                                                                            className="c3"
                                                                            componentClass="input"
                                                                            inputRef={[Function]}
                                                                            label="Filter Dashboards"
                                                                            name="filter-dashboards-data-filter"
                                                                            placeholder=""
                                                                            type="text"
                                                                          >
                                                                            <input
                                                                              className="c3 form-control"
                                                                              id="filter-dashboards-data-filter"
                                                                              label="Filter Dashboards"
                                                                              name="filter-dashboards-data-filter"
                                                                              placeholder=""
                                                                              type="text"
                                                                            />
                                                                          </FormControl>
                                                                        </StyledComponent>
                                                                      </FormControl>
                                                                    </div>
                                                                  </InputWrapper>
                                                                </div>
                                                              </FormGroup>
                                                            </StyledComponent>
                                                          </FormGroup__StyledFormGroup>
                                                        </Component>
                                                      </Input>
                                                    </TypeAheadInput>
                                                    <ForwardRef
                                                      bsStyle="default"
                                                      style={
                                                        Object {
                                                          "marginLeft": 5,
                                                        }
                                                      }
                                                      type="submit"
                                                    >
                                                      <Button__StyledButton
                                                        bsStyle="default"
                                                        style={
                                                          Object {
                                                            "marginLeft": 5,
                                                          }
                                                        }
                                                        type="submit"
                                                      >
                                                        <StyledComponent
                                                          bsStyle="default"
                                                          forwardedComponent={
                                                            Object {
                                                              "$$typeof": Symbol(react.forward_ref),
                                                              "SIZES": Array [
                                                                "large",
                                                                "small",
                                                                "xsmall",
                                                              ],
                                                              "STYLES": Array [
                                                                "success",
                                                                "warning",
                                                                "danger",
                                                                "info",
                                                                "default",
                                                                "primary",
                                                                "link",
                                                              ],
                                                              "attrs": Array [],
                                                              "componentStyle": ComponentStyle {
                                                                "componentId": "Button__StyledButton-c9cbmb-0",
                                                                "isStatic": false,
                                                                "lastClassName": "c4",
                                                                "rules": Array [
                                                                  [Function],
                                                                ],
                                                              },
                                                              "displayName": "Button__StyledButton",
                                                              "foldedComponentIds": Array [],
                                                              "render": [Function],
                                                              "styledComponentId": "Button__StyledButton-c9cbmb-0",
                                                              "target": [Function],
                                                              "toString": [Function],
                                                              "warnTooManyClasses": [Function],
                                                              "withComponent": [Function],
                                                            }
                                                          }
                                                          forwardedRef={null}
                                                          style={
                                                            Object {
                                                              "marginLeft": 5,
                                                            }
                                                          }
                                                          type="submit"
                                                        >
                                                          <Button
                                                            active={false}
                                                            block={false}
                                                            bsClass="btn"
                                                            bsStyle="default"
                                                            className="c4"
                                                            disabled={false}
                                                            style={
                                                              Object {
                                                                "marginLeft": 5,
                                                              }
                                                            }
                                                            type="submit"
                                                          >
                                                            <button
                                                              className="c4 btn btn-default"
                                                              disabled={false}
                                                              style={
                                                                Object {
                                                                  "marginLeft": 5,
                                                                }
                                                              }
                                                              type="submit"
                                                            >
                                                              Filter
                                                            </button>
                                                          </Button>
                                                        </StyledComponent>
                                                      </Button__StyledButton>
                                                    </ForwardRef>
                                                    <ForwardRef
                                                      bsStyle="default"
                                                      disabled={true}
                                                      onClick={[Function]}
                                                      style={
                                                        Object {
                                                          "marginLeft": 5,
                                                        }
                                                      }
                                                      type="button"
                                                    >
                                                      <Button__StyledButton
                                                        bsStyle="default"
                                                        disabled={true}
                                                        onClick={[Function]}
                                                        style={
                                                          Object {
                                                            "marginLeft": 5,
                                                          }
                                                        }
                                                        type="button"
                                                      >
                                                        <StyledComponent
                                                          bsStyle="default"
                                                          disabled={true}
                                                          forwardedComponent={
                                                            Object {
                                                              "$$typeof": Symbol(react.forward_ref),
                                                              "SIZES": Array [
                                                                "large",
                                                                "small",
                                                                "xsmall",
                                                              ],
                                                              "STYLES": Array [
                                                                "success",
                                                                "warning",
                                                                "danger",
                                                                "info",
                                                                "default",
                                                                "primary",
                                                                "link",
                                                              ],
                                                              "attrs": Array [],
                                                              "componentStyle": ComponentStyle {
                                                                "componentId": "Button__StyledButton-c9cbmb-0",
                                                                "isStatic": false,
                                                                "lastClassName": "c4",
                                                                "rules": Array [
                                                                  [Function],
                                                                ],
                                                              },
                                                              "displayName": "Button__StyledButton",
                                                              "foldedComponentIds": Array [],
                                                              "render": [Function],
                                                              "styledComponentId": "Button__StyledButton-c9cbmb-0",
                                                              "target": [Function],
                                                              "toString": [Function],
                                                              "warnTooManyClasses": [Function],
                                                              "withComponent": [Function],
                                                            }
                                                          }
                                                          forwardedRef={null}
                                                          onClick={[Function]}
                                                          style={
                                                            Object {
                                                              "marginLeft": 5,
                                                            }
                                                          }
                                                          type="button"
                                                        >
                                                          <Button
                                                            active={false}
                                                            block={false}
                                                            bsClass="btn"
                                                            bsStyle="default"
                                                            className="c4"
                                                            disabled={true}
                                                            onClick={[Function]}
                                                            style={
                                                              Object {
                                                                "marginLeft": 5,
                                                              }
                                                            }
                                                            type="button"
                                                          >
                                                            <button
                                                              className="c4 btn btn-default"
                                                              disabled={true}
                                                              onClick={[Function]}
                                                              style={
                                                                Object {
                                                                  "marginLeft": 5,
                                                                }
                                                              }
                                                              type="button"
                                                            >
                                                              Reset
                                                            </button>
                                                          </Button>
                                                        </StyledComponent>
                                                      </Button__StyledButton>
                                                    </ForwardRef>
                                                  </form>
                                                  <ul
                                                    className="pill-list"
                                                  >
                                                    <Component />
                                                  </ul>
                                                </div>
                                              </TypeAheadDataFilter>
                                            </div>
                                          </Col>
                                        </div>
                                      </Row>
                                      <ControlledTableList>
                                        <div>
                                          <ListGroup>
                                            <ListGroup
                                              bsClass="list-group"
                                            >
                                              <div
                                                className="list-group"
                                              >
                                                <ControlledTableListHeader>
                                                  <ControlledTableListHeader__StyledListGroupItem>
                                                    <StyledComponent
                                                      forwardedComponent={
                                                        Object {
                                                          "$$typeof": Symbol(react.forward_ref),
                                                          "attrs": Array [],
                                                          "componentStyle": ComponentStyle {
                                                            "componentId": "ControlledTableListHeader__StyledListGroupItem-tr2y34-0",
                                                            "isStatic": false,
                                                            "lastClassName": "c5",
                                                            "rules": Array [
                                                              [Function],
                                                            ],
                                                          },
                                                          "displayName": "ControlledTableListHeader__StyledListGroupItem",
                                                          "foldedComponentIds": Array [],
                                                          "propTypes": Object {
                                                            "bsStyle": [Function],
                                                          },
                                                          "render": [Function],
                                                          "styledComponentId": "ControlledTableListHeader__StyledListGroupItem-tr2y34-0",
                                                          "target": Object {
                                                            "$$typeof": Symbol(react.forward_ref),
                                                            "defaultProps": Object {
                                                              "bsStyle": undefined,
                                                            },
                                                            "propTypes": Object {
                                                              "bsStyle": [Function],
                                                            },
                                                            "render": [Function],
                                                          },
                                                          "toString": [Function],
                                                          "warnTooManyClasses": [Function],
                                                          "withComponent": [Function],
                                                        }
                                                      }
                                                      forwardedRef={null}
                                                    >
                                                      <ForwardRef
                                                        className="c5"
                                                      >
                                                        <ListGroupItem__StyledListGroupItem
                                                          className="c5"
                                                        >
                                                          <StyledComponent
                                                            className="c5"
                                                            forwardedComponent={
                                                              Object {
                                                                "$$typeof": Symbol(react.forward_ref),
                                                                "STYLES": Array [
                                                                  "success",
                                                                  "warning",
                                                                  "danger",
                                                                  "info",
                                                                ],
                                                                "attrs": Array [],
                                                                "componentStyle": ComponentStyle {
                                                                  "componentId": "ListGroupItem__StyledListGroupItem-sc-1ky0joo-0",
                                                                  "isStatic": false,
                                                                  "lastClassName": "c6",
                                                                  "rules": Array [
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "displayName": "ListGroupItem__StyledListGroupItem",
                                                                "foldedComponentIds": Array [],
                                                                "render": [Function],
                                                                "styledComponentId": "ListGroupItem__StyledListGroupItem-sc-1ky0joo-0",
                                                                "target": [Function],
                                                                "toString": [Function],
                                                                "warnTooManyClasses": [Function],
                                                                "withComponent": [Function],
                                                              }
                                                            }
                                                            forwardedRef={null}
                                                          >
                                                            <ListGroupItem
                                                              bsClass="list-group-item"
                                                              className="c6 c5"
                                                              listItem={false}
                                                            >
                                                              <span
                                                                className="c6 c5 list-group-item"
                                                              >
                                                                <Input
                                                                  addonAfter={null}
                                                                  bsStyle={null}
                                                                  buttonAfter={null}
                                                                  checked={false}
                                                                  disabled={false}
                                                                  help=""
                                                                  id="select-all-checkbox"
                                                                  label="Select all"
                                                                  onChange={[Function]}
                                                                  placeholder=""
                                                                  type="checkbox"
                                                                  wrapperClassName="form-group-inline"
                                                                >
                                                                  <Component
                                                                    controlId="select-all-checkbox"
                                                                    validationState={null}
                                                                  >
                                                                    <FormGroup__StyledFormGroup
                                                                      controlId="select-all-checkbox"
                                                                      validationState={null}
                                                                    >
                                                                      <StyledComponent
                                                                        controlId="select-all-checkbox"
                                                                        forwardedComponent={
                                                                          Object {
                                                                            "$$typeof": Symbol(react.forward_ref),
                                                                            "SIZES": Array [
                                                                              "large",
                                                                              "small",
                                                                            ],
                                                                            "attrs": Array [],
                                                                            "componentStyle": ComponentStyle {
                                                                              "componentId": "FormGroup__StyledFormGroup-sc-1wv4cm9-0",
                                                                              "isStatic": false,
                                                                              "lastClassName": "ekazNr",
                                                                              "rules": Array [
                                                                                [Function],
                                                                                ";",
                                                                              ],
                                                                            },
                                                                            "displayName": "FormGroup__StyledFormGroup",
                                                                            "foldedComponentIds": Array [],
                                                                            "render": [Function],
                                                                            "styledComponentId": "FormGroup__StyledFormGroup-sc-1wv4cm9-0",
                                                                            "target": [Function],
                                                                            "toString": [Function],
                                                                            "warnTooManyClasses": [Function],
                                                                            "withComponent": [Function],
                                                                          }
                                                                        }
                                                                        forwardedRef={null}
                                                                        validationState={null}
                                                                      >
                                                                        <FormGroup
                                                                          bsClass="form-group"
                                                                          className=""
                                                                          controlId="select-all-checkbox"
                                                                          validationState={null}
                                                                        >
                                                                          <div
                                                                            className="form-group"
                                                                          >
                                                                            <InputWrapper
                                                                              className="form-group-inline"
                                                                            >
                                                                              <div
                                                                                className="form-group-inline"
                                                                              >
                                                                                <Checkbox
                                                                                  bsClass="checkbox"
                                                                                  checked={false}
                                                                                  disabled={false}
                                                                                  inline={false}
                                                                                  inputRef={[Function]}
                                                                                  label="Select all"
                                                                                  name="select-all-checkbox"
                                                                                  onChange={[Function]}
                                                                                  placeholder=""
                                                                                  title=""
                                                                                  type="checkbox"
                                                                                >
                                                                                  <div
                                                                                    className="checkbox"
                                                                                  >
                                                                                    <label
                                                                                      title=""
                                                                                    >
                                                                                      <input
                                                                                        checked={false}
                                                                                        disabled={false}
                                                                                        label="Select all"
                                                                                        name="select-all-checkbox"
                                                                                        onChange={[Function]}
                                                                                        placeholder=""
                                                                                        type="checkbox"
                                                                                      />
                                                                                      Select all
                                                                                    </label>
                                                                                  </div>
                                                                                </Checkbox>
                                                                              </div>
                                                                            </InputWrapper>
                                                                          </div>
                                                                        </FormGroup>
                                                                      </StyledComponent>
                                                                    </FormGroup__StyledFormGroup>
                                                                  </Component>
                                                                </Input>
                                                              </span>
                                                            </ListGroupItem>
                                                          </StyledComponent>
                                                        </ListGroupItem__StyledListGroupItem>
                                                      </ForwardRef>
                                                    </StyledComponent>
                                                  </ControlledTableListHeader__StyledListGroupItem>
                                                </ControlledTableListHeader>
                                                <ControlledTableListItem
                                                  key="item-01"
                                                >
                                                  <ForwardRef>
                                                    <ListGroupItem__StyledListGroupItem>
                                                      <StyledComponent
                                                        forwardedComponent={
                                                          Object {
                                                            "$$typeof": Symbol(react.forward_ref),
                                                            "STYLES": Array [
                                                              "success",
                                                              "warning",
                                                              "danger",
                                                              "info",
                                                            ],
                                                            "attrs": Array [],
                                                            "componentStyle": ComponentStyle {
                                                              "componentId": "ListGroupItem__StyledListGroupItem-sc-1ky0joo-0",
                                                              "isStatic": false,
                                                              "lastClassName": "c6",
                                                              "rules": Array [
                                                                [Function],
                                                              ],
                                                            },
                                                            "displayName": "ListGroupItem__StyledListGroupItem",
                                                            "foldedComponentIds": Array [],
                                                            "render": [Function],
                                                            "styledComponentId": "ListGroupItem__StyledListGroupItem-sc-1ky0joo-0",
                                                            "target": [Function],
                                                            "toString": [Function],
                                                            "warnTooManyClasses": [Function],
                                                            "withComponent": [Function],
                                                          }
                                                        }
                                                        forwardedRef={null}
                                                      >
                                                        <ListGroupItem
                                                          bsClass="list-group-item"
                                                          className="c6"
                                                          listItem={false}
                                                        >
                                                          <span
                                                            className="c6 list-group-item"
                                                          >
                                                            <div
                                                              className="itemWrapper "
                                                            >
                                                              <div
                                                                className="itemActionsWrapper"
                                                              >
                                                                <ButtonGroup
                                                                  block={false}
                                                                  bsClass="btn-group"
                                                                  bsSize="small"
                                                                  justified={false}
                                                                  vertical={false}
                                                                >
                                                                  <div
                                                                    className="btn-group btn-group-sm"
                                                                  >
                                                                    <ForwardRef
                                                                      active={false}
                                                                      bsStyle="default"
                                                                      onClick={[Function]}
                                                                    >
                                                                      <Button__StyledButton
                                                                        active={false}
                                                                        bsStyle="default"
                                                                        onClick={[Function]}
                                                                      >
                                                                        <StyledComponent
                                                                          active={false}
                                                                          bsStyle="default"
                                                                          forwardedComponent={
                                                                            Object {
                                                                              "$$typeof": Symbol(react.forward_ref),
                                                                              "SIZES": Array [
                                                                                "large",
                                                                                "small",
                                                                                "xsmall",
                                                                              ],
                                                                              "STYLES": Array [
                                                                                "success",
                                                                                "warning",
                                                                                "danger",
                                                                                "info",
                                                                                "default",
                                                                                "primary",
                                                                                "link",
                                                                              ],
                                                                              "attrs": Array [],
                                                                              "componentStyle": ComponentStyle {
                                                                                "componentId": "Button__StyledButton-c9cbmb-0",
                                                                                "isStatic": false,
                                                                                "lastClassName": "c4",
                                                                                "rules": Array [
                                                                                  [Function],
                                                                                ],
                                                                              },
                                                                              "displayName": "Button__StyledButton",
                                                                              "foldedComponentIds": Array [],
                                                                              "render": [Function],
                                                                              "styledComponentId": "Button__StyledButton-c9cbmb-0",
                                                                              "target": [Function],
                                                                              "toString": [Function],
                                                                              "warnTooManyClasses": [Function],
                                                                              "withComponent": [Function],
                                                                            }
                                                                          }
                                                                          forwardedRef={null}
                                                                          onClick={[Function]}
                                                                        >
                                                                          <Button
                                                                            active={false}
                                                                            block={false}
                                                                            bsClass="btn"
                                                                            bsStyle="default"
                                                                            className="c4"
                                                                            disabled={false}
                                                                            onClick={[Function]}
                                                                          >
                                                                            <button
                                                                              className="c4 btn btn-default"
                                                                              disabled={false}
                                                                              onClick={[Function]}
                                                                              type="button"
                                                                            >
                                                                              Allow reading
                                                                            </button>
                                                                          </Button>
                                                                        </StyledComponent>
                                                                      </Button__StyledButton>
                                                                    </ForwardRef>
                                                                    <ForwardRef
                                                                      active={false}
                                                                      bsStyle="default"
                                                                      onClick={[Function]}
                                                                    >
                                                                      <Button__StyledButton
                                                                        active={false}
                                                                        bsStyle="default"
                                                                        onClick={[Function]}
                                                                      >
                                                                        <StyledComponent
                                                                          active={false}
                                                                          bsStyle="default"
                                                                          forwardedComponent={
                                                                            Object {
                                                                              "$$typeof": Symbol(react.forward_ref),
                                                                              "SIZES": Array [
                                                                                "large",
                                                                                "small",
                                                                                "xsmall",
                                                                              ],
                                                                              "STYLES": Array [
                                                                                "success",
                                                                                "warning",
                                                                                "danger",
                                                                                "info",
                                                                                "default",
                                                                                "primary",
                                                                                "link",
                                                                              ],
                                                                              "attrs": Array [],
                                                                              "componentStyle": ComponentStyle {
                                                                                "componentId": "Button__StyledButton-c9cbmb-0",
                                                                                "isStatic": false,
                                                                                "lastClassName": "c4",
                                                                                "rules": Array [
                                                                                  [Function],
                                                                                ],
                                                                              },
                                                                              "displayName": "Button__StyledButton",
                                                                              "foldedComponentIds": Array [],
                                                                              "render": [Function],
                                                                              "styledComponentId": "Button__StyledButton-c9cbmb-0",
                                                                              "target": [Function],
                                                                              "toString": [Function],
                                                                              "warnTooManyClasses": [Function],
                                                                              "withComponent": [Function],
                                                                            }
                                                                          }
                                                                          forwardedRef={null}
                                                                          onClick={[Function]}
                                                                        >
                                                                          <Button
                                                                            active={false}
                                                                            block={false}
                                                                            bsClass="btn"
                                                                            bsStyle="default"
                                                                            className="c4"
                                                                            disabled={false}
                                                                            onClick={[Function]}
                                                                          >
                                                                            <button
                                                                              className="c4 btn btn-default"
                                                                              disabled={false}
                                                                              onClick={[Function]}
                                                                              type="button"
                                                                            >
                                                                              Allow editing
                                                                            </button>
                                                                          </Button>
                                                                        </StyledComponent>
                                                                      </Button__StyledButton>
                                                                    </ForwardRef>
                                                                  </div>
                                                                </ButtonGroup>
                                                              </div>
                                                              <Input
                                                                addonAfter={null}
                                                                bsStyle={null}
                                                                buttonAfter={null}
                                                                checked={false}
                                                                help=""
                                                                id="id-checkbox"
                                                                label=""
                                                                onChange={[Function]}
                                                                placeholder=""
                                                                type="checkbox"
                                                                wrapperClassName="form-group-inline"
                                                              >
                                                                <Component
                                                                  controlId="id-checkbox"
                                                                  validationState={null}
                                                                >
                                                                  <FormGroup__StyledFormGroup
                                                                    controlId="id-checkbox"
                                                                    validationState={null}
                                                                  >
                                                                    <StyledComponent
                                                                      controlId="id-checkbox"
                                                                      forwardedComponent={
                                                                        Object {
                                                                          "$$typeof": Symbol(react.forward_ref),
                                                                          "SIZES": Array [
                                                                            "large",
                                                                            "small",
                                                                          ],
                                                                          "attrs": Array [],
                                                                          "componentStyle": ComponentStyle {
                                                                            "componentId": "FormGroup__StyledFormGroup-sc-1wv4cm9-0",
                                                                            "isStatic": false,
                                                                            "lastClassName": "ekazNr",
                                                                            "rules": Array [
                                                                              [Function],
                                                                              ";",
                                                                            ],
                                                                          },
                                                                          "displayName": "FormGroup__StyledFormGroup",
                                                                          "foldedComponentIds": Array [],
                                                                          "render": [Function],
                                                                          "styledComponentId": "FormGroup__StyledFormGroup-sc-1wv4cm9-0",
                                                                          "target": [Function],
                                                                          "toString": [Function],
                                                                          "warnTooManyClasses": [Function],
                                                                          "withComponent": [Function],
                                                                        }
                                                                      }
                                                                      forwardedRef={null}
                                                                      validationState={null}
                                                                    >
                                                                      <FormGroup
                                                                        bsClass="form-group"
                                                                        className=""
                                                                        controlId="id-checkbox"
                                                                        validationState={null}
                                                                      >
                                                                        <div
                                                                          className="form-group"
                                                                        >
                                                                          <InputWrapper
                                                                            className="form-group-inline"
                                                                          >
                                                                            <div
                                                                              className="form-group-inline"
                                                                            >
                                                                              <Checkbox
                                                                                bsClass="checkbox"
                                                                                checked={false}
                                                                                disabled={false}
                                                                                inline={false}
                                                                                inputRef={[Function]}
                                                                                label=""
                                                                                name="id-checkbox"
                                                                                onChange={[Function]}
                                                                                placeholder=""
                                                                                title=""
                                                                                type="checkbox"
                                                                              >
                                                                                <div
                                                                                  className="checkbox"
                                                                                >
                                                                                  <label
                                                                                    title=""
                                                                                  >
                                                                                    <input
                                                                                      checked={false}
                                                                                      disabled={false}
                                                                                      label=""
                                                                                      name="id-checkbox"
                                                                                      onChange={[Function]}
                                                                                      placeholder=""
                                                                                      type="checkbox"
                                                                                    />
                                                                                  </label>
                                                                                </div>
                                                                              </Checkbox>
                                                                            </div>
                                                                          </InputWrapper>
                                                                        </div>
                                                                      </FormGroup>
                                                                    </StyledComponent>
                                                                  </FormGroup__StyledFormGroup>
                                                                </Component>
                                                              </Input>
                                                              <span
                                                                className="description"
                                                              >
                                                                dashboard1
                                                              </span>
                                                            </div>
                                                          </span>
                                                        </ListGroupItem>
                                                      </StyledComponent>
                                                    </ListGroupItem__StyledListGroupItem>
                                                  </ForwardRef>
                                                </ControlledTableListItem>
                                                <ControlledTableListItem
                                                  key="item-02"
                                                >
                                                  <ForwardRef>
                                                    <ListGroupItem__StyledListGroupItem>
                                                      <StyledComponent
                                                        forwardedComponent={
                                                          Object {
                                                            "$$typeof": Symbol(react.forward_ref),
                                                            "STYLES": Array [
                                                              "success",
                                                              "warning",
                                                              "danger",
                                                              "info",
                                                            ],
                                                            "attrs": Array [],
                                                            "componentStyle": ComponentStyle {
                                                              "componentId": "ListGroupItem__StyledListGroupItem-sc-1ky0joo-0",
                                                              "isStatic": false,
                                                              "lastClassName": "c6",
                                                              "rules": Array [
                                                                [Function],
                                                              ],
                                                            },
                                                            "displayName": "ListGroupItem__StyledListGroupItem",
                                                            "foldedComponentIds": Array [],
                                                            "render": [Function],
                                                            "styledComponentId": "ListGroupItem__StyledListGroupItem-sc-1ky0joo-0",
                                                            "target": [Function],
                                                            "toString": [Function],
                                                            "warnTooManyClasses": [Function],
                                                            "withComponent": [Function],
                                                          }
                                                        }
                                                        forwardedRef={null}
                                                      >
                                                        <ListGroupItem
                                                          bsClass="list-group-item"
                                                          className="c6"
                                                          listItem={false}
                                                        >
                                                          <span
                                                            className="c6 list-group-item"
                                                          >
                                                            <div
                                                              className="itemWrapper "
                                                            >
                                                              <div
                                                                className="itemActionsWrapper"
                                                              >
                                                                <ButtonGroup
                                                                  block={false}
                                                                  bsClass="btn-group"
                                                                  bsSize="small"
                                                                  justified={false}
                                                                  vertical={false}
                                                                >
                                                                  <div
                                                                    className="btn-group btn-group-sm"
                                                                  >
                                                                    <ForwardRef
                                                                      active={false}
                                                                      bsStyle="default"
                                                                      onClick={[Function]}
                                                                    >
                                                                      <Button__StyledButton
                                                                        active={false}
                                                                        bsStyle="default"
                                                                        onClick={[Function]}
                                                                      >
                                                                        <StyledComponent
                                                                          active={false}
                                                                          bsStyle="default"
                                                                          forwardedComponent={
                                                                            Object {
                                                                              "$$typeof": Symbol(react.forward_ref),
                                                                              "SIZES": Array [
                                                                                "large",
                                                                                "small",
                                                                                "xsmall",
                                                                              ],
                                                                              "STYLES": Array [
                                                                                "success",
                                                                                "warning",
                                                                                "danger",
                                                                                "info",
                                                                                "default",
                                                                                "primary",
                                                                                "link",
                                                                              ],
                                                                              "attrs": Array [],
                                                                              "componentStyle": ComponentStyle {
                                                                                "componentId": "Button__StyledButton-c9cbmb-0",
                                                                                "isStatic": false,
                                                                                "lastClassName": "c4",
                                                                                "rules": Array [
                                                                                  [Function],
                                                                                ],
                                                                              },
                                                                              "displayName": "Button__StyledButton",
                                                                              "foldedComponentIds": Array [],
                                                                              "render": [Function],
                                                                              "styledComponentId": "Button__StyledButton-c9cbmb-0",
                                                                              "target": [Function],
                                                                              "toString": [Function],
                                                                              "warnTooManyClasses": [Function],
                                                                              "withComponent": [Function],
                                                                            }
                                                                          }
                                                                          forwardedRef={null}
                                                                          onClick={[Function]}
                                                                        >
                                                                          <Button
                                                                            active={false}
                                                                            block={false}
                                                                            bsClass="btn"
                                                                            bsStyle="default"
                                                                            className="c4"
                                                                            disabled={false}
                                                                            onClick={[Function]}
                                                                          >
                                                                            <button
                                                                              className="c4 btn btn-default"
                                                                              disabled={false}
                                                                              onClick={[Function]}
                                                                              type="button"
                                                                            >
                                                                              Allow reading
                                                                            </button>
                                                                          </Button>
                                                                        </StyledComponent>
                                                                      </Button__StyledButton>
                                                                    </ForwardRef>
                                                                    <ForwardRef
                                                                      active={false}
                                                                      bsStyle="default"
                                                                      onClick={[Function]}
                                                                    >
                                                                      <Button__StyledButton
                                                                        active={false}
                                                                        bsStyle="default"
                                                                        onClick={[Function]}
                                                                      >
                                                                        <StyledComponent
                                                                          active={false}
                                                                          bsStyle="default"
                                                                          forwardedComponent={
                                                                            Object {
                                                                              "$$typeof": Symbol(react.forward_ref),
                                                                              "SIZES": Array [
                                                                                "large",
                                                                                "small",
                                                                                "xsmall",
                                                                              ],
                                                                              "STYLES": Array [
                                                                                "success",
                                                                                "warning",
                                                                                "danger",
                                                                                "info",
                                                                                "default",
                                                                                "primary",
                                                                                "link",
                                                                              ],
                                                                              "attrs": Array [],
                                                                              "componentStyle": ComponentStyle {
                                                                                "componentId": "Button__StyledButton-c9cbmb-0",
                                                                                "isStatic": false,
                                                                                "lastClassName": "c4",
                                                                                "rules": Array [
                                                                                  [Function],
                                                                                ],
                                                                              },
                                                                              "displayName": "Button__StyledButton",
                                                                              "foldedComponentIds": Array [],
                                                                              "render": [Function],
                                                                              "styledComponentId": "Button__StyledButton-c9cbmb-0",
                                                                              "target": [Function],
                                                                              "toString": [Function],
                                                                              "warnTooManyClasses": [Function],
                                                                              "withComponent": [Function],
                                                                            }
                                                                          }
                                                                          forwardedRef={null}
                                                                          onClick={[Function]}
                                                                        >
                                                                          <Button
                                                                            active={false}
                                                                            block={false}
                                                                            bsClass="btn"
                                                                            bsStyle="default"
                                                                            className="c4"
                                                                            disabled={false}
                                                                            onClick={[Function]}
                                                                          >
                                                                            <button
                                                                              className="c4 btn btn-default"
                                                                              disabled={false}
                                                                              onClick={[Function]}
                                                                              type="button"
                                                                            >
                                                                              Allow editing
                                                                            </button>
                                                                          </Button>
                                                                        </StyledComponent>
                                                                      </Button__StyledButton>
                                                                    </ForwardRef>
                                                                  </div>
                                                                </ButtonGroup>
                                                              </div>
                                                              <Input
                                                                addonAfter={null}
                                                                bsStyle={null}
                                                                buttonAfter={null}
                                                                checked={false}
                                                                help=""
                                                                id="id-checkbox"
                                                                label=""
                                                                onChange={[Function]}
                                                                placeholder=""
                                                                type="checkbox"
                                                                wrapperClassName="form-group-inline"
                                                              >
                                                                <Component
                                                                  controlId="id-checkbox"
                                                                  validationState={null}
                                                                >
                                                                  <FormGroup__StyledFormGroup
                                                                    controlId="id-checkbox"
                                                                    validationState={null}
                                                                  >
                                                                    <StyledComponent
                                                                      controlId="id-checkbox"
                                                                      forwardedComponent={
                                                                        Object {
                                                                          "$$typeof": Symbol(react.forward_ref),
                                                                          "SIZES": Array [
                                                                            "large",
                                                                            "small",
                                                                          ],
                                                                          "attrs": Array [],
                                                                          "componentStyle": ComponentStyle {
                                                                            "componentId": "FormGroup__StyledFormGroup-sc-1wv4cm9-0",
                                                                            "isStatic": false,
                                                                            "lastClassName": "ekazNr",
                                                                            "rules": Array [
                                                                              [Function],
                                                                              ";",
                                                                            ],
                                                                          },
                                                                          "displayName": "FormGroup__StyledFormGroup",
                                                                          "foldedComponentIds": Array [],
                                                                          "render": [Function],
                                                                          "styledComponentId": "FormGroup__StyledFormGroup-sc-1wv4cm9-0",
                                                                          "target": [Function],
                                                                          "toString": [Function],
                                                                          "warnTooManyClasses": [Function],
                                                                          "withComponent": [Function],
                                                                        }
                                                                      }
                                                                      forwardedRef={null}
                                                                      validationState={null}
                                                                    >
                                                                      <FormGroup
                                                                        bsClass="form-group"
                                                                        className=""
                                                                        controlId="id-checkbox"
                                                                        validationState={null}
                                                                      >
                                                                        <div
                                                                          className="form-group"
                                                                        >
                                                                          <InputWrapper
                                                                            className="form-group-inline"
                                                                          >
                                                                            <div
                                                                              className="form-group-inline"
                                                                            >
                                                                              <Checkbox
                                                                                bsClass="checkbox"
                                                                                checked={false}
                                                                                disabled={false}
                                                                                inline={false}
                                                                                inputRef={[Function]}
                                                                                label=""
                                                                                name="id-checkbox"
                                                                                onChange={[Function]}
                                                                                placeholder=""
                                                                                title=""
                                                                                type="checkbox"
                                                                              >
                                                                                <div
                                                                                  className="checkbox"
                                                                                >
                                                                                  <label
                                                                                    title=""
                                                                                  >
                                                                                    <input
                                                                                      checked={false}
                                                                                      disabled={false}
                                                                                      label=""
                                                                                      name="id-checkbox"
                                                                                      onChange={[Function]}
                                                                                      placeholder=""
                                                                                      type="checkbox"
                                                                                    />
                                                                                  </label>
                                                                                </div>
                                                                              </Checkbox>
                                                                            </div>
                                                                          </InputWrapper>
                                                                        </div>
                                                                      </FormGroup>
                                                                    </StyledComponent>
                                                                  </FormGroup__StyledFormGroup>
                                                                </Component>
                                                              </Input>
                                                              <span
                                                                className="description"
                                                              >
                                                                dashboard2
                                                              </span>
                                                            </div>
                                                          </span>
                                                        </ListGroupItem>
                                                      </StyledComponent>
                                                    </ListGroupItem__StyledListGroupItem>
                                                  </ForwardRef>
                                                </ControlledTableListItem>
                                              </div>
                                            </ListGroup>
                                          </ListGroup>
                                        </div>
                                      </ControlledTableList>
                                    </div>
                                  </TableList>
                                </div>
                              </div>
                            </TabPane>
                          </Tab>
                        </StyledComponent>
                      </Tab>
                    </div>
                  </TabContent>
                </div>
              </TabContainer>
            </Tabs>
          </Uncontrolled(Tabs)>
        </ForwardRef>
      </StyledComponent>
    </Tabs>
  </div>
</PermissionSelector>
`;

exports[`<PermissionSelector /> should render with set permissions 1`] = `
.c4.btn-danger {
  background-color: #ad0707;
  border-color: #b23939;
  color: rgb(252,249,249);
  -webkit-transition: background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;
  transition: background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;
}

.c4.btn-danger:hover {
  background-color: #a00e0e;
  border-color: #a53636;
  color: #e9e6e6;
}

.c4.btn-danger.active {
  background-color: #b75151;
  border-color: #bc6363;
  color: rgb(252,249,249);
}

.c4.btn-danger.active:hover {
  background-color: #a94c4c;
  border-color: #ad5c5c;
  color: #e9e6e6;
}

.c4.btn-danger[disabled],
.c4.btn-danger.disabled {
  background-color: #c07272;
  border-color: #bc6363;
  color: rgb(252,250,250);
}

.c4.btn-danger[disabled]:hover,
.c4.btn-danger.disabled:hover {
  background-color: #c07272;
  border-color: #bc6363;
  color: rgb(252,250,250);
}

.c4.btn-default {
  background-color: #e6e6e6;
  border-color: #e0e0e0;
  color: rgb(73,73,73);
  -webkit-transition: background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;
  transition: background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;
}

.c4.btn-default:hover {
  background-color: #d4d4d4;
  border-color: #cfcfcf;
  color: #444444;
}

.c4.btn-default.active {
  background-color: #dadada;
  border-color: #d4d4d4;
  color: rgb(49,49,49);
}

.c4.btn-default.active:hover {
  background-color: #cacaca;
  border-color: #c4c4c4;
  color: #2f2f2f;
}

.c4.btn-default[disabled],
.c4.btn-default.disabled {
  background-color: #cecece;
  border-color: #d4d4d4;
  color: rgb(80,80,80);
}

.c4.btn-default[disabled]:hover,
.c4.btn-default.disabled:hover {
  background-color: #cecece;
  border-color: #d4d4d4;
  color: rgb(80,80,80);
}

.c4.btn-info {
  background-color: #0063be;
  border-color: #3970c2;
  color: rgb(249,250,252);
  -webkit-transition: background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;
  transition: background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;
}

.c4.btn-info:hover {
  background-color: #0c5cb0;
  border-color: #3668b3;
  color: #e6e7e9;
}

.c4.btn-info.active {
  background-color: #517cc5;
  border-color: #6386c9;
  color: rgb(249,250,252);
}

.c4.btn-info.active:hover {
  background-color: #4b73b6;
  border-color: #5c7dba;
  color: #e6e7e9;
}

.c4.btn-info[disabled],
.c4.btn-info.disabled {
  background-color: #7290cd;
  border-color: #6386c9;
  color: rgb(250,251,253);
}

.c4.btn-info[disabled]:hover,
.c4.btn-info.disabled:hover {
  background-color: #7290cd;
  border-color: #6386c9;
  color: rgb(250,251,253);
}

.c4.btn-link {
  background-color: rgba(255,255,255,0);
  border-color: rgba(255,255,255,0);
  color: #702785;
  -webkit-transition: background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;
  transition: background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;
}

.c4.btn-link:hover {
  background-color: #ebebeb26;
  border-color: #ebebeb26;
  color: #68267b;
}

.c4.btn-link.active {
  background-color: rgba(255,255,255,0);
  border-color: rgba(255,255,255,0);
  color: #410057;
}

.c4.btn-link.active:hover {
  background-color: rgba(255,255,255,0);
  border-color: #ebebeb26;
  color: #3d0c51;
}

.c4.btn-link[disabled],
.c4.btn-link.disabled {
  background-color: rgba(255,255,255,0);
  border-color: rgba(255,255,255,0);
  color: #702785;
}

.c4.btn-link[disabled]:hover,
.c4.btn-link.disabled:hover {
  background-color: rgba(255,255,255,0);
  border-color: rgba(255,255,255,0);
  color: #702785;
}

.c4.btn-primary {
  background-color: #702785;
  border-color: #7b458e;
  color: rgb(234,229,236);
  -webkit-transition: background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;
  transition: background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;
}

.c4.btn-primary:hover {
  background-color: #68267b;
  border-color: #724083;
  color: #d8d3da;
}

.c4.btn-primary.active {
  background-color: #855996;
  border-color: #8f699d;
  color: rgb(250,249,251);
}

.c4.btn-primary.active:hover {
  background-color: #7c538b;
  border-color: #846292;
  color: #e7e6e8;
}

.c4.btn-primary[disabled],
.c4.btn-primary.disabled {
  background-color: #9877a5;
  border-color: #8f699d;
  color: rgb(251,250,251);
}

.c4.btn-primary[disabled]:hover,
.c4.btn-primary.disabled:hover {
  background-color: #9877a5;
  border-color: #8f699d;
  color: rgb(251,250,251);
}

.c4.btn-success {
  background-color: #00ae42;
  border-color: #39b356;
  color: rgb(249,252,249);
  -webkit-transition: background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;
  transition: background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;
}

.c4.btn-success:hover {
  background-color: #0ca13e;
  border-color: #36a550;
  color: #e6e9e6;
}

.c4.btn-success.active {
  background-color: #51b866;
  border-color: #63bc74;
  color: rgb(249,252,250);
}

.c4.btn-success.active:hover {
  background-color: #4baa5f;
  border-color: #5cae6c;
  color: #e6e9e7;
}

.c4.btn-success[disabled],
.c4.btn-success.disabled {
  background-color: #72c180;
  border-color: #63bc74;
  color: rgb(250,252,250);
}

.c4.btn-success[disabled]:hover,
.c4.btn-success.disabled:hover {
  background-color: #72c180;
  border-color: #63bc74;
  color: rgb(250,252,250);
}

.c4.btn-warning {
  background-color: #ffd200;
  border-color: #f9cd07;
  color: rgb(57,47,0);
  -webkit-transition: background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;
  transition: background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;
}

.c4.btn-warning:hover {
  background-color: #ebc20c;
  border-color: #e6bd0e;
  color: #362d0c;
}

.c4.btn-warning.active {
  background-color: #f2c70a;
  border-color: #ebc20c;
  color: rgb(54,45,2);
}

.c4.btn-warning.active:hover {
  background-color: #e0b80f;
  border-color: #d9b310;
  color: #332b0c;
}

.c4.btn-warning[disabled],
.c4.btn-warning.disabled {
  background-color: #e4bc0e;
  border-color: #ebc20c;
  color: rgb(88,73,5);
}

.c4.btn-warning[disabled]:hover,
.c4.btn-warning.disabled:hover {
  background-color: #e4bc0e;
  border-color: #ebc20c;
  color: rgb(88,73,5);
}

.c2 {
  color: #1f1f1f;
  font-weight: bold;
  margin-bottom: 5px;
  display: inline-block;
}

.c3 {
  color: #1f1f1f;
  background-color: #fff;
  border-color: #cdcdcd;
}

.c3::-webkit-input-placeholder {
  color: #9b9b9b;
}

.c3::-moz-placeholder {
  color: #9b9b9b;
}

.c3:-ms-input-placeholder {
  color: #9b9b9b;
}

.c3::placeholder {
  color: #9b9b9b;
}

.c3:focus {
  border-color: #6386c9;
  box-shadow: inset 0 1px 1px rgba(0,0,0,0.075),0 0 8px rgba(99,134,201,0.4);
}

.c3[disabled],
.c3[readonly],
fieldset[disabled] .c3 {
  background-color: #cdcdcd;
}

.c3 ~ .form-control-feedback.glyphicon {
  display: none;
}

.c6 {
  background-color: #fff;
  border-color: #cdcdcd;
}

.c6 .list-group-item-heading {
  font-weight: bold;
}

.c6.disabled,
.c6.disabled:hover,
.c6.disabled:focus {
  color: #9b9b9b;
  background-color: #e6e6e6;
}

.c6.disabled .list-group-item-heading,
.c6.disabled:hover .list-group-item-heading,
.c6.disabled:focus .list-group-item-heading {
  color: inherit;
  font-weight: bold;
}

.c6.disabled .list-group-item-text,
.c6.disabled:hover .list-group-item-text,
.c6.disabled:focus .list-group-item-text {
  color: #9b9b9b;
}

.c6.active,
.c6.active:hover,
.c6.active:focus {
  color: #ffffff;
  background-color: #8f699d;
  border-color: #8f699d;
  z-index: auto;
}

.c6.active .list-group-item-heading,
.c6.active:hover .list-group-item-heading,
.c6.active:focus .list-group-item-heading,
.c6.active .list-group-item-heading > small,
.c6.active:hover .list-group-item-heading > small,
.c6.active:focus .list-group-item-heading > small,
.c6.active .list-group-item-heading > .small,
.c6.active:hover .list-group-item-heading > .small,
.c6.active:focus .list-group-item-heading > .small {
  color: inherit;
  font-weight: bold;
}

.c6.active .list-group-item-text,
.c6.active:hover .list-group-item-text,
.c6.active:focus .list-group-item-text {
  color: #8f699d;
}

a.c6,
button.c6 {
  color: #702785;
}

a.c6 .list-group-item-heading,
button.c6 .list-group-item-heading {
  color: #383838;
  font-weight: bold;
}

a.c6:hover:not(.disabled),
button.c6:hover:not(.disabled),
a.c6:focus:not(.disabled),
button.c6:focus:not(.disabled) {
  background-color: #6a6a6a;
  color: #fff;
}

a.c6:hover:not(.disabled).active,
button.c6:hover:not(.disabled).active,
a.c6:focus:not(.disabled).active,
button.c6:focus:not(.disabled).active {
  color: #fff;
  border-color: #702785;
  background-color: #702785;
}

a.c6:hover:not(.disabled) .list-group-item-heading,
button.c6:hover:not(.disabled) .list-group-item-heading,
a.c6:focus:not(.disabled) .list-group-item-heading,
button.c6:focus:not(.disabled) .list-group-item-heading {
  color: #fff;
}

.c1 {
  background-color: #fff;
  border: 1px solid rgb(198,207,231);
  border-top: 0;
  border-radius: 0 0 4px 4px;
  padding: 9px;
}

.c0 .nav-tabs {
  border-bottom-color: rgb(198,207,231);
}

.c0 .nav-tabs > li > a {
  -webkit-transition: background-color 150ms ease-in-out;
  transition: background-color 150ms ease-in-out;
  color: #1f1f1f;
  border-color: #cdcdcd #cdcdcd rgb(198,207,231);
}

.c0 .nav-tabs > li > a:hover {
  background-color: #cdcdcd;
  color: rgb(46,46,46);
}

.c0 .nav-tabs > li.active > a,
.c0 .nav-tabs > li.active > a:hover,
.c0 .nav-tabs > li.active > a:focus {
  color: #1f1f1f;
  background-color: #ffffff;
  border-color: rgb(198,207,231);
  border-bottom-color: transparent;
}

.c0 .nav-tabs > li.disabled > a,
.c0 .nav-tabs > li.disabled > a:hover,
.c0 .nav-tabs > li.disabled > a:focus {
  color: #9b9b9b;
  background-color: #ffffff;
  border-color: #ffffff #ffffff rgb(198,207,231);
  cursor: not-allowed;
}

.c0.nav-justified > .active > a,
.c0.nav-justified > .active > a:hover,
.c0.nav-justified > .active > a:focus {
  border-color: rgb(198,207,231);
}

.c5 {
  background-color: #e6e6e6;
  font-size: 14px;
  padding: 0 15px;
}

.c5 .form-group {
  margin: 0;
}

@media (min-width:768px) {
  .c0.nav-justified > li > a {
    border-bottom-color: rgb(198,207,231);
  }

  .c0.nav-justified > .active > a,
  .c0.nav-justified > .active > a:hover,
  .c0.nav-justified > .active > a:focus {
    border-bottom-color: #ffffff;
  }
}

<PermissionSelector
  dashboards={
    Immutable.List [
      Object {
        "description": "dashboard1",
        "id": "01",
      },
      Object {
        "description": "dashboard2",
        "id": "02",
      },
    ]
  }
  onChange={[Function]}
  permissions={
    Immutable.Set [
      "streams:read:01",
      "streams:edit:02",
      "dashboards:read:02",
    ]
  }
  streams={
    Immutable.List [
      Object {
        "description": "stream1",
        "id": "01",
      },
      Object {
        "description": "stream2",
        "id": "02",
      },
    ]
  }
>
  <div>
    <Tabs
      animation={false}
      defaultActiveKey={1}
      id="permissionSelectorTabs"
    >
      <StyledComponent
        animation={false}
        defaultActiveKey={1}
        forwardedComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "ControlledComponent": [Function],
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "Tabs-sc-1hzj2zf-0",
              "isStatic": false,
              "lastClassName": "c0",
              "rules": Array [
                [Function],
                ";",
              ],
            },
            "deferControlTo": [Function],
            "displayName": "Tabs",
            "foldedComponentIds": Array [],
            "propTypes": Object {
              "activeKey": [Function],
              "defaultActiveKey": [Function],
              "innerRef": [Function],
            },
            "render": [Function],
            "styledComponentId": "Tabs-sc-1hzj2zf-0",
            "target": Object {
              "$$typeof": Symbol(react.forward_ref),
              "ControlledComponent": [Function],
              "deferControlTo": [Function],
              "propTypes": Object {
                "activeKey": [Function],
                "defaultActiveKey": [Function],
                "innerRef": [Function],
              },
              "render": [Function],
            },
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
        id="permissionSelectorTabs"
      >
        <ForwardRef
          animation={false}
          className="c0"
          defaultActiveKey={1}
          id="permissionSelectorTabs"
        >
          <Uncontrolled(Tabs)
            animation={false}
            className="c0"
            defaultActiveKey={1}
            id="permissionSelectorTabs"
            innerRef={null}
          >
            <Tabs
              activeKey={1}
              animation={false}
              bsClass="tab"
              bsStyle="tabs"
              className="c0"
              id="permissionSelectorTabs"
              mountOnEnter={false}
              onSelect={[Function]}
              unmountOnExit={false}
            >
              <TabContainer
                activeKey={1}
                className="c0"
                id="permissionSelectorTabs"
                onSelect={[Function]}
              >
                <div
                  className="c0"
                  id="permissionSelectorTabs"
                >
                  <Nav
                    bsClass="nav"
                    bsStyle="tabs"
                    justified={false}
                    pullLeft={false}
                    pullRight={false}
                    role="tablist"
                    stacked={false}
                  >
                    <ul
                      className="nav nav-tabs"
                      role="tablist"
                    >
                      <NavItem
                        active={true}
                        activeKey={1}
                        aria-controls="permissionSelectorTabs-pane-1"
                        disabled={false}
                        eventKey={1}
                        id="permissionSelectorTabs-tab-1"
                        key=".$.0"
                        onKeyDown={[Function]}
                        onSelect={[Function]}
                        role="tab"
                      >
                        <li
                          className="active"
                          role="presentation"
                        >
                          <SafeAnchor
                            aria-controls="permissionSelectorTabs-pane-1"
                            aria-selected={true}
                            componentClass="a"
                            disabled={false}
                            id="permissionSelectorTabs-tab-1"
                            onClick={[Function]}
                            onKeyDown={[Function]}
                            role="tab"
                          >
                            <a
                              aria-controls="permissionSelectorTabs-pane-1"
                              aria-selected={true}
                              href="#"
                              id="permissionSelectorTabs-tab-1"
                              onClick={[Function]}
                              onKeyDown={[Function]}
                              role="tab"
                            >
                              Streams
                            </a>
                          </SafeAnchor>
                        </li>
                      </NavItem>
                      <NavItem
                        active={false}
                        activeKey={1}
                        aria-controls="permissionSelectorTabs-pane-2"
                        disabled={false}
                        eventKey={2}
                        id="permissionSelectorTabs-tab-2"
                        key=".$.1"
                        onKeyDown={[Function]}
                        onSelect={[Function]}
                        role="tab"
                        tabIndex={-1}
                      >
                        <li
                          className=""
                          role="presentation"
                        >
                          <SafeAnchor
                            aria-controls="permissionSelectorTabs-pane-2"
                            aria-selected={false}
                            componentClass="a"
                            disabled={false}
                            id="permissionSelectorTabs-tab-2"
                            onClick={[Function]}
                            onKeyDown={[Function]}
                            role="tab"
                            tabIndex={-1}
                          >
                            <a
                              aria-controls="permissionSelectorTabs-pane-2"
                              aria-selected={false}
                              href="#"
                              id="permissionSelectorTabs-tab-2"
                              onClick={[Function]}
                              onKeyDown={[Function]}
                              role="tab"
                              tabIndex={-1}
                            >
                              Dashboards
                            </a>
                          </SafeAnchor>
                        </li>
                      </NavItem>
                    </ul>
                  </Nav>
                  <TabContent
                    animation={false}
                    bsClass="tab"
                    componentClass="div"
                    mountOnEnter={false}
                    unmountOnExit={false}
                  >
                    <div
                      className="tab-content"
                    >
                      <Tab
                        eventKey={1}
                        title="Streams"
                      >
                        <StyledComponent
                          eventKey={1}
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "Container": Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "ControlledComponent": [Function],
                                "deferControlTo": [Function],
                                "propTypes": Object {
                                  "activeKey": [Function],
                                  "defaultActiveKey": [Function],
                                  "innerRef": [Function],
                                },
                                "render": [Function],
                              },
                              "Content": [Function],
                              "Pane": [Function],
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "Tab-loa0kh-0",
                                "isStatic": false,
                                "lastClassName": "c1",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Tab",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "Tab-loa0kh-0",
                              "target": [Function],
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          title="Streams"
                        >
                          <Tab
                            className="c1"
                            eventKey={1}
                            title="Streams"
                          >
                            <TabPane
                              bsClass="tab-pane"
                              className="c1"
                              eventKey={1}
                            >
                              <div
                                aria-hidden={false}
                                aria-labelledby="permissionSelectorTabs-tab-1"
                                className="c1 tab-pane active"
                                id="permissionSelectorTabs-pane-1"
                                role="tabpanel"
                              >
                                <div
                                  style={
                                    Object {
                                      "marginTop": 10,
                                    }
                                  }
                                >
                                  <TableList
                                    bulkActionsFactory={[Function]}
                                    descriptionKey="description"
                                    enableBulkActions={true}
                                    enableFilter={true}
                                    filterKeys={
                                      Array [
                                        "title",
                                      ]
                                    }
                                    filterLabel="Filter Streams"
                                    idKey="id"
                                    itemActionsFactory={[Function]}
                                    items={
                                      Immutable.List [
                                        Object {
                                          "description": "stream1",
                                          "id": "01",
                                        },
                                        Object {
                                          "description": "stream2",
                                          "id": "02",
                                        },
                                      ]
                                    }
                                    titleKey="title"
                                  >
                                    <div>
                                      <Row
                                        bsClass="row"
                                        componentClass="div"
                                      >
                                        <div
                                          className="row"
                                        >
                                          <Col
                                            bsClass="col"
                                            componentClass="div"
                                            md={12}
                                          >
                                            <div
                                              className="col-md-12"
                                            >
                                              <TypeAheadDataFilter
                                                data={
                                                  Array [
                                                    Object {
                                                      "description": "stream1",
                                                      "id": "01",
                                                    },
                                                    Object {
                                                      "description": "stream2",
                                                      "id": "02",
                                                    },
                                                  ]
                                                }
                                                displayKey="value"
                                                filterBy=""
                                                filterSuggestionAccessor=""
                                                filterSuggestions={Array []}
                                                id="filter-streams-data-filter"
                                                label="Filter Streams"
                                                onDataFiltered={[Function]}
                                                searchInKeys={
                                                  Array [
                                                    "title",
                                                  ]
                                                }
                                              >
                                                <div
                                                  className="filter"
                                                >
                                                  <form
                                                    className="form-inline"
                                                    onSubmit={[Function]}
                                                    style={
                                                      Object {
                                                        "display": "inline",
                                                      }
                                                    }
                                                  >
                                                    <TypeAheadInput
                                                      displayKey="value"
                                                      id="filter-streams-data-filter"
                                                      label="Filter Streams"
                                                      onSuggestionSelected={[Function]}
                                                      suggestionText="Filter by : "
                                                      suggestions={Array []}
                                                    >
                                                      <Input
                                                        addonAfter={null}
                                                        bsStyle={null}
                                                        buttonAfter={null}
                                                        help=""
                                                        id="filter-streams-data-filter"
                                                        label="Filter Streams"
                                                        placeholder=""
                                                        type="text"
                                                        wrapperClassName="typeahead-wrapper"
                                                      >
                                                        <Component
                                                          controlId="filter-streams-data-filter"
                                                          validationState={null}
                                                        >
                                                          <FormGroup__StyledFormGroup
                                                            controlId="filter-streams-data-filter"
                                                            validationState={null}
                                                          >
                                                            <StyledComponent
                                                              controlId="filter-streams-data-filter"
                                                              forwardedComponent={
                                                                Object {
                                                                  "$$typeof": Symbol(react.forward_ref),
                                                                  "SIZES": Array [
                                                                    "large",
                                                                    "small",
                                                                  ],
                                                                  "attrs": Array [],
                                                                  "componentStyle": ComponentStyle {
                                                                    "componentId": "FormGroup__StyledFormGroup-sc-1wv4cm9-0",
                                                                    "isStatic": false,
                                                                    "lastClassName": "ekazNr",
                                                                    "rules": Array [
                                                                      [Function],
                                                                      ";",
                                                                    ],
                                                                  },
                                                                  "displayName": "FormGroup__StyledFormGroup",
                                                                  "foldedComponentIds": Array [],
                                                                  "render": [Function],
                                                                  "styledComponentId": "FormGroup__StyledFormGroup-sc-1wv4cm9-0",
                                                                  "target": [Function],
                                                                  "toString": [Function],
                                                                  "warnTooManyClasses": [Function],
                                                                  "withComponent": [Function],
                                                                }
                                                              }
                                                              forwardedRef={null}
                                                              validationState={null}
                                                            >
                                                              <FormGroup
                                                                bsClass="form-group"
                                                                className=""
                                                                controlId="filter-streams-data-filter"
                                                                validationState={null}
                                                              >
                                                                <div
                                                                  className="form-group"
                                                                >
                                                                  <ControlLabel>
                                                                    <StyledComponent
                                                                      forwardedComponent={
                                                                        Object {
                                                                          "$$typeof": Symbol(react.forward_ref),
                                                                          "attrs": Array [],
                                                                          "componentStyle": ComponentStyle {
                                                                            "componentId": "ControlLabel-sc-1edmum5-0",
                                                                            "isStatic": false,
                                                                            "lastClassName": "c2",
                                                                            "rules": Array [
                                                                              [Function],
                                                                            ],
                                                                          },
                                                                          "displayName": "ControlLabel",
                                                                          "foldedComponentIds": Array [],
                                                                          "render": [Function],
                                                                          "styledComponentId": "ControlLabel-sc-1edmum5-0",
                                                                          "target": [Function],
                                                                          "toString": [Function],
                                                                          "warnTooManyClasses": [Function],
                                                                          "withComponent": [Function],
                                                                        }
                                                                      }
                                                                      forwardedRef={null}
                                                                    >
                                                                      <ControlLabel
                                                                        bsClass="control-label"
                                                                        className="c2"
                                                                        srOnly={false}
                                                                      >
                                                                        <label
                                                                          className="c2 control-label"
                                                                          htmlFor="filter-streams-data-filter"
                                                                        >
                                                                          Filter Streams
                                                                        </label>
                                                                      </ControlLabel>
                                                                    </StyledComponent>
                                                                  </ControlLabel>
                                                                  <InputWrapper
                                                                    className="typeahead-wrapper"
                                                                  >
                                                                    <div
                                                                      className="typeahead-wrapper"
                                                                    >
                                                                      <FormControl
                                                                        componentClass="input"
                                                                        inputRef={[Function]}
                                                                        label="Filter Streams"
                                                                        name="filter-streams-data-filter"
                                                                        placeholder=""
                                                                        type="text"
                                                                      >
                                                                        <StyledComponent
                                                                          componentClass="input"
                                                                          forwardedComponent={
                                                                            Object {
                                                                              "$$typeof": Symbol(react.forward_ref),
                                                                              "Feedback": [Function],
                                                                              "SIZES": Array [
                                                                                "small",
                                                                                "large",
                                                                              ],
                                                                              "Static": [Function],
                                                                              "attrs": Array [],
                                                                              "componentStyle": ComponentStyle {
                                                                                "componentId": "FormControl-sc-1amoaox-0",
                                                                                "isStatic": false,
                                                                                "lastClassName": "c3",
                                                                                "rules": Array [
                                                                                  [Function],
                                                                                ],
                                                                              },
                                                                              "displayName": "FormControl",
                                                                              "foldedComponentIds": Array [],
                                                                              "render": [Function],
                                                                              "styledComponentId": "FormControl-sc-1amoaox-0",
                                                                              "target": [Function],
                                                                              "toString": [Function],
                                                                              "warnTooManyClasses": [Function],
                                                                              "withComponent": [Function],
                                                                            }
                                                                          }
                                                                          forwardedRef={null}
                                                                          inputRef={[Function]}
                                                                          label="Filter Streams"
                                                                          name="filter-streams-data-filter"
                                                                          placeholder=""
                                                                          type="text"
                                                                        >
                                                                          <FormControl
                                                                            bsClass="form-control"
                                                                            className="c3"
                                                                            componentClass="input"
                                                                            inputRef={[Function]}
                                                                            label="Filter Streams"
                                                                            name="filter-streams-data-filter"
                                                                            placeholder=""
                                                                            type="text"
                                                                          >
                                                                            <input
                                                                              className="c3 form-control"
                                                                              id="filter-streams-data-filter"
                                                                              label="Filter Streams"
                                                                              name="filter-streams-data-filter"
                                                                              placeholder=""
                                                                              type="text"
                                                                            />
                                                                          </FormControl>
                                                                        </StyledComponent>
                                                                      </FormControl>
                                                                    </div>
                                                                  </InputWrapper>
                                                                </div>
                                                              </FormGroup>
                                                            </StyledComponent>
                                                          </FormGroup__StyledFormGroup>
                                                        </Component>
                                                      </Input>
                                                    </TypeAheadInput>
                                                    <ForwardRef
                                                      bsStyle="default"
                                                      style={
                                                        Object {
                                                          "marginLeft": 5,
                                                        }
                                                      }
                                                      type="submit"
                                                    >
                                                      <Button__StyledButton
                                                        bsStyle="default"
                                                        style={
                                                          Object {
                                                            "marginLeft": 5,
                                                          }
                                                        }
                                                        type="submit"
                                                      >
                                                        <StyledComponent
                                                          bsStyle="default"
                                                          forwardedComponent={
                                                            Object {
                                                              "$$typeof": Symbol(react.forward_ref),
                                                              "SIZES": Array [
                                                                "large",
                                                                "small",
                                                                "xsmall",
                                                              ],
                                                              "STYLES": Array [
                                                                "success",
                                                                "warning",
                                                                "danger",
                                                                "info",
                                                                "default",
                                                                "primary",
                                                                "link",
                                                              ],
                                                              "attrs": Array [],
                                                              "componentStyle": ComponentStyle {
                                                                "componentId": "Button__StyledButton-c9cbmb-0",
                                                                "isStatic": false,
                                                                "lastClassName": "c4",
                                                                "rules": Array [
                                                                  [Function],
                                                                ],
                                                              },
                                                              "displayName": "Button__StyledButton",
                                                              "foldedComponentIds": Array [],
                                                              "render": [Function],
                                                              "styledComponentId": "Button__StyledButton-c9cbmb-0",
                                                              "target": [Function],
                                                              "toString": [Function],
                                                              "warnTooManyClasses": [Function],
                                                              "withComponent": [Function],
                                                            }
                                                          }
                                                          forwardedRef={null}
                                                          style={
                                                            Object {
                                                              "marginLeft": 5,
                                                            }
                                                          }
                                                          type="submit"
                                                        >
                                                          <Button
                                                            active={false}
                                                            block={false}
                                                            bsClass="btn"
                                                            bsStyle="default"
                                                            className="c4"
                                                            disabled={false}
                                                            style={
                                                              Object {
                                                                "marginLeft": 5,
                                                              }
                                                            }
                                                            type="submit"
                                                          >
                                                            <button
                                                              className="c4 btn btn-default"
                                                              disabled={false}
                                                              style={
                                                                Object {
                                                                  "marginLeft": 5,
                                                                }
                                                              }
                                                              type="submit"
                                                            >
                                                              Filter
                                                            </button>
                                                          </Button>
                                                        </StyledComponent>
                                                      </Button__StyledButton>
                                                    </ForwardRef>
                                                    <ForwardRef
                                                      bsStyle="default"
                                                      disabled={true}
                                                      onClick={[Function]}
                                                      style={
                                                        Object {
                                                          "marginLeft": 5,
                                                        }
                                                      }
                                                      type="button"
                                                    >
                                                      <Button__StyledButton
                                                        bsStyle="default"
                                                        disabled={true}
                                                        onClick={[Function]}
                                                        style={
                                                          Object {
                                                            "marginLeft": 5,
                                                          }
                                                        }
                                                        type="button"
                                                      >
                                                        <StyledComponent
                                                          bsStyle="default"
                                                          disabled={true}
                                                          forwardedComponent={
                                                            Object {
                                                              "$$typeof": Symbol(react.forward_ref),
                                                              "SIZES": Array [
                                                                "large",
                                                                "small",
                                                                "xsmall",
                                                              ],
                                                              "STYLES": Array [
                                                                "success",
                                                                "warning",
                                                                "danger",
                                                                "info",
                                                                "default",
                                                                "primary",
                                                                "link",
                                                              ],
                                                              "attrs": Array [],
                                                              "componentStyle": ComponentStyle {
                                                                "componentId": "Button__StyledButton-c9cbmb-0",
                                                                "isStatic": false,
                                                                "lastClassName": "c4",
                                                                "rules": Array [
                                                                  [Function],
                                                                ],
                                                              },
                                                              "displayName": "Button__StyledButton",
                                                              "foldedComponentIds": Array [],
                                                              "render": [Function],
                                                              "styledComponentId": "Button__StyledButton-c9cbmb-0",
                                                              "target": [Function],
                                                              "toString": [Function],
                                                              "warnTooManyClasses": [Function],
                                                              "withComponent": [Function],
                                                            }
                                                          }
                                                          forwardedRef={null}
                                                          onClick={[Function]}
                                                          style={
                                                            Object {
                                                              "marginLeft": 5,
                                                            }
                                                          }
                                                          type="button"
                                                        >
                                                          <Button
                                                            active={false}
                                                            block={false}
                                                            bsClass="btn"
                                                            bsStyle="default"
                                                            className="c4"
                                                            disabled={true}
                                                            onClick={[Function]}
                                                            style={
                                                              Object {
                                                                "marginLeft": 5,
                                                              }
                                                            }
                                                            type="button"
                                                          >
                                                            <button
                                                              className="c4 btn btn-default"
                                                              disabled={true}
                                                              onClick={[Function]}
                                                              style={
                                                                Object {
                                                                  "marginLeft": 5,
                                                                }
                                                              }
                                                              type="button"
                                                            >
                                                              Reset
                                                            </button>
                                                          </Button>
                                                        </StyledComponent>
                                                      </Button__StyledButton>
                                                    </ForwardRef>
                                                  </form>
                                                  <ul
                                                    className="pill-list"
                                                  >
                                                    <Component />
                                                  </ul>
                                                </div>
                                              </TypeAheadDataFilter>
                                            </div>
                                          </Col>
                                        </div>
                                      </Row>
                                      <ControlledTableList>
                                        <div>
                                          <ListGroup>
                                            <ListGroup
                                              bsClass="list-group"
                                            >
                                              <div
                                                className="list-group"
                                              >
                                                <ControlledTableListHeader>
                                                  <ControlledTableListHeader__StyledListGroupItem>
                                                    <StyledComponent
                                                      forwardedComponent={
                                                        Object {
                                                          "$$typeof": Symbol(react.forward_ref),
                                                          "attrs": Array [],
                                                          "componentStyle": ComponentStyle {
                                                            "componentId": "ControlledTableListHeader__StyledListGroupItem-tr2y34-0",
                                                            "isStatic": false,
                                                            "lastClassName": "c5",
                                                            "rules": Array [
                                                              [Function],
                                                            ],
                                                          },
                                                          "displayName": "ControlledTableListHeader__StyledListGroupItem",
                                                          "foldedComponentIds": Array [],
                                                          "propTypes": Object {
                                                            "bsStyle": [Function],
                                                          },
                                                          "render": [Function],
                                                          "styledComponentId": "ControlledTableListHeader__StyledListGroupItem-tr2y34-0",
                                                          "target": Object {
                                                            "$$typeof": Symbol(react.forward_ref),
                                                            "defaultProps": Object {
                                                              "bsStyle": undefined,
                                                            },
                                                            "propTypes": Object {
                                                              "bsStyle": [Function],
                                                            },
                                                            "render": [Function],
                                                          },
                                                          "toString": [Function],
                                                          "warnTooManyClasses": [Function],
                                                          "withComponent": [Function],
                                                        }
                                                      }
                                                      forwardedRef={null}
                                                    >
                                                      <ForwardRef
                                                        className="c5"
                                                      >
                                                        <ListGroupItem__StyledListGroupItem
                                                          className="c5"
                                                        >
                                                          <StyledComponent
                                                            className="c5"
                                                            forwardedComponent={
                                                              Object {
                                                                "$$typeof": Symbol(react.forward_ref),
                                                                "STYLES": Array [
                                                                  "success",
                                                                  "warning",
                                                                  "danger",
                                                                  "info",
                                                                ],
                                                                "attrs": Array [],
                                                                "componentStyle": ComponentStyle {
                                                                  "componentId": "ListGroupItem__StyledListGroupItem-sc-1ky0joo-0",
                                                                  "isStatic": false,
                                                                  "lastClassName": "c6",
                                                                  "rules": Array [
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "displayName": "ListGroupItem__StyledListGroupItem",
                                                                "foldedComponentIds": Array [],
                                                                "render": [Function],
                                                                "styledComponentId": "ListGroupItem__StyledListGroupItem-sc-1ky0joo-0",
                                                                "target": [Function],
                                                                "toString": [Function],
                                                                "warnTooManyClasses": [Function],
                                                                "withComponent": [Function],
                                                              }
                                                            }
                                                            forwardedRef={null}
                                                          >
                                                            <ListGroupItem
                                                              bsClass="list-group-item"
                                                              className="c6 c5"
                                                              listItem={false}
                                                            >
                                                              <span
                                                                className="c6 c5 list-group-item"
                                                              >
                                                                <Input
                                                                  addonAfter={null}
                                                                  bsStyle={null}
                                                                  buttonAfter={null}
                                                                  checked={false}
                                                                  disabled={false}
                                                                  help=""
                                                                  id="select-all-checkbox"
                                                                  label="Select all"
                                                                  onChange={[Function]}
                                                                  placeholder=""
                                                                  type="checkbox"
                                                                  wrapperClassName="form-group-inline"
                                                                >
                                                                  <Component
                                                                    controlId="select-all-checkbox"
                                                                    validationState={null}
                                                                  >
                                                                    <FormGroup__StyledFormGroup
                                                                      controlId="select-all-checkbox"
                                                                      validationState={null}
                                                                    >
                                                                      <StyledComponent
                                                                        controlId="select-all-checkbox"
                                                                        forwardedComponent={
                                                                          Object {
                                                                            "$$typeof": Symbol(react.forward_ref),
                                                                            "SIZES": Array [
                                                                              "large",
                                                                              "small",
                                                                            ],
                                                                            "attrs": Array [],
                                                                            "componentStyle": ComponentStyle {
                                                                              "componentId": "FormGroup__StyledFormGroup-sc-1wv4cm9-0",
                                                                              "isStatic": false,
                                                                              "lastClassName": "ekazNr",
                                                                              "rules": Array [
                                                                                [Function],
                                                                                ";",
                                                                              ],
                                                                            },
                                                                            "displayName": "FormGroup__StyledFormGroup",
                                                                            "foldedComponentIds": Array [],
                                                                            "render": [Function],
                                                                            "styledComponentId": "FormGroup__StyledFormGroup-sc-1wv4cm9-0",
                                                                            "target": [Function],
                                                                            "toString": [Function],
                                                                            "warnTooManyClasses": [Function],
                                                                            "withComponent": [Function],
                                                                          }
                                                                        }
                                                                        forwardedRef={null}
                                                                        validationState={null}
                                                                      >
                                                                        <FormGroup
                                                                          bsClass="form-group"
                                                                          className=""
                                                                          controlId="select-all-checkbox"
                                                                          validationState={null}
                                                                        >
                                                                          <div
                                                                            className="form-group"
                                                                          >
                                                                            <InputWrapper
                                                                              className="form-group-inline"
                                                                            >
                                                                              <div
                                                                                className="form-group-inline"
                                                                              >
                                                                                <Checkbox
                                                                                  bsClass="checkbox"
                                                                                  checked={false}
                                                                                  disabled={false}
                                                                                  inline={false}
                                                                                  inputRef={[Function]}
                                                                                  label="Select all"
                                                                                  name="select-all-checkbox"
                                                                                  onChange={[Function]}
                                                                                  placeholder=""
                                                                                  title=""
                                                                                  type="checkbox"
                                                                                >
                                                                                  <div
                                                                                    className="checkbox"
                                                                                  >
                                                                                    <label
                                                                                      title=""
                                                                                    >
                                                                                      <input
                                                                                        checked={false}
                                                                                        disabled={false}
                                                                                        label="Select all"
                                                                                        name="select-all-checkbox"
                                                                                        onChange={[Function]}
                                                                                        placeholder=""
                                                                                        type="checkbox"
                                                                                      />
                                                                                      Select all
                                                                                    </label>
                                                                                  </div>
                                                                                </Checkbox>
                                                                              </div>
                                                                            </InputWrapper>
                                                                          </div>
                                                                        </FormGroup>
                                                                      </StyledComponent>
                                                                    </FormGroup__StyledFormGroup>
                                                                  </Component>
                                                                </Input>
                                                              </span>
                                                            </ListGroupItem>
                                                          </StyledComponent>
                                                        </ListGroupItem__StyledListGroupItem>
                                                      </ForwardRef>
                                                    </StyledComponent>
                                                  </ControlledTableListHeader__StyledListGroupItem>
                                                </ControlledTableListHeader>
                                                <ControlledTableListItem
                                                  key="item-01"
                                                >
                                                  <ForwardRef>
                                                    <ListGroupItem__StyledListGroupItem>
                                                      <StyledComponent
                                                        forwardedComponent={
                                                          Object {
                                                            "$$typeof": Symbol(react.forward_ref),
                                                            "STYLES": Array [
                                                              "success",
                                                              "warning",
                                                              "danger",
                                                              "info",
                                                            ],
                                                            "attrs": Array [],
                                                            "componentStyle": ComponentStyle {
                                                              "componentId": "ListGroupItem__StyledListGroupItem-sc-1ky0joo-0",
                                                              "isStatic": false,
                                                              "lastClassName": "c6",
                                                              "rules": Array [
                                                                [Function],
                                                              ],
                                                            },
                                                            "displayName": "ListGroupItem__StyledListGroupItem",
                                                            "foldedComponentIds": Array [],
                                                            "render": [Function],
                                                            "styledComponentId": "ListGroupItem__StyledListGroupItem-sc-1ky0joo-0",
                                                            "target": [Function],
                                                            "toString": [Function],
                                                            "warnTooManyClasses": [Function],
                                                            "withComponent": [Function],
                                                          }
                                                        }
                                                        forwardedRef={null}
                                                      >
                                                        <ListGroupItem
                                                          bsClass="list-group-item"
                                                          className="c6"
                                                          listItem={false}
                                                        >
                                                          <span
                                                            className="c6 list-group-item"
                                                          >
                                                            <div
                                                              className="itemWrapper "
                                                            >
                                                              <div
                                                                className="itemActionsWrapper"
                                                              >
                                                                <ButtonGroup
                                                                  block={false}
                                                                  bsClass="btn-group"
                                                                  bsSize="small"
                                                                  justified={false}
                                                                  vertical={false}
                                                                >
                                                                  <div
                                                                    className="btn-group btn-group-sm"
                                                                  >
                                                                    <ForwardRef
                                                                      active={true}
                                                                      bsStyle="info"
                                                                      onClick={[Function]}
                                                                    >
                                                                      <Button__StyledButton
                                                                        active={true}
                                                                        bsStyle="info"
                                                                        onClick={[Function]}
                                                                      >
                                                                        <StyledComponent
                                                                          active={true}
                                                                          bsStyle="info"
                                                                          forwardedComponent={
                                                                            Object {
                                                                              "$$typeof": Symbol(react.forward_ref),
                                                                              "SIZES": Array [
                                                                                "large",
                                                                                "small",
                                                                                "xsmall",
                                                                              ],
                                                                              "STYLES": Array [
                                                                                "success",
                                                                                "warning",
                                                                                "danger",
                                                                                "info",
                                                                                "default",
                                                                                "primary",
                                                                                "link",
                                                                              ],
                                                                              "attrs": Array [],
                                                                              "componentStyle": ComponentStyle {
                                                                                "componentId": "Button__StyledButton-c9cbmb-0",
                                                                                "isStatic": false,
                                                                                "lastClassName": "c4",
                                                                                "rules": Array [
                                                                                  [Function],
                                                                                ],
                                                                              },
                                                                              "displayName": "Button__StyledButton",
                                                                              "foldedComponentIds": Array [],
                                                                              "render": [Function],
                                                                              "styledComponentId": "Button__StyledButton-c9cbmb-0",
                                                                              "target": [Function],
                                                                              "toString": [Function],
                                                                              "warnTooManyClasses": [Function],
                                                                              "withComponent": [Function],
                                                                            }
                                                                          }
                                                                          forwardedRef={null}
                                                                          onClick={[Function]}
                                                                        >
                                                                          <Button
                                                                            active={true}
                                                                            block={false}
                                                                            bsClass="btn"
                                                                            bsStyle="info"
                                                                            className="c4"
                                                                            disabled={false}
                                                                            onClick={[Function]}
                                                                          >
                                                                            <button
                                                                              className="c4 btn btn-info active"
                                                                              disabled={false}
                                                                              onClick={[Function]}
                                                                              type="button"
                                                                            >
                                                                              Allow reading
                                                                            </button>
                                                                          </Button>
                                                                        </StyledComponent>
                                                                      </Button__StyledButton>
                                                                    </ForwardRef>
                                                                    <ForwardRef
                                                                      active={false}
                                                                      bsStyle="default"
                                                                      onClick={[Function]}
                                                                    >
                                                                      <Button__StyledButton
                                                                        active={false}
                                                                        bsStyle="default"
                                                                        onClick={[Function]}
                                                                      >
                                                                        <StyledComponent
                                                                          active={false}
                                                                          bsStyle="default"
                                                                          forwardedComponent={
                                                                            Object {
                                                                              "$$typeof": Symbol(react.forward_ref),
                                                                              "SIZES": Array [
                                                                                "large",
                                                                                "small",
                                                                                "xsmall",
                                                                              ],
                                                                              "STYLES": Array [
                                                                                "success",
                                                                                "warning",
                                                                                "danger",
                                                                                "info",
                                                                                "default",
                                                                                "primary",
                                                                                "link",
                                                                              ],
                                                                              "attrs": Array [],
                                                                              "componentStyle": ComponentStyle {
                                                                                "componentId": "Button__StyledButton-c9cbmb-0",
                                                                                "isStatic": false,
                                                                                "lastClassName": "c4",
                                                                                "rules": Array [
                                                                                  [Function],
                                                                                ],
                                                                              },
                                                                              "displayName": "Button__StyledButton",
                                                                              "foldedComponentIds": Array [],
                                                                              "render": [Function],
                                                                              "styledComponentId": "Button__StyledButton-c9cbmb-0",
                                                                              "target": [Function],
                                                                              "toString": [Function],
                                                                              "warnTooManyClasses": [Function],
                                                                              "withComponent": [Function],
                                                                            }
                                                                          }
                                                                          forwardedRef={null}
                                                                          onClick={[Function]}
                                                                        >
                                                                          <Button
                                                                            active={false}
                                                                            block={false}
                                                                            bsClass="btn"
                                                                            bsStyle="default"
                                                                            className="c4"
                                                                            disabled={false}
                                                                            onClick={[Function]}
                                                                          >
                                                                            <button
                                                                              className="c4 btn btn-default"
                                                                              disabled={false}
                                                                              onClick={[Function]}
                                                                              type="button"
                                                                            >
                                                                              Allow editing
                                                                            </button>
                                                                          </Button>
                                                                        </StyledComponent>
                                                                      </Button__StyledButton>
                                                                    </ForwardRef>
                                                                  </div>
                                                                </ButtonGroup>
                                                              </div>
                                                              <Input
                                                                addonAfter={null}
                                                                bsStyle={null}
                                                                buttonAfter={null}
                                                                checked={false}
                                                                help=""
                                                                id="id-checkbox"
                                                                label=""
                                                                onChange={[Function]}
                                                                placeholder=""
                                                                type="checkbox"
                                                                wrapperClassName="form-group-inline"
                                                              >
                                                                <Component
                                                                  controlId="id-checkbox"
                                                                  validationState={null}
                                                                >
                                                                  <FormGroup__StyledFormGroup
                                                                    controlId="id-checkbox"
                                                                    validationState={null}
                                                                  >
                                                                    <StyledComponent
                                                                      controlId="id-checkbox"
                                                                      forwardedComponent={
                                                                        Object {
                                                                          "$$typeof": Symbol(react.forward_ref),
                                                                          "SIZES": Array [
                                                                            "large",
                                                                            "small",
                                                                          ],
                                                                          "attrs": Array [],
                                                                          "componentStyle": ComponentStyle {
                                                                            "componentId": "FormGroup__StyledFormGroup-sc-1wv4cm9-0",
                                                                            "isStatic": false,
                                                                            "lastClassName": "ekazNr",
                                                                            "rules": Array [
                                                                              [Function],
                                                                              ";",
                                                                            ],
                                                                          },
                                                                          "displayName": "FormGroup__StyledFormGroup",
                                                                          "foldedComponentIds": Array [],
                                                                          "render": [Function],
                                                                          "styledComponentId": "FormGroup__StyledFormGroup-sc-1wv4cm9-0",
                                                                          "target": [Function],
                                                                          "toString": [Function],
                                                                          "warnTooManyClasses": [Function],
                                                                          "withComponent": [Function],
                                                                        }
                                                                      }
                                                                      forwardedRef={null}
                                                                      validationState={null}
                                                                    >
                                                                      <FormGroup
                                                                        bsClass="form-group"
                                                                        className=""
                                                                        controlId="id-checkbox"
                                                                        validationState={null}
                                                                      >
                                                                        <div
                                                                          className="form-group"
                                                                        >
                                                                          <InputWrapper
                                                                            className="form-group-inline"
                                                                          >
                                                                            <div
                                                                              className="form-group-inline"
                                                                            >
                                                                              <Checkbox
                                                                                bsClass="checkbox"
                                                                                checked={false}
                                                                                disabled={false}
                                                                                inline={false}
                                                                                inputRef={[Function]}
                                                                                label=""
                                                                                name="id-checkbox"
                                                                                onChange={[Function]}
                                                                                placeholder=""
                                                                                title=""
                                                                                type="checkbox"
                                                                              >
                                                                                <div
                                                                                  className="checkbox"
                                                                                >
                                                                                  <label
                                                                                    title=""
                                                                                  >
                                                                                    <input
                                                                                      checked={false}
                                                                                      disabled={false}
                                                                                      label=""
                                                                                      name="id-checkbox"
                                                                                      onChange={[Function]}
                                                                                      placeholder=""
                                                                                      type="checkbox"
                                                                                    />
                                                                                  </label>
                                                                                </div>
                                                                              </Checkbox>
                                                                            </div>
                                                                          </InputWrapper>
                                                                        </div>
                                                                      </FormGroup>
                                                                    </StyledComponent>
                                                                  </FormGroup__StyledFormGroup>
                                                                </Component>
                                                              </Input>
                                                              <span
                                                                className="description"
                                                              >
                                                                stream1
                                                              </span>
                                                            </div>
                                                          </span>
                                                        </ListGroupItem>
                                                      </StyledComponent>
                                                    </ListGroupItem__StyledListGroupItem>
                                                  </ForwardRef>
                                                </ControlledTableListItem>
                                                <ControlledTableListItem
                                                  key="item-02"
                                                >
                                                  <ForwardRef>
                                                    <ListGroupItem__StyledListGroupItem>
                                                      <StyledComponent
                                                        forwardedComponent={
                                                          Object {
                                                            "$$typeof": Symbol(react.forward_ref),
                                                            "STYLES": Array [
                                                              "success",
                                                              "warning",
                                                              "danger",
                                                              "info",
                                                            ],
                                                            "attrs": Array [],
                                                            "componentStyle": ComponentStyle {
                                                              "componentId": "ListGroupItem__StyledListGroupItem-sc-1ky0joo-0",
                                                              "isStatic": false,
                                                              "lastClassName": "c6",
                                                              "rules": Array [
                                                                [Function],
                                                              ],
                                                            },
                                                            "displayName": "ListGroupItem__StyledListGroupItem",
                                                            "foldedComponentIds": Array [],
                                                            "render": [Function],
                                                            "styledComponentId": "ListGroupItem__StyledListGroupItem-sc-1ky0joo-0",
                                                            "target": [Function],
                                                            "toString": [Function],
                                                            "warnTooManyClasses": [Function],
                                                            "withComponent": [Function],
                                                          }
                                                        }
                                                        forwardedRef={null}
                                                      >
                                                        <ListGroupItem
                                                          bsClass="list-group-item"
                                                          className="c6"
                                                          listItem={false}
                                                        >
                                                          <span
                                                            className="c6 list-group-item"
                                                          >
                                                            <div
                                                              className="itemWrapper "
                                                            >
                                                              <div
                                                                className="itemActionsWrapper"
                                                              >
                                                                <ButtonGroup
                                                                  block={false}
                                                                  bsClass="btn-group"
                                                                  bsSize="small"
                                                                  justified={false}
                                                                  vertical={false}
                                                                >
                                                                  <div
                                                                    className="btn-group btn-group-sm"
                                                                  >
                                                                    <ForwardRef
                                                                      active={false}
                                                                      bsStyle="default"
                                                                      onClick={[Function]}
                                                                    >
                                                                      <Button__StyledButton
                                                                        active={false}
                                                                        bsStyle="default"
                                                                        onClick={[Function]}
                                                                      >
                                                                        <StyledComponent
                                                                          active={false}
                                                                          bsStyle="default"
                                                                          forwardedComponent={
                                                                            Object {
                                                                              "$$typeof": Symbol(react.forward_ref),
                                                                              "SIZES": Array [
                                                                                "large",
                                                                                "small",
                                                                                "xsmall",
                                                                              ],
                                                                              "STYLES": Array [
                                                                                "success",
                                                                                "warning",
                                                                                "danger",
                                                                                "info",
                                                                                "default",
                                                                                "primary",
                                                                                "link",
                                                                              ],
                                                                              "attrs": Array [],
                                                                              "componentStyle": ComponentStyle {
                                                                                "componentId": "Button__StyledButton-c9cbmb-0",
                                                                                "isStatic": false,
                                                                                "lastClassName": "c4",
                                                                                "rules": Array [
                                                                                  [Function],
                                                                                ],
                                                                              },
                                                                              "displayName": "Button__StyledButton",
                                                                              "foldedComponentIds": Array [],
                                                                              "render": [Function],
                                                                              "styledComponentId": "Button__StyledButton-c9cbmb-0",
                                                                              "target": [Function],
                                                                              "toString": [Function],
                                                                              "warnTooManyClasses": [Function],
                                                                              "withComponent": [Function],
                                                                            }
                                                                          }
                                                                          forwardedRef={null}
                                                                          onClick={[Function]}
                                                                        >
                                                                          <Button
                                                                            active={false}
                                                                            block={false}
                                                                            bsClass="btn"
                                                                            bsStyle="default"
                                                                            className="c4"
                                                                            disabled={false}
                                                                            onClick={[Function]}
                                                                          >
                                                                            <button
                                                                              className="c4 btn btn-default"
                                                                              disabled={false}
                                                                              onClick={[Function]}
                                                                              type="button"
                                                                            >
                                                                              Allow reading
                                                                            </button>
                                                                          </Button>
                                                                        </StyledComponent>
                                                                      </Button__StyledButton>
                                                                    </ForwardRef>
                                                                    <ForwardRef
                                                                      active={true}
                                                                      bsStyle="info"
                                                                      onClick={[Function]}
                                                                    >
                                                                      <Button__StyledButton
                                                                        active={true}
                                                                        bsStyle="info"
                                                                        onClick={[Function]}
                                                                      >
                                                                        <StyledComponent
                                                                          active={true}
                                                                          bsStyle="info"
                                                                          forwardedComponent={
                                                                            Object {
                                                                              "$$typeof": Symbol(react.forward_ref),
                                                                              "SIZES": Array [
                                                                                "large",
                                                                                "small",
                                                                                "xsmall",
                                                                              ],
                                                                              "STYLES": Array [
                                                                                "success",
                                                                                "warning",
                                                                                "danger",
                                                                                "info",
                                                                                "default",
                                                                                "primary",
                                                                                "link",
                                                                              ],
                                                                              "attrs": Array [],
                                                                              "componentStyle": ComponentStyle {
                                                                                "componentId": "Button__StyledButton-c9cbmb-0",
                                                                                "isStatic": false,
                                                                                "lastClassName": "c4",
                                                                                "rules": Array [
                                                                                  [Function],
                                                                                ],
                                                                              },
                                                                              "displayName": "Button__StyledButton",
                                                                              "foldedComponentIds": Array [],
                                                                              "render": [Function],
                                                                              "styledComponentId": "Button__StyledButton-c9cbmb-0",
                                                                              "target": [Function],
                                                                              "toString": [Function],
                                                                              "warnTooManyClasses": [Function],
                                                                              "withComponent": [Function],
                                                                            }
                                                                          }
                                                                          forwardedRef={null}
                                                                          onClick={[Function]}
                                                                        >
                                                                          <Button
                                                                            active={true}
                                                                            block={false}
                                                                            bsClass="btn"
                                                                            bsStyle="info"
                                                                            className="c4"
                                                                            disabled={false}
                                                                            onClick={[Function]}
                                                                          >
                                                                            <button
                                                                              className="c4 btn btn-info active"
                                                                              disabled={false}
                                                                              onClick={[Function]}
                                                                              type="button"
                                                                            >
                                                                              Allow editing
                                                                            </button>
                                                                          </Button>
                                                                        </StyledComponent>
                                                                      </Button__StyledButton>
                                                                    </ForwardRef>
                                                                  </div>
                                                                </ButtonGroup>
                                                              </div>
                                                              <Input
                                                                addonAfter={null}
                                                                bsStyle={null}
                                                                buttonAfter={null}
                                                                checked={false}
                                                                help=""
                                                                id="id-checkbox"
                                                                label=""
                                                                onChange={[Function]}
                                                                placeholder=""
                                                                type="checkbox"
                                                                wrapperClassName="form-group-inline"
                                                              >
                                                                <Component
                                                                  controlId="id-checkbox"
                                                                  validationState={null}
                                                                >
                                                                  <FormGroup__StyledFormGroup
                                                                    controlId="id-checkbox"
                                                                    validationState={null}
                                                                  >
                                                                    <StyledComponent
                                                                      controlId="id-checkbox"
                                                                      forwardedComponent={
                                                                        Object {
                                                                          "$$typeof": Symbol(react.forward_ref),
                                                                          "SIZES": Array [
                                                                            "large",
                                                                            "small",
                                                                          ],
                                                                          "attrs": Array [],
                                                                          "componentStyle": ComponentStyle {
                                                                            "componentId": "FormGroup__StyledFormGroup-sc-1wv4cm9-0",
                                                                            "isStatic": false,
                                                                            "lastClassName": "ekazNr",
                                                                            "rules": Array [
                                                                              [Function],
                                                                              ";",
                                                                            ],
                                                                          },
                                                                          "displayName": "FormGroup__StyledFormGroup",
                                                                          "foldedComponentIds": Array [],
                                                                          "render": [Function],
                                                                          "styledComponentId": "FormGroup__StyledFormGroup-sc-1wv4cm9-0",
                                                                          "target": [Function],
                                                                          "toString": [Function],
                                                                          "warnTooManyClasses": [Function],
                                                                          "withComponent": [Function],
                                                                        }
                                                                      }
                                                                      forwardedRef={null}
                                                                      validationState={null}
                                                                    >
                                                                      <FormGroup
                                                                        bsClass="form-group"
                                                                        className=""
                                                                        controlId="id-checkbox"
                                                                        validationState={null}
                                                                      >
                                                                        <div
                                                                          className="form-group"
                                                                        >
                                                                          <InputWrapper
                                                                            className="form-group-inline"
                                                                          >
                                                                            <div
                                                                              className="form-group-inline"
                                                                            >
                                                                              <Checkbox
                                                                                bsClass="checkbox"
                                                                                checked={false}
                                                                                disabled={false}
                                                                                inline={false}
                                                                                inputRef={[Function]}
                                                                                label=""
                                                                                name="id-checkbox"
                                                                                onChange={[Function]}
                                                                                placeholder=""
                                                                                title=""
                                                                                type="checkbox"
                                                                              >
                                                                                <div
                                                                                  className="checkbox"
                                                                                >
                                                                                  <label
                                                                                    title=""
                                                                                  >
                                                                                    <input
                                                                                      checked={false}
                                                                                      disabled={false}
                                                                                      label=""
                                                                                      name="id-checkbox"
                                                                                      onChange={[Function]}
                                                                                      placeholder=""
                                                                                      type="checkbox"
                                                                                    />
                                                                                  </label>
                                                                                </div>
                                                                              </Checkbox>
                                                                            </div>
                                                                          </InputWrapper>
                                                                        </div>
                                                                      </FormGroup>
                                                                    </StyledComponent>
                                                                  </FormGroup__StyledFormGroup>
                                                                </Component>
                                                              </Input>
                                                              <span
                                                                className="description"
                                                              >
                                                                stream2
                                                              </span>
                                                            </div>
                                                          </span>
                                                        </ListGroupItem>
                                                      </StyledComponent>
                                                    </ListGroupItem__StyledListGroupItem>
                                                  </ForwardRef>
                                                </ControlledTableListItem>
                                              </div>
                                            </ListGroup>
                                          </ListGroup>
                                        </div>
                                      </ControlledTableList>
                                    </div>
                                  </TableList>
                                </div>
                              </div>
                            </TabPane>
                          </Tab>
                        </StyledComponent>
                      </Tab>
                      <Tab
                        eventKey={2}
                        title="Dashboards"
                      >
                        <StyledComponent
                          eventKey={2}
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "Container": Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "ControlledComponent": [Function],
                                "deferControlTo": [Function],
                                "propTypes": Object {
                                  "activeKey": [Function],
                                  "defaultActiveKey": [Function],
                                  "innerRef": [Function],
                                },
                                "render": [Function],
                              },
                              "Content": [Function],
                              "Pane": [Function],
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "Tab-loa0kh-0",
                                "isStatic": false,
                                "lastClassName": "c1",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Tab",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "Tab-loa0kh-0",
                              "target": [Function],
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          title="Dashboards"
                        >
                          <Tab
                            className="c1"
                            eventKey={2}
                            title="Dashboards"
                          >
                            <TabPane
                              bsClass="tab-pane"
                              className="c1"
                              eventKey={2}
                            >
                              <div
                                aria-hidden={true}
                                aria-labelledby="permissionSelectorTabs-tab-2"
                                className="c1 tab-pane"
                                id="permissionSelectorTabs-pane-2"
                                role="tabpanel"
                              >
                                <div
                                  style={
                                    Object {
                                      "marginTop": 10,
                                    }
                                  }
                                >
                                  <TableList
                                    bulkActionsFactory={[Function]}
                                    descriptionKey="description"
                                    enableBulkActions={true}
                                    enableFilter={true}
                                    filterKeys={
                                      Array [
                                        "title",
                                      ]
                                    }
                                    filterLabel="Filter Dashboards"
                                    idKey="id"
                                    itemActionsFactory={[Function]}
                                    items={
                                      Immutable.List [
                                        Object {
                                          "description": "dashboard1",
                                          "id": "01",
                                        },
                                        Object {
                                          "description": "dashboard2",
                                          "id": "02",
                                        },
                                      ]
                                    }
                                    titleKey="title"
                                  >
                                    <div>
                                      <Row
                                        bsClass="row"
                                        componentClass="div"
                                      >
                                        <div
                                          className="row"
                                        >
                                          <Col
                                            bsClass="col"
                                            componentClass="div"
                                            md={12}
                                          >
                                            <div
                                              className="col-md-12"
                                            >
                                              <TypeAheadDataFilter
                                                data={
                                                  Array [
                                                    Object {
                                                      "description": "dashboard1",
                                                      "id": "01",
                                                    },
                                                    Object {
                                                      "description": "dashboard2",
                                                      "id": "02",
                                                    },
                                                  ]
                                                }
                                                displayKey="value"
                                                filterBy=""
                                                filterSuggestionAccessor=""
                                                filterSuggestions={Array []}
                                                id="filter-dashboards-data-filter"
                                                label="Filter Dashboards"
                                                onDataFiltered={[Function]}
                                                searchInKeys={
                                                  Array [
                                                    "title",
                                                  ]
                                                }
                                              >
                                                <div
                                                  className="filter"
                                                >
                                                  <form
                                                    className="form-inline"
                                                    onSubmit={[Function]}
                                                    style={
                                                      Object {
                                                        "display": "inline",
                                                      }
                                                    }
                                                  >
                                                    <TypeAheadInput
                                                      displayKey="value"
                                                      id="filter-dashboards-data-filter"
                                                      label="Filter Dashboards"
                                                      onSuggestionSelected={[Function]}
                                                      suggestionText="Filter by : "
                                                      suggestions={Array []}
                                                    >
                                                      <Input
                                                        addonAfter={null}
                                                        bsStyle={null}
                                                        buttonAfter={null}
                                                        help=""
                                                        id="filter-dashboards-data-filter"
                                                        label="Filter Dashboards"
                                                        placeholder=""
                                                        type="text"
                                                        wrapperClassName="typeahead-wrapper"
                                                      >
                                                        <Component
                                                          controlId="filter-dashboards-data-filter"
                                                          validationState={null}
                                                        >
                                                          <FormGroup__StyledFormGroup
                                                            controlId="filter-dashboards-data-filter"
                                                            validationState={null}
                                                          >
                                                            <StyledComponent
                                                              controlId="filter-dashboards-data-filter"
                                                              forwardedComponent={
                                                                Object {
                                                                  "$$typeof": Symbol(react.forward_ref),
                                                                  "SIZES": Array [
                                                                    "large",
                                                                    "small",
                                                                  ],
                                                                  "attrs": Array [],
                                                                  "componentStyle": ComponentStyle {
                                                                    "componentId": "FormGroup__StyledFormGroup-sc-1wv4cm9-0",
                                                                    "isStatic": false,
                                                                    "lastClassName": "ekazNr",
                                                                    "rules": Array [
                                                                      [Function],
                                                                      ";",
                                                                    ],
                                                                  },
                                                                  "displayName": "FormGroup__StyledFormGroup",
                                                                  "foldedComponentIds": Array [],
                                                                  "render": [Function],
                                                                  "styledComponentId": "FormGroup__StyledFormGroup-sc-1wv4cm9-0",
                                                                  "target": [Function],
                                                                  "toString": [Function],
                                                                  "warnTooManyClasses": [Function],
                                                                  "withComponent": [Function],
                                                                }
                                                              }
                                                              forwardedRef={null}
                                                              validationState={null}
                                                            >
                                                              <FormGroup
                                                                bsClass="form-group"
                                                                className=""
                                                                controlId="filter-dashboards-data-filter"
                                                                validationState={null}
                                                              >
                                                                <div
                                                                  className="form-group"
                                                                >
                                                                  <ControlLabel>
                                                                    <StyledComponent
                                                                      forwardedComponent={
                                                                        Object {
                                                                          "$$typeof": Symbol(react.forward_ref),
                                                                          "attrs": Array [],
                                                                          "componentStyle": ComponentStyle {
                                                                            "componentId": "ControlLabel-sc-1edmum5-0",
                                                                            "isStatic": false,
                                                                            "lastClassName": "c2",
                                                                            "rules": Array [
                                                                              [Function],
                                                                            ],
                                                                          },
                                                                          "displayName": "ControlLabel",
                                                                          "foldedComponentIds": Array [],
                                                                          "render": [Function],
                                                                          "styledComponentId": "ControlLabel-sc-1edmum5-0",
                                                                          "target": [Function],
                                                                          "toString": [Function],
                                                                          "warnTooManyClasses": [Function],
                                                                          "withComponent": [Function],
                                                                        }
                                                                      }
                                                                      forwardedRef={null}
                                                                    >
                                                                      <ControlLabel
                                                                        bsClass="control-label"
                                                                        className="c2"
                                                                        srOnly={false}
                                                                      >
                                                                        <label
                                                                          className="c2 control-label"
                                                                          htmlFor="filter-dashboards-data-filter"
                                                                        >
                                                                          Filter Dashboards
                                                                        </label>
                                                                      </ControlLabel>
                                                                    </StyledComponent>
                                                                  </ControlLabel>
                                                                  <InputWrapper
                                                                    className="typeahead-wrapper"
                                                                  >
                                                                    <div
                                                                      className="typeahead-wrapper"
                                                                    >
                                                                      <FormControl
                                                                        componentClass="input"
                                                                        inputRef={[Function]}
                                                                        label="Filter Dashboards"
                                                                        name="filter-dashboards-data-filter"
                                                                        placeholder=""
                                                                        type="text"
                                                                      >
                                                                        <StyledComponent
                                                                          componentClass="input"
                                                                          forwardedComponent={
                                                                            Object {
                                                                              "$$typeof": Symbol(react.forward_ref),
                                                                              "Feedback": [Function],
                                                                              "SIZES": Array [
                                                                                "small",
                                                                                "large",
                                                                              ],
                                                                              "Static": [Function],
                                                                              "attrs": Array [],
                                                                              "componentStyle": ComponentStyle {
                                                                                "componentId": "FormControl-sc-1amoaox-0",
                                                                                "isStatic": false,
                                                                                "lastClassName": "c3",
                                                                                "rules": Array [
                                                                                  [Function],
                                                                                ],
                                                                              },
                                                                              "displayName": "FormControl",
                                                                              "foldedComponentIds": Array [],
                                                                              "render": [Function],
                                                                              "styledComponentId": "FormControl-sc-1amoaox-0",
                                                                              "target": [Function],
                                                                              "toString": [Function],
                                                                              "warnTooManyClasses": [Function],
                                                                              "withComponent": [Function],
                                                                            }
                                                                          }
                                                                          forwardedRef={null}
                                                                          inputRef={[Function]}
                                                                          label="Filter Dashboards"
                                                                          name="filter-dashboards-data-filter"
                                                                          placeholder=""
                                                                          type="text"
                                                                        >
                                                                          <FormControl
                                                                            bsClass="form-control"
                                                                            className="c3"
                                                                            componentClass="input"
                                                                            inputRef={[Function]}
                                                                            label="Filter Dashboards"
                                                                            name="filter-dashboards-data-filter"
                                                                            placeholder=""
                                                                            type="text"
                                                                          >
                                                                            <input
                                                                              className="c3 form-control"
                                                                              id="filter-dashboards-data-filter"
                                                                              label="Filter Dashboards"
                                                                              name="filter-dashboards-data-filter"
                                                                              placeholder=""
                                                                              type="text"
                                                                            />
                                                                          </FormControl>
                                                                        </StyledComponent>
                                                                      </FormControl>
                                                                    </div>
                                                                  </InputWrapper>
                                                                </div>
                                                              </FormGroup>
                                                            </StyledComponent>
                                                          </FormGroup__StyledFormGroup>
                                                        </Component>
                                                      </Input>
                                                    </TypeAheadInput>
                                                    <ForwardRef
                                                      bsStyle="default"
                                                      style={
                                                        Object {
                                                          "marginLeft": 5,
                                                        }
                                                      }
                                                      type="submit"
                                                    >
                                                      <Button__StyledButton
                                                        bsStyle="default"
                                                        style={
                                                          Object {
                                                            "marginLeft": 5,
                                                          }
                                                        }
                                                        type="submit"
                                                      >
                                                        <StyledComponent
                                                          bsStyle="default"
                                                          forwardedComponent={
                                                            Object {
                                                              "$$typeof": Symbol(react.forward_ref),
                                                              "SIZES": Array [
                                                                "large",
                                                                "small",
                                                                "xsmall",
                                                              ],
                                                              "STYLES": Array [
                                                                "success",
                                                                "warning",
                                                                "danger",
                                                                "info",
                                                                "default",
                                                                "primary",
                                                                "link",
                                                              ],
                                                              "attrs": Array [],
                                                              "componentStyle": ComponentStyle {
                                                                "componentId": "Button__StyledButton-c9cbmb-0",
                                                                "isStatic": false,
                                                                "lastClassName": "c4",
                                                                "rules": Array [
                                                                  [Function],
                                                                ],
                                                              },
                                                              "displayName": "Button__StyledButton",
                                                              "foldedComponentIds": Array [],
                                                              "render": [Function],
                                                              "styledComponentId": "Button__StyledButton-c9cbmb-0",
                                                              "target": [Function],
                                                              "toString": [Function],
                                                              "warnTooManyClasses": [Function],
                                                              "withComponent": [Function],
                                                            }
                                                          }
                                                          forwardedRef={null}
                                                          style={
                                                            Object {
                                                              "marginLeft": 5,
                                                            }
                                                          }
                                                          type="submit"
                                                        >
                                                          <Button
                                                            active={false}
                                                            block={false}
                                                            bsClass="btn"
                                                            bsStyle="default"
                                                            className="c4"
                                                            disabled={false}
                                                            style={
                                                              Object {
                                                                "marginLeft": 5,
                                                              }
                                                            }
                                                            type="submit"
                                                          >
                                                            <button
                                                              className="c4 btn btn-default"
                                                              disabled={false}
                                                              style={
                                                                Object {
                                                                  "marginLeft": 5,
                                                                }
                                                              }
                                                              type="submit"
                                                            >
                                                              Filter
                                                            </button>
                                                          </Button>
                                                        </StyledComponent>
                                                      </Button__StyledButton>
                                                    </ForwardRef>
                                                    <ForwardRef
                                                      bsStyle="default"
                                                      disabled={true}
                                                      onClick={[Function]}
                                                      style={
                                                        Object {
                                                          "marginLeft": 5,
                                                        }
                                                      }
                                                      type="button"
                                                    >
                                                      <Button__StyledButton
                                                        bsStyle="default"
                                                        disabled={true}
                                                        onClick={[Function]}
                                                        style={
                                                          Object {
                                                            "marginLeft": 5,
                                                          }
                                                        }
                                                        type="button"
                                                      >
                                                        <StyledComponent
                                                          bsStyle="default"
                                                          disabled={true}
                                                          forwardedComponent={
                                                            Object {
                                                              "$$typeof": Symbol(react.forward_ref),
                                                              "SIZES": Array [
                                                                "large",
                                                                "small",
                                                                "xsmall",
                                                              ],
                                                              "STYLES": Array [
                                                                "success",
                                                                "warning",
                                                                "danger",
                                                                "info",
                                                                "default",
                                                                "primary",
                                                                "link",
                                                              ],
                                                              "attrs": Array [],
                                                              "componentStyle": ComponentStyle {
                                                                "componentId": "Button__StyledButton-c9cbmb-0",
                                                                "isStatic": false,
                                                                "lastClassName": "c4",
                                                                "rules": Array [
                                                                  [Function],
                                                                ],
                                                              },
                                                              "displayName": "Button__StyledButton",
                                                              "foldedComponentIds": Array [],
                                                              "render": [Function],
                                                              "styledComponentId": "Button__StyledButton-c9cbmb-0",
                                                              "target": [Function],
                                                              "toString": [Function],
                                                              "warnTooManyClasses": [Function],
                                                              "withComponent": [Function],
                                                            }
                                                          }
                                                          forwardedRef={null}
                                                          onClick={[Function]}
                                                          style={
                                                            Object {
                                                              "marginLeft": 5,
                                                            }
                                                          }
                                                          type="button"
                                                        >
                                                          <Button
                                                            active={false}
                                                            block={false}
                                                            bsClass="btn"
                                                            bsStyle="default"
                                                            className="c4"
                                                            disabled={true}
                                                            onClick={[Function]}
                                                            style={
                                                              Object {
                                                                "marginLeft": 5,
                                                              }
                                                            }
                                                            type="button"
                                                          >
                                                            <button
                                                              className="c4 btn btn-default"
                                                              disabled={true}
                                                              onClick={[Function]}
                                                              style={
                                                                Object {
                                                                  "marginLeft": 5,
                                                                }
                                                              }
                                                              type="button"
                                                            >
                                                              Reset
                                                            </button>
                                                          </Button>
                                                        </StyledComponent>
                                                      </Button__StyledButton>
                                                    </ForwardRef>
                                                  </form>
                                                  <ul
                                                    className="pill-list"
                                                  >
                                                    <Component />
                                                  </ul>
                                                </div>
                                              </TypeAheadDataFilter>
                                            </div>
                                          </Col>
                                        </div>
                                      </Row>
                                      <ControlledTableList>
                                        <div>
                                          <ListGroup>
                                            <ListGroup
                                              bsClass="list-group"
                                            >
                                              <div
                                                className="list-group"
                                              >
                                                <ControlledTableListHeader>
                                                  <ControlledTableListHeader__StyledListGroupItem>
                                                    <StyledComponent
                                                      forwardedComponent={
                                                        Object {
                                                          "$$typeof": Symbol(react.forward_ref),
                                                          "attrs": Array [],
                                                          "componentStyle": ComponentStyle {
                                                            "componentId": "ControlledTableListHeader__StyledListGroupItem-tr2y34-0",
                                                            "isStatic": false,
                                                            "lastClassName": "c5",
                                                            "rules": Array [
                                                              [Function],
                                                            ],
                                                          },
                                                          "displayName": "ControlledTableListHeader__StyledListGroupItem",
                                                          "foldedComponentIds": Array [],
                                                          "propTypes": Object {
                                                            "bsStyle": [Function],
                                                          },
                                                          "render": [Function],
                                                          "styledComponentId": "ControlledTableListHeader__StyledListGroupItem-tr2y34-0",
                                                          "target": Object {
                                                            "$$typeof": Symbol(react.forward_ref),
                                                            "defaultProps": Object {
                                                              "bsStyle": undefined,
                                                            },
                                                            "propTypes": Object {
                                                              "bsStyle": [Function],
                                                            },
                                                            "render": [Function],
                                                          },
                                                          "toString": [Function],
                                                          "warnTooManyClasses": [Function],
                                                          "withComponent": [Function],
                                                        }
                                                      }
                                                      forwardedRef={null}
                                                    >
                                                      <ForwardRef
                                                        className="c5"
                                                      >
                                                        <ListGroupItem__StyledListGroupItem
                                                          className="c5"
                                                        >
                                                          <StyledComponent
                                                            className="c5"
                                                            forwardedComponent={
                                                              Object {
                                                                "$$typeof": Symbol(react.forward_ref),
                                                                "STYLES": Array [
                                                                  "success",
                                                                  "warning",
                                                                  "danger",
                                                                  "info",
                                                                ],
                                                                "attrs": Array [],
                                                                "componentStyle": ComponentStyle {
                                                                  "componentId": "ListGroupItem__StyledListGroupItem-sc-1ky0joo-0",
                                                                  "isStatic": false,
                                                                  "lastClassName": "c6",
                                                                  "rules": Array [
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "displayName": "ListGroupItem__StyledListGroupItem",
                                                                "foldedComponentIds": Array [],
                                                                "render": [Function],
                                                                "styledComponentId": "ListGroupItem__StyledListGroupItem-sc-1ky0joo-0",
                                                                "target": [Function],
                                                                "toString": [Function],
                                                                "warnTooManyClasses": [Function],
                                                                "withComponent": [Function],
                                                              }
                                                            }
                                                            forwardedRef={null}
                                                          >
                                                            <ListGroupItem
                                                              bsClass="list-group-item"
                                                              className="c6 c5"
                                                              listItem={false}
                                                            >
                                                              <span
                                                                className="c6 c5 list-group-item"
                                                              >
                                                                <Input
                                                                  addonAfter={null}
                                                                  bsStyle={null}
                                                                  buttonAfter={null}
                                                                  checked={false}
                                                                  disabled={false}
                                                                  help=""
                                                                  id="select-all-checkbox"
                                                                  label="Select all"
                                                                  onChange={[Function]}
                                                                  placeholder=""
                                                                  type="checkbox"
                                                                  wrapperClassName="form-group-inline"
                                                                >
                                                                  <Component
                                                                    controlId="select-all-checkbox"
                                                                    validationState={null}
                                                                  >
                                                                    <FormGroup__StyledFormGroup
                                                                      controlId="select-all-checkbox"
                                                                      validationState={null}
                                                                    >
                                                                      <StyledComponent
                                                                        controlId="select-all-checkbox"
                                                                        forwardedComponent={
                                                                          Object {
                                                                            "$$typeof": Symbol(react.forward_ref),
                                                                            "SIZES": Array [
                                                                              "large",
                                                                              "small",
                                                                            ],
                                                                            "attrs": Array [],
                                                                            "componentStyle": ComponentStyle {
                                                                              "componentId": "FormGroup__StyledFormGroup-sc-1wv4cm9-0",
                                                                              "isStatic": false,
                                                                              "lastClassName": "ekazNr",
                                                                              "rules": Array [
                                                                                [Function],
                                                                                ";",
                                                                              ],
                                                                            },
                                                                            "displayName": "FormGroup__StyledFormGroup",
                                                                            "foldedComponentIds": Array [],
                                                                            "render": [Function],
                                                                            "styledComponentId": "FormGroup__StyledFormGroup-sc-1wv4cm9-0",
                                                                            "target": [Function],
                                                                            "toString": [Function],
                                                                            "warnTooManyClasses": [Function],
                                                                            "withComponent": [Function],
                                                                          }
                                                                        }
                                                                        forwardedRef={null}
                                                                        validationState={null}
                                                                      >
                                                                        <FormGroup
                                                                          bsClass="form-group"
                                                                          className=""
                                                                          controlId="select-all-checkbox"
                                                                          validationState={null}
                                                                        >
                                                                          <div
                                                                            className="form-group"
                                                                          >
                                                                            <InputWrapper
                                                                              className="form-group-inline"
                                                                            >
                                                                              <div
                                                                                className="form-group-inline"
                                                                              >
                                                                                <Checkbox
                                                                                  bsClass="checkbox"
                                                                                  checked={false}
                                                                                  disabled={false}
                                                                                  inline={false}
                                                                                  inputRef={[Function]}
                                                                                  label="Select all"
                                                                                  name="select-all-checkbox"
                                                                                  onChange={[Function]}
                                                                                  placeholder=""
                                                                                  title=""
                                                                                  type="checkbox"
                                                                                >
                                                                                  <div
                                                                                    className="checkbox"
                                                                                  >
                                                                                    <label
                                                                                      title=""
                                                                                    >
                                                                                      <input
                                                                                        checked={false}
                                                                                        disabled={false}
                                                                                        label="Select all"
                                                                                        name="select-all-checkbox"
                                                                                        onChange={[Function]}
                                                                                        placeholder=""
                                                                                        type="checkbox"
                                                                                      />
                                                                                      Select all
                                                                                    </label>
                                                                                  </div>
                                                                                </Checkbox>
                                                                              </div>
                                                                            </InputWrapper>
                                                                          </div>
                                                                        </FormGroup>
                                                                      </StyledComponent>
                                                                    </FormGroup__StyledFormGroup>
                                                                  </Component>
                                                                </Input>
                                                              </span>
                                                            </ListGroupItem>
                                                          </StyledComponent>
                                                        </ListGroupItem__StyledListGroupItem>
                                                      </ForwardRef>
                                                    </StyledComponent>
                                                  </ControlledTableListHeader__StyledListGroupItem>
                                                </ControlledTableListHeader>
                                                <ControlledTableListItem
                                                  key="item-01"
                                                >
                                                  <ForwardRef>
                                                    <ListGroupItem__StyledListGroupItem>
                                                      <StyledComponent
                                                        forwardedComponent={
                                                          Object {
                                                            "$$typeof": Symbol(react.forward_ref),
                                                            "STYLES": Array [
                                                              "success",
                                                              "warning",
                                                              "danger",
                                                              "info",
                                                            ],
                                                            "attrs": Array [],
                                                            "componentStyle": ComponentStyle {
                                                              "componentId": "ListGroupItem__StyledListGroupItem-sc-1ky0joo-0",
                                                              "isStatic": false,
                                                              "lastClassName": "c6",
                                                              "rules": Array [
                                                                [Function],
                                                              ],
                                                            },
                                                            "displayName": "ListGroupItem__StyledListGroupItem",
                                                            "foldedComponentIds": Array [],
                                                            "render": [Function],
                                                            "styledComponentId": "ListGroupItem__StyledListGroupItem-sc-1ky0joo-0",
                                                            "target": [Function],
                                                            "toString": [Function],
                                                            "warnTooManyClasses": [Function],
                                                            "withComponent": [Function],
                                                          }
                                                        }
                                                        forwardedRef={null}
                                                      >
                                                        <ListGroupItem
                                                          bsClass="list-group-item"
                                                          className="c6"
                                                          listItem={false}
                                                        >
                                                          <span
                                                            className="c6 list-group-item"
                                                          >
                                                            <div
                                                              className="itemWrapper "
                                                            >
                                                              <div
                                                                className="itemActionsWrapper"
                                                              >
                                                                <ButtonGroup
                                                                  block={false}
                                                                  bsClass="btn-group"
                                                                  bsSize="small"
                                                                  justified={false}
                                                                  vertical={false}
                                                                >
                                                                  <div
                                                                    className="btn-group btn-group-sm"
                                                                  >
                                                                    <ForwardRef
                                                                      active={false}
                                                                      bsStyle="default"
                                                                      onClick={[Function]}
                                                                    >
                                                                      <Button__StyledButton
                                                                        active={false}
                                                                        bsStyle="default"
                                                                        onClick={[Function]}
                                                                      >
                                                                        <StyledComponent
                                                                          active={false}
                                                                          bsStyle="default"
                                                                          forwardedComponent={
                                                                            Object {
                                                                              "$$typeof": Symbol(react.forward_ref),
                                                                              "SIZES": Array [
                                                                                "large",
                                                                                "small",
                                                                                "xsmall",
                                                                              ],
                                                                              "STYLES": Array [
                                                                                "success",
                                                                                "warning",
                                                                                "danger",
                                                                                "info",
                                                                                "default",
                                                                                "primary",
                                                                                "link",
                                                                              ],
                                                                              "attrs": Array [],
                                                                              "componentStyle": ComponentStyle {
                                                                                "componentId": "Button__StyledButton-c9cbmb-0",
                                                                                "isStatic": false,
                                                                                "lastClassName": "c4",
                                                                                "rules": Array [
                                                                                  [Function],
                                                                                ],
                                                                              },
                                                                              "displayName": "Button__StyledButton",
                                                                              "foldedComponentIds": Array [],
                                                                              "render": [Function],
                                                                              "styledComponentId": "Button__StyledButton-c9cbmb-0",
                                                                              "target": [Function],
                                                                              "toString": [Function],
                                                                              "warnTooManyClasses": [Function],
                                                                              "withComponent": [Function],
                                                                            }
                                                                          }
                                                                          forwardedRef={null}
                                                                          onClick={[Function]}
                                                                        >
                                                                          <Button
                                                                            active={false}
                                                                            block={false}
                                                                            bsClass="btn"
                                                                            bsStyle="default"
                                                                            className="c4"
                                                                            disabled={false}
                                                                            onClick={[Function]}
                                                                          >
                                                                            <button
                                                                              className="c4 btn btn-default"
                                                                              disabled={false}
                                                                              onClick={[Function]}
                                                                              type="button"
                                                                            >
                                                                              Allow reading
                                                                            </button>
                                                                          </Button>
                                                                        </StyledComponent>
                                                                      </Button__StyledButton>
                                                                    </ForwardRef>
                                                                    <ForwardRef
                                                                      active={false}
                                                                      bsStyle="default"
                                                                      onClick={[Function]}
                                                                    >
                                                                      <Button__StyledButton
                                                                        active={false}
                                                                        bsStyle="default"
                                                                        onClick={[Function]}
                                                                      >
                                                                        <StyledComponent
                                                                          active={false}
                                                                          bsStyle="default"
                                                                          forwardedComponent={
                                                                            Object {
                                                                              "$$typeof": Symbol(react.forward_ref),
                                                                              "SIZES": Array [
                                                                                "large",
                                                                                "small",
                                                                                "xsmall",
                                                                              ],
                                                                              "STYLES": Array [
                                                                                "success",
                                                                                "warning",
                                                                                "danger",
                                                                                "info",
                                                                                "default",
                                                                                "primary",
                                                                                "link",
                                                                              ],
                                                                              "attrs": Array [],
                                                                              "componentStyle": ComponentStyle {
                                                                                "componentId": "Button__StyledButton-c9cbmb-0",
                                                                                "isStatic": false,
                                                                                "lastClassName": "c4",
                                                                                "rules": Array [
                                                                                  [Function],
                                                                                ],
                                                                              },
                                                                              "displayName": "Button__StyledButton",
                                                                              "foldedComponentIds": Array [],
                                                                              "render": [Function],
                                                                              "styledComponentId": "Button__StyledButton-c9cbmb-0",
                                                                              "target": [Function],
                                                                              "toString": [Function],
                                                                              "warnTooManyClasses": [Function],
                                                                              "withComponent": [Function],
                                                                            }
                                                                          }
                                                                          forwardedRef={null}
                                                                          onClick={[Function]}
                                                                        >
                                                                          <Button
                                                                            active={false}
                                                                            block={false}
                                                                            bsClass="btn"
                                                                            bsStyle="default"
                                                                            className="c4"
                                                                            disabled={false}
                                                                            onClick={[Function]}
                                                                          >
                                                                            <button
                                                                              className="c4 btn btn-default"
                                                                              disabled={false}
                                                                              onClick={[Function]}
                                                                              type="button"
                                                                            >
                                                                              Allow editing
                                                                            </button>
                                                                          </Button>
                                                                        </StyledComponent>
                                                                      </Button__StyledButton>
                                                                    </ForwardRef>
                                                                  </div>
                                                                </ButtonGroup>
                                                              </div>
                                                              <Input
                                                                addonAfter={null}
                                                                bsStyle={null}
                                                                buttonAfter={null}
                                                                checked={false}
                                                                help=""
                                                                id="id-checkbox"
                                                                label=""
                                                                onChange={[Function]}
                                                                placeholder=""
                                                                type="checkbox"
                                                                wrapperClassName="form-group-inline"
                                                              >
                                                                <Component
                                                                  controlId="id-checkbox"
                                                                  validationState={null}
                                                                >
                                                                  <FormGroup__StyledFormGroup
                                                                    controlId="id-checkbox"
                                                                    validationState={null}
                                                                  >
                                                                    <StyledComponent
                                                                      controlId="id-checkbox"
                                                                      forwardedComponent={
                                                                        Object {
                                                                          "$$typeof": Symbol(react.forward_ref),
                                                                          "SIZES": Array [
                                                                            "large",
                                                                            "small",
                                                                          ],
                                                                          "attrs": Array [],
                                                                          "componentStyle": ComponentStyle {
                                                                            "componentId": "FormGroup__StyledFormGroup-sc-1wv4cm9-0",
                                                                            "isStatic": false,
                                                                            "lastClassName": "ekazNr",
                                                                            "rules": Array [
                                                                              [Function],
                                                                              ";",
                                                                            ],
                                                                          },
                                                                          "displayName": "FormGroup__StyledFormGroup",
                                                                          "foldedComponentIds": Array [],
                                                                          "render": [Function],
                                                                          "styledComponentId": "FormGroup__StyledFormGroup-sc-1wv4cm9-0",
                                                                          "target": [Function],
                                                                          "toString": [Function],
                                                                          "warnTooManyClasses": [Function],
                                                                          "withComponent": [Function],
                                                                        }
                                                                      }
                                                                      forwardedRef={null}
                                                                      validationState={null}
                                                                    >
                                                                      <FormGroup
                                                                        bsClass="form-group"
                                                                        className=""
                                                                        controlId="id-checkbox"
                                                                        validationState={null}
                                                                      >
                                                                        <div
                                                                          className="form-group"
                                                                        >
                                                                          <InputWrapper
                                                                            className="form-group-inline"
                                                                          >
                                                                            <div
                                                                              className="form-group-inline"
                                                                            >
                                                                              <Checkbox
                                                                                bsClass="checkbox"
                                                                                checked={false}
                                                                                disabled={false}
                                                                                inline={false}
                                                                                inputRef={[Function]}
                                                                                label=""
                                                                                name="id-checkbox"
                                                                                onChange={[Function]}
                                                                                placeholder=""
                                                                                title=""
                                                                                type="checkbox"
                                                                              >
                                                                                <div
                                                                                  className="checkbox"
                                                                                >
                                                                                  <label
                                                                                    title=""
                                                                                  >
                                                                                    <input
                                                                                      checked={false}
                                                                                      disabled={false}
                                                                                      label=""
                                                                                      name="id-checkbox"
                                                                                      onChange={[Function]}
                                                                                      placeholder=""
                                                                                      type="checkbox"
                                                                                    />
                                                                                  </label>
                                                                                </div>
                                                                              </Checkbox>
                                                                            </div>
                                                                          </InputWrapper>
                                                                        </div>
                                                                      </FormGroup>
                                                                    </StyledComponent>
                                                                  </FormGroup__StyledFormGroup>
                                                                </Component>
                                                              </Input>
                                                              <span
                                                                className="description"
                                                              >
                                                                dashboard1
                                                              </span>
                                                            </div>
                                                          </span>
                                                        </ListGroupItem>
                                                      </StyledComponent>
                                                    </ListGroupItem__StyledListGroupItem>
                                                  </ForwardRef>
                                                </ControlledTableListItem>
                                                <ControlledTableListItem
                                                  key="item-02"
                                                >
                                                  <ForwardRef>
                                                    <ListGroupItem__StyledListGroupItem>
                                                      <StyledComponent
                                                        forwardedComponent={
                                                          Object {
                                                            "$$typeof": Symbol(react.forward_ref),
                                                            "STYLES": Array [
                                                              "success",
                                                              "warning",
                                                              "danger",
                                                              "info",
                                                            ],
                                                            "attrs": Array [],
                                                            "componentStyle": ComponentStyle {
                                                              "componentId": "ListGroupItem__StyledListGroupItem-sc-1ky0joo-0",
                                                              "isStatic": false,
                                                              "lastClassName": "c6",
                                                              "rules": Array [
                                                                [Function],
                                                              ],
                                                            },
                                                            "displayName": "ListGroupItem__StyledListGroupItem",
                                                            "foldedComponentIds": Array [],
                                                            "render": [Function],
                                                            "styledComponentId": "ListGroupItem__StyledListGroupItem-sc-1ky0joo-0",
                                                            "target": [Function],
                                                            "toString": [Function],
                                                            "warnTooManyClasses": [Function],
                                                            "withComponent": [Function],
                                                          }
                                                        }
                                                        forwardedRef={null}
                                                      >
                                                        <ListGroupItem
                                                          bsClass="list-group-item"
                                                          className="c6"
                                                          listItem={false}
                                                        >
                                                          <span
                                                            className="c6 list-group-item"
                                                          >
                                                            <div
                                                              className="itemWrapper "
                                                            >
                                                              <div
                                                                className="itemActionsWrapper"
                                                              >
                                                                <ButtonGroup
                                                                  block={false}
                                                                  bsClass="btn-group"
                                                                  bsSize="small"
                                                                  justified={false}
                                                                  vertical={false}
                                                                >
                                                                  <div
                                                                    className="btn-group btn-group-sm"
                                                                  >
                                                                    <ForwardRef
                                                                      active={true}
                                                                      bsStyle="info"
                                                                      onClick={[Function]}
                                                                    >
                                                                      <Button__StyledButton
                                                                        active={true}
                                                                        bsStyle="info"
                                                                        onClick={[Function]}
                                                                      >
                                                                        <StyledComponent
                                                                          active={true}
                                                                          bsStyle="info"
                                                                          forwardedComponent={
                                                                            Object {
                                                                              "$$typeof": Symbol(react.forward_ref),
                                                                              "SIZES": Array [
                                                                                "large",
                                                                                "small",
                                                                                "xsmall",
                                                                              ],
                                                                              "STYLES": Array [
                                                                                "success",
                                                                                "warning",
                                                                                "danger",
                                                                                "info",
                                                                                "default",
                                                                                "primary",
                                                                                "link",
                                                                              ],
                                                                              "attrs": Array [],
                                                                              "componentStyle": ComponentStyle {
                                                                                "componentId": "Button__StyledButton-c9cbmb-0",
                                                                                "isStatic": false,
                                                                                "lastClassName": "c4",
                                                                                "rules": Array [
                                                                                  [Function],
                                                                                ],
                                                                              },
                                                                              "displayName": "Button__StyledButton",
                                                                              "foldedComponentIds": Array [],
                                                                              "render": [Function],
                                                                              "styledComponentId": "Button__StyledButton-c9cbmb-0",
                                                                              "target": [Function],
                                                                              "toString": [Function],
                                                                              "warnTooManyClasses": [Function],
                                                                              "withComponent": [Function],
                                                                            }
                                                                          }
                                                                          forwardedRef={null}
                                                                          onClick={[Function]}
                                                                        >
                                                                          <Button
                                                                            active={true}
                                                                            block={false}
                                                                            bsClass="btn"
                                                                            bsStyle="info"
                                                                            className="c4"
                                                                            disabled={false}
                                                                            onClick={[Function]}
                                                                          >
                                                                            <button
                                                                              className="c4 btn btn-info active"
                                                                              disabled={false}
                                                                              onClick={[Function]}
                                                                              type="button"
                                                                            >
                                                                              Allow reading
                                                                            </button>
                                                                          </Button>
                                                                        </StyledComponent>
                                                                      </Button__StyledButton>
                                                                    </ForwardRef>
                                                                    <ForwardRef
                                                                      active={false}
                                                                      bsStyle="default"
                                                                      onClick={[Function]}
                                                                    >
                                                                      <Button__StyledButton
                                                                        active={false}
                                                                        bsStyle="default"
                                                                        onClick={[Function]}
                                                                      >
                                                                        <StyledComponent
                                                                          active={false}
                                                                          bsStyle="default"
                                                                          forwardedComponent={
                                                                            Object {
                                                                              "$$typeof": Symbol(react.forward_ref),
                                                                              "SIZES": Array [
                                                                                "large",
                                                                                "small",
                                                                                "xsmall",
                                                                              ],
                                                                              "STYLES": Array [
                                                                                "success",
                                                                                "warning",
                                                                                "danger",
                                                                                "info",
                                                                                "default",
                                                                                "primary",
                                                                                "link",
                                                                              ],
                                                                              "attrs": Array [],
                                                                              "componentStyle": ComponentStyle {
                                                                                "componentId": "Button__StyledButton-c9cbmb-0",
                                                                                "isStatic": false,
                                                                                "lastClassName": "c4",
                                                                                "rules": Array [
                                                                                  [Function],
                                                                                ],
                                                                              },
                                                                              "displayName": "Button__StyledButton",
                                                                              "foldedComponentIds": Array [],
                                                                              "render": [Function],
                                                                              "styledComponentId": "Button__StyledButton-c9cbmb-0",
                                                                              "target": [Function],
                                                                              "toString": [Function],
                                                                              "warnTooManyClasses": [Function],
                                                                              "withComponent": [Function],
                                                                            }
                                                                          }
                                                                          forwardedRef={null}
                                                                          onClick={[Function]}
                                                                        >
                                                                          <Button
                                                                            active={false}
                                                                            block={false}
                                                                            bsClass="btn"
                                                                            bsStyle="default"
                                                                            className="c4"
                                                                            disabled={false}
                                                                            onClick={[Function]}
                                                                          >
                                                                            <button
                                                                              className="c4 btn btn-default"
                                                                              disabled={false}
                                                                              onClick={[Function]}
                                                                              type="button"
                                                                            >
                                                                              Allow editing
                                                                            </button>
                                                                          </Button>
                                                                        </StyledComponent>
                                                                      </Button__StyledButton>
                                                                    </ForwardRef>
                                                                  </div>
                                                                </ButtonGroup>
                                                              </div>
                                                              <Input
                                                                addonAfter={null}
                                                                bsStyle={null}
                                                                buttonAfter={null}
                                                                checked={false}
                                                                help=""
                                                                id="id-checkbox"
                                                                label=""
                                                                onChange={[Function]}
                                                                placeholder=""
                                                                type="checkbox"
                                                                wrapperClassName="form-group-inline"
                                                              >
                                                                <Component
                                                                  controlId="id-checkbox"
                                                                  validationState={null}
                                                                >
                                                                  <FormGroup__StyledFormGroup
                                                                    controlId="id-checkbox"
                                                                    validationState={null}
                                                                  >
                                                                    <StyledComponent
                                                                      controlId="id-checkbox"
                                                                      forwardedComponent={
                                                                        Object {
                                                                          "$$typeof": Symbol(react.forward_ref),
                                                                          "SIZES": Array [
                                                                            "large",
                                                                            "small",
                                                                          ],
                                                                          "attrs": Array [],
                                                                          "componentStyle": ComponentStyle {
                                                                            "componentId": "FormGroup__StyledFormGroup-sc-1wv4cm9-0",
                                                                            "isStatic": false,
                                                                            "lastClassName": "ekazNr",
                                                                            "rules": Array [
                                                                              [Function],
                                                                              ";",
                                                                            ],
                                                                          },
                                                                          "displayName": "FormGroup__StyledFormGroup",
                                                                          "foldedComponentIds": Array [],
                                                                          "render": [Function],
                                                                          "styledComponentId": "FormGroup__StyledFormGroup-sc-1wv4cm9-0",
                                                                          "target": [Function],
                                                                          "toString": [Function],
                                                                          "warnTooManyClasses": [Function],
                                                                          "withComponent": [Function],
                                                                        }
                                                                      }
                                                                      forwardedRef={null}
                                                                      validationState={null}
                                                                    >
                                                                      <FormGroup
                                                                        bsClass="form-group"
                                                                        className=""
                                                                        controlId="id-checkbox"
                                                                        validationState={null}
                                                                      >
                                                                        <div
                                                                          className="form-group"
                                                                        >
                                                                          <InputWrapper
                                                                            className="form-group-inline"
                                                                          >
                                                                            <div
                                                                              className="form-group-inline"
                                                                            >
                                                                              <Checkbox
                                                                                bsClass="checkbox"
                                                                                checked={false}
                                                                                disabled={false}
                                                                                inline={false}
                                                                                inputRef={[Function]}
                                                                                label=""
                                                                                name="id-checkbox"
                                                                                onChange={[Function]}
                                                                                placeholder=""
                                                                                title=""
                                                                                type="checkbox"
                                                                              >
                                                                                <div
                                                                                  className="checkbox"
                                                                                >
                                                                                  <label
                                                                                    title=""
                                                                                  >
                                                                                    <input
                                                                                      checked={false}
                                                                                      disabled={false}
                                                                                      label=""
                                                                                      name="id-checkbox"
                                                                                      onChange={[Function]}
                                                                                      placeholder=""
                                                                                      type="checkbox"
                                                                                    />
                                                                                  </label>
                                                                                </div>
                                                                              </Checkbox>
                                                                            </div>
                                                                          </InputWrapper>
                                                                        </div>
                                                                      </FormGroup>
                                                                    </StyledComponent>
                                                                  </FormGroup__StyledFormGroup>
                                                                </Component>
                                                              </Input>
                                                              <span
                                                                className="description"
                                                              >
                                                                dashboard2
                                                              </span>
                                                            </div>
                                                          </span>
                                                        </ListGroupItem>
                                                      </StyledComponent>
                                                    </ListGroupItem__StyledListGroupItem>
                                                  </ForwardRef>
                                                </ControlledTableListItem>
                                              </div>
                                            </ListGroup>
                                          </ListGroup>
                                        </div>
                                      </ControlledTableList>
                                    </div>
                                  </TableList>
                                </div>
                              </div>
                            </TabPane>
                          </Tab>
                        </StyledComponent>
                      </Tab>
                    </div>
                  </TabContent>
                </div>
              </TabContainer>
            </Tabs>
          </Uncontrolled(Tabs)>
        </ForwardRef>
      </StyledComponent>
    </Tabs>
  </div>
</PermissionSelector>
`;
