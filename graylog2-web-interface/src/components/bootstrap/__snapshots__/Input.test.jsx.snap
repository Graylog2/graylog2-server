// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Input renders a addon after the input if addonAfter is passed 1`] = `
<Input
  addonAfter=".00"
  bsStyle={null}
  buttonAfter={null}
  help=""
  id="inputWithAddon"
  label=""
  placeholder=""
  type="text"
>
  <FormGroup
    bsClass="form-group"
    controlId="inputWithAddon"
    validationState={null}
  >
    <div
      className="form-group"
    >
      <InputWrapper>
        <span>
          <InputGroup>
            <StyledComponent
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "Addon": [Function],
                  "Button": [Function],
                  "SIZES": Array [
                    "large",
                    "small",
                  ],
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "InputGroup-sc-1a8jz8l-0",
                    "isStatic": false,
                    "lastClassName": "czeryr",
                    "rules": Array [
                      [Function],
                    ],
                  },
                  "displayName": "InputGroup",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "InputGroup-sc-1a8jz8l-0",
                  "target": [Function],
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
            >
              <InputGroup
                bsClass="input-group"
                className="InputGroup-sc-1a8jz8l-0 czeryr"
              >
                <span
                  className="InputGroup-sc-1a8jz8l-0 czeryr input-group"
                >
                  <FormControl
                    componentClass="input"
                    inputRef={[Function]}
                    label=""
                    name="inputWithAddon"
                    placeholder=""
                    type="text"
                  >
                    <StyledComponent
                      componentClass="input"
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "Feedback": [Function],
                          "SIZES": Array [
                            "small",
                            "large",
                          ],
                          "Static": [Function],
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "FormControl-sc-1amoaox-0",
                            "isStatic": false,
                            "lastClassName": "lpicKK",
                            "rules": Array [
                              [Function],
                            ],
                          },
                          "displayName": "FormControl",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "FormControl-sc-1amoaox-0",
                          "target": [Function],
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                      inputRef={[Function]}
                      label=""
                      name="inputWithAddon"
                      placeholder=""
                      type="text"
                    >
                      <FormControl
                        bsClass="form-control"
                        className="FormControl-sc-1amoaox-0 lpicKK"
                        componentClass="input"
                        inputRef={[Function]}
                        label=""
                        name="inputWithAddon"
                        placeholder=""
                        type="text"
                      >
                        <input
                          className="FormControl-sc-1amoaox-0 lpicKK form-control"
                          id="inputWithAddon"
                          label=""
                          name="inputWithAddon"
                          placeholder=""
                          type="text"
                        />
                      </FormControl>
                    </StyledComponent>
                  </FormControl>
                  <InputGroupAddon>
                    <span
                      className="input-group-addon"
                    >
                      .00
                    </span>
                  </InputGroupAddon>
                </span>
              </InputGroup>
            </StyledComponent>
          </InputGroup>
        </span>
      </InputWrapper>
    </div>
  </FormGroup>
</Input>
`;

exports[`Input renders a button after the input if buttonAfter is passed 1`] = `
<Input
  addonAfter={null}
  bsStyle={null}
  buttonAfter={
    <Memo
      bsStyle="default"
    />
  }
  help=""
  id="inputWithButton"
  label=""
  placeholder=""
  type="text"
>
  <FormGroup
    bsClass="form-group"
    controlId="inputWithButton"
    validationState={null}
  >
    <div
      className="form-group"
    >
      <InputWrapper>
        <span>
          <InputGroup>
            <StyledComponent
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "Addon": [Function],
                  "Button": [Function],
                  "SIZES": Array [
                    "large",
                    "small",
                  ],
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "InputGroup-sc-1a8jz8l-0",
                    "isStatic": false,
                    "lastClassName": "czeryr",
                    "rules": Array [
                      [Function],
                    ],
                  },
                  "displayName": "InputGroup",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "InputGroup-sc-1a8jz8l-0",
                  "target": [Function],
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
            >
              <InputGroup
                bsClass="input-group"
                className="InputGroup-sc-1a8jz8l-0 czeryr"
              >
                <span
                  className="InputGroup-sc-1a8jz8l-0 czeryr input-group"
                >
                  <FormControl
                    componentClass="input"
                    inputRef={[Function]}
                    label=""
                    name="inputWithButton"
                    placeholder=""
                    type="text"
                  >
                    <StyledComponent
                      componentClass="input"
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "Feedback": [Function],
                          "SIZES": Array [
                            "small",
                            "large",
                          ],
                          "Static": [Function],
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "FormControl-sc-1amoaox-0",
                            "isStatic": false,
                            "lastClassName": "lpicKK",
                            "rules": Array [
                              [Function],
                            ],
                          },
                          "displayName": "FormControl",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "FormControl-sc-1amoaox-0",
                          "target": [Function],
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                      inputRef={[Function]}
                      label=""
                      name="inputWithButton"
                      placeholder=""
                      type="text"
                    >
                      <FormControl
                        bsClass="form-control"
                        className="FormControl-sc-1amoaox-0 lpicKK"
                        componentClass="input"
                        inputRef={[Function]}
                        label=""
                        name="inputWithButton"
                        placeholder=""
                        type="text"
                      >
                        <input
                          className="FormControl-sc-1amoaox-0 lpicKK form-control"
                          id="inputWithButton"
                          label=""
                          name="inputWithButton"
                          placeholder=""
                          type="text"
                        />
                      </FormControl>
                    </StyledComponent>
                  </FormControl>
                  <InputGroupButton>
                    <span
                      className="input-group-btn"
                    >
                      <ForwardRef
                        bsStyle="default"
                      >
                        <Button__StyledButton
                          bsStyle="default"
                        >
                          <StyledComponent
                            bsStyle="default"
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "SIZES": Array [
                                  "large",
                                  "small",
                                  "xsmall",
                                ],
                                "STYLES": Array [
                                  "success",
                                  "warning",
                                  "danger",
                                  "info",
                                  "default",
                                  "primary",
                                  "link",
                                ],
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "Button__StyledButton-c9cbmb-0",
                                  "isStatic": false,
                                  "lastClassName": "fnYQfY",
                                  "rules": Array [
                                    [Function],
                                  ],
                                },
                                "displayName": "Button__StyledButton",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "Button__StyledButton-c9cbmb-0",
                                "target": [Function],
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                          >
                            <Button
                              active={false}
                              block={false}
                              bsClass="btn"
                              bsStyle="default"
                              className="Button__StyledButton-c9cbmb-0 fnYQfY"
                              disabled={false}
                            >
                              <button
                                className="Button__StyledButton-c9cbmb-0 fnYQfY btn btn-default"
                                disabled={false}
                                type="button"
                              />
                            </Button>
                          </StyledComponent>
                        </Button__StyledButton>
                      </ForwardRef>
                    </span>
                  </InputGroupButton>
                </span>
              </InputGroup>
            </StyledComponent>
          </InputGroup>
        </span>
      </InputWrapper>
    </div>
  </FormGroup>
</Input>
`;

exports[`Input renders a checkbox addon after the input if addonAfter is passed 1`] = `
<Input
  addonAfter={
    <input
      aria-label="..."
      id="addonCheckbox"
      type="checkbox"
    />
  }
  bsStyle={null}
  buttonAfter={null}
  help=""
  id="inputWithCheckboxAddon"
  label=""
  placeholder=""
  type="text"
>
  <FormGroup
    bsClass="form-group"
    controlId="inputWithCheckboxAddon"
    validationState={null}
  >
    <div
      className="form-group"
    >
      <InputWrapper>
        <span>
          <InputGroup>
            <StyledComponent
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "Addon": [Function],
                  "Button": [Function],
                  "SIZES": Array [
                    "large",
                    "small",
                  ],
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "InputGroup-sc-1a8jz8l-0",
                    "isStatic": false,
                    "lastClassName": "czeryr",
                    "rules": Array [
                      [Function],
                    ],
                  },
                  "displayName": "InputGroup",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "InputGroup-sc-1a8jz8l-0",
                  "target": [Function],
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
            >
              <InputGroup
                bsClass="input-group"
                className="InputGroup-sc-1a8jz8l-0 czeryr"
              >
                <span
                  className="InputGroup-sc-1a8jz8l-0 czeryr input-group"
                >
                  <FormControl
                    componentClass="input"
                    inputRef={[Function]}
                    label=""
                    name="inputWithCheckboxAddon"
                    placeholder=""
                    type="text"
                  >
                    <StyledComponent
                      componentClass="input"
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "Feedback": [Function],
                          "SIZES": Array [
                            "small",
                            "large",
                          ],
                          "Static": [Function],
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "FormControl-sc-1amoaox-0",
                            "isStatic": false,
                            "lastClassName": "lpicKK",
                            "rules": Array [
                              [Function],
                            ],
                          },
                          "displayName": "FormControl",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "FormControl-sc-1amoaox-0",
                          "target": [Function],
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                      inputRef={[Function]}
                      label=""
                      name="inputWithCheckboxAddon"
                      placeholder=""
                      type="text"
                    >
                      <FormControl
                        bsClass="form-control"
                        className="FormControl-sc-1amoaox-0 lpicKK"
                        componentClass="input"
                        inputRef={[Function]}
                        label=""
                        name="inputWithCheckboxAddon"
                        placeholder=""
                        type="text"
                      >
                        <input
                          className="FormControl-sc-1amoaox-0 lpicKK form-control"
                          id="inputWithCheckboxAddon"
                          label=""
                          name="inputWithCheckboxAddon"
                          placeholder=""
                          type="text"
                        />
                      </FormControl>
                    </StyledComponent>
                  </FormControl>
                  <InputGroupAddon>
                    <span
                      className="input-group-addon"
                    >
                      <input
                        aria-label="..."
                        id="addonCheckbox"
                        type="checkbox"
                      />
                    </span>
                  </InputGroupAddon>
                </span>
              </InputGroup>
            </StyledComponent>
          </InputGroup>
        </span>
      </InputWrapper>
    </div>
  </FormGroup>
</Input>
`;

exports[`Input renders input w/ \`name\` attribute w/ setting prop 1`] = `
<Input
  addonAfter={null}
  bsStyle={null}
  buttonAfter={null}
  help=""
  id="inputWithoutNameProp"
  label=""
  name="inputWithNameProp"
  placeholder=""
  type="text"
>
  <FormGroup
    bsClass="form-group"
    controlId="inputWithoutNameProp"
    validationState={null}
  >
    <div
      className="form-group"
    >
      <InputWrapper>
        <span>
          <FormControl
            componentClass="input"
            inputRef={[Function]}
            label=""
            name="inputWithNameProp"
            placeholder=""
            type="text"
          >
            <StyledComponent
              componentClass="input"
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "Feedback": [Function],
                  "SIZES": Array [
                    "small",
                    "large",
                  ],
                  "Static": [Function],
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "FormControl-sc-1amoaox-0",
                    "isStatic": false,
                    "lastClassName": "lpicKK",
                    "rules": Array [
                      [Function],
                    ],
                  },
                  "displayName": "FormControl",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "FormControl-sc-1amoaox-0",
                  "target": [Function],
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
              inputRef={[Function]}
              label=""
              name="inputWithNameProp"
              placeholder=""
              type="text"
            >
              <FormControl
                bsClass="form-control"
                className="FormControl-sc-1amoaox-0 lpicKK"
                componentClass="input"
                inputRef={[Function]}
                label=""
                name="inputWithNameProp"
                placeholder=""
                type="text"
              >
                <input
                  className="FormControl-sc-1amoaox-0 lpicKK form-control"
                  id="inputWithoutNameProp"
                  label=""
                  name="inputWithNameProp"
                  placeholder=""
                  type="text"
                />
              </FormControl>
            </StyledComponent>
          </FormControl>
        </span>
      </InputWrapper>
    </div>
  </FormGroup>
</Input>
`;

exports[`Input renders input w/ \`name\` attribute w/o setting prop 1`] = `
<Input
  addonAfter={null}
  bsStyle={null}
  buttonAfter={null}
  help=""
  id="inputWithoutNameProp"
  label=""
  placeholder=""
  type="text"
>
  <FormGroup
    bsClass="form-group"
    controlId="inputWithoutNameProp"
    validationState={null}
  >
    <div
      className="form-group"
    >
      <InputWrapper>
        <span>
          <FormControl
            componentClass="input"
            inputRef={[Function]}
            label=""
            name="inputWithoutNameProp"
            placeholder=""
            type="text"
          >
            <StyledComponent
              componentClass="input"
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "Feedback": [Function],
                  "SIZES": Array [
                    "small",
                    "large",
                  ],
                  "Static": [Function],
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "FormControl-sc-1amoaox-0",
                    "isStatic": false,
                    "lastClassName": "lpicKK",
                    "rules": Array [
                      [Function],
                    ],
                  },
                  "displayName": "FormControl",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "FormControl-sc-1amoaox-0",
                  "target": [Function],
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
              inputRef={[Function]}
              label=""
              name="inputWithoutNameProp"
              placeholder=""
              type="text"
            >
              <FormControl
                bsClass="form-control"
                className="FormControl-sc-1amoaox-0 lpicKK"
                componentClass="input"
                inputRef={[Function]}
                label=""
                name="inputWithoutNameProp"
                placeholder=""
                type="text"
              >
                <input
                  className="FormControl-sc-1amoaox-0 lpicKK form-control"
                  id="inputWithoutNameProp"
                  label=""
                  name="inputWithoutNameProp"
                  placeholder=""
                  type="text"
                />
              </FormControl>
            </StyledComponent>
          </FormControl>
        </span>
      </InputWrapper>
    </div>
  </FormGroup>
</Input>
`;
