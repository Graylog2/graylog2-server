// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<GrokPatternInput /> should render grok pattern input with patterns 1`] = `
<GrokPatternInput
  className=""
  onPatternChange={[Function]}
  pattern=""
  patterns={
    Array [
      Object {
        "name": "COMMONMAC",
        "pattern": "(?:(?:[A-Fa-f0-9]{2}:){5}[A-Fa-f0-9]{2})",
      },
      Object {
        "name": "DATA",
        "pattern": ".*?",
      },
      Object {
        "name": "DATE",
        "pattern": "%{MONTHDAY}[./-]%{MONTHNUM}[./-]%{YEAR}",
      },
    ]
  }
>
  <Row
    bsClass="row"
    className=""
    componentClass="div"
  >
    <div
      className="row"
    >
      <Col
        bsClass="col"
        componentClass="div"
        sm={8}
      >
        <div
          className="col-sm-8"
        >
          <Input
            addonAfter={null}
            bsStyle={null}
            buttonAfter={null}
            help="The pattern which will match the log line e.g: '%{IP:client}' or '.*?'"
            id="pattern-input"
            label="Pattern"
            onChange={[Function]}
            placeholder=""
            required={true}
            rows={9}
            type="textarea"
            value=""
          >
            <FormGroup
              bsClass="form-group"
              controlId="pattern-input"
              validationState={null}
            >
              <div
                className="form-group"
              >
                <ControlLabel>
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "ControlLabel-sc-1edmum5-0",
                          "isStatic": false,
                          "lastClassName": "jmEvcm",
                          "rules": Array [
                            [Function],
                          ],
                        },
                        "displayName": "ControlLabel",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "ControlLabel-sc-1edmum5-0",
                        "target": [Function],
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <ControlLabel
                      bsClass="control-label"
                      className="ControlLabel-sc-1edmum5-0 jmEvcm"
                      srOnly={false}
                    >
                      <label
                        className="ControlLabel-sc-1edmum5-0 jmEvcm control-label"
                        htmlFor="pattern-input"
                      >
                        Pattern
                      </label>
                    </ControlLabel>
                  </StyledComponent>
                </ControlLabel>
                <InputWrapper>
                  <span>
                    <FormControl
                      componentClass="textarea"
                      inputRef={[Function]}
                      label="Pattern"
                      name="pattern-input"
                      onChange={[Function]}
                      placeholder=""
                      required={true}
                      rows={9}
                      type="textarea"
                      value=""
                    >
                      <StyledComponent
                        componentClass="textarea"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "Feedback": [Function],
                            "SIZES": Array [
                              "small",
                              "large",
                            ],
                            "Static": [Function],
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "FormControl-sc-1amoaox-0",
                              "isStatic": false,
                              "lastClassName": "lpicKK",
                              "rules": Array [
                                [Function],
                              ],
                            },
                            "displayName": "FormControl",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "FormControl-sc-1amoaox-0",
                            "target": [Function],
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                        inputRef={[Function]}
                        label="Pattern"
                        name="pattern-input"
                        onChange={[Function]}
                        placeholder=""
                        required={true}
                        rows={9}
                        type="textarea"
                        value=""
                      >
                        <FormControl
                          bsClass="form-control"
                          className="FormControl-sc-1amoaox-0 lpicKK"
                          componentClass="textarea"
                          inputRef={[Function]}
                          label="Pattern"
                          name="pattern-input"
                          onChange={[Function]}
                          placeholder=""
                          required={true}
                          rows={9}
                          type="textarea"
                          value=""
                        >
                          <textarea
                            className="FormControl-sc-1amoaox-0 lpicKK form-control"
                            id="pattern-input"
                            label="Pattern"
                            name="pattern-input"
                            onChange={[Function]}
                            placeholder=""
                            required={true}
                            rows={9}
                            type="textarea"
                            value=""
                          />
                        </FormControl>
                      </StyledComponent>
                    </FormControl>
                    <HelpBlock>
                      <StyledComponent
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "HelpBlock-i8is92-0",
                              "isStatic": false,
                              "lastClassName": "fHJMjA",
                              "rules": Array [
                                [Function],
                              ],
                            },
                            "displayName": "HelpBlock",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "HelpBlock-i8is92-0",
                            "target": [Function],
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                      >
                        <HelpBlock
                          bsClass="help-block"
                          className="HelpBlock-i8is92-0 fHJMjA"
                        >
                          <span
                            className="HelpBlock-i8is92-0 fHJMjA help-block"
                          >
                            The pattern which will match the log line e.g: '%{IP:client}' or '.*?'
                          </span>
                        </HelpBlock>
                      </StyledComponent>
                    </HelpBlock>
                  </span>
                </InputWrapper>
              </div>
            </FormGroup>
          </Input>
        </div>
      </Col>
      <Col
        bsClass="col"
        componentClass="div"
        sm={4}
      >
        <div
          className="col-sm-4"
        >
          <Input
            addonAfter={null}
            autoComplete="off"
            bsStyle={null}
            buttonAfter={null}
            formGroupClassName="filterFormGroup"
            help=""
            id="pattern-selector"
            label="Filter pattern"
            onChange={[Function]}
            onKeyDown={[Function]}
            placeholder=""
            type="text"
            value=""
          >
            <FormGroup
              bsClass="filterFormGroup"
              controlId="pattern-selector"
              validationState={null}
            >
              <div
                className="filterFormGroup"
              >
                <ControlLabel>
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "ControlLabel-sc-1edmum5-0",
                          "isStatic": false,
                          "lastClassName": "jmEvcm",
                          "rules": Array [
                            [Function],
                          ],
                        },
                        "displayName": "ControlLabel",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "ControlLabel-sc-1edmum5-0",
                        "target": [Function],
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <ControlLabel
                      bsClass="control-label"
                      className="ControlLabel-sc-1edmum5-0 jmEvcm"
                      srOnly={false}
                    >
                      <label
                        className="ControlLabel-sc-1edmum5-0 jmEvcm control-label"
                        htmlFor="pattern-selector"
                      >
                        Filter pattern
                      </label>
                    </ControlLabel>
                  </StyledComponent>
                </ControlLabel>
                <InputWrapper>
                  <span>
                    <FormControl
                      autoComplete="off"
                      componentClass="input"
                      inputRef={[Function]}
                      label="Filter pattern"
                      name="pattern-selector"
                      onChange={[Function]}
                      onKeyDown={[Function]}
                      placeholder=""
                      type="text"
                      value=""
                    >
                      <StyledComponent
                        autoComplete="off"
                        componentClass="input"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "Feedback": [Function],
                            "SIZES": Array [
                              "small",
                              "large",
                            ],
                            "Static": [Function],
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "FormControl-sc-1amoaox-0",
                              "isStatic": false,
                              "lastClassName": "lpicKK",
                              "rules": Array [
                                [Function],
                              ],
                            },
                            "displayName": "FormControl",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "FormControl-sc-1amoaox-0",
                            "target": [Function],
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                        inputRef={[Function]}
                        label="Filter pattern"
                        name="pattern-selector"
                        onChange={[Function]}
                        onKeyDown={[Function]}
                        placeholder=""
                        type="text"
                        value=""
                      >
                        <FormControl
                          autoComplete="off"
                          bsClass="form-control"
                          className="FormControl-sc-1amoaox-0 lpicKK"
                          componentClass="input"
                          inputRef={[Function]}
                          label="Filter pattern"
                          name="pattern-selector"
                          onChange={[Function]}
                          onKeyDown={[Function]}
                          placeholder=""
                          type="text"
                          value=""
                        >
                          <input
                            autoComplete="off"
                            className="FormControl-sc-1amoaox-0 lpicKK form-control"
                            id="pattern-selector"
                            label="Filter pattern"
                            name="pattern-selector"
                            onChange={[Function]}
                            onKeyDown={[Function]}
                            placeholder=""
                            type="text"
                            value=""
                          />
                        </FormControl>
                      </StyledComponent>
                    </FormControl>
                  </span>
                </InputWrapper>
              </div>
            </FormGroup>
          </Input>
          <ListGroup
            bsClass="resultList"
          >
            <div
              className="resultList"
            >
              <ListGroupItem
                header="COMMONMAC"
                id="list-item-0"
                key="COMMONMAC"
                onKeyDown={[Function]}
              >
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "STYLES": Array [
                        "success",
                        "warning",
                        "danger",
                        "info",
                      ],
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "ListGroupItem-sc-1ky0joo-0",
                        "isStatic": false,
                        "lastClassName": "kQFEvB",
                        "rules": Array [
                          [Function],
                        ],
                      },
                      "displayName": "ListGroupItem",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "ListGroupItem-sc-1ky0joo-0",
                      "target": [Function],
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                  header="COMMONMAC"
                  id="list-item-0"
                  onKeyDown={[Function]}
                >
                  <ListGroupItem
                    bsClass="list-group-item"
                    className="ListGroupItem-sc-1ky0joo-0 kQFEvB"
                    header="COMMONMAC"
                    id="list-item-0"
                    listItem={false}
                    onKeyDown={[Function]}
                  >
                    <span
                      className="ListGroupItem-sc-1ky0joo-0 kQFEvB list-group-item"
                      id="list-item-0"
                      onKeyDown={[Function]}
                    >
                      <h4
                        className="list-group-item-heading"
                      >
                        COMMONMAC
                      </h4>
                      <p
                        className="list-group-item-text"
                      >
                        <span
                          className="patternDisplay"
                        >
                          (?:(?:[A-Fa-f0-9]{2}:){5}[A-Fa-f0-9]{2})
                        </span>
                        <span
                          className="addButton"
                        >
                          <ForwardRef
                            bsSize="xsmall"
                            bsStyle="primary"
                            onClick={[Function]}
                          >
                            <Button__StyledButton
                              bsSize="xsmall"
                              bsStyle="primary"
                              onClick={[Function]}
                            >
                              <StyledComponent
                                bsSize="xsmall"
                                bsStyle="primary"
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "SIZES": Array [
                                      "large",
                                      "small",
                                      "xsmall",
                                    ],
                                    "STYLES": Array [
                                      "success",
                                      "warning",
                                      "danger",
                                      "info",
                                      "default",
                                      "primary",
                                      "link",
                                    ],
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "Button__StyledButton-c9cbmb-0",
                                      "isStatic": false,
                                      "lastClassName": "dYxYaY",
                                      "rules": Array [
                                        [Function],
                                      ],
                                    },
                                    "displayName": "Button__StyledButton",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "Button__StyledButton-c9cbmb-0",
                                    "target": [Function],
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                onClick={[Function]}
                              >
                                <Button
                                  active={false}
                                  block={false}
                                  bsClass="btn"
                                  bsSize="xsmall"
                                  bsStyle="primary"
                                  className="Button__StyledButton-c9cbmb-0 dYxYaY"
                                  disabled={false}
                                  onClick={[Function]}
                                >
                                  <button
                                    className="Button__StyledButton-c9cbmb-0 dYxYaY btn btn-xs btn-primary"
                                    disabled={false}
                                    onClick={[Function]}
                                    type="button"
                                  >
                                    Add
                                  </button>
                                </Button>
                              </StyledComponent>
                            </Button__StyledButton>
                          </ForwardRef>
                        </span>
                      </p>
                    </span>
                  </ListGroupItem>
                </StyledComponent>
              </ListGroupItem>
              <ListGroupItem
                header="DATA"
                id="list-item-1"
                key="DATA"
                onKeyDown={[Function]}
              >
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "STYLES": Array [
                        "success",
                        "warning",
                        "danger",
                        "info",
                      ],
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "ListGroupItem-sc-1ky0joo-0",
                        "isStatic": false,
                        "lastClassName": "kQFEvB",
                        "rules": Array [
                          [Function],
                        ],
                      },
                      "displayName": "ListGroupItem",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "ListGroupItem-sc-1ky0joo-0",
                      "target": [Function],
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                  header="DATA"
                  id="list-item-1"
                  onKeyDown={[Function]}
                >
                  <ListGroupItem
                    bsClass="list-group-item"
                    className="ListGroupItem-sc-1ky0joo-0 kQFEvB"
                    header="DATA"
                    id="list-item-1"
                    listItem={false}
                    onKeyDown={[Function]}
                  >
                    <span
                      className="ListGroupItem-sc-1ky0joo-0 kQFEvB list-group-item"
                      id="list-item-1"
                      onKeyDown={[Function]}
                    >
                      <h4
                        className="list-group-item-heading"
                      >
                        DATA
                      </h4>
                      <p
                        className="list-group-item-text"
                      >
                        <span
                          className="patternDisplay"
                        >
                          .*?
                        </span>
                        <span
                          className="addButton"
                        >
                          <ForwardRef
                            bsSize="xsmall"
                            bsStyle="primary"
                            onClick={[Function]}
                          >
                            <Button__StyledButton
                              bsSize="xsmall"
                              bsStyle="primary"
                              onClick={[Function]}
                            >
                              <StyledComponent
                                bsSize="xsmall"
                                bsStyle="primary"
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "SIZES": Array [
                                      "large",
                                      "small",
                                      "xsmall",
                                    ],
                                    "STYLES": Array [
                                      "success",
                                      "warning",
                                      "danger",
                                      "info",
                                      "default",
                                      "primary",
                                      "link",
                                    ],
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "Button__StyledButton-c9cbmb-0",
                                      "isStatic": false,
                                      "lastClassName": "dYxYaY",
                                      "rules": Array [
                                        [Function],
                                      ],
                                    },
                                    "displayName": "Button__StyledButton",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "Button__StyledButton-c9cbmb-0",
                                    "target": [Function],
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                onClick={[Function]}
                              >
                                <Button
                                  active={false}
                                  block={false}
                                  bsClass="btn"
                                  bsSize="xsmall"
                                  bsStyle="primary"
                                  className="Button__StyledButton-c9cbmb-0 dYxYaY"
                                  disabled={false}
                                  onClick={[Function]}
                                >
                                  <button
                                    className="Button__StyledButton-c9cbmb-0 dYxYaY btn btn-xs btn-primary"
                                    disabled={false}
                                    onClick={[Function]}
                                    type="button"
                                  >
                                    Add
                                  </button>
                                </Button>
                              </StyledComponent>
                            </Button__StyledButton>
                          </ForwardRef>
                        </span>
                      </p>
                    </span>
                  </ListGroupItem>
                </StyledComponent>
              </ListGroupItem>
              <ListGroupItem
                header="DATE"
                id="list-item-2"
                key="DATE"
                onKeyDown={[Function]}
              >
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "STYLES": Array [
                        "success",
                        "warning",
                        "danger",
                        "info",
                      ],
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "ListGroupItem-sc-1ky0joo-0",
                        "isStatic": false,
                        "lastClassName": "kQFEvB",
                        "rules": Array [
                          [Function],
                        ],
                      },
                      "displayName": "ListGroupItem",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "ListGroupItem-sc-1ky0joo-0",
                      "target": [Function],
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                  header="DATE"
                  id="list-item-2"
                  onKeyDown={[Function]}
                >
                  <ListGroupItem
                    bsClass="list-group-item"
                    className="ListGroupItem-sc-1ky0joo-0 kQFEvB"
                    header="DATE"
                    id="list-item-2"
                    listItem={false}
                    onKeyDown={[Function]}
                  >
                    <span
                      className="ListGroupItem-sc-1ky0joo-0 kQFEvB list-group-item"
                      id="list-item-2"
                      onKeyDown={[Function]}
                    >
                      <h4
                        className="list-group-item-heading"
                      >
                        DATE
                      </h4>
                      <p
                        className="list-group-item-text"
                      >
                        <span
                          className="patternDisplay"
                        >
                          %{MONTHDAY}[./-]%{MONTHNUM}[./-]%{YEAR}
                        </span>
                        <span
                          className="addButton"
                        >
                          <ForwardRef
                            bsSize="xsmall"
                            bsStyle="primary"
                            onClick={[Function]}
                          >
                            <Button__StyledButton
                              bsSize="xsmall"
                              bsStyle="primary"
                              onClick={[Function]}
                            >
                              <StyledComponent
                                bsSize="xsmall"
                                bsStyle="primary"
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "SIZES": Array [
                                      "large",
                                      "small",
                                      "xsmall",
                                    ],
                                    "STYLES": Array [
                                      "success",
                                      "warning",
                                      "danger",
                                      "info",
                                      "default",
                                      "primary",
                                      "link",
                                    ],
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "Button__StyledButton-c9cbmb-0",
                                      "isStatic": false,
                                      "lastClassName": "dYxYaY",
                                      "rules": Array [
                                        [Function],
                                      ],
                                    },
                                    "displayName": "Button__StyledButton",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "Button__StyledButton-c9cbmb-0",
                                    "target": [Function],
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                onClick={[Function]}
                              >
                                <Button
                                  active={false}
                                  block={false}
                                  bsClass="btn"
                                  bsSize="xsmall"
                                  bsStyle="primary"
                                  className="Button__StyledButton-c9cbmb-0 dYxYaY"
                                  disabled={false}
                                  onClick={[Function]}
                                >
                                  <button
                                    className="Button__StyledButton-c9cbmb-0 dYxYaY btn btn-xs btn-primary"
                                    disabled={false}
                                    onClick={[Function]}
                                    type="button"
                                  >
                                    Add
                                  </button>
                                </Button>
                              </StyledComponent>
                            </Button__StyledButton>
                          </ForwardRef>
                        </span>
                      </p>
                    </span>
                  </ListGroupItem>
                </StyledComponent>
              </ListGroupItem>
            </div>
          </ListGroup>
        </div>
      </Col>
    </div>
  </Row>
</GrokPatternInput>
`;

exports[`<GrokPatternInput /> should render grok pattern input without patterns 1`] = `
<GrokPatternInput
  className=""
  onPatternChange={[Function]}
  pattern=""
  patterns={Array []}
>
  <Row
    bsClass="row"
    className=""
    componentClass="div"
  >
    <div
      className="row"
    >
      <Col
        bsClass="col"
        componentClass="div"
        sm={8}
      >
        <div
          className="col-sm-8"
        >
          <Input
            addonAfter={null}
            bsStyle={null}
            buttonAfter={null}
            help="The pattern which will match the log line e.g: '%{IP:client}' or '.*?'"
            id="pattern-input"
            label="Pattern"
            onChange={[Function]}
            placeholder=""
            required={true}
            rows={9}
            type="textarea"
            value=""
          >
            <FormGroup
              bsClass="form-group"
              controlId="pattern-input"
              validationState={null}
            >
              <div
                className="form-group"
              >
                <ControlLabel>
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "ControlLabel-sc-1edmum5-0",
                          "isStatic": false,
                          "lastClassName": "jmEvcm",
                          "rules": Array [
                            [Function],
                          ],
                        },
                        "displayName": "ControlLabel",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "ControlLabel-sc-1edmum5-0",
                        "target": [Function],
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <ControlLabel
                      bsClass="control-label"
                      className="ControlLabel-sc-1edmum5-0 jmEvcm"
                      srOnly={false}
                    >
                      <label
                        className="ControlLabel-sc-1edmum5-0 jmEvcm control-label"
                        htmlFor="pattern-input"
                      >
                        Pattern
                      </label>
                    </ControlLabel>
                  </StyledComponent>
                </ControlLabel>
                <InputWrapper>
                  <span>
                    <FormControl
                      componentClass="textarea"
                      inputRef={[Function]}
                      label="Pattern"
                      name="pattern-input"
                      onChange={[Function]}
                      placeholder=""
                      required={true}
                      rows={9}
                      type="textarea"
                      value=""
                    >
                      <StyledComponent
                        componentClass="textarea"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "Feedback": [Function],
                            "SIZES": Array [
                              "small",
                              "large",
                            ],
                            "Static": [Function],
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "FormControl-sc-1amoaox-0",
                              "isStatic": false,
                              "lastClassName": "lpicKK",
                              "rules": Array [
                                [Function],
                              ],
                            },
                            "displayName": "FormControl",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "FormControl-sc-1amoaox-0",
                            "target": [Function],
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                        inputRef={[Function]}
                        label="Pattern"
                        name="pattern-input"
                        onChange={[Function]}
                        placeholder=""
                        required={true}
                        rows={9}
                        type="textarea"
                        value=""
                      >
                        <FormControl
                          bsClass="form-control"
                          className="FormControl-sc-1amoaox-0 lpicKK"
                          componentClass="textarea"
                          inputRef={[Function]}
                          label="Pattern"
                          name="pattern-input"
                          onChange={[Function]}
                          placeholder=""
                          required={true}
                          rows={9}
                          type="textarea"
                          value=""
                        >
                          <textarea
                            className="FormControl-sc-1amoaox-0 lpicKK form-control"
                            id="pattern-input"
                            label="Pattern"
                            name="pattern-input"
                            onChange={[Function]}
                            placeholder=""
                            required={true}
                            rows={9}
                            type="textarea"
                            value=""
                          />
                        </FormControl>
                      </StyledComponent>
                    </FormControl>
                    <HelpBlock>
                      <StyledComponent
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "HelpBlock-i8is92-0",
                              "isStatic": false,
                              "lastClassName": "fHJMjA",
                              "rules": Array [
                                [Function],
                              ],
                            },
                            "displayName": "HelpBlock",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "HelpBlock-i8is92-0",
                            "target": [Function],
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                      >
                        <HelpBlock
                          bsClass="help-block"
                          className="HelpBlock-i8is92-0 fHJMjA"
                        >
                          <span
                            className="HelpBlock-i8is92-0 fHJMjA help-block"
                          >
                            The pattern which will match the log line e.g: '%{IP:client}' or '.*?'
                          </span>
                        </HelpBlock>
                      </StyledComponent>
                    </HelpBlock>
                  </span>
                </InputWrapper>
              </div>
            </FormGroup>
          </Input>
        </div>
      </Col>
      <Col
        bsClass="col"
        componentClass="div"
        sm={4}
      >
        <div
          className="col-sm-4"
        >
          <Input
            addonAfter={null}
            autoComplete="off"
            bsStyle={null}
            buttonAfter={null}
            formGroupClassName="filterFormGroup"
            help=""
            id="pattern-selector"
            label="Filter pattern"
            onChange={[Function]}
            onKeyDown={[Function]}
            placeholder=""
            type="text"
            value=""
          >
            <FormGroup
              bsClass="filterFormGroup"
              controlId="pattern-selector"
              validationState={null}
            >
              <div
                className="filterFormGroup"
              >
                <ControlLabel>
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "ControlLabel-sc-1edmum5-0",
                          "isStatic": false,
                          "lastClassName": "jmEvcm",
                          "rules": Array [
                            [Function],
                          ],
                        },
                        "displayName": "ControlLabel",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "ControlLabel-sc-1edmum5-0",
                        "target": [Function],
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <ControlLabel
                      bsClass="control-label"
                      className="ControlLabel-sc-1edmum5-0 jmEvcm"
                      srOnly={false}
                    >
                      <label
                        className="ControlLabel-sc-1edmum5-0 jmEvcm control-label"
                        htmlFor="pattern-selector"
                      >
                        Filter pattern
                      </label>
                    </ControlLabel>
                  </StyledComponent>
                </ControlLabel>
                <InputWrapper>
                  <span>
                    <FormControl
                      autoComplete="off"
                      componentClass="input"
                      inputRef={[Function]}
                      label="Filter pattern"
                      name="pattern-selector"
                      onChange={[Function]}
                      onKeyDown={[Function]}
                      placeholder=""
                      type="text"
                      value=""
                    >
                      <StyledComponent
                        autoComplete="off"
                        componentClass="input"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "Feedback": [Function],
                            "SIZES": Array [
                              "small",
                              "large",
                            ],
                            "Static": [Function],
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "FormControl-sc-1amoaox-0",
                              "isStatic": false,
                              "lastClassName": "lpicKK",
                              "rules": Array [
                                [Function],
                              ],
                            },
                            "displayName": "FormControl",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "FormControl-sc-1amoaox-0",
                            "target": [Function],
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                        inputRef={[Function]}
                        label="Filter pattern"
                        name="pattern-selector"
                        onChange={[Function]}
                        onKeyDown={[Function]}
                        placeholder=""
                        type="text"
                        value=""
                      >
                        <FormControl
                          autoComplete="off"
                          bsClass="form-control"
                          className="FormControl-sc-1amoaox-0 lpicKK"
                          componentClass="input"
                          inputRef={[Function]}
                          label="Filter pattern"
                          name="pattern-selector"
                          onChange={[Function]}
                          onKeyDown={[Function]}
                          placeholder=""
                          type="text"
                          value=""
                        >
                          <input
                            autoComplete="off"
                            className="FormControl-sc-1amoaox-0 lpicKK form-control"
                            id="pattern-selector"
                            label="Filter pattern"
                            name="pattern-selector"
                            onChange={[Function]}
                            onKeyDown={[Function]}
                            placeholder=""
                            type="text"
                            value=""
                          />
                        </FormControl>
                      </StyledComponent>
                    </FormControl>
                  </span>
                </InputWrapper>
              </div>
            </FormGroup>
          </Input>
          <ListGroup
            bsClass="resultList"
          >
            <ul
              className="resultList"
            />
          </ListGroup>
        </div>
      </Col>
    </div>
  </Row>
</GrokPatternInput>
`;
