// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<EditPatternModal /> should render a modal button with as create 1`] = `
<EditPatternModal
  create={true}
  id=""
  name=""
  pattern=""
  patterns={Array []}
  sampleData=""
  savePattern={[Function]}
  testPattern={[Function]}
  validPatternName={[Function]}
>
  <span>
    <ForwardRef
      bsStyle="success"
      onClick={[Function]}
    >
      <Button__StyledButton
        bsStyle="success"
        onClick={[Function]}
      >
        <Button
          active={false}
          block={false}
          bsClass="btn"
          bsStyle="success"
          className="Button__StyledButton-c9cbmb-0 jHWfTP"
          disabled={false}
          onClick={[Function]}
        >
          <button
            className="Button__StyledButton-c9cbmb-0 jHWfTP btn btn-success"
            disabled={false}
            onClick={[Function]}
            type="button"
          >
            Create pattern
          </button>
        </Button>
      </Button__StyledButton>
    </ForwardRef>
    <BootstrapModalForm
      bsSize="large"
      cancelButtonText="Cancel"
      formProps={Object {}}
      onCancel={[Function]}
      onModalClose={[Function]}
      onModalOpen={[Function]}
      onSubmitForm={[Function]}
      show={false}
      submitButtonDisabled={false}
      submitButtonText="Save"
      title="Create Grok Pattern "
    >
      <BootstrapModalWrapper
        backdrop="static"
        bsSize="large"
        onClose={[Function]}
        onHide={[Function]}
        onOpen={[Function]}
        showModal={false}
      >
        <Modal
          backdrop="static"
          bsSize="large"
          onHide={[Function]}
          show={false}
        >
          <Modal
            animation={true}
            autoFocus={true}
            backdrop="static"
            bsClass="modal"
            bsSize="large"
            className="Modal-nuree8-0 hMPgsT"
            dialogComponentClass={[Function]}
            enforceFocus={true}
            keyboard={true}
            manager={
              ModalManager {
                "add": [Function],
                "containers": Array [],
                "data": Array [],
                "handleContainerOverflow": true,
                "hideSiblingNodes": true,
                "isTopModal": [Function],
                "modals": Array [],
                "remove": [Function],
              }
            }
            onHide={[Function]}
            renderBackdrop={[Function]}
            restoreFocus={true}
            show={false}
          >
            <Modal
              autoFocus={true}
              backdrop="static"
              backdropClassName="modal-backdrop"
              backdropTransition={[Function]}
              containerClassName="modal-open"
              enforceFocus={true}
              keyboard={true}
              manager={
                ModalManager {
                  "add": [Function],
                  "containers": Array [],
                  "data": Array [],
                  "handleContainerOverflow": true,
                  "hideSiblingNodes": true,
                  "isTopModal": [Function],
                  "modals": Array [],
                  "remove": [Function],
                }
              }
              onEntering={[Function]}
              onExited={[Function]}
              onHide={[Function]}
              onMouseUp={[Function]}
              renderBackdrop={[Function]}
              restoreFocus={true}
              show={false}
              transition={[Function]}
            />
          </Modal>
        </Modal>
      </BootstrapModalWrapper>
    </BootstrapModalForm>
  </span>
</EditPatternModal>
`;

exports[`<EditPatternModal /> should render a modal button with as edit 1`] = `
<EditPatternModal
  create={false}
  id=""
  name=""
  pattern=""
  patterns={Array []}
  sampleData=""
  savePattern={[Function]}
  testPattern={[Function]}
  validPatternName={[Function]}
>
  <span>
    <ForwardRef
      bsSize="xs"
      bsStyle="info"
      onClick={[Function]}
    >
      <Button__StyledButton
        bsSize="xs"
        bsStyle="info"
        onClick={[Function]}
      >
        <Button
          active={false}
          block={false}
          bsClass="btn"
          bsSize="xs"
          bsStyle="info"
          className="Button__StyledButton-c9cbmb-0 jHWfTP"
          disabled={false}
          onClick={[Function]}
        >
          <button
            className="Button__StyledButton-c9cbmb-0 jHWfTP btn btn-xs btn-info"
            disabled={false}
            onClick={[Function]}
            type="button"
          >
            <span>
              Edit
            </span>
          </button>
        </Button>
      </Button__StyledButton>
    </ForwardRef>
    <BootstrapModalForm
      bsSize="large"
      cancelButtonText="Cancel"
      formProps={Object {}}
      onCancel={[Function]}
      onModalClose={[Function]}
      onModalOpen={[Function]}
      onSubmitForm={[Function]}
      show={false}
      submitButtonDisabled={false}
      submitButtonText="Save"
      title="Edit Grok Pattern "
    >
      <BootstrapModalWrapper
        backdrop="static"
        bsSize="large"
        onClose={[Function]}
        onHide={[Function]}
        onOpen={[Function]}
        showModal={false}
      >
        <Modal
          backdrop="static"
          bsSize="large"
          onHide={[Function]}
          show={false}
        >
          <Modal
            animation={true}
            autoFocus={true}
            backdrop="static"
            bsClass="modal"
            bsSize="large"
            className="Modal-nuree8-0 hMPgsT"
            dialogComponentClass={[Function]}
            enforceFocus={true}
            keyboard={true}
            manager={
              ModalManager {
                "add": [Function],
                "containers": Array [],
                "data": Array [],
                "handleContainerOverflow": true,
                "hideSiblingNodes": true,
                "isTopModal": [Function],
                "modals": Array [],
                "remove": [Function],
              }
            }
            onHide={[Function]}
            renderBackdrop={[Function]}
            restoreFocus={true}
            show={false}
          >
            <Modal
              autoFocus={true}
              backdrop="static"
              backdropClassName="modal-backdrop"
              backdropTransition={[Function]}
              containerClassName="modal-open"
              enforceFocus={true}
              keyboard={true}
              manager={
                ModalManager {
                  "add": [Function],
                  "containers": Array [],
                  "data": Array [],
                  "handleContainerOverflow": true,
                  "hideSiblingNodes": true,
                  "isTopModal": [Function],
                  "modals": Array [],
                  "remove": [Function],
                }
              }
              onEntering={[Function]}
              onExited={[Function]}
              onHide={[Function]}
              onMouseUp={[Function]}
              renderBackdrop={[Function]}
              restoreFocus={true}
              show={false}
              transition={[Function]}
            />
          </Modal>
        </Modal>
      </BootstrapModalWrapper>
    </BootstrapModalForm>
  </span>
</EditPatternModal>
`;
