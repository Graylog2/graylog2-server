// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<DataAdapterCreate /> should render for types with defined frontend components 1`] = `
<DataAdapterCreate
  saved={[Function]}
  types={
    Object {
      "someType": Object {
        "type": "someType",
      },
    }
  }
  validate={null}
  validationErrors={Object {}}
>
  <div>
    <Row
      className="content"
    >
<<<<<<< HEAD
      <Row
        bsClass="row"
        className="Row-sc-3iisrt-0 gPzTHl content"
        componentClass="div"
      >
        <div
          className="Row-sc-3iisrt-0 gPzTHl content row"
        >
          <Col
            bsClass="col"
            componentClass="div"
            lg={8}
          >
            <div
              className="col-lg-8"
            >
              <form
                className="form form-horizontal"
                onSubmit={[Function]}
              >
                <InputMock
                  autoFocus={true}
                  help="The type of data adapter to configure."
                  id="data-adapter-type-select"
                  label="Data Adapter Type"
                  labelClassName="col-sm-3"
                  required={true}
                  wrapperClassName="col-sm-9"
                >
                  <input-mock
=======
      <StyledComponent
        className="content"
        forwardedComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "Row-sc-3iisrt-0",
              "isStatic": false,
              "lastClassName": "bRJRJg",
              "rules": Array [
                "&.content{",
                [Function],
                "}",
              ],
            },
            "displayName": "Row",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "Row-sc-3iisrt-0",
            "target": [Function],
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
      >
        <Row
          bsClass="row"
          className="Row-sc-3iisrt-0 bRJRJg content"
          componentClass="div"
        >
          <div
            className="Row-sc-3iisrt-0 bRJRJg content row"
          >
            <Col
              bsClass="col"
              componentClass="div"
              lg={8}
            >
              <div
                className="col-lg-8"
              >
                <form
                  className="form form-horizontal"
                  onSubmit={[Function]}
                >
                  <InputMock
>>>>>>> 1634bb410f... snapshots
                    autoFocus={true}
                    help="The type of data adapter to configure."
                    id="data-adapter-type-select"
                    label="Data Adapter Type"
                    labelClassName="col-sm-3"
                    required={true}
                    wrapperClassName="col-sm-9"
                  >
<<<<<<< HEAD
                    <SelectMock
                      clearable={false}
                      matchProp="label"
                      onChange={[Function]}
                      options={
                        Array [
                          Object {
                            "label": "Some Mocked Data Adapter Type",
                            "value": "someType",
                          },
                        ]
                      }
                      placeholder="Select Data Adapter Type"
                      value={null}
                    >
                      <select-mock
=======
                    <input-mock
                      autoFocus={true}
                      help="The type of data adapter to configure."
                      id="data-adapter-type-select"
                      label="Data Adapter Type"
                      labelClassName="col-sm-3"
                      required={true}
                      wrapperClassName="col-sm-9"
                    >
                      <SelectMock
>>>>>>> 1634bb410f... snapshots
                        clearable={false}
                        matchProp="label"
                        onChange={[Function]}
                        options={
                          Array [
                            Object {
                              "label": "Some Mocked Data Adapter Type",
                              "value": "someType",
                            },
                          ]
                        }
                        placeholder="Select Data Adapter Type"
                        value={null}
<<<<<<< HEAD
                      />
                    </SelectMock>
                  </input-mock>
                </InputMock>
              </form>
            </div>
          </Col>
        </div>
      </Row>
=======
                      >
                        <select-mock
                          clearable={false}
                          matchProp="label"
                          onChange={[Function]}
                          options={
                            Array [
                              Object {
                                "label": "Some Mocked Data Adapter Type",
                                "value": "someType",
                              },
                            ]
                          }
                          placeholder="Select Data Adapter Type"
                          value={null}
                        />
                      </SelectMock>
                    </input-mock>
                  </InputMock>
                </form>
              </div>
            </Col>
          </div>
        </Row>
      </StyledComponent>
>>>>>>> 1634bb410f... snapshots
    </Row>
  </div>
</DataAdapterCreate>
`;

exports[`<DataAdapterCreate /> should render with empty parameters 1`] = `
<DataAdapterCreate
  saved={[Function]}
  types={Object {}}
  validate={null}
  validationErrors={Object {}}
>
  <div>
    <Row
      className="content"
    >
<<<<<<< HEAD
      <Row
        bsClass="row"
        className="Row-sc-3iisrt-0 gPzTHl content"
        componentClass="div"
      >
        <div
          className="Row-sc-3iisrt-0 gPzTHl content row"
        >
          <Col
            bsClass="col"
            componentClass="div"
            lg={8}
          >
            <div
              className="col-lg-8"
            >
              <form
                className="form form-horizontal"
                onSubmit={[Function]}
              >
                <InputMock
                  autoFocus={true}
                  help="The type of data adapter to configure."
                  id="data-adapter-type-select"
                  label="Data Adapter Type"
                  labelClassName="col-sm-3"
                  required={true}
                  wrapperClassName="col-sm-9"
                >
                  <input-mock
=======
      <StyledComponent
        className="content"
        forwardedComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "Row-sc-3iisrt-0",
              "isStatic": false,
              "lastClassName": "bRJRJg",
              "rules": Array [
                "&.content{",
                [Function],
                "}",
              ],
            },
            "displayName": "Row",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "Row-sc-3iisrt-0",
            "target": [Function],
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
      >
        <Row
          bsClass="row"
          className="Row-sc-3iisrt-0 bRJRJg content"
          componentClass="div"
        >
          <div
            className="Row-sc-3iisrt-0 bRJRJg content row"
          >
            <Col
              bsClass="col"
              componentClass="div"
              lg={8}
            >
              <div
                className="col-lg-8"
              >
                <form
                  className="form form-horizontal"
                  onSubmit={[Function]}
                >
                  <InputMock
>>>>>>> 1634bb410f... snapshots
                    autoFocus={true}
                    help="The type of data adapter to configure."
                    id="data-adapter-type-select"
                    label="Data Adapter Type"
                    labelClassName="col-sm-3"
                    required={true}
                    wrapperClassName="col-sm-9"
                  >
<<<<<<< HEAD
                    <SelectMock
                      clearable={false}
                      matchProp="label"
                      onChange={[Function]}
                      options={Array []}
                      placeholder="Select Data Adapter Type"
                      value={null}
                    >
                      <select-mock
=======
                    <input-mock
                      autoFocus={true}
                      help="The type of data adapter to configure."
                      id="data-adapter-type-select"
                      label="Data Adapter Type"
                      labelClassName="col-sm-3"
                      required={true}
                      wrapperClassName="col-sm-9"
                    >
                      <SelectMock
>>>>>>> 1634bb410f... snapshots
                        clearable={false}
                        matchProp="label"
                        onChange={[Function]}
                        options={Array []}
                        placeholder="Select Data Adapter Type"
                        value={null}
<<<<<<< HEAD
                      />
                    </SelectMock>
                  </input-mock>
                </InputMock>
              </form>
            </div>
          </Col>
        </div>
      </Row>
=======
                      >
                        <select-mock
                          clearable={false}
                          matchProp="label"
                          onChange={[Function]}
                          options={Array []}
                          placeholder="Select Data Adapter Type"
                          value={null}
                        />
                      </SelectMock>
                    </input-mock>
                  </InputMock>
                </form>
              </div>
            </Col>
          </div>
        </Row>
      </StyledComponent>
>>>>>>> 1634bb410f... snapshots
    </Row>
  </div>
</DataAdapterCreate>
`;

exports[`<DataAdapterCreate /> with mocked console.error should render for types without defined frontend components 1`] = `
<DataAdapterCreate
  saved={[Function]}
  types={
    Object {
      "unknownType": Object {
        "type": "unknownType",
      },
    }
  }
  validate={null}
  validationErrors={Object {}}
>
  <div>
    <Row
      className="content"
    >
<<<<<<< HEAD
      <Row
        bsClass="row"
        className="Row-sc-3iisrt-0 gPzTHl content"
        componentClass="div"
      >
        <div
          className="Row-sc-3iisrt-0 gPzTHl content row"
        >
          <Col
            bsClass="col"
            componentClass="div"
            lg={8}
          >
            <div
              className="col-lg-8"
            >
              <form
                className="form form-horizontal"
                onSubmit={[Function]}
              >
                <InputMock
                  autoFocus={true}
                  help="The type of data adapter to configure."
                  id="data-adapter-type-select"
                  label="Data Adapter Type"
                  labelClassName="col-sm-3"
                  required={true}
                  wrapperClassName="col-sm-9"
                >
                  <input-mock
=======
      <StyledComponent
        className="content"
        forwardedComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "Row-sc-3iisrt-0",
              "isStatic": false,
              "lastClassName": "bRJRJg",
              "rules": Array [
                "&.content{",
                [Function],
                "}",
              ],
            },
            "displayName": "Row",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "Row-sc-3iisrt-0",
            "target": [Function],
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
      >
        <Row
          bsClass="row"
          className="Row-sc-3iisrt-0 bRJRJg content"
          componentClass="div"
        >
          <div
            className="Row-sc-3iisrt-0 bRJRJg content row"
          >
            <Col
              bsClass="col"
              componentClass="div"
              lg={8}
            >
              <div
                className="col-lg-8"
              >
                <form
                  className="form form-horizontal"
                  onSubmit={[Function]}
                >
                  <InputMock
>>>>>>> 1634bb410f... snapshots
                    autoFocus={true}
                    help="The type of data adapter to configure."
                    id="data-adapter-type-select"
                    label="Data Adapter Type"
                    labelClassName="col-sm-3"
                    required={true}
                    wrapperClassName="col-sm-9"
                  >
<<<<<<< HEAD
                    <SelectMock
                      clearable={false}
                      matchProp="label"
                      onChange={[Function]}
                      options={
                        Array [
                          Object {
                            "disabled": true,
                            "label": "unknownType - missing or invalid plugin",
                            "value": "unknownType",
                          },
                        ]
                      }
                      placeholder="Select Data Adapter Type"
                      value={null}
                    >
                      <select-mock
=======
                    <input-mock
                      autoFocus={true}
                      help="The type of data adapter to configure."
                      id="data-adapter-type-select"
                      label="Data Adapter Type"
                      labelClassName="col-sm-3"
                      required={true}
                      wrapperClassName="col-sm-9"
                    >
                      <SelectMock
>>>>>>> 1634bb410f... snapshots
                        clearable={false}
                        matchProp="label"
                        onChange={[Function]}
                        options={
                          Array [
                            Object {
                              "disabled": true,
                              "label": "unknownType - missing or invalid plugin",
                              "value": "unknownType",
                            },
                          ]
                        }
                        placeholder="Select Data Adapter Type"
                        value={null}
<<<<<<< HEAD
                      />
                    </SelectMock>
                  </input-mock>
                </InputMock>
              </form>
            </div>
          </Col>
        </div>
      </Row>
=======
                      >
                        <select-mock
                          clearable={false}
                          matchProp="label"
                          onChange={[Function]}
                          options={
                            Array [
                              Object {
                                "disabled": true,
                                "label": "unknownType - missing or invalid plugin",
                                "value": "unknownType",
                              },
                            ]
                          }
                          placeholder="Select Data Adapter Type"
                          value={null}
                        />
                      </SelectMock>
                    </input-mock>
                  </InputMock>
                </form>
              </div>
            </Col>
          </div>
        </Row>
      </StyledComponent>
>>>>>>> 1634bb410f... snapshots
    </Row>
  </div>
</DataAdapterCreate>
`;
