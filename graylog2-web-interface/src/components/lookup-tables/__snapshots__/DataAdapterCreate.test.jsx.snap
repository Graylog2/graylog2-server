// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<DataAdapterCreate /> should render for types with defined frontend components 1`] = `
<DataAdapterCreate
  saved={[Function]}
  types={
    Object {
      "someType": Object {
        "type": "someType",
      },
    }
  }
  validate={null}
  validationErrors={Object {}}
>
  <div>
    <Row
      bsClass="row"
      className="content"
      componentClass="div"
    >
      <div
        className="content row"
      >
        <Col
          bsClass="col"
          componentClass="div"
          lg={8}
        >
          <div
            className="col-lg-8"
          >
            <form
              className="form form-horizontal"
              onSubmit={[Function]}
            >
              <InputMock
                autoFocus={true}
                help="The type of data adapter to configure."
                id="data-adapter-type-select"
                label="Data Adapter Type"
                labelClassName="col-sm-3"
                required={true}
                wrapperClassName="col-sm-9"
              >
                <input-mock
                  autoFocus={true}
                  help="The type of data adapter to configure."
                  id="data-adapter-type-select"
                  label="Data Adapter Type"
                  labelClassName="col-sm-3"
                  required={true}
                  wrapperClassName="col-sm-9"
                >
                  <SelectMock
                    clearable={false}
                    matchProp="label"
                    onChange={[Function]}
                    options={
                      Array [
                        Object {
                          "label": "Some Mocked Data Adapter Type",
                          "value": "someType",
                        },
                      ]
                    }
                    placeholder="Select Data Adapter Type"
                    value={null}
                  >
                    <select-mock
                      clearable={false}
                      matchProp="label"
                      onChange={[Function]}
                      options={
                        Array [
                          Object {
                            "label": "Some Mocked Data Adapter Type",
                            "value": "someType",
                          },
                        ]
                      }
                      placeholder="Select Data Adapter Type"
                      value={null}
                    />
                  </SelectMock>
                </input-mock>
              </InputMock>
            </form>
          </div>
        </Col>
      </div>
    </Row>
  </div>
</DataAdapterCreate>
`;

exports[`<DataAdapterCreate /> should render with empty parameters 1`] = `
<DataAdapterCreate
  saved={[Function]}
  types={Object {}}
  validate={null}
  validationErrors={Object {}}
>
  <div>
    <Row
      bsClass="row"
      className="content"
      componentClass="div"
    >
      <div
        className="content row"
      >
        <Col
          bsClass="col"
          componentClass="div"
          lg={8}
        >
          <div
            className="col-lg-8"
          >
            <form
              className="form form-horizontal"
              onSubmit={[Function]}
            >
              <InputMock
                autoFocus={true}
                help="The type of data adapter to configure."
                id="data-adapter-type-select"
                label="Data Adapter Type"
                labelClassName="col-sm-3"
                required={true}
                wrapperClassName="col-sm-9"
              >
                <input-mock
                  autoFocus={true}
                  help="The type of data adapter to configure."
                  id="data-adapter-type-select"
                  label="Data Adapter Type"
                  labelClassName="col-sm-3"
                  required={true}
                  wrapperClassName="col-sm-9"
                >
                  <SelectMock
                    clearable={false}
                    matchProp="label"
                    onChange={[Function]}
                    options={Array []}
                    placeholder="Select Data Adapter Type"
                    value={null}
                  >
                    <select-mock
                      clearable={false}
                      matchProp="label"
                      onChange={[Function]}
                      options={Array []}
                      placeholder="Select Data Adapter Type"
                      value={null}
                    />
                  </SelectMock>
                </input-mock>
              </InputMock>
            </form>
          </div>
        </Col>
      </div>
    </Row>
  </div>
</DataAdapterCreate>
`;

exports[`<DataAdapterCreate /> with mocked console.error should render for types without defined frontend components 1`] = `
<DataAdapterCreate
  saved={[Function]}
  types={
    Object {
      "unknownType": Object {
        "type": "unknownType",
      },
    }
  }
  validate={null}
  validationErrors={Object {}}
>
  <div>
    <Row
      bsClass="row"
      className="content"
      componentClass="div"
    >
      <div
        className="content row"
      >
        <Col
          bsClass="col"
          componentClass="div"
          lg={8}
        >
          <div
            className="col-lg-8"
          >
            <form
              className="form form-horizontal"
              onSubmit={[Function]}
            >
              <InputMock
                autoFocus={true}
                help="The type of data adapter to configure."
                id="data-adapter-type-select"
                label="Data Adapter Type"
                labelClassName="col-sm-3"
                required={true}
                wrapperClassName="col-sm-9"
              >
                <input-mock
                  autoFocus={true}
                  help="The type of data adapter to configure."
                  id="data-adapter-type-select"
                  label="Data Adapter Type"
                  labelClassName="col-sm-3"
                  required={true}
                  wrapperClassName="col-sm-9"
                >
                  <SelectMock
                    clearable={false}
                    matchProp="label"
                    onChange={[Function]}
                    options={
                      Array [
                        Object {
                          "disabled": true,
                          "label": "unknownType - missing or invalid plugin",
                          "value": "unknownType",
                        },
                      ]
                    }
                    placeholder="Select Data Adapter Type"
                    value={null}
                  >
                    <select-mock
                      clearable={false}
                      matchProp="label"
                      onChange={[Function]}
                      options={
                        Array [
                          Object {
                            "disabled": true,
                            "label": "unknownType - missing or invalid plugin",
                            "value": "unknownType",
                          },
                        ]
                      }
                      placeholder="Select Data Adapter Type"
                      value={null}
                    />
                  </SelectMock>
                </input-mock>
              </InputMock>
            </form>
          </div>
        </Col>
      </div>
    </Row>
  </div>
</DataAdapterCreate>
`;
