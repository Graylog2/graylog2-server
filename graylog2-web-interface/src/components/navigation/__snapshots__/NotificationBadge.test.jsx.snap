// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`NotificationBadge renders count when there are notifications 1`] = `
<NotificationBadge
  total={42}
>
  <Nav
    navbar={true}
  >
    <StyledComponent
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "STYLES": Array [
            "tabs",
            "pills",
          ],
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "Nav-dzawzr-0",
            "isStatic": true,
            "lastClassName": "zLQl",
            "rules": Array [
              "&.nav{> li{> a{&:hover,&:focus{background-color:",
              "#F1F2F2",
              ";}}&.disabled > a{color:",
              "#DCE1E5",
              ";&:hover,&:focus{color:",
              "#DCE1E5",
              ";}}}.open > a{&,&:hover,&:focus{background-color:",
              "#F1F2F2",
              ";border-color:",
              "#9E1F63",
              ";}}}&.nav-tabs{border-bottom-color:",
              "#9E1F63",
              ";> li{> a{&:hover{border-color:",
              "#F1F2F2",
              " ",
              "#F1F2F2",
              " ",
              "#9E1F63",
              ";}}&.active > a{&,&:hover,&:focus{color:",
              "#1F1F1F",
              ";background-color:",
              "#FFF",
              ";border-color:",
              "#9E1F63",
              ";border-bottom-color:transparent;}}}}&.nav-pills{> li{&.active > a{&,&:hover,&:focus{color:",
              "#FFF",
              ";background-color:",
              "#9E1F63",
              ";}}}}&.nav-tabs.nav-justified{> .active > a,> .active > a:hover,> .active > a:focus{border-color:",
              "#9E1F63",
              ";}@media (min-width:",
              "768px",
              "){> li > a{border-bottom-color:",
              "#9E1F63",
              ";}> .active > a,> .active > a:hover,> .active > a:focus{border-bottom-color:",
              "#FFF",
              ";}}}",
            ],
          },
          "displayName": "Nav",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "Nav-dzawzr-0",
          "target": [Function],
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
      navbar={true}
    >
      <Nav
        bsClass="nav"
        className="Nav-dzawzr-0 zLQl"
        justified={false}
        navbar={true}
        pullLeft={false}
        pullRight={false}
        stacked={false}
      >
        <ul
          className="Nav-dzawzr-0 zLQl nav navbar-nav"
          role={null}
        >
          <LinkContainer
            action="push"
            key=".0"
            onSelect={null}
            onlyActiveOnIndex={false}
            to="/system/overview"
          >
            <InactiveNavItem
              action="push"
              className="notification-badge-link"
              onClick={[Function]}
              onSelect={null}
            >
              <NavItem
                action="push"
                active={false}
                className="notification-badge-link"
                disabled={false}
                onClick={[Function]}
                onSelect={null}
              >
                <li
                  className="notification-badge-link"
                  role="presentation"
                >
                  <SafeAnchor
                    action="push"
                    componentClass="a"
                    disabled={false}
                    onClick={[Function]}
                  >
                    <a
                      action="push"
                      href="#"
                      onClick={[Function]}
                      onKeyDown={[Function]}
                      role="button"
                    >
                      <ForwardRef
                        bsStyle="danger"
                        id="notification-badge"
                      >
                        <Badge__StyledBadge
                          bsStyle="danger"
                          id="notification-badge"
                        >
                          <StyledComponent
                            bsStyle="danger"
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "Badge__StyledBadge-sc-4gzqz0-0",
                                  "isStatic": false,
                                  "lastClassName": "gDhrrS",
                                  "rules": Array [
                                    [Function],
                                  ],
                                },
                                "displayName": "Badge__StyledBadge",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "Badge__StyledBadge-sc-4gzqz0-0",
                                "target": [Function],
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                            id="notification-badge"
                          >
                            <Badge
                              bsClass="badge"
                              bsStyle="danger"
                              className="Badge__StyledBadge-sc-4gzqz0-0 gDhrrS"
                              id="notification-badge"
                              pullRight={false}
                            >
                              <span
                                className="Badge__StyledBadge-sc-4gzqz0-0 gDhrrS badge badge-danger"
                                id="notification-badge"
                              >
                                42
                              </span>
                            </Badge>
                          </StyledComponent>
                        </Badge__StyledBadge>
                      </ForwardRef>
                    </a>
                  </SafeAnchor>
                </li>
              </NavItem>
            </InactiveNavItem>
          </LinkContainer>
        </ul>
      </Nav>
    </StyledComponent>
  </Nav>
</NotificationBadge>
`;

exports[`NotificationBadge renders nothing when there are no notifications 1`] = `
<NotificationBadge
  total={0}
/>
`;
