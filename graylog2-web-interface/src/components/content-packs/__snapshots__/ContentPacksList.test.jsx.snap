// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<ContentPacksList /> should render with content packs 1`] = `
<ContentPacksList
  contentPackMetadata={
    Object {
      "1": Object {
        "1": Object {
          "installation_count": 1,
        },
      },
      "2": Object {
        "5": Object {
          "installation_count": 2,
        },
      },
    }
  }
  contentPacks={
    Array [
      Object {
        "id": "1",
        "rev": 1,
        "summary": "Grok Patterns to extract informations from UFW logfiles",
        "title": "UFW Grok Patterns",
        "version": "1.0",
      },
      Object {
        "id": "2",
        "rev": 1,
        "summary": "Patterns to retreive rails production logs",
        "title": "Rails Log Patterns",
        "version": "2.1",
      },
      Object {
        "id": "3",
        "rev": 1,
        "summary": "",
        "title": "Backup Content Pack",
        "version": "3.0",
      },
      Object {
        "id": "4",
        "rev": 1,
        "summary": "A crypted backup over ssh.",
        "title": "SSH Archive",
        "version": "3.4",
      },
      Object {
        "id": "5",
        "rev": 1,
        "summary": "Fast but insecure backup",
        "title": "FTP Backup",
        "version": "1.0",
      },
      Object {
        "id": "6",
        "rev": 1,
        "summary": "Grok Patterns to extract informations from UFW logfiles",
        "title": "UFW Grok Patterns",
        "version": "1.0",
      },
      Object {
        "id": "7",
        "rev": 1,
        "summary": "Patterns to retreive rails production logs",
        "title": "Rails Log Patterns",
        "version": "2.1",
      },
      Object {
        "id": "8",
        "rev": 1,
        "states": Array [
          "installed",
        ],
        "summary": "",
        "title": "Backup Content Pack",
        "version": "3.0",
      },
      Object {
        "id": "9",
        "rev": 1,
        "summary": "A crypted backup over ssh.",
        "title": "SSH Archive",
        "version": "3.4",
      },
      Object {
        "id": "10",
        "rev": 1,
        "summary": "Fast but insecure backup",
        "title": "FTP Backup",
        "version": "1.0",
      },
      Object {
        "id": "11",
        "rev": 1,
        "summary": "Grok Patterns to extract informations from UFW logfiles",
        "title": "UFW Grok Patterns",
        "version": "1.0",
      },
      Object {
        "id": "12",
        "rev": 1,
        "summary": "Patterns to retreive rails production logs",
        "title": "Rails Log Patterns",
        "version": "2.1",
      },
      Object {
        "id": "13",
        "rev": 1,
        "summary": "",
        "title": "Backup Content Pack",
        "version": "3.0",
      },
      Object {
        "id": "14",
        "rev": 1,
        "summary": "A crypted backup over ssh.",
        "title": "SSH Archive",
        "version": "3.4",
      },
      Object {
        "id": "15",
        "rev": 1,
        "summary": "Fast but insecure backup",
        "title": "FTP Backup",
        "version": "1.0",
      },
    ]
  }
  onDeletePack={[Function]}
  onInstall={[Function]}
>
  <div>
    <Row
      bsClass="row"
      className="row-sm"
      componentClass="div"
    >
      <div
        className="row-sm row"
      >
        <Col
          bsClass="col"
          componentClass="div"
          md={5}
        >
          <div
            className="col-md-5"
          >
            <TypeAheadDataFilter
              data={
                Array [
                  Object {
                    "id": "1",
                    "rev": 1,
                    "summary": "Grok Patterns to extract informations from UFW logfiles",
                    "title": "UFW Grok Patterns",
                    "version": "1.0",
                  },
                  Object {
                    "id": "2",
                    "rev": 1,
                    "summary": "Patterns to retreive rails production logs",
                    "title": "Rails Log Patterns",
                    "version": "2.1",
                  },
                  Object {
                    "id": "3",
                    "rev": 1,
                    "summary": "",
                    "title": "Backup Content Pack",
                    "version": "3.0",
                  },
                  Object {
                    "id": "4",
                    "rev": 1,
                    "summary": "A crypted backup over ssh.",
                    "title": "SSH Archive",
                    "version": "3.4",
                  },
                  Object {
                    "id": "5",
                    "rev": 1,
                    "summary": "Fast but insecure backup",
                    "title": "FTP Backup",
                    "version": "1.0",
                  },
                  Object {
                    "id": "6",
                    "rev": 1,
                    "summary": "Grok Patterns to extract informations from UFW logfiles",
                    "title": "UFW Grok Patterns",
                    "version": "1.0",
                  },
                  Object {
                    "id": "7",
                    "rev": 1,
                    "summary": "Patterns to retreive rails production logs",
                    "title": "Rails Log Patterns",
                    "version": "2.1",
                  },
                  Object {
                    "id": "8",
                    "rev": 1,
                    "states": Array [
                      "installed",
                    ],
                    "summary": "",
                    "title": "Backup Content Pack",
                    "version": "3.0",
                  },
                  Object {
                    "id": "9",
                    "rev": 1,
                    "summary": "A crypted backup over ssh.",
                    "title": "SSH Archive",
                    "version": "3.4",
                  },
                  Object {
                    "id": "10",
                    "rev": 1,
                    "summary": "Fast but insecure backup",
                    "title": "FTP Backup",
                    "version": "1.0",
                  },
                  Object {
                    "id": "11",
                    "rev": 1,
                    "summary": "Grok Patterns to extract informations from UFW logfiles",
                    "title": "UFW Grok Patterns",
                    "version": "1.0",
                  },
                  Object {
                    "id": "12",
                    "rev": 1,
                    "summary": "Patterns to retreive rails production logs",
                    "title": "Rails Log Patterns",
                    "version": "2.1",
                  },
                  Object {
                    "id": "13",
                    "rev": 1,
                    "summary": "",
                    "title": "Backup Content Pack",
                    "version": "3.0",
                  },
                  Object {
                    "id": "14",
                    "rev": 1,
                    "summary": "A crypted backup over ssh.",
                    "title": "SSH Archive",
                    "version": "3.4",
                  },
                  Object {
                    "id": "15",
                    "rev": 1,
                    "summary": "Fast but insecure backup",
                    "title": "FTP Backup",
                    "version": "1.0",
                  },
                ]
              }
              displayKey="name"
              filterBy=""
              filterSuggestionAccessor=""
              filterSuggestions={Array []}
              id="content-packs-filter"
              label="Filter"
              onDataFiltered={[Function]}
              searchInKeys={
                Array [
                  "name",
                  "summary",
                ]
              }
            >
              <div
                className="filter"
              >
                <form
                  className="form-inline"
                  onSubmit={[Function]}
                  style={
                    Object {
                      "display": "inline",
                    }
                  }
                >
                  <TypeAheadInput
                    displayKey="name"
                    id="content-packs-filter"
                    label="Filter"
                    onSuggestionSelected={[Function]}
                    suggestionText="Filter by : "
                    suggestions={Array []}
                  >
                    <Input
                      addonAfter={null}
                      bsStyle={null}
                      buttonAfter={null}
                      help=""
                      id="content-packs-filter"
                      label="Filter"
                      placeholder=""
                      type="text"
                      wrapperClassName="typeahead-wrapper"
                    >
                      <Component
                        controlId="content-packs-filter"
                        validationState={null}
                      >
                        <FormGroup__StyledFormGroup
                          controlId="content-packs-filter"
                          validationState={null}
                        >
                          <StyledComponent
                            controlId="content-packs-filter"
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "SIZES": Array [
                                  "large",
                                  "small",
                                ],
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "FormGroup__StyledFormGroup-sc-1wv4cm9-0",
                                  "isStatic": false,
                                  "lastClassName": "gcTkZc",
                                  "rules": Array [
                                    [Function],
                                  ],
                                },
                                "displayName": "FormGroup__StyledFormGroup",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "FormGroup__StyledFormGroup-sc-1wv4cm9-0",
                                "target": [Function],
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                            validationState={null}
                          >
                            <FormGroup
                              bsClass="form-group"
                              className="FormGroup__StyledFormGroup-sc-1wv4cm9-0 gcTkZc"
                              controlId="content-packs-filter"
                              validationState={null}
                            >
                              <div
                                className="FormGroup__StyledFormGroup-sc-1wv4cm9-0 gcTkZc form-group"
                              >
                                <ControlLabel>
                                  <StyledComponent
                                    forwardedComponent={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "attrs": Array [],
                                        "componentStyle": ComponentStyle {
                                          "componentId": "ControlLabel-sc-1edmum5-0",
                                          "isStatic": false,
                                          "lastClassName": "hCskeX",
                                          "rules": Array [
                                            [Function],
                                          ],
                                        },
                                        "displayName": "ControlLabel",
                                        "foldedComponentIds": Array [],
                                        "render": [Function],
                                        "styledComponentId": "ControlLabel-sc-1edmum5-0",
                                        "target": [Function],
                                        "toString": [Function],
                                        "warnTooManyClasses": [Function],
                                        "withComponent": [Function],
                                      }
                                    }
                                    forwardedRef={null}
                                  >
                                    <ControlLabel
                                      bsClass="control-label"
                                      className="ControlLabel-sc-1edmum5-0 hCskeX"
                                      srOnly={false}
                                    >
                                      <label
                                        className="ControlLabel-sc-1edmum5-0 hCskeX control-label"
                                        htmlFor="content-packs-filter"
                                      >
                                        Filter
                                      </label>
                                    </ControlLabel>
                                  </StyledComponent>
                                </ControlLabel>
                                <InputWrapper
                                  className="typeahead-wrapper"
                                >
                                  <div
                                    className="typeahead-wrapper"
                                  >
                                    <FormControl
                                      componentClass="input"
                                      inputRef={[Function]}
                                      label="Filter"
                                      name="content-packs-filter"
                                      placeholder=""
                                      type="text"
                                    >
                                      <StyledComponent
                                        componentClass="input"
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "Feedback": [Function],
                                            "SIZES": Array [
                                              "small",
                                              "large",
                                            ],
                                            "Static": [Function],
                                            "attrs": Array [],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "FormControl-sc-1amoaox-0",
                                              "isStatic": false,
                                              "lastClassName": "eXfwDC",
                                              "rules": Array [
                                                [Function],
                                              ],
                                            },
                                            "displayName": "FormControl",
                                            "foldedComponentIds": Array [],
                                            "render": [Function],
                                            "styledComponentId": "FormControl-sc-1amoaox-0",
                                            "target": [Function],
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                        inputRef={[Function]}
                                        label="Filter"
                                        name="content-packs-filter"
                                        placeholder=""
                                        type="text"
                                      >
                                        <FormControl
                                          bsClass="form-control"
                                          className="FormControl-sc-1amoaox-0 eXfwDC"
                                          componentClass="input"
                                          inputRef={[Function]}
                                          label="Filter"
                                          name="content-packs-filter"
                                          placeholder=""
                                          type="text"
                                        >
                                          <input
                                            className="FormControl-sc-1amoaox-0 eXfwDC form-control"
                                            id="content-packs-filter"
                                            label="Filter"
                                            name="content-packs-filter"
                                            placeholder=""
                                            type="text"
                                          />
                                        </FormControl>
                                      </StyledComponent>
                                    </FormControl>
                                  </div>
                                </InputWrapper>
                              </div>
                            </FormGroup>
                          </StyledComponent>
                        </FormGroup__StyledFormGroup>
                      </Component>
                    </Input>
                  </TypeAheadInput>
                  <ForwardRef
                    style={
                      Object {
                        "marginLeft": 5,
                      }
                    }
                    type="submit"
                  >
                    <Button__StyledButton
                      style={
                        Object {
                          "marginLeft": 5,
                        }
                      }
                      type="submit"
                    >
                      <StyledComponent
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "SIZES": Array [
                              "large",
                              "small",
                              "xsmall",
                            ],
                            "STYLES": Array [
                              "success",
                              "warning",
                              "danger",
                              "info",
                              "default",
                              "primary",
                              "link",
                            ],
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Button__StyledButton-c9cbmb-0",
                              "isStatic": false,
                              "lastClassName": "jVYrA",
                              "rules": Array [
                                [Function],
                              ],
                            },
                            "displayName": "Button__StyledButton",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Button__StyledButton-c9cbmb-0",
                            "target": [Function],
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                        style={
                          Object {
                            "marginLeft": 5,
                          }
                        }
                        type="submit"
                      >
                        <Button
                          active={false}
                          block={false}
                          bsClass="btn"
                          bsStyle="default"
                          className="Button__StyledButton-c9cbmb-0 jVYrA"
                          disabled={false}
                          style={
                            Object {
                              "marginLeft": 5,
                            }
                          }
                          type="submit"
                        >
                          <button
                            className="Button__StyledButton-c9cbmb-0 jVYrA btn btn-default"
                            disabled={false}
                            style={
                              Object {
                                "marginLeft": 5,
                              }
                            }
                            type="submit"
                          >
                            Filter
                          </button>
                        </Button>
                      </StyledComponent>
                    </Button__StyledButton>
                  </ForwardRef>
                  <ForwardRef
                    disabled={true}
                    onClick={[Function]}
                    style={
                      Object {
                        "marginLeft": 5,
                      }
                    }
                    type="button"
                  >
                    <Button__StyledButton
                      disabled={true}
                      onClick={[Function]}
                      style={
                        Object {
                          "marginLeft": 5,
                        }
                      }
                      type="button"
                    >
                      <StyledComponent
                        disabled={true}
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "SIZES": Array [
                              "large",
                              "small",
                              "xsmall",
                            ],
                            "STYLES": Array [
                              "success",
                              "warning",
                              "danger",
                              "info",
                              "default",
                              "primary",
                              "link",
                            ],
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Button__StyledButton-c9cbmb-0",
                              "isStatic": false,
                              "lastClassName": "jVYrA",
                              "rules": Array [
                                [Function],
                              ],
                            },
                            "displayName": "Button__StyledButton",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Button__StyledButton-c9cbmb-0",
                            "target": [Function],
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                        onClick={[Function]}
                        style={
                          Object {
                            "marginLeft": 5,
                          }
                        }
                        type="button"
                      >
                        <Button
                          active={false}
                          block={false}
                          bsClass="btn"
                          bsStyle="default"
                          className="Button__StyledButton-c9cbmb-0 jVYrA"
                          disabled={true}
                          onClick={[Function]}
                          style={
                            Object {
                              "marginLeft": 5,
                            }
                          }
                          type="button"
                        >
                          <button
                            className="Button__StyledButton-c9cbmb-0 jVYrA btn btn-default"
                            disabled={true}
                            onClick={[Function]}
                            style={
                              Object {
                                "marginLeft": 5,
                              }
                            }
                            type="button"
                          >
                            Reset
                          </button>
                        </Button>
                      </StyledComponent>
                    </Button__StyledButton>
                  </ForwardRef>
                </form>
                <ul
                  className="pill-list"
                >
                  <Component />
                </ul>
              </div>
            </TypeAheadDataFilter>
          </div>
        </Col>
        <Col
          bsClass="col"
          componentClass="div"
          md={5}
        >
          <div
            className="col-md-5"
          >
            <Pagination
              boundaryPagesRange={1}
              currentPage={1}
              disabled={false}
              hideEllipsis={false}
              hideFirstAndLastPageLinks={false}
              hidePreviousAndNextPageLinks={false}
              onChange={[Function]}
              siblingPagesRange={1}
              totalPages={2}
            >
              <UltimatePaginationComponent
                boundaryPagesRange={1}
                currentPage={1}
                data-testid="graylog-pagination"
                disabled={false}
                hideEllipsis={false}
                hideFirstAndLastPageLinks={false}
                hidePreviousAndNextPageLinks={false}
                onChange={[Function]}
                siblingPagesRange={1}
                totalPages={2}
              >
                <Pagination__StyledBootstrapPagination
                  data-testid="graylog-pagination"
                >
                  <StyledComponent
                    data-testid="graylog-pagination"
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "Ellipsis": [Function],
                        "First": [Function],
                        "Item": [Function],
                        "Last": [Function],
                        "Next": [Function],
                        "Prev": [Function],
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "Pagination__StyledBootstrapPagination-aj0t2h-0",
                          "isStatic": false,
                          "lastClassName": "flIvuU",
                          "rules": Array [
                            [Function],
                          ],
                        },
                        "displayName": "Pagination__StyledBootstrapPagination",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "Pagination__StyledBootstrapPagination-aj0t2h-0",
                        "target": [Function],
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <Pagination
                      bsClass="pagination"
                      className="Pagination__StyledBootstrapPagination-aj0t2h-0 flIvuU"
                      data-testid="graylog-pagination"
                    >
                      <ul
                        className="Pagination__StyledBootstrapPagination-aj0t2h-0 flIvuU pagination"
                        data-testid="graylog-pagination"
                      >
                        <Component
                          isActive={true}
                          isDisabled={false}
                          key="-3"
                          onClick={[Function]}
                          type="FIRST_PAGE_LINK"
                          value={1}
                        >
                          <First
                            disabled={true}
                            onClick={[Function]}
                          >
                            <li
                              aria-label="First"
                              className="disabled"
                              onClick={[Function]}
                            >
                              <span>
                                <Icon
                                  name="angle-double-left"
                                  type="solid"
                                >
                                  <FontAwesomeIcon
                                    icon={
                                      Object {
                                        "iconName": "angle-double-left",
                                        "prefix": "fas",
                                      }
                                    }
                                  >
                                    <svg
                                      className="svg-inline--fa fa-angle-double-left"
                                    />
                                  </FontAwesomeIcon>
                                </Icon>
                              </span>
                            </li>
                          </First>
                        </Component>
                        <Component
                          isActive={true}
                          isDisabled={false}
                          key="-4"
                          onClick={[Function]}
                          type="PREVIOUS_PAGE_LINK"
                          value={1}
                        >
                          <Prev
                            disabled={true}
                            onClick={[Function]}
                          >
                            <li
                              aria-label="Prev"
                              className="disabled"
                              onClick={[Function]}
                            >
                              <span>
                                <Icon
                                  name="angle-left"
                                  type="solid"
                                >
                                  <FontAwesomeIcon
                                    icon={
                                      Object {
                                        "iconName": "angle-left",
                                        "prefix": "fas",
                                      }
                                    }
                                  >
                                    <svg
                                      className="svg-inline--fa fa-angle-left"
                                    />
                                  </FontAwesomeIcon>
                                </Icon>
                              </span>
                            </li>
                          </Prev>
                        </Component>
                        <Component
                          isActive={true}
                          isDisabled={false}
                          key="1"
                          onClick={[Function]}
                          type="PAGE"
                          value={1}
                        >
                          <PaginationItem
                            active={true}
                            activeLabel="(current)"
                            disabled={false}
                            onClick={[Function]}
                          >
                            <li
                              className="active"
                            >
                              <span
                                disabled={false}
                                onClick={[Function]}
                              >
                                1
                                <span
                                  className="sr-only"
                                >
                                  (current)
                                </span>
                              </span>
                            </li>
                          </PaginationItem>
                        </Component>
                        <Component
                          isActive={false}
                          isDisabled={false}
                          key="2"
                          onClick={[Function]}
                          type="PAGE"
                          value={2}
                        >
                          <PaginationItem
                            active={false}
                            activeLabel="(current)"
                            disabled={false}
                            onClick={[Function]}
                          >
                            <li
                              className=""
                            >
                              <SafeAnchor
                                componentClass="a"
                                disabled={false}
                                onClick={[Function]}
                              >
                                <a
                                  href="#"
                                  onClick={[Function]}
                                  onKeyDown={[Function]}
                                  role="button"
                                >
                                  2
                                </a>
                              </SafeAnchor>
                            </li>
                          </PaginationItem>
                        </Component>
                        <Component
                          isActive={false}
                          isDisabled={false}
                          key="-5"
                          onClick={[Function]}
                          type="NEXT_PAGE_LINK"
                          value={2}
                        >
                          <Next
                            disabled={false}
                            onClick={[Function]}
                          >
                            <li
                              aria-label="Next"
                              className=""
                              onClick={[Function]}
                            >
                              <SafeAnchor
                                componentClass="a"
                              >
                                <a
                                  href="#"
                                  onClick={[Function]}
                                  onKeyDown={[Function]}
                                  role="button"
                                >
                                  <Icon
                                    name="angle-right"
                                    type="solid"
                                  >
                                    <FontAwesomeIcon
                                      icon={
                                        Object {
                                          "iconName": "angle-right",
                                          "prefix": "fas",
                                        }
                                      }
                                    >
                                      <svg
                                        className="svg-inline--fa fa-angle-right"
                                      />
                                    </FontAwesomeIcon>
                                  </Icon>
                                </a>
                              </SafeAnchor>
                            </li>
                          </Next>
                        </Component>
                        <Component
                          isActive={false}
                          isDisabled={false}
                          key="-6"
                          onClick={[Function]}
                          type="LAST_PAGE_LINK"
                          value={2}
                        >
                          <Last
                            disabled={false}
                            onClick={[Function]}
                          >
                            <li
                              aria-label="Last"
                              className=""
                              onClick={[Function]}
                            >
                              <SafeAnchor
                                componentClass="a"
                              >
                                <a
                                  href="#"
                                  onClick={[Function]}
                                  onKeyDown={[Function]}
                                  role="button"
                                >
                                  <Icon
                                    name="angle-double-right"
                                    type="solid"
                                  >
                                    <FontAwesomeIcon
                                      icon={
                                        Object {
                                          "iconName": "angle-double-right",
                                          "prefix": "fas",
                                        }
                                      }
                                    >
                                      <svg
                                        className="svg-inline--fa fa-angle-double-right"
                                      />
                                    </FontAwesomeIcon>
                                  </Icon>
                                </a>
                              </SafeAnchor>
                            </li>
                          </Last>
                        </Component>
                      </ul>
                    </Pagination>
                  </StyledComponent>
                </Pagination__StyledBootstrapPagination>
              </UltimatePaginationComponent>
            </Pagination>
          </div>
        </Col>
        <Col
          bsClass="col"
          className="text-right"
          componentClass="div"
          md={2}
        >
          <div
            className="text-right col-md-2"
          >
            <span>
              Show: 
              <select
                onChange={[Function]}
                value={10}
              >
                <option>
                  10
                </option>
                <option>
                  25
                </option>
                <option>
                  50
                </option>
                <option>
                  100
                </option>
              </select>
            </span>
          </div>
        </Col>
      </div>
    </Row>
    <ControlledTableList>
      <div>
        <ListGroup>
          <ListGroup
            bsClass="list-group"
          >
            <div
              className="list-group"
            >
              <ControlledTableListHeader>
                <ControlledTableListHeader__StyledListGroupItem>
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "ControlledTableListHeader__StyledListGroupItem-tr2y34-0",
                          "isStatic": false,
                          "lastClassName": "ikiWPo",
                          "rules": Array [
                            [Function],
                          ],
                        },
                        "displayName": "ControlledTableListHeader__StyledListGroupItem",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "ControlledTableListHeader__StyledListGroupItem-tr2y34-0",
                        "target": Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "render": [Function],
                        },
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <ForwardRef
                      className="ControlledTableListHeader__StyledListGroupItem-tr2y34-0 ikiWPo"
                    >
                      <ListGroupItem__StyledListGroupItem
                        className="ControlledTableListHeader__StyledListGroupItem-tr2y34-0 ikiWPo"
                      >
                        <StyledComponent
                          className="ControlledTableListHeader__StyledListGroupItem-tr2y34-0 ikiWPo"
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "STYLES": Array [
                                "success",
                                "warning",
                                "danger",
                                "info",
                              ],
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "ListGroupItem__StyledListGroupItem-sc-1ky0joo-0",
                                "isStatic": false,
                                "lastClassName": "jRLKfG",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "ListGroupItem__StyledListGroupItem",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "ListGroupItem__StyledListGroupItem-sc-1ky0joo-0",
                              "target": [Function],
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <ListGroupItem
                            bsClass="list-group-item"
                            className="ListGroupItem__StyledListGroupItem-sc-1ky0joo-0 jRLKfG ControlledTableListHeader__StyledListGroupItem-tr2y34-0 ikiWPo"
                            listItem={false}
                          >
                            <span
                              className="ListGroupItem__StyledListGroupItem-sc-1ky0joo-0 jRLKfG ControlledTableListHeader__StyledListGroupItem-tr2y34-0 ikiWPo list-group-item"
                            >
                              <ControlledTableListHeader__HeaderWrapper>
                                <StyledComponent
                                  forwardedComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "attrs": Array [],
                                      "componentStyle": ComponentStyle {
                                        "componentId": "ControlledTableListHeader__HeaderWrapper-tr2y34-1",
                                        "isStatic": false,
                                        "lastClassName": "ekhgZW",
                                        "rules": Array [
                                          "margin:10px 0;min-height:20px;",
                                        ],
                                      },
                                      "displayName": "ControlledTableListHeader__HeaderWrapper",
                                      "foldedComponentIds": Array [],
                                      "render": [Function],
                                      "styledComponentId": "ControlledTableListHeader__HeaderWrapper-tr2y34-1",
                                      "target": "div",
                                      "toString": [Function],
                                      "warnTooManyClasses": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  forwardedRef={null}
                                >
                                  <div
                                    className="ControlledTableListHeader__HeaderWrapper-tr2y34-1 ekhgZW"
                                  />
                                </StyledComponent>
                              </ControlledTableListHeader__HeaderWrapper>
                            </span>
                          </ListGroupItem>
                        </StyledComponent>
                      </ListGroupItem__StyledListGroupItem>
                    </ForwardRef>
                  </StyledComponent>
                </ControlledTableListHeader__StyledListGroupItem>
              </ControlledTableListHeader>
              <ControlledTableListItem
                key="1"
              >
                <ForwardRef>
                  <ListGroupItem__StyledListGroupItem>
                    <StyledComponent
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "STYLES": Array [
                            "success",
                            "warning",
                            "danger",
                            "info",
                          ],
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "ListGroupItem__StyledListGroupItem-sc-1ky0joo-0",
                            "isStatic": false,
                            "lastClassName": "jRLKfG",
                            "rules": Array [
                              [Function],
                            ],
                          },
                          "displayName": "ListGroupItem__StyledListGroupItem",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "ListGroupItem__StyledListGroupItem-sc-1ky0joo-0",
                          "target": [Function],
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                    >
                      <ListGroupItem
                        bsClass="list-group-item"
                        className="ListGroupItem__StyledListGroupItem-sc-1ky0joo-0 jRLKfG"
                        listItem={false}
                      >
                        <span
                          className="ListGroupItem__StyledListGroupItem-sc-1ky0joo-0 jRLKfG list-group-item"
                        >
                          <Row
                            bsClass="row"
                            className="row-sm"
                            componentClass="div"
                          >
                            <div
                              className="row-sm row"
                            >
                              <Col
                                bsClass="col"
                                componentClass="div"
                                md={9}
                              >
                                <div
                                  className="col-md-9"
                                >
                                  <h3>
                                    <Link
                                      onlyActiveOnIndex={false}
                                      style={Object {}}
                                      to="/system/contentpacks/1"
                                    >
                                      <a
                                        onClick={[Function]}
                                        style={Object {}}
                                      />
                                    </Link>
                                     
                                    <small>
                                      Latest Version: 
                                      1
                                       
                                      <ContentPackStatus
                                        contentPackId="1"
                                        states={
                                          Array [
                                            "installed",
                                          ]
                                        }
                                      >
                                        <span>
                                          <Link
                                            key="installed"
                                            onlyActiveOnIndex={false}
                                            style={Object {}}
                                            to="/system/contentpacks/1"
                                          >
                                            <a
                                              onClick={[Function]}
                                              style={Object {}}
                                            >
                                              <ContentPackStatus__StatusBadge
                                                status="installed"
                                              >
                                                <StyledComponent
                                                  forwardedComponent={
                                                    Object {
                                                      "$$typeof": Symbol(react.forward_ref),
                                                      "attrs": Array [],
                                                      "componentStyle": ComponentStyle {
                                                        "componentId": "ContentPackStatus__StatusBadge-sc-1rzjx64-0",
                                                        "isStatic": false,
                                                        "lastClassName": "rPkcW",
                                                        "rules": Array [
                                                          [Function],
                                                          [Function],
                                                        ],
                                                      },
                                                      "displayName": "ContentPackStatus__StatusBadge",
                                                      "foldedComponentIds": Array [
                                                        "Badge__StyledBadge-sc-4gzqz0-0",
                                                      ],
                                                      "render": [Function],
                                                      "styledComponentId": "ContentPackStatus__StatusBadge-sc-1rzjx64-0",
                                                      "target": [Function],
                                                      "toString": [Function],
                                                      "warnTooManyClasses": [Function],
                                                      "withComponent": [Function],
                                                    }
                                                  }
                                                  forwardedRef={null}
                                                  status="installed"
                                                >
                                                  <Badge
                                                    bsClass="badge"
                                                    className="Badge__StyledBadge-sc-4gzqz0-0 ContentPackStatus__StatusBadge-sc-1rzjx64-0 rPkcW"
                                                    pullRight={false}
                                                    status="installed"
                                                  >
                                                    <span
                                                      className="Badge__StyledBadge-sc-4gzqz0-0 ContentPackStatus__StatusBadge-sc-1rzjx64-0 rPkcW badge"
                                                      status="installed"
                                                    >
                                                      installed
                                                    </span>
                                                  </Badge>
                                                </StyledComponent>
                                              </ContentPackStatus__StatusBadge>
                                            </a>
                                          </Link>
                                        </span>
                                      </ContentPackStatus>
                                       
                                    </small>
                                  </h3>
                                </div>
                              </Col>
                              <Col
                                bsClass="col"
                                className="text-right"
                                componentClass="div"
                                md={3}
                              >
                                <div
                                  className="text-right col-md-3"
                                >
                                   
                                  <ForwardRef
                                    bsSize="small"
                                    bsStyle="info"
                                    onClick={[Function]}
                                  >
                                    <Button__StyledButton
                                      bsSize="small"
                                      bsStyle="info"
                                      onClick={[Function]}
                                    >
                                      <StyledComponent
                                        bsSize="small"
                                        bsStyle="info"
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "SIZES": Array [
                                              "large",
                                              "small",
                                              "xsmall",
                                            ],
                                            "STYLES": Array [
                                              "success",
                                              "warning",
                                              "danger",
                                              "info",
                                              "default",
                                              "primary",
                                              "link",
                                            ],
                                            "attrs": Array [],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "Button__StyledButton-c9cbmb-0",
                                              "isStatic": false,
                                              "lastClassName": "jVYrA",
                                              "rules": Array [
                                                [Function],
                                              ],
                                            },
                                            "displayName": "Button__StyledButton",
                                            "foldedComponentIds": Array [],
                                            "render": [Function],
                                            "styledComponentId": "Button__StyledButton-c9cbmb-0",
                                            "target": [Function],
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                        onClick={[Function]}
                                      >
                                        <Button
                                          active={false}
                                          block={false}
                                          bsClass="btn"
                                          bsSize="small"
                                          bsStyle="info"
                                          className="Button__StyledButton-c9cbmb-0 jVYrA"
                                          disabled={false}
                                          onClick={[Function]}
                                        >
                                          <button
                                            className="Button__StyledButton-c9cbmb-0 jVYrA btn btn-sm btn-info"
                                            disabled={false}
                                            onClick={[Function]}
                                            type="button"
                                          >
                                            Install
                                          </button>
                                        </Button>
                                      </StyledComponent>
                                    </Button__StyledButton>
                                  </ForwardRef>
                                  <BootstrapModalWrapper
                                    backdrop="static"
                                    bsSize="large"
                                    onClose={[Function]}
                                    onHide={[Function]}
                                    onOpen={[Function]}
                                    showModal={false}
                                  >
                                    <Modal
                                      backdrop="static"
                                      bsSize="large"
                                      onHide={[Function]}
                                      show={false}
                                    >
                                      <StyledComponent
                                        backdrop="static"
                                        bsSize="large"
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "BACKDROP_TRANSITION_DURATION": 150,
                                            "Body": [Function],
                                            "Dialog": [Function],
                                            "Footer": [Function],
                                            "Header": [Function],
                                            "SIZES": Array [
                                              "large",
                                              "small",
                                            ],
                                            "TRANSITION_DURATION": 300,
                                            "Title": [Function],
                                            "attrs": Array [],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "Modal-nuree8-0",
                                              "isStatic": false,
                                              "lastClassName": "eNmkew",
                                              "rules": Array [
                                                [Function],
                                              ],
                                            },
                                            "displayName": "Modal",
                                            "foldedComponentIds": Array [],
                                            "render": [Function],
                                            "styledComponentId": "Modal-nuree8-0",
                                            "target": [Function],
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                        onHide={[Function]}
                                        show={false}
                                      >
                                        <Modal
                                          animation={true}
                                          autoFocus={true}
                                          backdrop="static"
                                          bsClass="modal"
                                          bsSize="large"
                                          className="Modal-nuree8-0 eNmkew"
                                          dialogComponentClass={[Function]}
                                          enforceFocus={true}
                                          keyboard={true}
                                          manager={
                                            ModalManager {
                                              "add": [Function],
                                              "containers": Array [],
                                              "data": Array [],
                                              "handleContainerOverflow": true,
                                              "hideSiblingNodes": true,
                                              "isTopModal": [Function],
                                              "modals": Array [],
                                              "remove": [Function],
                                            }
                                          }
                                          onHide={[Function]}
                                          renderBackdrop={[Function]}
                                          restoreFocus={true}
                                          show={false}
                                        >
                                          <Modal
                                            autoFocus={true}
                                            backdrop="static"
                                            backdropClassName="modal-backdrop"
                                            backdropTransition={[Function]}
                                            containerClassName="modal-open"
                                            enforceFocus={true}
                                            keyboard={true}
                                            manager={
                                              ModalManager {
                                                "add": [Function],
                                                "containers": Array [],
                                                "data": Array [],
                                                "handleContainerOverflow": true,
                                                "hideSiblingNodes": true,
                                                "isTopModal": [Function],
                                                "modals": Array [],
                                                "remove": [Function],
                                              }
                                            }
                                            onEntering={[Function]}
                                            onExited={[Function]}
                                            onHide={[Function]}
                                            onMouseUp={[Function]}
                                            renderBackdrop={[Function]}
                                            restoreFocus={true}
                                            show={false}
                                            transition={[Function]}
                                          />
                                        </Modal>
                                      </StyledComponent>
                                    </Modal>
                                  </BootstrapModalWrapper>
                                   
                                  <ForwardRef
                                    bsSize="small"
                                    id="more-actions-1"
                                    pullRight={true}
                                    title="More Actions"
                                  >
                                    <DropdownButton__StyledDropdownButton
                                      bsSize="small"
                                      id="more-actions-1"
                                      pullRight={true}
                                      title="More Actions"
                                    >
                                      <StyledComponent
                                        bsSize="small"
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "attrs": Array [],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "DropdownButton__StyledDropdownButton-sc-1343dcx-0",
                                              "isStatic": false,
                                              "lastClassName": "hsmsMV",
                                              "rules": Array [
                                                [Function],
                                              ],
                                            },
                                            "displayName": "DropdownButton__StyledDropdownButton",
                                            "foldedComponentIds": Array [],
                                            "render": [Function],
                                            "styledComponentId": "DropdownButton__StyledDropdownButton-sc-1343dcx-0",
                                            "target": [Function],
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                        id="more-actions-1"
                                        pullRight={true}
                                        title="More Actions"
                                      >
                                        <DropdownButton
                                          bsSize="small"
                                          className="DropdownButton__StyledDropdownButton-sc-1343dcx-0 hsmsMV"
                                          id="more-actions-1"
                                          pullRight={true}
                                          title="More Actions"
                                        >
                                          <ForwardRef
                                            bsSize="small"
                                            id="more-actions-1"
                                            pullRight={true}
                                          >
                                            <Uncontrolled(Dropdown)
                                              bsSize="small"
                                              id="more-actions-1"
                                              innerRef={null}
                                              pullRight={true}
                                            >
                                              <Dropdown
                                                bsClass="dropdown"
                                                bsSize="small"
                                                componentClass={[Function]}
                                                id="more-actions-1"
                                                onToggle={[Function]}
                                                pullRight={true}
                                              >
                                                <ButtonGroup
                                                  block={false}
                                                  bsClass="btn-group"
                                                  bsSize="small"
                                                  className="dropdown"
                                                  justified={false}
                                                  vertical={false}
                                                >
                                                  <div
                                                    className="dropdown btn-group btn-group-sm"
                                                  >
                                                    <DropdownToggle
                                                      bsClass="dropdown-toggle"
                                                      bsRole="toggle"
                                                      bsSize="small"
                                                      className="DropdownButton__StyledDropdownButton-sc-1343dcx-0 hsmsMV"
                                                      id="more-actions-1"
                                                      key=".0"
                                                      onClick={[Function]}
                                                      onKeyDown={[Function]}
                                                      open={false}
                                                      useAnchor={false}
                                                    >
                                                      <Button
                                                        active={false}
                                                        aria-expanded={false}
                                                        aria-haspopup={true}
                                                        block={false}
                                                        bsClass="btn"
                                                        bsSize="small"
                                                        bsStyle="default"
                                                        className="DropdownButton__StyledDropdownButton-sc-1343dcx-0 hsmsMV dropdown-toggle"
                                                        disabled={false}
                                                        id="more-actions-1"
                                                        onClick={[Function]}
                                                        onKeyDown={[Function]}
                                                        role="button"
                                                      >
                                                        <button
                                                          aria-expanded={false}
                                                          aria-haspopup={true}
                                                          className="DropdownButton__StyledDropdownButton-sc-1343dcx-0 hsmsMV dropdown-toggle btn btn-sm btn-default"
                                                          disabled={false}
                                                          id="more-actions-1"
                                                          onClick={[Function]}
                                                          onKeyDown={[Function]}
                                                          role="button"
                                                          type="button"
                                                        >
                                                          More Actions
                                                           
                                                          <span
                                                            className="caret"
                                                          />
                                                        </button>
                                                      </Button>
                                                    </DropdownToggle>
                                                    <DropdownMenu
                                                      bsClass="dropdown-menu"
                                                      bsRole="menu"
                                                      key=".1"
                                                      labelledBy="more-actions-1"
                                                      onClose={[Function]}
                                                      onSelect={[Function]}
                                                      pullRight={true}
                                                    >
                                                      <RootCloseWrapper
                                                        disabled={true}
                                                        event="click"
                                                        onRootClose={[Function]}
                                                      >
                                                        <ul
                                                          aria-labelledby="more-actions-1"
                                                          className="dropdown-menu dropdown-menu-right"
                                                          role="menu"
                                                        >
                                                          <LinkContainer
                                                            action="push"
                                                            key=".0"
                                                            onKeyDown={[Function]}
                                                            onSelect={[Function]}
                                                            onlyActiveOnIndex={false}
                                                            to="/system/contentpacks/1"
                                                          >
                                                            <MenuItem
                                                              action="push"
                                                              bsClass="dropdown"
                                                              disabled={false}
                                                              divider={false}
                                                              header={false}
                                                              onClick={[Function]}
                                                              onKeyDown={[Function]}
                                                              onSelect={[Function]}
                                                            >
                                                              <li
                                                                className=""
                                                                role="presentation"
                                                              >
                                                                <SafeAnchor
                                                                  action="push"
                                                                  componentClass="a"
                                                                  onClick={[Function]}
                                                                  onKeyDown={[Function]}
                                                                  role="menuitem"
                                                                  tabIndex="-1"
                                                                >
                                                                  <a
                                                                    action="push"
                                                                    href="#"
                                                                    onClick={[Function]}
                                                                    onKeyDown={[Function]}
                                                                    role="menuitem"
                                                                    tabIndex="-1"
                                                                  >
                                                                    Show
                                                                  </a>
                                                                </SafeAnchor>
                                                              </li>
                                                            </MenuItem>
                                                          </LinkContainer>
                                                          <LinkContainer
                                                            action="push"
                                                            key=".1"
                                                            onKeyDown={[Function]}
                                                            onSelect={[Function]}
                                                            onlyActiveOnIndex={false}
                                                            to="/system/contentpacks/1/1/edit"
                                                          >
                                                            <MenuItem
                                                              action="push"
                                                              bsClass="dropdown"
                                                              disabled={false}
                                                              divider={false}
                                                              header={false}
                                                              onClick={[Function]}
                                                              onKeyDown={[Function]}
                                                              onSelect={[Function]}
                                                            >
                                                              <li
                                                                className=""
                                                                role="presentation"
                                                              >
                                                                <SafeAnchor
                                                                  action="push"
                                                                  componentClass="a"
                                                                  onClick={[Function]}
                                                                  onKeyDown={[Function]}
                                                                  role="menuitem"
                                                                  tabIndex="-1"
                                                                >
                                                                  <a
                                                                    action="push"
                                                                    href="#"
                                                                    onClick={[Function]}
                                                                    onKeyDown={[Function]}
                                                                    role="menuitem"
                                                                    tabIndex="-1"
                                                                  >
                                                                    Create New Version
                                                                  </a>
                                                                </SafeAnchor>
                                                              </li>
                                                            </MenuItem>
                                                          </LinkContainer>
                                                          <MenuItem
                                                            bsClass="dropdown"
                                                            disabled={false}
                                                            divider={false}
                                                            header={false}
                                                            key=".2"
                                                            onKeyDown={[Function]}
                                                            onSelect={[Function]}
                                                          >
                                                            <li
                                                              className=""
                                                              role="presentation"
                                                            >
                                                              <SafeAnchor
                                                                componentClass="a"
                                                                onClick={[Function]}
                                                                onKeyDown={[Function]}
                                                                role="menuitem"
                                                                tabIndex="-1"
                                                              >
                                                                <a
                                                                  href="#"
                                                                  onClick={[Function]}
                                                                  onKeyDown={[Function]}
                                                                  role="menuitem"
                                                                  tabIndex="-1"
                                                                >
                                                                  Download
                                                                </a>
                                                              </SafeAnchor>
                                                            </li>
                                                          </MenuItem>
                                                          <MenuItem
                                                            bsClass="dropdown"
                                                            disabled={false}
                                                            divider={true}
                                                            header={false}
                                                            key=".3"
                                                            onKeyDown={[Function]}
                                                            onSelect={[Function]}
                                                          >
                                                            <li
                                                              className="divider"
                                                              onKeyDown={[Function]}
                                                              role="separator"
                                                            />
                                                          </MenuItem>
                                                          <MenuItem
                                                            bsClass="dropdown"
                                                            disabled={false}
                                                            divider={false}
                                                            header={false}
                                                            key=".4"
                                                            onKeyDown={[Function]}
                                                            onSelect={[Function]}
                                                          >
                                                            <li
                                                              className=""
                                                              role="presentation"
                                                            >
                                                              <SafeAnchor
                                                                componentClass="a"
                                                                onClick={[Function]}
                                                                onKeyDown={[Function]}
                                                                role="menuitem"
                                                                tabIndex="-1"
                                                              >
                                                                <a
                                                                  href="#"
                                                                  onClick={[Function]}
                                                                  onKeyDown={[Function]}
                                                                  role="menuitem"
                                                                  tabIndex="-1"
                                                                >
                                                                  Delete All Versions
                                                                </a>
                                                              </SafeAnchor>
                                                            </li>
                                                          </MenuItem>
                                                        </ul>
                                                      </RootCloseWrapper>
                                                    </DropdownMenu>
                                                  </div>
                                                </ButtonGroup>
                                              </Dropdown>
                                            </Uncontrolled(Dropdown)>
                                          </ForwardRef>
                                        </DropdownButton>
                                      </StyledComponent>
                                    </DropdownButton__StyledDropdownButton>
                                  </ForwardRef>
                                  <ContentPackDownloadControl
                                    contentPackId="1"
                                    revision={1}
                                  >
                                    <BootstrapModalWrapper
                                      backdrop="static"
                                      bsSize="large"
                                      onClose={[Function]}
                                      onHide={[Function]}
                                      onOpen={[Function]}
                                      showModal={false}
                                    >
                                      <Modal
                                        backdrop="static"
                                        bsSize="large"
                                        onHide={[Function]}
                                        show={false}
                                      >
                                        <StyledComponent
                                          backdrop="static"
                                          bsSize="large"
                                          forwardedComponent={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "BACKDROP_TRANSITION_DURATION": 150,
                                              "Body": [Function],
                                              "Dialog": [Function],
                                              "Footer": [Function],
                                              "Header": [Function],
                                              "SIZES": Array [
                                                "large",
                                                "small",
                                              ],
                                              "TRANSITION_DURATION": 300,
                                              "Title": [Function],
                                              "attrs": Array [],
                                              "componentStyle": ComponentStyle {
                                                "componentId": "Modal-nuree8-0",
                                                "isStatic": false,
                                                "lastClassName": "eNmkew",
                                                "rules": Array [
                                                  [Function],
                                                ],
                                              },
                                              "displayName": "Modal",
                                              "foldedComponentIds": Array [],
                                              "render": [Function],
                                              "styledComponentId": "Modal-nuree8-0",
                                              "target": [Function],
                                              "toString": [Function],
                                              "warnTooManyClasses": [Function],
                                              "withComponent": [Function],
                                            }
                                          }
                                          forwardedRef={null}
                                          onHide={[Function]}
                                          show={false}
                                        >
                                          <Modal
                                            animation={true}
                                            autoFocus={true}
                                            backdrop="static"
                                            bsClass="modal"
                                            bsSize="large"
                                            className="Modal-nuree8-0 eNmkew"
                                            dialogComponentClass={[Function]}
                                            enforceFocus={true}
                                            keyboard={true}
                                            manager={
                                              ModalManager {
                                                "add": [Function],
                                                "containers": Array [],
                                                "data": Array [],
                                                "handleContainerOverflow": true,
                                                "hideSiblingNodes": true,
                                                "isTopModal": [Function],
                                                "modals": Array [],
                                                "remove": [Function],
                                              }
                                            }
                                            onHide={[Function]}
                                            renderBackdrop={[Function]}
                                            restoreFocus={true}
                                            show={false}
                                          >
                                            <Modal
                                              autoFocus={true}
                                              backdrop="static"
                                              backdropClassName="modal-backdrop"
                                              backdropTransition={[Function]}
                                              containerClassName="modal-open"
                                              enforceFocus={true}
                                              keyboard={true}
                                              manager={
                                                ModalManager {
                                                  "add": [Function],
                                                  "containers": Array [],
                                                  "data": Array [],
                                                  "handleContainerOverflow": true,
                                                  "hideSiblingNodes": true,
                                                  "isTopModal": [Function],
                                                  "modals": Array [],
                                                  "remove": [Function],
                                                }
                                              }
                                              onEntering={[Function]}
                                              onExited={[Function]}
                                              onHide={[Function]}
                                              onMouseUp={[Function]}
                                              renderBackdrop={[Function]}
                                              restoreFocus={true}
                                              show={false}
                                              transition={[Function]}
                                            />
                                          </Modal>
                                        </StyledComponent>
                                      </Modal>
                                    </BootstrapModalWrapper>
                                  </ContentPackDownloadControl>
                                </div>
                              </Col>
                            </div>
                          </Row>
                          <Row
                            bsClass="row"
                            className="row-sm content-packs-summary"
                            componentClass="div"
                          >
                            <div
                              className="row-sm content-packs-summary row"
                            >
                              <Col
                                bsClass="col"
                                componentClass="div"
                                md={12}
                              >
                                <div
                                  className="col-md-12"
                                >
                                  Grok Patterns to extract informations from UFW logfiles
                                   
                                </div>
                              </Col>
                            </div>
                          </Row>
                        </span>
                      </ListGroupItem>
                    </StyledComponent>
                  </ListGroupItem__StyledListGroupItem>
                </ForwardRef>
              </ControlledTableListItem>
              <ControlledTableListItem
                key="2"
              >
                <ForwardRef>
                  <ListGroupItem__StyledListGroupItem>
                    <StyledComponent
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "STYLES": Array [
                            "success",
                            "warning",
                            "danger",
                            "info",
                          ],
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "ListGroupItem__StyledListGroupItem-sc-1ky0joo-0",
                            "isStatic": false,
                            "lastClassName": "jRLKfG",
                            "rules": Array [
                              [Function],
                            ],
                          },
                          "displayName": "ListGroupItem__StyledListGroupItem",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "ListGroupItem__StyledListGroupItem-sc-1ky0joo-0",
                          "target": [Function],
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                    >
                      <ListGroupItem
                        bsClass="list-group-item"
                        className="ListGroupItem__StyledListGroupItem-sc-1ky0joo-0 jRLKfG"
                        listItem={false}
                      >
                        <span
                          className="ListGroupItem__StyledListGroupItem-sc-1ky0joo-0 jRLKfG list-group-item"
                        >
                          <Row
                            bsClass="row"
                            className="row-sm"
                            componentClass="div"
                          >
                            <div
                              className="row-sm row"
                            >
                              <Col
                                bsClass="col"
                                componentClass="div"
                                md={9}
                              >
                                <div
                                  className="col-md-9"
                                >
                                  <h3>
                                    <Link
                                      onlyActiveOnIndex={false}
                                      style={Object {}}
                                      to="/system/contentpacks/2"
                                    >
                                      <a
                                        onClick={[Function]}
                                        style={Object {}}
                                      />
                                    </Link>
                                     
                                    <small>
                                      Latest Version: 
                                      1
                                       
                                      <ContentPackStatus
                                        contentPackId="2"
                                        states={
                                          Array [
                                            "installed",
                                          ]
                                        }
                                      >
                                        <span>
                                          <Link
                                            key="installed"
                                            onlyActiveOnIndex={false}
                                            style={Object {}}
                                            to="/system/contentpacks/2"
                                          >
                                            <a
                                              onClick={[Function]}
                                              style={Object {}}
                                            >
                                              <ContentPackStatus__StatusBadge
                                                status="installed"
                                              >
                                                <StyledComponent
                                                  forwardedComponent={
                                                    Object {
                                                      "$$typeof": Symbol(react.forward_ref),
                                                      "attrs": Array [],
                                                      "componentStyle": ComponentStyle {
                                                        "componentId": "ContentPackStatus__StatusBadge-sc-1rzjx64-0",
                                                        "isStatic": false,
                                                        "lastClassName": "rPkcW",
                                                        "rules": Array [
                                                          [Function],
                                                          [Function],
                                                        ],
                                                      },
                                                      "displayName": "ContentPackStatus__StatusBadge",
                                                      "foldedComponentIds": Array [
                                                        "Badge__StyledBadge-sc-4gzqz0-0",
                                                      ],
                                                      "render": [Function],
                                                      "styledComponentId": "ContentPackStatus__StatusBadge-sc-1rzjx64-0",
                                                      "target": [Function],
                                                      "toString": [Function],
                                                      "warnTooManyClasses": [Function],
                                                      "withComponent": [Function],
                                                    }
                                                  }
                                                  forwardedRef={null}
                                                  status="installed"
                                                >
                                                  <Badge
                                                    bsClass="badge"
                                                    className="Badge__StyledBadge-sc-4gzqz0-0 ContentPackStatus__StatusBadge-sc-1rzjx64-0 rPkcW"
                                                    pullRight={false}
                                                    status="installed"
                                                  >
                                                    <span
                                                      className="Badge__StyledBadge-sc-4gzqz0-0 ContentPackStatus__StatusBadge-sc-1rzjx64-0 rPkcW badge"
                                                      status="installed"
                                                    >
                                                      installed
                                                    </span>
                                                  </Badge>
                                                </StyledComponent>
                                              </ContentPackStatus__StatusBadge>
                                            </a>
                                          </Link>
                                        </span>
                                      </ContentPackStatus>
                                       
                                    </small>
                                  </h3>
                                </div>
                              </Col>
                              <Col
                                bsClass="col"
                                className="text-right"
                                componentClass="div"
                                md={3}
                              >
                                <div
                                  className="text-right col-md-3"
                                >
                                   
                                  <ForwardRef
                                    bsSize="small"
                                    bsStyle="info"
                                    onClick={[Function]}
                                  >
                                    <Button__StyledButton
                                      bsSize="small"
                                      bsStyle="info"
                                      onClick={[Function]}
                                    >
                                      <StyledComponent
                                        bsSize="small"
                                        bsStyle="info"
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "SIZES": Array [
                                              "large",
                                              "small",
                                              "xsmall",
                                            ],
                                            "STYLES": Array [
                                              "success",
                                              "warning",
                                              "danger",
                                              "info",
                                              "default",
                                              "primary",
                                              "link",
                                            ],
                                            "attrs": Array [],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "Button__StyledButton-c9cbmb-0",
                                              "isStatic": false,
                                              "lastClassName": "jVYrA",
                                              "rules": Array [
                                                [Function],
                                              ],
                                            },
                                            "displayName": "Button__StyledButton",
                                            "foldedComponentIds": Array [],
                                            "render": [Function],
                                            "styledComponentId": "Button__StyledButton-c9cbmb-0",
                                            "target": [Function],
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                        onClick={[Function]}
                                      >
                                        <Button
                                          active={false}
                                          block={false}
                                          bsClass="btn"
                                          bsSize="small"
                                          bsStyle="info"
                                          className="Button__StyledButton-c9cbmb-0 jVYrA"
                                          disabled={false}
                                          onClick={[Function]}
                                        >
                                          <button
                                            className="Button__StyledButton-c9cbmb-0 jVYrA btn btn-sm btn-info"
                                            disabled={false}
                                            onClick={[Function]}
                                            type="button"
                                          >
                                            Install
                                          </button>
                                        </Button>
                                      </StyledComponent>
                                    </Button__StyledButton>
                                  </ForwardRef>
                                  <BootstrapModalWrapper
                                    backdrop="static"
                                    bsSize="large"
                                    onClose={[Function]}
                                    onHide={[Function]}
                                    onOpen={[Function]}
                                    showModal={false}
                                  >
                                    <Modal
                                      backdrop="static"
                                      bsSize="large"
                                      onHide={[Function]}
                                      show={false}
                                    >
                                      <StyledComponent
                                        backdrop="static"
                                        bsSize="large"
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "BACKDROP_TRANSITION_DURATION": 150,
                                            "Body": [Function],
                                            "Dialog": [Function],
                                            "Footer": [Function],
                                            "Header": [Function],
                                            "SIZES": Array [
                                              "large",
                                              "small",
                                            ],
                                            "TRANSITION_DURATION": 300,
                                            "Title": [Function],
                                            "attrs": Array [],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "Modal-nuree8-0",
                                              "isStatic": false,
                                              "lastClassName": "eNmkew",
                                              "rules": Array [
                                                [Function],
                                              ],
                                            },
                                            "displayName": "Modal",
                                            "foldedComponentIds": Array [],
                                            "render": [Function],
                                            "styledComponentId": "Modal-nuree8-0",
                                            "target": [Function],
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                        onHide={[Function]}
                                        show={false}
                                      >
                                        <Modal
                                          animation={true}
                                          autoFocus={true}
                                          backdrop="static"
                                          bsClass="modal"
                                          bsSize="large"
                                          className="Modal-nuree8-0 eNmkew"
                                          dialogComponentClass={[Function]}
                                          enforceFocus={true}
                                          keyboard={true}
                                          manager={
                                            ModalManager {
                                              "add": [Function],
                                              "containers": Array [],
                                              "data": Array [],
                                              "handleContainerOverflow": true,
                                              "hideSiblingNodes": true,
                                              "isTopModal": [Function],
                                              "modals": Array [],
                                              "remove": [Function],
                                            }
                                          }
                                          onHide={[Function]}
                                          renderBackdrop={[Function]}
                                          restoreFocus={true}
                                          show={false}
                                        >
                                          <Modal
                                            autoFocus={true}
                                            backdrop="static"
                                            backdropClassName="modal-backdrop"
                                            backdropTransition={[Function]}
                                            containerClassName="modal-open"
                                            enforceFocus={true}
                                            keyboard={true}
                                            manager={
                                              ModalManager {
                                                "add": [Function],
                                                "containers": Array [],
                                                "data": Array [],
                                                "handleContainerOverflow": true,
                                                "hideSiblingNodes": true,
                                                "isTopModal": [Function],
                                                "modals": Array [],
                                                "remove": [Function],
                                              }
                                            }
                                            onEntering={[Function]}
                                            onExited={[Function]}
                                            onHide={[Function]}
                                            onMouseUp={[Function]}
                                            renderBackdrop={[Function]}
                                            restoreFocus={true}
                                            show={false}
                                            transition={[Function]}
                                          />
                                        </Modal>
                                      </StyledComponent>
                                    </Modal>
                                  </BootstrapModalWrapper>
                                   
                                  <ForwardRef
                                    bsSize="small"
                                    id="more-actions-2"
                                    pullRight={true}
                                    title="More Actions"
                                  >
                                    <DropdownButton__StyledDropdownButton
                                      bsSize="small"
                                      id="more-actions-2"
                                      pullRight={true}
                                      title="More Actions"
                                    >
                                      <StyledComponent
                                        bsSize="small"
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "attrs": Array [],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "DropdownButton__StyledDropdownButton-sc-1343dcx-0",
                                              "isStatic": false,
                                              "lastClassName": "hsmsMV",
                                              "rules": Array [
                                                [Function],
                                              ],
                                            },
                                            "displayName": "DropdownButton__StyledDropdownButton",
                                            "foldedComponentIds": Array [],
                                            "render": [Function],
                                            "styledComponentId": "DropdownButton__StyledDropdownButton-sc-1343dcx-0",
                                            "target": [Function],
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                        id="more-actions-2"
                                        pullRight={true}
                                        title="More Actions"
                                      >
                                        <DropdownButton
                                          bsSize="small"
                                          className="DropdownButton__StyledDropdownButton-sc-1343dcx-0 hsmsMV"
                                          id="more-actions-2"
                                          pullRight={true}
                                          title="More Actions"
                                        >
                                          <ForwardRef
                                            bsSize="small"
                                            id="more-actions-2"
                                            pullRight={true}
                                          >
                                            <Uncontrolled(Dropdown)
                                              bsSize="small"
                                              id="more-actions-2"
                                              innerRef={null}
                                              pullRight={true}
                                            >
                                              <Dropdown
                                                bsClass="dropdown"
                                                bsSize="small"
                                                componentClass={[Function]}
                                                id="more-actions-2"
                                                onToggle={[Function]}
                                                pullRight={true}
                                              >
                                                <ButtonGroup
                                                  block={false}
                                                  bsClass="btn-group"
                                                  bsSize="small"
                                                  className="dropdown"
                                                  justified={false}
                                                  vertical={false}
                                                >
                                                  <div
                                                    className="dropdown btn-group btn-group-sm"
                                                  >
                                                    <DropdownToggle
                                                      bsClass="dropdown-toggle"
                                                      bsRole="toggle"
                                                      bsSize="small"
                                                      className="DropdownButton__StyledDropdownButton-sc-1343dcx-0 hsmsMV"
                                                      id="more-actions-2"
                                                      key=".0"
                                                      onClick={[Function]}
                                                      onKeyDown={[Function]}
                                                      open={false}
                                                      useAnchor={false}
                                                    >
                                                      <Button
                                                        active={false}
                                                        aria-expanded={false}
                                                        aria-haspopup={true}
                                                        block={false}
                                                        bsClass="btn"
                                                        bsSize="small"
                                                        bsStyle="default"
                                                        className="DropdownButton__StyledDropdownButton-sc-1343dcx-0 hsmsMV dropdown-toggle"
                                                        disabled={false}
                                                        id="more-actions-2"
                                                        onClick={[Function]}
                                                        onKeyDown={[Function]}
                                                        role="button"
                                                      >
                                                        <button
                                                          aria-expanded={false}
                                                          aria-haspopup={true}
                                                          className="DropdownButton__StyledDropdownButton-sc-1343dcx-0 hsmsMV dropdown-toggle btn btn-sm btn-default"
                                                          disabled={false}
                                                          id="more-actions-2"
                                                          onClick={[Function]}
                                                          onKeyDown={[Function]}
                                                          role="button"
                                                          type="button"
                                                        >
                                                          More Actions
                                                           
                                                          <span
                                                            className="caret"
                                                          />
                                                        </button>
                                                      </Button>
                                                    </DropdownToggle>
                                                    <DropdownMenu
                                                      bsClass="dropdown-menu"
                                                      bsRole="menu"
                                                      key=".1"
                                                      labelledBy="more-actions-2"
                                                      onClose={[Function]}
                                                      onSelect={[Function]}
                                                      pullRight={true}
                                                    >
                                                      <RootCloseWrapper
                                                        disabled={true}
                                                        event="click"
                                                        onRootClose={[Function]}
                                                      >
                                                        <ul
                                                          aria-labelledby="more-actions-2"
                                                          className="dropdown-menu dropdown-menu-right"
                                                          role="menu"
                                                        >
                                                          <LinkContainer
                                                            action="push"
                                                            key=".0"
                                                            onKeyDown={[Function]}
                                                            onSelect={[Function]}
                                                            onlyActiveOnIndex={false}
                                                            to="/system/contentpacks/2"
                                                          >
                                                            <MenuItem
                                                              action="push"
                                                              bsClass="dropdown"
                                                              disabled={false}
                                                              divider={false}
                                                              header={false}
                                                              onClick={[Function]}
                                                              onKeyDown={[Function]}
                                                              onSelect={[Function]}
                                                            >
                                                              <li
                                                                className=""
                                                                role="presentation"
                                                              >
                                                                <SafeAnchor
                                                                  action="push"
                                                                  componentClass="a"
                                                                  onClick={[Function]}
                                                                  onKeyDown={[Function]}
                                                                  role="menuitem"
                                                                  tabIndex="-1"
                                                                >
                                                                  <a
                                                                    action="push"
                                                                    href="#"
                                                                    onClick={[Function]}
                                                                    onKeyDown={[Function]}
                                                                    role="menuitem"
                                                                    tabIndex="-1"
                                                                  >
                                                                    Show
                                                                  </a>
                                                                </SafeAnchor>
                                                              </li>
                                                            </MenuItem>
                                                          </LinkContainer>
                                                          <LinkContainer
                                                            action="push"
                                                            key=".1"
                                                            onKeyDown={[Function]}
                                                            onSelect={[Function]}
                                                            onlyActiveOnIndex={false}
                                                            to="/system/contentpacks/2/1/edit"
                                                          >
                                                            <MenuItem
                                                              action="push"
                                                              bsClass="dropdown"
                                                              disabled={false}
                                                              divider={false}
                                                              header={false}
                                                              onClick={[Function]}
                                                              onKeyDown={[Function]}
                                                              onSelect={[Function]}
                                                            >
                                                              <li
                                                                className=""
                                                                role="presentation"
                                                              >
                                                                <SafeAnchor
                                                                  action="push"
                                                                  componentClass="a"
                                                                  onClick={[Function]}
                                                                  onKeyDown={[Function]}
                                                                  role="menuitem"
                                                                  tabIndex="-1"
                                                                >
                                                                  <a
                                                                    action="push"
                                                                    href="#"
                                                                    onClick={[Function]}
                                                                    onKeyDown={[Function]}
                                                                    role="menuitem"
                                                                    tabIndex="-1"
                                                                  >
                                                                    Create New Version
                                                                  </a>
                                                                </SafeAnchor>
                                                              </li>
                                                            </MenuItem>
                                                          </LinkContainer>
                                                          <MenuItem
                                                            bsClass="dropdown"
                                                            disabled={false}
                                                            divider={false}
                                                            header={false}
                                                            key=".2"
                                                            onKeyDown={[Function]}
                                                            onSelect={[Function]}
                                                          >
                                                            <li
                                                              className=""
                                                              role="presentation"
                                                            >
                                                              <SafeAnchor
                                                                componentClass="a"
                                                                onClick={[Function]}
                                                                onKeyDown={[Function]}
                                                                role="menuitem"
                                                                tabIndex="-1"
                                                              >
                                                                <a
                                                                  href="#"
                                                                  onClick={[Function]}
                                                                  onKeyDown={[Function]}
                                                                  role="menuitem"
                                                                  tabIndex="-1"
                                                                >
                                                                  Download
                                                                </a>
                                                              </SafeAnchor>
                                                            </li>
                                                          </MenuItem>
                                                          <MenuItem
                                                            bsClass="dropdown"
                                                            disabled={false}
                                                            divider={true}
                                                            header={false}
                                                            key=".3"
                                                            onKeyDown={[Function]}
                                                            onSelect={[Function]}
                                                          >
                                                            <li
                                                              className="divider"
                                                              onKeyDown={[Function]}
                                                              role="separator"
                                                            />
                                                          </MenuItem>
                                                          <MenuItem
                                                            bsClass="dropdown"
                                                            disabled={false}
                                                            divider={false}
                                                            header={false}
                                                            key=".4"
                                                            onKeyDown={[Function]}
                                                            onSelect={[Function]}
                                                          >
                                                            <li
                                                              className=""
                                                              role="presentation"
                                                            >
                                                              <SafeAnchor
                                                                componentClass="a"
                                                                onClick={[Function]}
                                                                onKeyDown={[Function]}
                                                                role="menuitem"
                                                                tabIndex="-1"
                                                              >
                                                                <a
                                                                  href="#"
                                                                  onClick={[Function]}
                                                                  onKeyDown={[Function]}
                                                                  role="menuitem"
                                                                  tabIndex="-1"
                                                                >
                                                                  Delete All Versions
                                                                </a>
                                                              </SafeAnchor>
                                                            </li>
                                                          </MenuItem>
                                                        </ul>
                                                      </RootCloseWrapper>
                                                    </DropdownMenu>
                                                  </div>
                                                </ButtonGroup>
                                              </Dropdown>
                                            </Uncontrolled(Dropdown)>
                                          </ForwardRef>
                                        </DropdownButton>
                                      </StyledComponent>
                                    </DropdownButton__StyledDropdownButton>
                                  </ForwardRef>
                                  <ContentPackDownloadControl
                                    contentPackId="2"
                                    revision={1}
                                  >
                                    <BootstrapModalWrapper
                                      backdrop="static"
                                      bsSize="large"
                                      onClose={[Function]}
                                      onHide={[Function]}
                                      onOpen={[Function]}
                                      showModal={false}
                                    >
                                      <Modal
                                        backdrop="static"
                                        bsSize="large"
                                        onHide={[Function]}
                                        show={false}
                                      >
                                        <StyledComponent
                                          backdrop="static"
                                          bsSize="large"
                                          forwardedComponent={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "BACKDROP_TRANSITION_DURATION": 150,
                                              "Body": [Function],
                                              "Dialog": [Function],
                                              "Footer": [Function],
                                              "Header": [Function],
                                              "SIZES": Array [
                                                "large",
                                                "small",
                                              ],
                                              "TRANSITION_DURATION": 300,
                                              "Title": [Function],
                                              "attrs": Array [],
                                              "componentStyle": ComponentStyle {
                                                "componentId": "Modal-nuree8-0",
                                                "isStatic": false,
                                                "lastClassName": "eNmkew",
                                                "rules": Array [
                                                  [Function],
                                                ],
                                              },
                                              "displayName": "Modal",
                                              "foldedComponentIds": Array [],
                                              "render": [Function],
                                              "styledComponentId": "Modal-nuree8-0",
                                              "target": [Function],
                                              "toString": [Function],
                                              "warnTooManyClasses": [Function],
                                              "withComponent": [Function],
                                            }
                                          }
                                          forwardedRef={null}
                                          onHide={[Function]}
                                          show={false}
                                        >
                                          <Modal
                                            animation={true}
                                            autoFocus={true}
                                            backdrop="static"
                                            bsClass="modal"
                                            bsSize="large"
                                            className="Modal-nuree8-0 eNmkew"
                                            dialogComponentClass={[Function]}
                                            enforceFocus={true}
                                            keyboard={true}
                                            manager={
                                              ModalManager {
                                                "add": [Function],
                                                "containers": Array [],
                                                "data": Array [],
                                                "handleContainerOverflow": true,
                                                "hideSiblingNodes": true,
                                                "isTopModal": [Function],
                                                "modals": Array [],
                                                "remove": [Function],
                                              }
                                            }
                                            onHide={[Function]}
                                            renderBackdrop={[Function]}
                                            restoreFocus={true}
                                            show={false}
                                          >
                                            <Modal
                                              autoFocus={true}
                                              backdrop="static"
                                              backdropClassName="modal-backdrop"
                                              backdropTransition={[Function]}
                                              containerClassName="modal-open"
                                              enforceFocus={true}
                                              keyboard={true}
                                              manager={
                                                ModalManager {
                                                  "add": [Function],
                                                  "containers": Array [],
                                                  "data": Array [],
                                                  "handleContainerOverflow": true,
                                                  "hideSiblingNodes": true,
                                                  "isTopModal": [Function],
                                                  "modals": Array [],
                                                  "remove": [Function],
                                                }
                                              }
                                              onEntering={[Function]}
                                              onExited={[Function]}
                                              onHide={[Function]}
                                              onMouseUp={[Function]}
                                              renderBackdrop={[Function]}
                                              restoreFocus={true}
                                              show={false}
                                              transition={[Function]}
                                            />
                                          </Modal>
                                        </StyledComponent>
                                      </Modal>
                                    </BootstrapModalWrapper>
                                  </ContentPackDownloadControl>
                                </div>
                              </Col>
                            </div>
                          </Row>
                          <Row
                            bsClass="row"
                            className="row-sm content-packs-summary"
                            componentClass="div"
                          >
                            <div
                              className="row-sm content-packs-summary row"
                            >
                              <Col
                                bsClass="col"
                                componentClass="div"
                                md={12}
                              >
                                <div
                                  className="col-md-12"
                                >
                                  Patterns to retreive rails production logs
                                   
                                </div>
                              </Col>
                            </div>
                          </Row>
                        </span>
                      </ListGroupItem>
                    </StyledComponent>
                  </ListGroupItem__StyledListGroupItem>
                </ForwardRef>
              </ControlledTableListItem>
              <ControlledTableListItem
                key="3"
              >
                <ForwardRef>
                  <ListGroupItem__StyledListGroupItem>
                    <StyledComponent
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "STYLES": Array [
                            "success",
                            "warning",
                            "danger",
                            "info",
                          ],
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "ListGroupItem__StyledListGroupItem-sc-1ky0joo-0",
                            "isStatic": false,
                            "lastClassName": "jRLKfG",
                            "rules": Array [
                              [Function],
                            ],
                          },
                          "displayName": "ListGroupItem__StyledListGroupItem",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "ListGroupItem__StyledListGroupItem-sc-1ky0joo-0",
                          "target": [Function],
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                    >
                      <ListGroupItem
                        bsClass="list-group-item"
                        className="ListGroupItem__StyledListGroupItem-sc-1ky0joo-0 jRLKfG"
                        listItem={false}
                      >
                        <span
                          className="ListGroupItem__StyledListGroupItem-sc-1ky0joo-0 jRLKfG list-group-item"
                        >
                          <Row
                            bsClass="row"
                            className="row-sm"
                            componentClass="div"
                          >
                            <div
                              className="row-sm row"
                            >
                              <Col
                                bsClass="col"
                                componentClass="div"
                                md={9}
                              >
                                <div
                                  className="col-md-9"
                                >
                                  <h3>
                                    <Link
                                      onlyActiveOnIndex={false}
                                      style={Object {}}
                                      to="/system/contentpacks/3"
                                    >
                                      <a
                                        onClick={[Function]}
                                        style={Object {}}
                                      />
                                    </Link>
                                     
                                    <small>
                                      Latest Version: 
                                      1
                                       
                                      <ContentPackStatus
                                        contentPackId="3"
                                        states={Array []}
                                      >
                                        <span />
                                      </ContentPackStatus>
                                       
                                    </small>
                                  </h3>
                                </div>
                              </Col>
                              <Col
                                bsClass="col"
                                className="text-right"
                                componentClass="div"
                                md={3}
                              >
                                <div
                                  className="text-right col-md-3"
                                >
                                   
                                  <ForwardRef
                                    bsSize="small"
                                    bsStyle="info"
                                    onClick={[Function]}
                                  >
                                    <Button__StyledButton
                                      bsSize="small"
                                      bsStyle="info"
                                      onClick={[Function]}
                                    >
                                      <StyledComponent
                                        bsSize="small"
                                        bsStyle="info"
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "SIZES": Array [
                                              "large",
                                              "small",
                                              "xsmall",
                                            ],
                                            "STYLES": Array [
                                              "success",
                                              "warning",
                                              "danger",
                                              "info",
                                              "default",
                                              "primary",
                                              "link",
                                            ],
                                            "attrs": Array [],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "Button__StyledButton-c9cbmb-0",
                                              "isStatic": false,
                                              "lastClassName": "jVYrA",
                                              "rules": Array [
                                                [Function],
                                              ],
                                            },
                                            "displayName": "Button__StyledButton",
                                            "foldedComponentIds": Array [],
                                            "render": [Function],
                                            "styledComponentId": "Button__StyledButton-c9cbmb-0",
                                            "target": [Function],
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                        onClick={[Function]}
                                      >
                                        <Button
                                          active={false}
                                          block={false}
                                          bsClass="btn"
                                          bsSize="small"
                                          bsStyle="info"
                                          className="Button__StyledButton-c9cbmb-0 jVYrA"
                                          disabled={false}
                                          onClick={[Function]}
                                        >
                                          <button
                                            className="Button__StyledButton-c9cbmb-0 jVYrA btn btn-sm btn-info"
                                            disabled={false}
                                            onClick={[Function]}
                                            type="button"
                                          >
                                            Install
                                          </button>
                                        </Button>
                                      </StyledComponent>
                                    </Button__StyledButton>
                                  </ForwardRef>
                                  <BootstrapModalWrapper
                                    backdrop="static"
                                    bsSize="large"
                                    onClose={[Function]}
                                    onHide={[Function]}
                                    onOpen={[Function]}
                                    showModal={false}
                                  >
                                    <Modal
                                      backdrop="static"
                                      bsSize="large"
                                      onHide={[Function]}
                                      show={false}
                                    >
                                      <StyledComponent
                                        backdrop="static"
                                        bsSize="large"
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "BACKDROP_TRANSITION_DURATION": 150,
                                            "Body": [Function],
                                            "Dialog": [Function],
                                            "Footer": [Function],
                                            "Header": [Function],
                                            "SIZES": Array [
                                              "large",
                                              "small",
                                            ],
                                            "TRANSITION_DURATION": 300,
                                            "Title": [Function],
                                            "attrs": Array [],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "Modal-nuree8-0",
                                              "isStatic": false,
                                              "lastClassName": "eNmkew",
                                              "rules": Array [
                                                [Function],
                                              ],
                                            },
                                            "displayName": "Modal",
                                            "foldedComponentIds": Array [],
                                            "render": [Function],
                                            "styledComponentId": "Modal-nuree8-0",
                                            "target": [Function],
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                        onHide={[Function]}
                                        show={false}
                                      >
                                        <Modal
                                          animation={true}
                                          autoFocus={true}
                                          backdrop="static"
                                          bsClass="modal"
                                          bsSize="large"
                                          className="Modal-nuree8-0 eNmkew"
                                          dialogComponentClass={[Function]}
                                          enforceFocus={true}
                                          keyboard={true}
                                          manager={
                                            ModalManager {
                                              "add": [Function],
                                              "containers": Array [],
                                              "data": Array [],
                                              "handleContainerOverflow": true,
                                              "hideSiblingNodes": true,
                                              "isTopModal": [Function],
                                              "modals": Array [],
                                              "remove": [Function],
                                            }
                                          }
                                          onHide={[Function]}
                                          renderBackdrop={[Function]}
                                          restoreFocus={true}
                                          show={false}
                                        >
                                          <Modal
                                            autoFocus={true}
                                            backdrop="static"
                                            backdropClassName="modal-backdrop"
                                            backdropTransition={[Function]}
                                            containerClassName="modal-open"
                                            enforceFocus={true}
                                            keyboard={true}
                                            manager={
                                              ModalManager {
                                                "add": [Function],
                                                "containers": Array [],
                                                "data": Array [],
                                                "handleContainerOverflow": true,
                                                "hideSiblingNodes": true,
                                                "isTopModal": [Function],
                                                "modals": Array [],
                                                "remove": [Function],
                                              }
                                            }
                                            onEntering={[Function]}
                                            onExited={[Function]}
                                            onHide={[Function]}
                                            onMouseUp={[Function]}
                                            renderBackdrop={[Function]}
                                            restoreFocus={true}
                                            show={false}
                                            transition={[Function]}
                                          />
                                        </Modal>
                                      </StyledComponent>
                                    </Modal>
                                  </BootstrapModalWrapper>
                                   
                                  <ForwardRef
                                    bsSize="small"
                                    id="more-actions-3"
                                    pullRight={true}
                                    title="More Actions"
                                  >
                                    <DropdownButton__StyledDropdownButton
                                      bsSize="small"
                                      id="more-actions-3"
                                      pullRight={true}
                                      title="More Actions"
                                    >
                                      <StyledComponent
                                        bsSize="small"
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "attrs": Array [],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "DropdownButton__StyledDropdownButton-sc-1343dcx-0",
                                              "isStatic": false,
                                              "lastClassName": "hsmsMV",
                                              "rules": Array [
                                                [Function],
                                              ],
                                            },
                                            "displayName": "DropdownButton__StyledDropdownButton",
                                            "foldedComponentIds": Array [],
                                            "render": [Function],
                                            "styledComponentId": "DropdownButton__StyledDropdownButton-sc-1343dcx-0",
                                            "target": [Function],
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                        id="more-actions-3"
                                        pullRight={true}
                                        title="More Actions"
                                      >
                                        <DropdownButton
                                          bsSize="small"
                                          className="DropdownButton__StyledDropdownButton-sc-1343dcx-0 hsmsMV"
                                          id="more-actions-3"
                                          pullRight={true}
                                          title="More Actions"
                                        >
                                          <ForwardRef
                                            bsSize="small"
                                            id="more-actions-3"
                                            pullRight={true}
                                          >
                                            <Uncontrolled(Dropdown)
                                              bsSize="small"
                                              id="more-actions-3"
                                              innerRef={null}
                                              pullRight={true}
                                            >
                                              <Dropdown
                                                bsClass="dropdown"
                                                bsSize="small"
                                                componentClass={[Function]}
                                                id="more-actions-3"
                                                onToggle={[Function]}
                                                pullRight={true}
                                              >
                                                <ButtonGroup
                                                  block={false}
                                                  bsClass="btn-group"
                                                  bsSize="small"
                                                  className="dropdown"
                                                  justified={false}
                                                  vertical={false}
                                                >
                                                  <div
                                                    className="dropdown btn-group btn-group-sm"
                                                  >
                                                    <DropdownToggle
                                                      bsClass="dropdown-toggle"
                                                      bsRole="toggle"
                                                      bsSize="small"
                                                      className="DropdownButton__StyledDropdownButton-sc-1343dcx-0 hsmsMV"
                                                      id="more-actions-3"
                                                      key=".0"
                                                      onClick={[Function]}
                                                      onKeyDown={[Function]}
                                                      open={false}
                                                      useAnchor={false}
                                                    >
                                                      <Button
                                                        active={false}
                                                        aria-expanded={false}
                                                        aria-haspopup={true}
                                                        block={false}
                                                        bsClass="btn"
                                                        bsSize="small"
                                                        bsStyle="default"
                                                        className="DropdownButton__StyledDropdownButton-sc-1343dcx-0 hsmsMV dropdown-toggle"
                                                        disabled={false}
                                                        id="more-actions-3"
                                                        onClick={[Function]}
                                                        onKeyDown={[Function]}
                                                        role="button"
                                                      >
                                                        <button
                                                          aria-expanded={false}
                                                          aria-haspopup={true}
                                                          className="DropdownButton__StyledDropdownButton-sc-1343dcx-0 hsmsMV dropdown-toggle btn btn-sm btn-default"
                                                          disabled={false}
                                                          id="more-actions-3"
                                                          onClick={[Function]}
                                                          onKeyDown={[Function]}
                                                          role="button"
                                                          type="button"
                                                        >
                                                          More Actions
                                                           
                                                          <span
                                                            className="caret"
                                                          />
                                                        </button>
                                                      </Button>
                                                    </DropdownToggle>
                                                    <DropdownMenu
                                                      bsClass="dropdown-menu"
                                                      bsRole="menu"
                                                      key=".1"
                                                      labelledBy="more-actions-3"
                                                      onClose={[Function]}
                                                      onSelect={[Function]}
                                                      pullRight={true}
                                                    >
                                                      <RootCloseWrapper
                                                        disabled={true}
                                                        event="click"
                                                        onRootClose={[Function]}
                                                      >
                                                        <ul
                                                          aria-labelledby="more-actions-3"
                                                          className="dropdown-menu dropdown-menu-right"
                                                          role="menu"
                                                        >
                                                          <LinkContainer
                                                            action="push"
                                                            key=".0"
                                                            onKeyDown={[Function]}
                                                            onSelect={[Function]}
                                                            onlyActiveOnIndex={false}
                                                            to="/system/contentpacks/3"
                                                          >
                                                            <MenuItem
                                                              action="push"
                                                              bsClass="dropdown"
                                                              disabled={false}
                                                              divider={false}
                                                              header={false}
                                                              onClick={[Function]}
                                                              onKeyDown={[Function]}
                                                              onSelect={[Function]}
                                                            >
                                                              <li
                                                                className=""
                                                                role="presentation"
                                                              >
                                                                <SafeAnchor
                                                                  action="push"
                                                                  componentClass="a"
                                                                  onClick={[Function]}
                                                                  onKeyDown={[Function]}
                                                                  role="menuitem"
                                                                  tabIndex="-1"
                                                                >
                                                                  <a
                                                                    action="push"
                                                                    href="#"
                                                                    onClick={[Function]}
                                                                    onKeyDown={[Function]}
                                                                    role="menuitem"
                                                                    tabIndex="-1"
                                                                  >
                                                                    Show
                                                                  </a>
                                                                </SafeAnchor>
                                                              </li>
                                                            </MenuItem>
                                                          </LinkContainer>
                                                          <LinkContainer
                                                            action="push"
                                                            key=".1"
                                                            onKeyDown={[Function]}
                                                            onSelect={[Function]}
                                                            onlyActiveOnIndex={false}
                                                            to="/system/contentpacks/3/1/edit"
                                                          >
                                                            <MenuItem
                                                              action="push"
                                                              bsClass="dropdown"
                                                              disabled={false}
                                                              divider={false}
                                                              header={false}
                                                              onClick={[Function]}
                                                              onKeyDown={[Function]}
                                                              onSelect={[Function]}
                                                            >
                                                              <li
                                                                className=""
                                                                role="presentation"
                                                              >
                                                                <SafeAnchor
                                                                  action="push"
                                                                  componentClass="a"
                                                                  onClick={[Function]}
                                                                  onKeyDown={[Function]}
                                                                  role="menuitem"
                                                                  tabIndex="-1"
                                                                >
                                                                  <a
                                                                    action="push"
                                                                    href="#"
                                                                    onClick={[Function]}
                                                                    onKeyDown={[Function]}
                                                                    role="menuitem"
                                                                    tabIndex="-1"
                                                                  >
                                                                    Create New Version
                                                                  </a>
                                                                </SafeAnchor>
                                                              </li>
                                                            </MenuItem>
                                                          </LinkContainer>
                                                          <MenuItem
                                                            bsClass="dropdown"
                                                            disabled={false}
                                                            divider={false}
                                                            header={false}
                                                            key=".2"
                                                            onKeyDown={[Function]}
                                                            onSelect={[Function]}
                                                          >
                                                            <li
                                                              className=""
                                                              role="presentation"
                                                            >
                                                              <SafeAnchor
                                                                componentClass="a"
                                                                onClick={[Function]}
                                                                onKeyDown={[Function]}
                                                                role="menuitem"
                                                                tabIndex="-1"
                                                              >
                                                                <a
                                                                  href="#"
                                                                  onClick={[Function]}
                                                                  onKeyDown={[Function]}
                                                                  role="menuitem"
                                                                  tabIndex="-1"
                                                                >
                                                                  Download
                                                                </a>
                                                              </SafeAnchor>
                                                            </li>
                                                          </MenuItem>
                                                          <MenuItem
                                                            bsClass="dropdown"
                                                            disabled={false}
                                                            divider={true}
                                                            header={false}
                                                            key=".3"
                                                            onKeyDown={[Function]}
                                                            onSelect={[Function]}
                                                          >
                                                            <li
                                                              className="divider"
                                                              onKeyDown={[Function]}
                                                              role="separator"
                                                            />
                                                          </MenuItem>
                                                          <MenuItem
                                                            bsClass="dropdown"
                                                            disabled={false}
                                                            divider={false}
                                                            header={false}
                                                            key=".4"
                                                            onKeyDown={[Function]}
                                                            onSelect={[Function]}
                                                          >
                                                            <li
                                                              className=""
                                                              role="presentation"
                                                            >
                                                              <SafeAnchor
                                                                componentClass="a"
                                                                onClick={[Function]}
                                                                onKeyDown={[Function]}
                                                                role="menuitem"
                                                                tabIndex="-1"
                                                              >
                                                                <a
                                                                  href="#"
                                                                  onClick={[Function]}
                                                                  onKeyDown={[Function]}
                                                                  role="menuitem"
                                                                  tabIndex="-1"
                                                                >
                                                                  Delete All Versions
                                                                </a>
                                                              </SafeAnchor>
                                                            </li>
                                                          </MenuItem>
                                                        </ul>
                                                      </RootCloseWrapper>
                                                    </DropdownMenu>
                                                  </div>
                                                </ButtonGroup>
                                              </Dropdown>
                                            </Uncontrolled(Dropdown)>
                                          </ForwardRef>
                                        </DropdownButton>
                                      </StyledComponent>
                                    </DropdownButton__StyledDropdownButton>
                                  </ForwardRef>
                                  <ContentPackDownloadControl
                                    contentPackId="3"
                                    revision={1}
                                  >
                                    <BootstrapModalWrapper
                                      backdrop="static"
                                      bsSize="large"
                                      onClose={[Function]}
                                      onHide={[Function]}
                                      onOpen={[Function]}
                                      showModal={false}
                                    >
                                      <Modal
                                        backdrop="static"
                                        bsSize="large"
                                        onHide={[Function]}
                                        show={false}
                                      >
                                        <StyledComponent
                                          backdrop="static"
                                          bsSize="large"
                                          forwardedComponent={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "BACKDROP_TRANSITION_DURATION": 150,
                                              "Body": [Function],
                                              "Dialog": [Function],
                                              "Footer": [Function],
                                              "Header": [Function],
                                              "SIZES": Array [
                                                "large",
                                                "small",
                                              ],
                                              "TRANSITION_DURATION": 300,
                                              "Title": [Function],
                                              "attrs": Array [],
                                              "componentStyle": ComponentStyle {
                                                "componentId": "Modal-nuree8-0",
                                                "isStatic": false,
                                                "lastClassName": "eNmkew",
                                                "rules": Array [
                                                  [Function],
                                                ],
                                              },
                                              "displayName": "Modal",
                                              "foldedComponentIds": Array [],
                                              "render": [Function],
                                              "styledComponentId": "Modal-nuree8-0",
                                              "target": [Function],
                                              "toString": [Function],
                                              "warnTooManyClasses": [Function],
                                              "withComponent": [Function],
                                            }
                                          }
                                          forwardedRef={null}
                                          onHide={[Function]}
                                          show={false}
                                        >
                                          <Modal
                                            animation={true}
                                            autoFocus={true}
                                            backdrop="static"
                                            bsClass="modal"
                                            bsSize="large"
                                            className="Modal-nuree8-0 eNmkew"
                                            dialogComponentClass={[Function]}
                                            enforceFocus={true}
                                            keyboard={true}
                                            manager={
                                              ModalManager {
                                                "add": [Function],
                                                "containers": Array [],
                                                "data": Array [],
                                                "handleContainerOverflow": true,
                                                "hideSiblingNodes": true,
                                                "isTopModal": [Function],
                                                "modals": Array [],
                                                "remove": [Function],
                                              }
                                            }
                                            onHide={[Function]}
                                            renderBackdrop={[Function]}
                                            restoreFocus={true}
                                            show={false}
                                          >
                                            <Modal
                                              autoFocus={true}
                                              backdrop="static"
                                              backdropClassName="modal-backdrop"
                                              backdropTransition={[Function]}
                                              containerClassName="modal-open"
                                              enforceFocus={true}
                                              keyboard={true}
                                              manager={
                                                ModalManager {
                                                  "add": [Function],
                                                  "containers": Array [],
                                                  "data": Array [],
                                                  "handleContainerOverflow": true,
                                                  "hideSiblingNodes": true,
                                                  "isTopModal": [Function],
                                                  "modals": Array [],
                                                  "remove": [Function],
                                                }
                                              }
                                              onEntering={[Function]}
                                              onExited={[Function]}
                                              onHide={[Function]}
                                              onMouseUp={[Function]}
                                              renderBackdrop={[Function]}
                                              restoreFocus={true}
                                              show={false}
                                              transition={[Function]}
                                            />
                                          </Modal>
                                        </StyledComponent>
                                      </Modal>
                                    </BootstrapModalWrapper>
                                  </ContentPackDownloadControl>
                                </div>
                              </Col>
                            </div>
                          </Row>
                          <Row
                            bsClass="row"
                            className="row-sm content-packs-summary"
                            componentClass="div"
                          >
                            <div
                              className="row-sm content-packs-summary row"
                            >
                              <Col
                                bsClass="col"
                                componentClass="div"
                                md={12}
                              >
                                <div
                                  className="col-md-12"
                                >
                                   
                                </div>
                              </Col>
                            </div>
                          </Row>
                        </span>
                      </ListGroupItem>
                    </StyledComponent>
                  </ListGroupItem__StyledListGroupItem>
                </ForwardRef>
              </ControlledTableListItem>
              <ControlledTableListItem
                key="4"
              >
                <ForwardRef>
                  <ListGroupItem__StyledListGroupItem>
                    <StyledComponent
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "STYLES": Array [
                            "success",
                            "warning",
                            "danger",
                            "info",
                          ],
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "ListGroupItem__StyledListGroupItem-sc-1ky0joo-0",
                            "isStatic": false,
                            "lastClassName": "jRLKfG",
                            "rules": Array [
                              [Function],
                            ],
                          },
                          "displayName": "ListGroupItem__StyledListGroupItem",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "ListGroupItem__StyledListGroupItem-sc-1ky0joo-0",
                          "target": [Function],
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                    >
                      <ListGroupItem
                        bsClass="list-group-item"
                        className="ListGroupItem__StyledListGroupItem-sc-1ky0joo-0 jRLKfG"
                        listItem={false}
                      >
                        <span
                          className="ListGroupItem__StyledListGroupItem-sc-1ky0joo-0 jRLKfG list-group-item"
                        >
                          <Row
                            bsClass="row"
                            className="row-sm"
                            componentClass="div"
                          >
                            <div
                              className="row-sm row"
                            >
                              <Col
                                bsClass="col"
                                componentClass="div"
                                md={9}
                              >
                                <div
                                  className="col-md-9"
                                >
                                  <h3>
                                    <Link
                                      onlyActiveOnIndex={false}
                                      style={Object {}}
                                      to="/system/contentpacks/4"
                                    >
                                      <a
                                        onClick={[Function]}
                                        style={Object {}}
                                      />
                                    </Link>
                                     
                                    <small>
                                      Latest Version: 
                                      1
                                       
                                      <ContentPackStatus
                                        contentPackId="4"
                                        states={Array []}
                                      >
                                        <span />
                                      </ContentPackStatus>
                                       
                                    </small>
                                  </h3>
                                </div>
                              </Col>
                              <Col
                                bsClass="col"
                                className="text-right"
                                componentClass="div"
                                md={3}
                              >
                                <div
                                  className="text-right col-md-3"
                                >
                                   
                                  <ForwardRef
                                    bsSize="small"
                                    bsStyle="info"
                                    onClick={[Function]}
                                  >
                                    <Button__StyledButton
                                      bsSize="small"
                                      bsStyle="info"
                                      onClick={[Function]}
                                    >
                                      <StyledComponent
                                        bsSize="small"
                                        bsStyle="info"
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "SIZES": Array [
                                              "large",
                                              "small",
                                              "xsmall",
                                            ],
                                            "STYLES": Array [
                                              "success",
                                              "warning",
                                              "danger",
                                              "info",
                                              "default",
                                              "primary",
                                              "link",
                                            ],
                                            "attrs": Array [],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "Button__StyledButton-c9cbmb-0",
                                              "isStatic": false,
                                              "lastClassName": "jVYrA",
                                              "rules": Array [
                                                [Function],
                                              ],
                                            },
                                            "displayName": "Button__StyledButton",
                                            "foldedComponentIds": Array [],
                                            "render": [Function],
                                            "styledComponentId": "Button__StyledButton-c9cbmb-0",
                                            "target": [Function],
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                        onClick={[Function]}
                                      >
                                        <Button
                                          active={false}
                                          block={false}
                                          bsClass="btn"
                                          bsSize="small"
                                          bsStyle="info"
                                          className="Button__StyledButton-c9cbmb-0 jVYrA"
                                          disabled={false}
                                          onClick={[Function]}
                                        >
                                          <button
                                            className="Button__StyledButton-c9cbmb-0 jVYrA btn btn-sm btn-info"
                                            disabled={false}
                                            onClick={[Function]}
                                            type="button"
                                          >
                                            Install
                                          </button>
                                        </Button>
                                      </StyledComponent>
                                    </Button__StyledButton>
                                  </ForwardRef>
                                  <BootstrapModalWrapper
                                    backdrop="static"
                                    bsSize="large"
                                    onClose={[Function]}
                                    onHide={[Function]}
                                    onOpen={[Function]}
                                    showModal={false}
                                  >
                                    <Modal
                                      backdrop="static"
                                      bsSize="large"
                                      onHide={[Function]}
                                      show={false}
                                    >
                                      <StyledComponent
                                        backdrop="static"
                                        bsSize="large"
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "BACKDROP_TRANSITION_DURATION": 150,
                                            "Body": [Function],
                                            "Dialog": [Function],
                                            "Footer": [Function],
                                            "Header": [Function],
                                            "SIZES": Array [
                                              "large",
                                              "small",
                                            ],
                                            "TRANSITION_DURATION": 300,
                                            "Title": [Function],
                                            "attrs": Array [],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "Modal-nuree8-0",
                                              "isStatic": false,
                                              "lastClassName": "eNmkew",
                                              "rules": Array [
                                                [Function],
                                              ],
                                            },
                                            "displayName": "Modal",
                                            "foldedComponentIds": Array [],
                                            "render": [Function],
                                            "styledComponentId": "Modal-nuree8-0",
                                            "target": [Function],
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                        onHide={[Function]}
                                        show={false}
                                      >
                                        <Modal
                                          animation={true}
                                          autoFocus={true}
                                          backdrop="static"
                                          bsClass="modal"
                                          bsSize="large"
                                          className="Modal-nuree8-0 eNmkew"
                                          dialogComponentClass={[Function]}
                                          enforceFocus={true}
                                          keyboard={true}
                                          manager={
                                            ModalManager {
                                              "add": [Function],
                                              "containers": Array [],
                                              "data": Array [],
                                              "handleContainerOverflow": true,
                                              "hideSiblingNodes": true,
                                              "isTopModal": [Function],
                                              "modals": Array [],
                                              "remove": [Function],
                                            }
                                          }
                                          onHide={[Function]}
                                          renderBackdrop={[Function]}
                                          restoreFocus={true}
                                          show={false}
                                        >
                                          <Modal
                                            autoFocus={true}
                                            backdrop="static"
                                            backdropClassName="modal-backdrop"
                                            backdropTransition={[Function]}
                                            containerClassName="modal-open"
                                            enforceFocus={true}
                                            keyboard={true}
                                            manager={
                                              ModalManager {
                                                "add": [Function],
                                                "containers": Array [],
                                                "data": Array [],
                                                "handleContainerOverflow": true,
                                                "hideSiblingNodes": true,
                                                "isTopModal": [Function],
                                                "modals": Array [],
                                                "remove": [Function],
                                              }
                                            }
                                            onEntering={[Function]}
                                            onExited={[Function]}
                                            onHide={[Function]}
                                            onMouseUp={[Function]}
                                            renderBackdrop={[Function]}
                                            restoreFocus={true}
                                            show={false}
                                            transition={[Function]}
                                          />
                                        </Modal>
                                      </StyledComponent>
                                    </Modal>
                                  </BootstrapModalWrapper>
                                   
                                  <ForwardRef
                                    bsSize="small"
                                    id="more-actions-4"
                                    pullRight={true}
                                    title="More Actions"
                                  >
                                    <DropdownButton__StyledDropdownButton
                                      bsSize="small"
                                      id="more-actions-4"
                                      pullRight={true}
                                      title="More Actions"
                                    >
                                      <StyledComponent
                                        bsSize="small"
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "attrs": Array [],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "DropdownButton__StyledDropdownButton-sc-1343dcx-0",
                                              "isStatic": false,
                                              "lastClassName": "hsmsMV",
                                              "rules": Array [
                                                [Function],
                                              ],
                                            },
                                            "displayName": "DropdownButton__StyledDropdownButton",
                                            "foldedComponentIds": Array [],
                                            "render": [Function],
                                            "styledComponentId": "DropdownButton__StyledDropdownButton-sc-1343dcx-0",
                                            "target": [Function],
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                        id="more-actions-4"
                                        pullRight={true}
                                        title="More Actions"
                                      >
                                        <DropdownButton
                                          bsSize="small"
                                          className="DropdownButton__StyledDropdownButton-sc-1343dcx-0 hsmsMV"
                                          id="more-actions-4"
                                          pullRight={true}
                                          title="More Actions"
                                        >
                                          <ForwardRef
                                            bsSize="small"
                                            id="more-actions-4"
                                            pullRight={true}
                                          >
                                            <Uncontrolled(Dropdown)
                                              bsSize="small"
                                              id="more-actions-4"
                                              innerRef={null}
                                              pullRight={true}
                                            >
                                              <Dropdown
                                                bsClass="dropdown"
                                                bsSize="small"
                                                componentClass={[Function]}
                                                id="more-actions-4"
                                                onToggle={[Function]}
                                                pullRight={true}
                                              >
                                                <ButtonGroup
                                                  block={false}
                                                  bsClass="btn-group"
                                                  bsSize="small"
                                                  className="dropdown"
                                                  justified={false}
                                                  vertical={false}
                                                >
                                                  <div
                                                    className="dropdown btn-group btn-group-sm"
                                                  >
                                                    <DropdownToggle
                                                      bsClass="dropdown-toggle"
                                                      bsRole="toggle"
                                                      bsSize="small"
                                                      className="DropdownButton__StyledDropdownButton-sc-1343dcx-0 hsmsMV"
                                                      id="more-actions-4"
                                                      key=".0"
                                                      onClick={[Function]}
                                                      onKeyDown={[Function]}
                                                      open={false}
                                                      useAnchor={false}
                                                    >
                                                      <Button
                                                        active={false}
                                                        aria-expanded={false}
                                                        aria-haspopup={true}
                                                        block={false}
                                                        bsClass="btn"
                                                        bsSize="small"
                                                        bsStyle="default"
                                                        className="DropdownButton__StyledDropdownButton-sc-1343dcx-0 hsmsMV dropdown-toggle"
                                                        disabled={false}
                                                        id="more-actions-4"
                                                        onClick={[Function]}
                                                        onKeyDown={[Function]}
                                                        role="button"
                                                      >
                                                        <button
                                                          aria-expanded={false}
                                                          aria-haspopup={true}
                                                          className="DropdownButton__StyledDropdownButton-sc-1343dcx-0 hsmsMV dropdown-toggle btn btn-sm btn-default"
                                                          disabled={false}
                                                          id="more-actions-4"
                                                          onClick={[Function]}
                                                          onKeyDown={[Function]}
                                                          role="button"
                                                          type="button"
                                                        >
                                                          More Actions
                                                           
                                                          <span
                                                            className="caret"
                                                          />
                                                        </button>
                                                      </Button>
                                                    </DropdownToggle>
                                                    <DropdownMenu
                                                      bsClass="dropdown-menu"
                                                      bsRole="menu"
                                                      key=".1"
                                                      labelledBy="more-actions-4"
                                                      onClose={[Function]}
                                                      onSelect={[Function]}
                                                      pullRight={true}
                                                    >
                                                      <RootCloseWrapper
                                                        disabled={true}
                                                        event="click"
                                                        onRootClose={[Function]}
                                                      >
                                                        <ul
                                                          aria-labelledby="more-actions-4"
                                                          className="dropdown-menu dropdown-menu-right"
                                                          role="menu"
                                                        >
                                                          <LinkContainer
                                                            action="push"
                                                            key=".0"
                                                            onKeyDown={[Function]}
                                                            onSelect={[Function]}
                                                            onlyActiveOnIndex={false}
                                                            to="/system/contentpacks/4"
                                                          >
                                                            <MenuItem
                                                              action="push"
                                                              bsClass="dropdown"
                                                              disabled={false}
                                                              divider={false}
                                                              header={false}
                                                              onClick={[Function]}
                                                              onKeyDown={[Function]}
                                                              onSelect={[Function]}
                                                            >
                                                              <li
                                                                className=""
                                                                role="presentation"
                                                              >
                                                                <SafeAnchor
                                                                  action="push"
                                                                  componentClass="a"
                                                                  onClick={[Function]}
                                                                  onKeyDown={[Function]}
                                                                  role="menuitem"
                                                                  tabIndex="-1"
                                                                >
                                                                  <a
                                                                    action="push"
                                                                    href="#"
                                                                    onClick={[Function]}
                                                                    onKeyDown={[Function]}
                                                                    role="menuitem"
                                                                    tabIndex="-1"
                                                                  >
                                                                    Show
                                                                  </a>
                                                                </SafeAnchor>
                                                              </li>
                                                            </MenuItem>
                                                          </LinkContainer>
                                                          <LinkContainer
                                                            action="push"
                                                            key=".1"
                                                            onKeyDown={[Function]}
                                                            onSelect={[Function]}
                                                            onlyActiveOnIndex={false}
                                                            to="/system/contentpacks/4/1/edit"
                                                          >
                                                            <MenuItem
                                                              action="push"
                                                              bsClass="dropdown"
                                                              disabled={false}
                                                              divider={false}
                                                              header={false}
                                                              onClick={[Function]}
                                                              onKeyDown={[Function]}
                                                              onSelect={[Function]}
                                                            >
                                                              <li
                                                                className=""
                                                                role="presentation"
                                                              >
                                                                <SafeAnchor
                                                                  action="push"
                                                                  componentClass="a"
                                                                  onClick={[Function]}
                                                                  onKeyDown={[Function]}
                                                                  role="menuitem"
                                                                  tabIndex="-1"
                                                                >
                                                                  <a
                                                                    action="push"
                                                                    href="#"
                                                                    onClick={[Function]}
                                                                    onKeyDown={[Function]}
                                                                    role="menuitem"
                                                                    tabIndex="-1"
                                                                  >
                                                                    Create New Version
                                                                  </a>
                                                                </SafeAnchor>
                                                              </li>
                                                            </MenuItem>
                                                          </LinkContainer>
                                                          <MenuItem
                                                            bsClass="dropdown"
                                                            disabled={false}
                                                            divider={false}
                                                            header={false}
                                                            key=".2"
                                                            onKeyDown={[Function]}
                                                            onSelect={[Function]}
                                                          >
                                                            <li
                                                              className=""
                                                              role="presentation"
                                                            >
                                                              <SafeAnchor
                                                                componentClass="a"
                                                                onClick={[Function]}
                                                                onKeyDown={[Function]}
                                                                role="menuitem"
                                                                tabIndex="-1"
                                                              >
                                                                <a
                                                                  href="#"
                                                                  onClick={[Function]}
                                                                  onKeyDown={[Function]}
                                                                  role="menuitem"
                                                                  tabIndex="-1"
                                                                >
                                                                  Download
                                                                </a>
                                                              </SafeAnchor>
                                                            </li>
                                                          </MenuItem>
                                                          <MenuItem
                                                            bsClass="dropdown"
                                                            disabled={false}
                                                            divider={true}
                                                            header={false}
                                                            key=".3"
                                                            onKeyDown={[Function]}
                                                            onSelect={[Function]}
                                                          >
                                                            <li
                                                              className="divider"
                                                              onKeyDown={[Function]}
                                                              role="separator"
                                                            />
                                                          </MenuItem>
                                                          <MenuItem
                                                            bsClass="dropdown"
                                                            disabled={false}
                                                            divider={false}
                                                            header={false}
                                                            key=".4"
                                                            onKeyDown={[Function]}
                                                            onSelect={[Function]}
                                                          >
                                                            <li
                                                              className=""
                                                              role="presentation"
                                                            >
                                                              <SafeAnchor
                                                                componentClass="a"
                                                                onClick={[Function]}
                                                                onKeyDown={[Function]}
                                                                role="menuitem"
                                                                tabIndex="-1"
                                                              >
                                                                <a
                                                                  href="#"
                                                                  onClick={[Function]}
                                                                  onKeyDown={[Function]}
                                                                  role="menuitem"
                                                                  tabIndex="-1"
                                                                >
                                                                  Delete All Versions
                                                                </a>
                                                              </SafeAnchor>
                                                            </li>
                                                          </MenuItem>
                                                        </ul>
                                                      </RootCloseWrapper>
                                                    </DropdownMenu>
                                                  </div>
                                                </ButtonGroup>
                                              </Dropdown>
                                            </Uncontrolled(Dropdown)>
                                          </ForwardRef>
                                        </DropdownButton>
                                      </StyledComponent>
                                    </DropdownButton__StyledDropdownButton>
                                  </ForwardRef>
                                  <ContentPackDownloadControl
                                    contentPackId="4"
                                    revision={1}
                                  >
                                    <BootstrapModalWrapper
                                      backdrop="static"
                                      bsSize="large"
                                      onClose={[Function]}
                                      onHide={[Function]}
                                      onOpen={[Function]}
                                      showModal={false}
                                    >
                                      <Modal
                                        backdrop="static"
                                        bsSize="large"
                                        onHide={[Function]}
                                        show={false}
                                      >
                                        <StyledComponent
                                          backdrop="static"
                                          bsSize="large"
                                          forwardedComponent={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "BACKDROP_TRANSITION_DURATION": 150,
                                              "Body": [Function],
                                              "Dialog": [Function],
                                              "Footer": [Function],
                                              "Header": [Function],
                                              "SIZES": Array [
                                                "large",
                                                "small",
                                              ],
                                              "TRANSITION_DURATION": 300,
                                              "Title": [Function],
                                              "attrs": Array [],
                                              "componentStyle": ComponentStyle {
                                                "componentId": "Modal-nuree8-0",
                                                "isStatic": false,
                                                "lastClassName": "eNmkew",
                                                "rules": Array [
                                                  [Function],
                                                ],
                                              },
                                              "displayName": "Modal",
                                              "foldedComponentIds": Array [],
                                              "render": [Function],
                                              "styledComponentId": "Modal-nuree8-0",
                                              "target": [Function],
                                              "toString": [Function],
                                              "warnTooManyClasses": [Function],
                                              "withComponent": [Function],
                                            }
                                          }
                                          forwardedRef={null}
                                          onHide={[Function]}
                                          show={false}
                                        >
                                          <Modal
                                            animation={true}
                                            autoFocus={true}
                                            backdrop="static"
                                            bsClass="modal"
                                            bsSize="large"
                                            className="Modal-nuree8-0 eNmkew"
                                            dialogComponentClass={[Function]}
                                            enforceFocus={true}
                                            keyboard={true}
                                            manager={
                                              ModalManager {
                                                "add": [Function],
                                                "containers": Array [],
                                                "data": Array [],
                                                "handleContainerOverflow": true,
                                                "hideSiblingNodes": true,
                                                "isTopModal": [Function],
                                                "modals": Array [],
                                                "remove": [Function],
                                              }
                                            }
                                            onHide={[Function]}
                                            renderBackdrop={[Function]}
                                            restoreFocus={true}
                                            show={false}
                                          >
                                            <Modal
                                              autoFocus={true}
                                              backdrop="static"
                                              backdropClassName="modal-backdrop"
                                              backdropTransition={[Function]}
                                              containerClassName="modal-open"
                                              enforceFocus={true}
                                              keyboard={true}
                                              manager={
                                                ModalManager {
                                                  "add": [Function],
                                                  "containers": Array [],
                                                  "data": Array [],
                                                  "handleContainerOverflow": true,
                                                  "hideSiblingNodes": true,
                                                  "isTopModal": [Function],
                                                  "modals": Array [],
                                                  "remove": [Function],
                                                }
                                              }
                                              onEntering={[Function]}
                                              onExited={[Function]}
                                              onHide={[Function]}
                                              onMouseUp={[Function]}
                                              renderBackdrop={[Function]}
                                              restoreFocus={true}
                                              show={false}
                                              transition={[Function]}
                                            />
                                          </Modal>
                                        </StyledComponent>
                                      </Modal>
                                    </BootstrapModalWrapper>
                                  </ContentPackDownloadControl>
                                </div>
                              </Col>
                            </div>
                          </Row>
                          <Row
                            bsClass="row"
                            className="row-sm content-packs-summary"
                            componentClass="div"
                          >
                            <div
                              className="row-sm content-packs-summary row"
                            >
                              <Col
                                bsClass="col"
                                componentClass="div"
                                md={12}
                              >
                                <div
                                  className="col-md-12"
                                >
                                  A crypted backup over ssh.
                                   
                                </div>
                              </Col>
                            </div>
                          </Row>
                        </span>
                      </ListGroupItem>
                    </StyledComponent>
                  </ListGroupItem__StyledListGroupItem>
                </ForwardRef>
              </ControlledTableListItem>
              <ControlledTableListItem
                key="5"
              >
                <ForwardRef>
                  <ListGroupItem__StyledListGroupItem>
                    <StyledComponent
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "STYLES": Array [
                            "success",
                            "warning",
                            "danger",
                            "info",
                          ],
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "ListGroupItem__StyledListGroupItem-sc-1ky0joo-0",
                            "isStatic": false,
                            "lastClassName": "jRLKfG",
                            "rules": Array [
                              [Function],
                            ],
                          },
                          "displayName": "ListGroupItem__StyledListGroupItem",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "ListGroupItem__StyledListGroupItem-sc-1ky0joo-0",
                          "target": [Function],
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                    >
                      <ListGroupItem
                        bsClass="list-group-item"
                        className="ListGroupItem__StyledListGroupItem-sc-1ky0joo-0 jRLKfG"
                        listItem={false}
                      >
                        <span
                          className="ListGroupItem__StyledListGroupItem-sc-1ky0joo-0 jRLKfG list-group-item"
                        >
                          <Row
                            bsClass="row"
                            className="row-sm"
                            componentClass="div"
                          >
                            <div
                              className="row-sm row"
                            >
                              <Col
                                bsClass="col"
                                componentClass="div"
                                md={9}
                              >
                                <div
                                  className="col-md-9"
                                >
                                  <h3>
                                    <Link
                                      onlyActiveOnIndex={false}
                                      style={Object {}}
                                      to="/system/contentpacks/5"
                                    >
                                      <a
                                        onClick={[Function]}
                                        style={Object {}}
                                      />
                                    </Link>
                                     
                                    <small>
                                      Latest Version: 
                                      1
                                       
                                      <ContentPackStatus
                                        contentPackId="5"
                                        states={Array []}
                                      >
                                        <span />
                                      </ContentPackStatus>
                                       
                                    </small>
                                  </h3>
                                </div>
                              </Col>
                              <Col
                                bsClass="col"
                                className="text-right"
                                componentClass="div"
                                md={3}
                              >
                                <div
                                  className="text-right col-md-3"
                                >
                                   
                                  <ForwardRef
                                    bsSize="small"
                                    bsStyle="info"
                                    onClick={[Function]}
                                  >
                                    <Button__StyledButton
                                      bsSize="small"
                                      bsStyle="info"
                                      onClick={[Function]}
                                    >
                                      <StyledComponent
                                        bsSize="small"
                                        bsStyle="info"
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "SIZES": Array [
                                              "large",
                                              "small",
                                              "xsmall",
                                            ],
                                            "STYLES": Array [
                                              "success",
                                              "warning",
                                              "danger",
                                              "info",
                                              "default",
                                              "primary",
                                              "link",
                                            ],
                                            "attrs": Array [],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "Button__StyledButton-c9cbmb-0",
                                              "isStatic": false,
                                              "lastClassName": "jVYrA",
                                              "rules": Array [
                                                [Function],
                                              ],
                                            },
                                            "displayName": "Button__StyledButton",
                                            "foldedComponentIds": Array [],
                                            "render": [Function],
                                            "styledComponentId": "Button__StyledButton-c9cbmb-0",
                                            "target": [Function],
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                        onClick={[Function]}
                                      >
                                        <Button
                                          active={false}
                                          block={false}
                                          bsClass="btn"
                                          bsSize="small"
                                          bsStyle="info"
                                          className="Button__StyledButton-c9cbmb-0 jVYrA"
                                          disabled={false}
                                          onClick={[Function]}
                                        >
                                          <button
                                            className="Button__StyledButton-c9cbmb-0 jVYrA btn btn-sm btn-info"
                                            disabled={false}
                                            onClick={[Function]}
                                            type="button"
                                          >
                                            Install
                                          </button>
                                        </Button>
                                      </StyledComponent>
                                    </Button__StyledButton>
                                  </ForwardRef>
                                  <BootstrapModalWrapper
                                    backdrop="static"
                                    bsSize="large"
                                    onClose={[Function]}
                                    onHide={[Function]}
                                    onOpen={[Function]}
                                    showModal={false}
                                  >
                                    <Modal
                                      backdrop="static"
                                      bsSize="large"
                                      onHide={[Function]}
                                      show={false}
                                    >
                                      <StyledComponent
                                        backdrop="static"
                                        bsSize="large"
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "BACKDROP_TRANSITION_DURATION": 150,
                                            "Body": [Function],
                                            "Dialog": [Function],
                                            "Footer": [Function],
                                            "Header": [Function],
                                            "SIZES": Array [
                                              "large",
                                              "small",
                                            ],
                                            "TRANSITION_DURATION": 300,
                                            "Title": [Function],
                                            "attrs": Array [],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "Modal-nuree8-0",
                                              "isStatic": false,
                                              "lastClassName": "eNmkew",
                                              "rules": Array [
                                                [Function],
                                              ],
                                            },
                                            "displayName": "Modal",
                                            "foldedComponentIds": Array [],
                                            "render": [Function],
                                            "styledComponentId": "Modal-nuree8-0",
                                            "target": [Function],
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                        onHide={[Function]}
                                        show={false}
                                      >
                                        <Modal
                                          animation={true}
                                          autoFocus={true}
                                          backdrop="static"
                                          bsClass="modal"
                                          bsSize="large"
                                          className="Modal-nuree8-0 eNmkew"
                                          dialogComponentClass={[Function]}
                                          enforceFocus={true}
                                          keyboard={true}
                                          manager={
                                            ModalManager {
                                              "add": [Function],
                                              "containers": Array [],
                                              "data": Array [],
                                              "handleContainerOverflow": true,
                                              "hideSiblingNodes": true,
                                              "isTopModal": [Function],
                                              "modals": Array [],
                                              "remove": [Function],
                                            }
                                          }
                                          onHide={[Function]}
                                          renderBackdrop={[Function]}
                                          restoreFocus={true}
                                          show={false}
                                        >
                                          <Modal
                                            autoFocus={true}
                                            backdrop="static"
                                            backdropClassName="modal-backdrop"
                                            backdropTransition={[Function]}
                                            containerClassName="modal-open"
                                            enforceFocus={true}
                                            keyboard={true}
                                            manager={
                                              ModalManager {
                                                "add": [Function],
                                                "containers": Array [],
                                                "data": Array [],
                                                "handleContainerOverflow": true,
                                                "hideSiblingNodes": true,
                                                "isTopModal": [Function],
                                                "modals": Array [],
                                                "remove": [Function],
                                              }
                                            }
                                            onEntering={[Function]}
                                            onExited={[Function]}
                                            onHide={[Function]}
                                            onMouseUp={[Function]}
                                            renderBackdrop={[Function]}
                                            restoreFocus={true}
                                            show={false}
                                            transition={[Function]}
                                          />
                                        </Modal>
                                      </StyledComponent>
                                    </Modal>
                                  </BootstrapModalWrapper>
                                   
                                  <ForwardRef
                                    bsSize="small"
                                    id="more-actions-5"
                                    pullRight={true}
                                    title="More Actions"
                                  >
                                    <DropdownButton__StyledDropdownButton
                                      bsSize="small"
                                      id="more-actions-5"
                                      pullRight={true}
                                      title="More Actions"
                                    >
                                      <StyledComponent
                                        bsSize="small"
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "attrs": Array [],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "DropdownButton__StyledDropdownButton-sc-1343dcx-0",
                                              "isStatic": false,
                                              "lastClassName": "hsmsMV",
                                              "rules": Array [
                                                [Function],
                                              ],
                                            },
                                            "displayName": "DropdownButton__StyledDropdownButton",
                                            "foldedComponentIds": Array [],
                                            "render": [Function],
                                            "styledComponentId": "DropdownButton__StyledDropdownButton-sc-1343dcx-0",
                                            "target": [Function],
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                        id="more-actions-5"
                                        pullRight={true}
                                        title="More Actions"
                                      >
                                        <DropdownButton
                                          bsSize="small"
                                          className="DropdownButton__StyledDropdownButton-sc-1343dcx-0 hsmsMV"
                                          id="more-actions-5"
                                          pullRight={true}
                                          title="More Actions"
                                        >
                                          <ForwardRef
                                            bsSize="small"
                                            id="more-actions-5"
                                            pullRight={true}
                                          >
                                            <Uncontrolled(Dropdown)
                                              bsSize="small"
                                              id="more-actions-5"
                                              innerRef={null}
                                              pullRight={true}
                                            >
                                              <Dropdown
                                                bsClass="dropdown"
                                                bsSize="small"
                                                componentClass={[Function]}
                                                id="more-actions-5"
                                                onToggle={[Function]}
                                                pullRight={true}
                                              >
                                                <ButtonGroup
                                                  block={false}
                                                  bsClass="btn-group"
                                                  bsSize="small"
                                                  className="dropdown"
                                                  justified={false}
                                                  vertical={false}
                                                >
                                                  <div
                                                    className="dropdown btn-group btn-group-sm"
                                                  >
                                                    <DropdownToggle
                                                      bsClass="dropdown-toggle"
                                                      bsRole="toggle"
                                                      bsSize="small"
                                                      className="DropdownButton__StyledDropdownButton-sc-1343dcx-0 hsmsMV"
                                                      id="more-actions-5"
                                                      key=".0"
                                                      onClick={[Function]}
                                                      onKeyDown={[Function]}
                                                      open={false}
                                                      useAnchor={false}
                                                    >
                                                      <Button
                                                        active={false}
                                                        aria-expanded={false}
                                                        aria-haspopup={true}
                                                        block={false}
                                                        bsClass="btn"
                                                        bsSize="small"
                                                        bsStyle="default"
                                                        className="DropdownButton__StyledDropdownButton-sc-1343dcx-0 hsmsMV dropdown-toggle"
                                                        disabled={false}
                                                        id="more-actions-5"
                                                        onClick={[Function]}
                                                        onKeyDown={[Function]}
                                                        role="button"
                                                      >
                                                        <button
                                                          aria-expanded={false}
                                                          aria-haspopup={true}
                                                          className="DropdownButton__StyledDropdownButton-sc-1343dcx-0 hsmsMV dropdown-toggle btn btn-sm btn-default"
                                                          disabled={false}
                                                          id="more-actions-5"
                                                          onClick={[Function]}
                                                          onKeyDown={[Function]}
                                                          role="button"
                                                          type="button"
                                                        >
                                                          More Actions
                                                           
                                                          <span
                                                            className="caret"
                                                          />
                                                        </button>
                                                      </Button>
                                                    </DropdownToggle>
                                                    <DropdownMenu
                                                      bsClass="dropdown-menu"
                                                      bsRole="menu"
                                                      key=".1"
                                                      labelledBy="more-actions-5"
                                                      onClose={[Function]}
                                                      onSelect={[Function]}
                                                      pullRight={true}
                                                    >
                                                      <RootCloseWrapper
                                                        disabled={true}
                                                        event="click"
                                                        onRootClose={[Function]}
                                                      >
                                                        <ul
                                                          aria-labelledby="more-actions-5"
                                                          className="dropdown-menu dropdown-menu-right"
                                                          role="menu"
                                                        >
                                                          <LinkContainer
                                                            action="push"
                                                            key=".0"
                                                            onKeyDown={[Function]}
                                                            onSelect={[Function]}
                                                            onlyActiveOnIndex={false}
                                                            to="/system/contentpacks/5"
                                                          >
                                                            <MenuItem
                                                              action="push"
                                                              bsClass="dropdown"
                                                              disabled={false}
                                                              divider={false}
                                                              header={false}
                                                              onClick={[Function]}
                                                              onKeyDown={[Function]}
                                                              onSelect={[Function]}
                                                            >
                                                              <li
                                                                className=""
                                                                role="presentation"
                                                              >
                                                                <SafeAnchor
                                                                  action="push"
                                                                  componentClass="a"
                                                                  onClick={[Function]}
                                                                  onKeyDown={[Function]}
                                                                  role="menuitem"
                                                                  tabIndex="-1"
                                                                >
                                                                  <a
                                                                    action="push"
                                                                    href="#"
                                                                    onClick={[Function]}
                                                                    onKeyDown={[Function]}
                                                                    role="menuitem"
                                                                    tabIndex="-1"
                                                                  >
                                                                    Show
                                                                  </a>
                                                                </SafeAnchor>
                                                              </li>
                                                            </MenuItem>
                                                          </LinkContainer>
                                                          <LinkContainer
                                                            action="push"
                                                            key=".1"
                                                            onKeyDown={[Function]}
                                                            onSelect={[Function]}
                                                            onlyActiveOnIndex={false}
                                                            to="/system/contentpacks/5/1/edit"
                                                          >
                                                            <MenuItem
                                                              action="push"
                                                              bsClass="dropdown"
                                                              disabled={false}
                                                              divider={false}
                                                              header={false}
                                                              onClick={[Function]}
                                                              onKeyDown={[Function]}
                                                              onSelect={[Function]}
                                                            >
                                                              <li
                                                                className=""
                                                                role="presentation"
                                                              >
                                                                <SafeAnchor
                                                                  action="push"
                                                                  componentClass="a"
                                                                  onClick={[Function]}
                                                                  onKeyDown={[Function]}
                                                                  role="menuitem"
                                                                  tabIndex="-1"
                                                                >
                                                                  <a
                                                                    action="push"
                                                                    href="#"
                                                                    onClick={[Function]}
                                                                    onKeyDown={[Function]}
                                                                    role="menuitem"
                                                                    tabIndex="-1"
                                                                  >
                                                                    Create New Version
                                                                  </a>
                                                                </SafeAnchor>
                                                              </li>
                                                            </MenuItem>
                                                          </LinkContainer>
                                                          <MenuItem
                                                            bsClass="dropdown"
                                                            disabled={false}
                                                            divider={false}
                                                            header={false}
                                                            key=".2"
                                                            onKeyDown={[Function]}
                                                            onSelect={[Function]}
                                                          >
                                                            <li
                                                              className=""
                                                              role="presentation"
                                                            >
                                                              <SafeAnchor
                                                                componentClass="a"
                                                                onClick={[Function]}
                                                                onKeyDown={[Function]}
                                                                role="menuitem"
                                                                tabIndex="-1"
                                                              >
                                                                <a
                                                                  href="#"
                                                                  onClick={[Function]}
                                                                  onKeyDown={[Function]}
                                                                  role="menuitem"
                                                                  tabIndex="-1"
                                                                >
                                                                  Download
                                                                </a>
                                                              </SafeAnchor>
                                                            </li>
                                                          </MenuItem>
                                                          <MenuItem
                                                            bsClass="dropdown"
                                                            disabled={false}
                                                            divider={true}
                                                            header={false}
                                                            key=".3"
                                                            onKeyDown={[Function]}
                                                            onSelect={[Function]}
                                                          >
                                                            <li
                                                              className="divider"
                                                              onKeyDown={[Function]}
                                                              role="separator"
                                                            />
                                                          </MenuItem>
                                                          <MenuItem
                                                            bsClass="dropdown"
                                                            disabled={false}
                                                            divider={false}
                                                            header={false}
                                                            key=".4"
                                                            onKeyDown={[Function]}
                                                            onSelect={[Function]}
                                                          >
                                                            <li
                                                              className=""
                                                              role="presentation"
                                                            >
                                                              <SafeAnchor
                                                                componentClass="a"
                                                                onClick={[Function]}
                                                                onKeyDown={[Function]}
                                                                role="menuitem"
                                                                tabIndex="-1"
                                                              >
                                                                <a
                                                                  href="#"
                                                                  onClick={[Function]}
                                                                  onKeyDown={[Function]}
                                                                  role="menuitem"
                                                                  tabIndex="-1"
                                                                >
                                                                  Delete All Versions
                                                                </a>
                                                              </SafeAnchor>
                                                            </li>
                                                          </MenuItem>
                                                        </ul>
                                                      </RootCloseWrapper>
                                                    </DropdownMenu>
                                                  </div>
                                                </ButtonGroup>
                                              </Dropdown>
                                            </Uncontrolled(Dropdown)>
                                          </ForwardRef>
                                        </DropdownButton>
                                      </StyledComponent>
                                    </DropdownButton__StyledDropdownButton>
                                  </ForwardRef>
                                  <ContentPackDownloadControl
                                    contentPackId="5"
                                    revision={1}
                                  >
                                    <BootstrapModalWrapper
                                      backdrop="static"
                                      bsSize="large"
                                      onClose={[Function]}
                                      onHide={[Function]}
                                      onOpen={[Function]}
                                      showModal={false}
                                    >
                                      <Modal
                                        backdrop="static"
                                        bsSize="large"
                                        onHide={[Function]}
                                        show={false}
                                      >
                                        <StyledComponent
                                          backdrop="static"
                                          bsSize="large"
                                          forwardedComponent={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "BACKDROP_TRANSITION_DURATION": 150,
                                              "Body": [Function],
                                              "Dialog": [Function],
                                              "Footer": [Function],
                                              "Header": [Function],
                                              "SIZES": Array [
                                                "large",
                                                "small",
                                              ],
                                              "TRANSITION_DURATION": 300,
                                              "Title": [Function],
                                              "attrs": Array [],
                                              "componentStyle": ComponentStyle {
                                                "componentId": "Modal-nuree8-0",
                                                "isStatic": false,
                                                "lastClassName": "eNmkew",
                                                "rules": Array [
                                                  [Function],
                                                ],
                                              },
                                              "displayName": "Modal",
                                              "foldedComponentIds": Array [],
                                              "render": [Function],
                                              "styledComponentId": "Modal-nuree8-0",
                                              "target": [Function],
                                              "toString": [Function],
                                              "warnTooManyClasses": [Function],
                                              "withComponent": [Function],
                                            }
                                          }
                                          forwardedRef={null}
                                          onHide={[Function]}
                                          show={false}
                                        >
                                          <Modal
                                            animation={true}
                                            autoFocus={true}
                                            backdrop="static"
                                            bsClass="modal"
                                            bsSize="large"
                                            className="Modal-nuree8-0 eNmkew"
                                            dialogComponentClass={[Function]}
                                            enforceFocus={true}
                                            keyboard={true}
                                            manager={
                                              ModalManager {
                                                "add": [Function],
                                                "containers": Array [],
                                                "data": Array [],
                                                "handleContainerOverflow": true,
                                                "hideSiblingNodes": true,
                                                "isTopModal": [Function],
                                                "modals": Array [],
                                                "remove": [Function],
                                              }
                                            }
                                            onHide={[Function]}
                                            renderBackdrop={[Function]}
                                            restoreFocus={true}
                                            show={false}
                                          >
                                            <Modal
                                              autoFocus={true}
                                              backdrop="static"
                                              backdropClassName="modal-backdrop"
                                              backdropTransition={[Function]}
                                              containerClassName="modal-open"
                                              enforceFocus={true}
                                              keyboard={true}
                                              manager={
                                                ModalManager {
                                                  "add": [Function],
                                                  "containers": Array [],
                                                  "data": Array [],
                                                  "handleContainerOverflow": true,
                                                  "hideSiblingNodes": true,
                                                  "isTopModal": [Function],
                                                  "modals": Array [],
                                                  "remove": [Function],
                                                }
                                              }
                                              onEntering={[Function]}
                                              onExited={[Function]}
                                              onHide={[Function]}
                                              onMouseUp={[Function]}
                                              renderBackdrop={[Function]}
                                              restoreFocus={true}
                                              show={false}
                                              transition={[Function]}
                                            />
                                          </Modal>
                                        </StyledComponent>
                                      </Modal>
                                    </BootstrapModalWrapper>
                                  </ContentPackDownloadControl>
                                </div>
                              </Col>
                            </div>
                          </Row>
                          <Row
                            bsClass="row"
                            className="row-sm content-packs-summary"
                            componentClass="div"
                          >
                            <div
                              className="row-sm content-packs-summary row"
                            >
                              <Col
                                bsClass="col"
                                componentClass="div"
                                md={12}
                              >
                                <div
                                  className="col-md-12"
                                >
                                  Fast but insecure backup
                                   
                                </div>
                              </Col>
                            </div>
                          </Row>
                        </span>
                      </ListGroupItem>
                    </StyledComponent>
                  </ListGroupItem__StyledListGroupItem>
                </ForwardRef>
              </ControlledTableListItem>
              <ControlledTableListItem
                key="6"
              >
                <ForwardRef>
                  <ListGroupItem__StyledListGroupItem>
                    <StyledComponent
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "STYLES": Array [
                            "success",
                            "warning",
                            "danger",
                            "info",
                          ],
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "ListGroupItem__StyledListGroupItem-sc-1ky0joo-0",
                            "isStatic": false,
                            "lastClassName": "jRLKfG",
                            "rules": Array [
                              [Function],
                            ],
                          },
                          "displayName": "ListGroupItem__StyledListGroupItem",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "ListGroupItem__StyledListGroupItem-sc-1ky0joo-0",
                          "target": [Function],
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                    >
                      <ListGroupItem
                        bsClass="list-group-item"
                        className="ListGroupItem__StyledListGroupItem-sc-1ky0joo-0 jRLKfG"
                        listItem={false}
                      >
                        <span
                          className="ListGroupItem__StyledListGroupItem-sc-1ky0joo-0 jRLKfG list-group-item"
                        >
                          <Row
                            bsClass="row"
                            className="row-sm"
                            componentClass="div"
                          >
                            <div
                              className="row-sm row"
                            >
                              <Col
                                bsClass="col"
                                componentClass="div"
                                md={9}
                              >
                                <div
                                  className="col-md-9"
                                >
                                  <h3>
                                    <Link
                                      onlyActiveOnIndex={false}
                                      style={Object {}}
                                      to="/system/contentpacks/6"
                                    >
                                      <a
                                        onClick={[Function]}
                                        style={Object {}}
                                      />
                                    </Link>
                                     
                                    <small>
                                      Latest Version: 
                                      1
                                       
                                      <ContentPackStatus
                                        contentPackId="6"
                                        states={Array []}
                                      >
                                        <span />
                                      </ContentPackStatus>
                                       
                                    </small>
                                  </h3>
                                </div>
                              </Col>
                              <Col
                                bsClass="col"
                                className="text-right"
                                componentClass="div"
                                md={3}
                              >
                                <div
                                  className="text-right col-md-3"
                                >
                                   
                                  <ForwardRef
                                    bsSize="small"
                                    bsStyle="info"
                                    onClick={[Function]}
                                  >
                                    <Button__StyledButton
                                      bsSize="small"
                                      bsStyle="info"
                                      onClick={[Function]}
                                    >
                                      <StyledComponent
                                        bsSize="small"
                                        bsStyle="info"
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "SIZES": Array [
                                              "large",
                                              "small",
                                              "xsmall",
                                            ],
                                            "STYLES": Array [
                                              "success",
                                              "warning",
                                              "danger",
                                              "info",
                                              "default",
                                              "primary",
                                              "link",
                                            ],
                                            "attrs": Array [],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "Button__StyledButton-c9cbmb-0",
                                              "isStatic": false,
                                              "lastClassName": "jVYrA",
                                              "rules": Array [
                                                [Function],
                                              ],
                                            },
                                            "displayName": "Button__StyledButton",
                                            "foldedComponentIds": Array [],
                                            "render": [Function],
                                            "styledComponentId": "Button__StyledButton-c9cbmb-0",
                                            "target": [Function],
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                        onClick={[Function]}
                                      >
                                        <Button
                                          active={false}
                                          block={false}
                                          bsClass="btn"
                                          bsSize="small"
                                          bsStyle="info"
                                          className="Button__StyledButton-c9cbmb-0 jVYrA"
                                          disabled={false}
                                          onClick={[Function]}
                                        >
                                          <button
                                            className="Button__StyledButton-c9cbmb-0 jVYrA btn btn-sm btn-info"
                                            disabled={false}
                                            onClick={[Function]}
                                            type="button"
                                          >
                                            Install
                                          </button>
                                        </Button>
                                      </StyledComponent>
                                    </Button__StyledButton>
                                  </ForwardRef>
                                  <BootstrapModalWrapper
                                    backdrop="static"
                                    bsSize="large"
                                    onClose={[Function]}
                                    onHide={[Function]}
                                    onOpen={[Function]}
                                    showModal={false}
                                  >
                                    <Modal
                                      backdrop="static"
                                      bsSize="large"
                                      onHide={[Function]}
                                      show={false}
                                    >
                                      <StyledComponent
                                        backdrop="static"
                                        bsSize="large"
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "BACKDROP_TRANSITION_DURATION": 150,
                                            "Body": [Function],
                                            "Dialog": [Function],
                                            "Footer": [Function],
                                            "Header": [Function],
                                            "SIZES": Array [
                                              "large",
                                              "small",
                                            ],
                                            "TRANSITION_DURATION": 300,
                                            "Title": [Function],
                                            "attrs": Array [],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "Modal-nuree8-0",
                                              "isStatic": false,
                                              "lastClassName": "eNmkew",
                                              "rules": Array [
                                                [Function],
                                              ],
                                            },
                                            "displayName": "Modal",
                                            "foldedComponentIds": Array [],
                                            "render": [Function],
                                            "styledComponentId": "Modal-nuree8-0",
                                            "target": [Function],
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                        onHide={[Function]}
                                        show={false}
                                      >
                                        <Modal
                                          animation={true}
                                          autoFocus={true}
                                          backdrop="static"
                                          bsClass="modal"
                                          bsSize="large"
                                          className="Modal-nuree8-0 eNmkew"
                                          dialogComponentClass={[Function]}
                                          enforceFocus={true}
                                          keyboard={true}
                                          manager={
                                            ModalManager {
                                              "add": [Function],
                                              "containers": Array [],
                                              "data": Array [],
                                              "handleContainerOverflow": true,
                                              "hideSiblingNodes": true,
                                              "isTopModal": [Function],
                                              "modals": Array [],
                                              "remove": [Function],
                                            }
                                          }
                                          onHide={[Function]}
                                          renderBackdrop={[Function]}
                                          restoreFocus={true}
                                          show={false}
                                        >
                                          <Modal
                                            autoFocus={true}
                                            backdrop="static"
                                            backdropClassName="modal-backdrop"
                                            backdropTransition={[Function]}
                                            containerClassName="modal-open"
                                            enforceFocus={true}
                                            keyboard={true}
                                            manager={
                                              ModalManager {
                                                "add": [Function],
                                                "containers": Array [],
                                                "data": Array [],
                                                "handleContainerOverflow": true,
                                                "hideSiblingNodes": true,
                                                "isTopModal": [Function],
                                                "modals": Array [],
                                                "remove": [Function],
                                              }
                                            }
                                            onEntering={[Function]}
                                            onExited={[Function]}
                                            onHide={[Function]}
                                            onMouseUp={[Function]}
                                            renderBackdrop={[Function]}
                                            restoreFocus={true}
                                            show={false}
                                            transition={[Function]}
                                          />
                                        </Modal>
                                      </StyledComponent>
                                    </Modal>
                                  </BootstrapModalWrapper>
                                   
                                  <ForwardRef
                                    bsSize="small"
                                    id="more-actions-6"
                                    pullRight={true}
                                    title="More Actions"
                                  >
                                    <DropdownButton__StyledDropdownButton
                                      bsSize="small"
                                      id="more-actions-6"
                                      pullRight={true}
                                      title="More Actions"
                                    >
                                      <StyledComponent
                                        bsSize="small"
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "attrs": Array [],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "DropdownButton__StyledDropdownButton-sc-1343dcx-0",
                                              "isStatic": false,
                                              "lastClassName": "hsmsMV",
                                              "rules": Array [
                                                [Function],
                                              ],
                                            },
                                            "displayName": "DropdownButton__StyledDropdownButton",
                                            "foldedComponentIds": Array [],
                                            "render": [Function],
                                            "styledComponentId": "DropdownButton__StyledDropdownButton-sc-1343dcx-0",
                                            "target": [Function],
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                        id="more-actions-6"
                                        pullRight={true}
                                        title="More Actions"
                                      >
                                        <DropdownButton
                                          bsSize="small"
                                          className="DropdownButton__StyledDropdownButton-sc-1343dcx-0 hsmsMV"
                                          id="more-actions-6"
                                          pullRight={true}
                                          title="More Actions"
                                        >
                                          <ForwardRef
                                            bsSize="small"
                                            id="more-actions-6"
                                            pullRight={true}
                                          >
                                            <Uncontrolled(Dropdown)
                                              bsSize="small"
                                              id="more-actions-6"
                                              innerRef={null}
                                              pullRight={true}
                                            >
                                              <Dropdown
                                                bsClass="dropdown"
                                                bsSize="small"
                                                componentClass={[Function]}
                                                id="more-actions-6"
                                                onToggle={[Function]}
                                                pullRight={true}
                                              >
                                                <ButtonGroup
                                                  block={false}
                                                  bsClass="btn-group"
                                                  bsSize="small"
                                                  className="dropdown"
                                                  justified={false}
                                                  vertical={false}
                                                >
                                                  <div
                                                    className="dropdown btn-group btn-group-sm"
                                                  >
                                                    <DropdownToggle
                                                      bsClass="dropdown-toggle"
                                                      bsRole="toggle"
                                                      bsSize="small"
                                                      className="DropdownButton__StyledDropdownButton-sc-1343dcx-0 hsmsMV"
                                                      id="more-actions-6"
                                                      key=".0"
                                                      onClick={[Function]}
                                                      onKeyDown={[Function]}
                                                      open={false}
                                                      useAnchor={false}
                                                    >
                                                      <Button
                                                        active={false}
                                                        aria-expanded={false}
                                                        aria-haspopup={true}
                                                        block={false}
                                                        bsClass="btn"
                                                        bsSize="small"
                                                        bsStyle="default"
                                                        className="DropdownButton__StyledDropdownButton-sc-1343dcx-0 hsmsMV dropdown-toggle"
                                                        disabled={false}
                                                        id="more-actions-6"
                                                        onClick={[Function]}
                                                        onKeyDown={[Function]}
                                                        role="button"
                                                      >
                                                        <button
                                                          aria-expanded={false}
                                                          aria-haspopup={true}
                                                          className="DropdownButton__StyledDropdownButton-sc-1343dcx-0 hsmsMV dropdown-toggle btn btn-sm btn-default"
                                                          disabled={false}
                                                          id="more-actions-6"
                                                          onClick={[Function]}
                                                          onKeyDown={[Function]}
                                                          role="button"
                                                          type="button"
                                                        >
                                                          More Actions
                                                           
                                                          <span
                                                            className="caret"
                                                          />
                                                        </button>
                                                      </Button>
                                                    </DropdownToggle>
                                                    <DropdownMenu
                                                      bsClass="dropdown-menu"
                                                      bsRole="menu"
                                                      key=".1"
                                                      labelledBy="more-actions-6"
                                                      onClose={[Function]}
                                                      onSelect={[Function]}
                                                      pullRight={true}
                                                    >
                                                      <RootCloseWrapper
                                                        disabled={true}
                                                        event="click"
                                                        onRootClose={[Function]}
                                                      >
                                                        <ul
                                                          aria-labelledby="more-actions-6"
                                                          className="dropdown-menu dropdown-menu-right"
                                                          role="menu"
                                                        >
                                                          <LinkContainer
                                                            action="push"
                                                            key=".0"
                                                            onKeyDown={[Function]}
                                                            onSelect={[Function]}
                                                            onlyActiveOnIndex={false}
                                                            to="/system/contentpacks/6"
                                                          >
                                                            <MenuItem
                                                              action="push"
                                                              bsClass="dropdown"
                                                              disabled={false}
                                                              divider={false}
                                                              header={false}
                                                              onClick={[Function]}
                                                              onKeyDown={[Function]}
                                                              onSelect={[Function]}
                                                            >
                                                              <li
                                                                className=""
                                                                role="presentation"
                                                              >
                                                                <SafeAnchor
                                                                  action="push"
                                                                  componentClass="a"
                                                                  onClick={[Function]}
                                                                  onKeyDown={[Function]}
                                                                  role="menuitem"
                                                                  tabIndex="-1"
                                                                >
                                                                  <a
                                                                    action="push"
                                                                    href="#"
                                                                    onClick={[Function]}
                                                                    onKeyDown={[Function]}
                                                                    role="menuitem"
                                                                    tabIndex="-1"
                                                                  >
                                                                    Show
                                                                  </a>
                                                                </SafeAnchor>
                                                              </li>
                                                            </MenuItem>
                                                          </LinkContainer>
                                                          <LinkContainer
                                                            action="push"
                                                            key=".1"
                                                            onKeyDown={[Function]}
                                                            onSelect={[Function]}
                                                            onlyActiveOnIndex={false}
                                                            to="/system/contentpacks/6/1/edit"
                                                          >
                                                            <MenuItem
                                                              action="push"
                                                              bsClass="dropdown"
                                                              disabled={false}
                                                              divider={false}
                                                              header={false}
                                                              onClick={[Function]}
                                                              onKeyDown={[Function]}
                                                              onSelect={[Function]}
                                                            >
                                                              <li
                                                                className=""
                                                                role="presentation"
                                                              >
                                                                <SafeAnchor
                                                                  action="push"
                                                                  componentClass="a"
                                                                  onClick={[Function]}
                                                                  onKeyDown={[Function]}
                                                                  role="menuitem"
                                                                  tabIndex="-1"
                                                                >
                                                                  <a
                                                                    action="push"
                                                                    href="#"
                                                                    onClick={[Function]}
                                                                    onKeyDown={[Function]}
                                                                    role="menuitem"
                                                                    tabIndex="-1"
                                                                  >
                                                                    Create New Version
                                                                  </a>
                                                                </SafeAnchor>
                                                              </li>
                                                            </MenuItem>
                                                          </LinkContainer>
                                                          <MenuItem
                                                            bsClass="dropdown"
                                                            disabled={false}
                                                            divider={false}
                                                            header={false}
                                                            key=".2"
                                                            onKeyDown={[Function]}
                                                            onSelect={[Function]}
                                                          >
                                                            <li
                                                              className=""
                                                              role="presentation"
                                                            >
                                                              <SafeAnchor
                                                                componentClass="a"
                                                                onClick={[Function]}
                                                                onKeyDown={[Function]}
                                                                role="menuitem"
                                                                tabIndex="-1"
                                                              >
                                                                <a
                                                                  href="#"
                                                                  onClick={[Function]}
                                                                  onKeyDown={[Function]}
                                                                  role="menuitem"
                                                                  tabIndex="-1"
                                                                >
                                                                  Download
                                                                </a>
                                                              </SafeAnchor>
                                                            </li>
                                                          </MenuItem>
                                                          <MenuItem
                                                            bsClass="dropdown"
                                                            disabled={false}
                                                            divider={true}
                                                            header={false}
                                                            key=".3"
                                                            onKeyDown={[Function]}
                                                            onSelect={[Function]}
                                                          >
                                                            <li
                                                              className="divider"
                                                              onKeyDown={[Function]}
                                                              role="separator"
                                                            />
                                                          </MenuItem>
                                                          <MenuItem
                                                            bsClass="dropdown"
                                                            disabled={false}
                                                            divider={false}
                                                            header={false}
                                                            key=".4"
                                                            onKeyDown={[Function]}
                                                            onSelect={[Function]}
                                                          >
                                                            <li
                                                              className=""
                                                              role="presentation"
                                                            >
                                                              <SafeAnchor
                                                                componentClass="a"
                                                                onClick={[Function]}
                                                                onKeyDown={[Function]}
                                                                role="menuitem"
                                                                tabIndex="-1"
                                                              >
                                                                <a
                                                                  href="#"
                                                                  onClick={[Function]}
                                                                  onKeyDown={[Function]}
                                                                  role="menuitem"
                                                                  tabIndex="-1"
                                                                >
                                                                  Delete All Versions
                                                                </a>
                                                              </SafeAnchor>
                                                            </li>
                                                          </MenuItem>
                                                        </ul>
                                                      </RootCloseWrapper>
                                                    </DropdownMenu>
                                                  </div>
                                                </ButtonGroup>
                                              </Dropdown>
                                            </Uncontrolled(Dropdown)>
                                          </ForwardRef>
                                        </DropdownButton>
                                      </StyledComponent>
                                    </DropdownButton__StyledDropdownButton>
                                  </ForwardRef>
                                  <ContentPackDownloadControl
                                    contentPackId="6"
                                    revision={1}
                                  >
                                    <BootstrapModalWrapper
                                      backdrop="static"
                                      bsSize="large"
                                      onClose={[Function]}
                                      onHide={[Function]}
                                      onOpen={[Function]}
                                      showModal={false}
                                    >
                                      <Modal
                                        backdrop="static"
                                        bsSize="large"
                                        onHide={[Function]}
                                        show={false}
                                      >
                                        <StyledComponent
                                          backdrop="static"
                                          bsSize="large"
                                          forwardedComponent={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "BACKDROP_TRANSITION_DURATION": 150,
                                              "Body": [Function],
                                              "Dialog": [Function],
                                              "Footer": [Function],
                                              "Header": [Function],
                                              "SIZES": Array [
                                                "large",
                                                "small",
                                              ],
                                              "TRANSITION_DURATION": 300,
                                              "Title": [Function],
                                              "attrs": Array [],
                                              "componentStyle": ComponentStyle {
                                                "componentId": "Modal-nuree8-0",
                                                "isStatic": false,
                                                "lastClassName": "eNmkew",
                                                "rules": Array [
                                                  [Function],
                                                ],
                                              },
                                              "displayName": "Modal",
                                              "foldedComponentIds": Array [],
                                              "render": [Function],
                                              "styledComponentId": "Modal-nuree8-0",
                                              "target": [Function],
                                              "toString": [Function],
                                              "warnTooManyClasses": [Function],
                                              "withComponent": [Function],
                                            }
                                          }
                                          forwardedRef={null}
                                          onHide={[Function]}
                                          show={false}
                                        >
                                          <Modal
                                            animation={true}
                                            autoFocus={true}
                                            backdrop="static"
                                            bsClass="modal"
                                            bsSize="large"
                                            className="Modal-nuree8-0 eNmkew"
                                            dialogComponentClass={[Function]}
                                            enforceFocus={true}
                                            keyboard={true}
                                            manager={
                                              ModalManager {
                                                "add": [Function],
                                                "containers": Array [],
                                                "data": Array [],
                                                "handleContainerOverflow": true,
                                                "hideSiblingNodes": true,
                                                "isTopModal": [Function],
                                                "modals": Array [],
                                                "remove": [Function],
                                              }
                                            }
                                            onHide={[Function]}
                                            renderBackdrop={[Function]}
                                            restoreFocus={true}
                                            show={false}
                                          >
                                            <Modal
                                              autoFocus={true}
                                              backdrop="static"
                                              backdropClassName="modal-backdrop"
                                              backdropTransition={[Function]}
                                              containerClassName="modal-open"
                                              enforceFocus={true}
                                              keyboard={true}
                                              manager={
                                                ModalManager {
                                                  "add": [Function],
                                                  "containers": Array [],
                                                  "data": Array [],
                                                  "handleContainerOverflow": true,
                                                  "hideSiblingNodes": true,
                                                  "isTopModal": [Function],
                                                  "modals": Array [],
                                                  "remove": [Function],
                                                }
                                              }
                                              onEntering={[Function]}
                                              onExited={[Function]}
                                              onHide={[Function]}
                                              onMouseUp={[Function]}
                                              renderBackdrop={[Function]}
                                              restoreFocus={true}
                                              show={false}
                                              transition={[Function]}
                                            />
                                          </Modal>
                                        </StyledComponent>
                                      </Modal>
                                    </BootstrapModalWrapper>
                                  </ContentPackDownloadControl>
                                </div>
                              </Col>
                            </div>
                          </Row>
                          <Row
                            bsClass="row"
                            className="row-sm content-packs-summary"
                            componentClass="div"
                          >
                            <div
                              className="row-sm content-packs-summary row"
                            >
                              <Col
                                bsClass="col"
                                componentClass="div"
                                md={12}
                              >
                                <div
                                  className="col-md-12"
                                >
                                  Grok Patterns to extract informations from UFW logfiles
                                   
                                </div>
                              </Col>
                            </div>
                          </Row>
                        </span>
                      </ListGroupItem>
                    </StyledComponent>
                  </ListGroupItem__StyledListGroupItem>
                </ForwardRef>
              </ControlledTableListItem>
              <ControlledTableListItem
                key="7"
              >
                <ForwardRef>
                  <ListGroupItem__StyledListGroupItem>
                    <StyledComponent
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "STYLES": Array [
                            "success",
                            "warning",
                            "danger",
                            "info",
                          ],
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "ListGroupItem__StyledListGroupItem-sc-1ky0joo-0",
                            "isStatic": false,
                            "lastClassName": "jRLKfG",
                            "rules": Array [
                              [Function],
                            ],
                          },
                          "displayName": "ListGroupItem__StyledListGroupItem",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "ListGroupItem__StyledListGroupItem-sc-1ky0joo-0",
                          "target": [Function],
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                    >
                      <ListGroupItem
                        bsClass="list-group-item"
                        className="ListGroupItem__StyledListGroupItem-sc-1ky0joo-0 jRLKfG"
                        listItem={false}
                      >
                        <span
                          className="ListGroupItem__StyledListGroupItem-sc-1ky0joo-0 jRLKfG list-group-item"
                        >
                          <Row
                            bsClass="row"
                            className="row-sm"
                            componentClass="div"
                          >
                            <div
                              className="row-sm row"
                            >
                              <Col
                                bsClass="col"
                                componentClass="div"
                                md={9}
                              >
                                <div
                                  className="col-md-9"
                                >
                                  <h3>
                                    <Link
                                      onlyActiveOnIndex={false}
                                      style={Object {}}
                                      to="/system/contentpacks/7"
                                    >
                                      <a
                                        onClick={[Function]}
                                        style={Object {}}
                                      />
                                    </Link>
                                     
                                    <small>
                                      Latest Version: 
                                      1
                                       
                                      <ContentPackStatus
                                        contentPackId="7"
                                        states={Array []}
                                      >
                                        <span />
                                      </ContentPackStatus>
                                       
                                    </small>
                                  </h3>
                                </div>
                              </Col>
                              <Col
                                bsClass="col"
                                className="text-right"
                                componentClass="div"
                                md={3}
                              >
                                <div
                                  className="text-right col-md-3"
                                >
                                   
                                  <ForwardRef
                                    bsSize="small"
                                    bsStyle="info"
                                    onClick={[Function]}
                                  >
                                    <Button__StyledButton
                                      bsSize="small"
                                      bsStyle="info"
                                      onClick={[Function]}
                                    >
                                      <StyledComponent
                                        bsSize="small"
                                        bsStyle="info"
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "SIZES": Array [
                                              "large",
                                              "small",
                                              "xsmall",
                                            ],
                                            "STYLES": Array [
                                              "success",
                                              "warning",
                                              "danger",
                                              "info",
                                              "default",
                                              "primary",
                                              "link",
                                            ],
                                            "attrs": Array [],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "Button__StyledButton-c9cbmb-0",
                                              "isStatic": false,
                                              "lastClassName": "jVYrA",
                                              "rules": Array [
                                                [Function],
                                              ],
                                            },
                                            "displayName": "Button__StyledButton",
                                            "foldedComponentIds": Array [],
                                            "render": [Function],
                                            "styledComponentId": "Button__StyledButton-c9cbmb-0",
                                            "target": [Function],
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                        onClick={[Function]}
                                      >
                                        <Button
                                          active={false}
                                          block={false}
                                          bsClass="btn"
                                          bsSize="small"
                                          bsStyle="info"
                                          className="Button__StyledButton-c9cbmb-0 jVYrA"
                                          disabled={false}
                                          onClick={[Function]}
                                        >
                                          <button
                                            className="Button__StyledButton-c9cbmb-0 jVYrA btn btn-sm btn-info"
                                            disabled={false}
                                            onClick={[Function]}
                                            type="button"
                                          >
                                            Install
                                          </button>
                                        </Button>
                                      </StyledComponent>
                                    </Button__StyledButton>
                                  </ForwardRef>
                                  <BootstrapModalWrapper
                                    backdrop="static"
                                    bsSize="large"
                                    onClose={[Function]}
                                    onHide={[Function]}
                                    onOpen={[Function]}
                                    showModal={false}
                                  >
                                    <Modal
                                      backdrop="static"
                                      bsSize="large"
                                      onHide={[Function]}
                                      show={false}
                                    >
                                      <StyledComponent
                                        backdrop="static"
                                        bsSize="large"
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "BACKDROP_TRANSITION_DURATION": 150,
                                            "Body": [Function],
                                            "Dialog": [Function],
                                            "Footer": [Function],
                                            "Header": [Function],
                                            "SIZES": Array [
                                              "large",
                                              "small",
                                            ],
                                            "TRANSITION_DURATION": 300,
                                            "Title": [Function],
                                            "attrs": Array [],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "Modal-nuree8-0",
                                              "isStatic": false,
                                              "lastClassName": "eNmkew",
                                              "rules": Array [
                                                [Function],
                                              ],
                                            },
                                            "displayName": "Modal",
                                            "foldedComponentIds": Array [],
                                            "render": [Function],
                                            "styledComponentId": "Modal-nuree8-0",
                                            "target": [Function],
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                        onHide={[Function]}
                                        show={false}
                                      >
                                        <Modal
                                          animation={true}
                                          autoFocus={true}
                                          backdrop="static"
                                          bsClass="modal"
                                          bsSize="large"
                                          className="Modal-nuree8-0 eNmkew"
                                          dialogComponentClass={[Function]}
                                          enforceFocus={true}
                                          keyboard={true}
                                          manager={
                                            ModalManager {
                                              "add": [Function],
                                              "containers": Array [],
                                              "data": Array [],
                                              "handleContainerOverflow": true,
                                              "hideSiblingNodes": true,
                                              "isTopModal": [Function],
                                              "modals": Array [],
                                              "remove": [Function],
                                            }
                                          }
                                          onHide={[Function]}
                                          renderBackdrop={[Function]}
                                          restoreFocus={true}
                                          show={false}
                                        >
                                          <Modal
                                            autoFocus={true}
                                            backdrop="static"
                                            backdropClassName="modal-backdrop"
                                            backdropTransition={[Function]}
                                            containerClassName="modal-open"
                                            enforceFocus={true}
                                            keyboard={true}
                                            manager={
                                              ModalManager {
                                                "add": [Function],
                                                "containers": Array [],
                                                "data": Array [],
                                                "handleContainerOverflow": true,
                                                "hideSiblingNodes": true,
                                                "isTopModal": [Function],
                                                "modals": Array [],
                                                "remove": [Function],
                                              }
                                            }
                                            onEntering={[Function]}
                                            onExited={[Function]}
                                            onHide={[Function]}
                                            onMouseUp={[Function]}
                                            renderBackdrop={[Function]}
                                            restoreFocus={true}
                                            show={false}
                                            transition={[Function]}
                                          />
                                        </Modal>
                                      </StyledComponent>
                                    </Modal>
                                  </BootstrapModalWrapper>
                                   
                                  <ForwardRef
                                    bsSize="small"
                                    id="more-actions-7"
                                    pullRight={true}
                                    title="More Actions"
                                  >
                                    <DropdownButton__StyledDropdownButton
                                      bsSize="small"
                                      id="more-actions-7"
                                      pullRight={true}
                                      title="More Actions"
                                    >
                                      <StyledComponent
                                        bsSize="small"
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "attrs": Array [],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "DropdownButton__StyledDropdownButton-sc-1343dcx-0",
                                              "isStatic": false,
                                              "lastClassName": "hsmsMV",
                                              "rules": Array [
                                                [Function],
                                              ],
                                            },
                                            "displayName": "DropdownButton__StyledDropdownButton",
                                            "foldedComponentIds": Array [],
                                            "render": [Function],
                                            "styledComponentId": "DropdownButton__StyledDropdownButton-sc-1343dcx-0",
                                            "target": [Function],
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                        id="more-actions-7"
                                        pullRight={true}
                                        title="More Actions"
                                      >
                                        <DropdownButton
                                          bsSize="small"
                                          className="DropdownButton__StyledDropdownButton-sc-1343dcx-0 hsmsMV"
                                          id="more-actions-7"
                                          pullRight={true}
                                          title="More Actions"
                                        >
                                          <ForwardRef
                                            bsSize="small"
                                            id="more-actions-7"
                                            pullRight={true}
                                          >
                                            <Uncontrolled(Dropdown)
                                              bsSize="small"
                                              id="more-actions-7"
                                              innerRef={null}
                                              pullRight={true}
                                            >
                                              <Dropdown
                                                bsClass="dropdown"
                                                bsSize="small"
                                                componentClass={[Function]}
                                                id="more-actions-7"
                                                onToggle={[Function]}
                                                pullRight={true}
                                              >
                                                <ButtonGroup
                                                  block={false}
                                                  bsClass="btn-group"
                                                  bsSize="small"
                                                  className="dropdown"
                                                  justified={false}
                                                  vertical={false}
                                                >
                                                  <div
                                                    className="dropdown btn-group btn-group-sm"
                                                  >
                                                    <DropdownToggle
                                                      bsClass="dropdown-toggle"
                                                      bsRole="toggle"
                                                      bsSize="small"
                                                      className="DropdownButton__StyledDropdownButton-sc-1343dcx-0 hsmsMV"
                                                      id="more-actions-7"
                                                      key=".0"
                                                      onClick={[Function]}
                                                      onKeyDown={[Function]}
                                                      open={false}
                                                      useAnchor={false}
                                                    >
                                                      <Button
                                                        active={false}
                                                        aria-expanded={false}
                                                        aria-haspopup={true}
                                                        block={false}
                                                        bsClass="btn"
                                                        bsSize="small"
                                                        bsStyle="default"
                                                        className="DropdownButton__StyledDropdownButton-sc-1343dcx-0 hsmsMV dropdown-toggle"
                                                        disabled={false}
                                                        id="more-actions-7"
                                                        onClick={[Function]}
                                                        onKeyDown={[Function]}
                                                        role="button"
                                                      >
                                                        <button
                                                          aria-expanded={false}
                                                          aria-haspopup={true}
                                                          className="DropdownButton__StyledDropdownButton-sc-1343dcx-0 hsmsMV dropdown-toggle btn btn-sm btn-default"
                                                          disabled={false}
                                                          id="more-actions-7"
                                                          onClick={[Function]}
                                                          onKeyDown={[Function]}
                                                          role="button"
                                                          type="button"
                                                        >
                                                          More Actions
                                                           
                                                          <span
                                                            className="caret"
                                                          />
                                                        </button>
                                                      </Button>
                                                    </DropdownToggle>
                                                    <DropdownMenu
                                                      bsClass="dropdown-menu"
                                                      bsRole="menu"
                                                      key=".1"
                                                      labelledBy="more-actions-7"
                                                      onClose={[Function]}
                                                      onSelect={[Function]}
                                                      pullRight={true}
                                                    >
                                                      <RootCloseWrapper
                                                        disabled={true}
                                                        event="click"
                                                        onRootClose={[Function]}
                                                      >
                                                        <ul
                                                          aria-labelledby="more-actions-7"
                                                          className="dropdown-menu dropdown-menu-right"
                                                          role="menu"
                                                        >
                                                          <LinkContainer
                                                            action="push"
                                                            key=".0"
                                                            onKeyDown={[Function]}
                                                            onSelect={[Function]}
                                                            onlyActiveOnIndex={false}
                                                            to="/system/contentpacks/7"
                                                          >
                                                            <MenuItem
                                                              action="push"
                                                              bsClass="dropdown"
                                                              disabled={false}
                                                              divider={false}
                                                              header={false}
                                                              onClick={[Function]}
                                                              onKeyDown={[Function]}
                                                              onSelect={[Function]}
                                                            >
                                                              <li
                                                                className=""
                                                                role="presentation"
                                                              >
                                                                <SafeAnchor
                                                                  action="push"
                                                                  componentClass="a"
                                                                  onClick={[Function]}
                                                                  onKeyDown={[Function]}
                                                                  role="menuitem"
                                                                  tabIndex="-1"
                                                                >
                                                                  <a
                                                                    action="push"
                                                                    href="#"
                                                                    onClick={[Function]}
                                                                    onKeyDown={[Function]}
                                                                    role="menuitem"
                                                                    tabIndex="-1"
                                                                  >
                                                                    Show
                                                                  </a>
                                                                </SafeAnchor>
                                                              </li>
                                                            </MenuItem>
                                                          </LinkContainer>
                                                          <LinkContainer
                                                            action="push"
                                                            key=".1"
                                                            onKeyDown={[Function]}
                                                            onSelect={[Function]}
                                                            onlyActiveOnIndex={false}
                                                            to="/system/contentpacks/7/1/edit"
                                                          >
                                                            <MenuItem
                                                              action="push"
                                                              bsClass="dropdown"
                                                              disabled={false}
                                                              divider={false}
                                                              header={false}
                                                              onClick={[Function]}
                                                              onKeyDown={[Function]}
                                                              onSelect={[Function]}
                                                            >
                                                              <li
                                                                className=""
                                                                role="presentation"
                                                              >
                                                                <SafeAnchor
                                                                  action="push"
                                                                  componentClass="a"
                                                                  onClick={[Function]}
                                                                  onKeyDown={[Function]}
                                                                  role="menuitem"
                                                                  tabIndex="-1"
                                                                >
                                                                  <a
                                                                    action="push"
                                                                    href="#"
                                                                    onClick={[Function]}
                                                                    onKeyDown={[Function]}
                                                                    role="menuitem"
                                                                    tabIndex="-1"
                                                                  >
                                                                    Create New Version
                                                                  </a>
                                                                </SafeAnchor>
                                                              </li>
                                                            </MenuItem>
                                                          </LinkContainer>
                                                          <MenuItem
                                                            bsClass="dropdown"
                                                            disabled={false}
                                                            divider={false}
                                                            header={false}
                                                            key=".2"
                                                            onKeyDown={[Function]}
                                                            onSelect={[Function]}
                                                          >
                                                            <li
                                                              className=""
                                                              role="presentation"
                                                            >
                                                              <SafeAnchor
                                                                componentClass="a"
                                                                onClick={[Function]}
                                                                onKeyDown={[Function]}
                                                                role="menuitem"
                                                                tabIndex="-1"
                                                              >
                                                                <a
                                                                  href="#"
                                                                  onClick={[Function]}
                                                                  onKeyDown={[Function]}
                                                                  role="menuitem"
                                                                  tabIndex="-1"
                                                                >
                                                                  Download
                                                                </a>
                                                              </SafeAnchor>
                                                            </li>
                                                          </MenuItem>
                                                          <MenuItem
                                                            bsClass="dropdown"
                                                            disabled={false}
                                                            divider={true}
                                                            header={false}
                                                            key=".3"
                                                            onKeyDown={[Function]}
                                                            onSelect={[Function]}
                                                          >
                                                            <li
                                                              className="divider"
                                                              onKeyDown={[Function]}
                                                              role="separator"
                                                            />
                                                          </MenuItem>
                                                          <MenuItem
                                                            bsClass="dropdown"
                                                            disabled={false}
                                                            divider={false}
                                                            header={false}
                                                            key=".4"
                                                            onKeyDown={[Function]}
                                                            onSelect={[Function]}
                                                          >
                                                            <li
                                                              className=""
                                                              role="presentation"
                                                            >
                                                              <SafeAnchor
                                                                componentClass="a"
                                                                onClick={[Function]}
                                                                onKeyDown={[Function]}
                                                                role="menuitem"
                                                                tabIndex="-1"
                                                              >
                                                                <a
                                                                  href="#"
                                                                  onClick={[Function]}
                                                                  onKeyDown={[Function]}
                                                                  role="menuitem"
                                                                  tabIndex="-1"
                                                                >
                                                                  Delete All Versions
                                                                </a>
                                                              </SafeAnchor>
                                                            </li>
                                                          </MenuItem>
                                                        </ul>
                                                      </RootCloseWrapper>
                                                    </DropdownMenu>
                                                  </div>
                                                </ButtonGroup>
                                              </Dropdown>
                                            </Uncontrolled(Dropdown)>
                                          </ForwardRef>
                                        </DropdownButton>
                                      </StyledComponent>
                                    </DropdownButton__StyledDropdownButton>
                                  </ForwardRef>
                                  <ContentPackDownloadControl
                                    contentPackId="7"
                                    revision={1}
                                  >
                                    <BootstrapModalWrapper
                                      backdrop="static"
                                      bsSize="large"
                                      onClose={[Function]}
                                      onHide={[Function]}
                                      onOpen={[Function]}
                                      showModal={false}
                                    >
                                      <Modal
                                        backdrop="static"
                                        bsSize="large"
                                        onHide={[Function]}
                                        show={false}
                                      >
                                        <StyledComponent
                                          backdrop="static"
                                          bsSize="large"
                                          forwardedComponent={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "BACKDROP_TRANSITION_DURATION": 150,
                                              "Body": [Function],
                                              "Dialog": [Function],
                                              "Footer": [Function],
                                              "Header": [Function],
                                              "SIZES": Array [
                                                "large",
                                                "small",
                                              ],
                                              "TRANSITION_DURATION": 300,
                                              "Title": [Function],
                                              "attrs": Array [],
                                              "componentStyle": ComponentStyle {
                                                "componentId": "Modal-nuree8-0",
                                                "isStatic": false,
                                                "lastClassName": "eNmkew",
                                                "rules": Array [
                                                  [Function],
                                                ],
                                              },
                                              "displayName": "Modal",
                                              "foldedComponentIds": Array [],
                                              "render": [Function],
                                              "styledComponentId": "Modal-nuree8-0",
                                              "target": [Function],
                                              "toString": [Function],
                                              "warnTooManyClasses": [Function],
                                              "withComponent": [Function],
                                            }
                                          }
                                          forwardedRef={null}
                                          onHide={[Function]}
                                          show={false}
                                        >
                                          <Modal
                                            animation={true}
                                            autoFocus={true}
                                            backdrop="static"
                                            bsClass="modal"
                                            bsSize="large"
                                            className="Modal-nuree8-0 eNmkew"
                                            dialogComponentClass={[Function]}
                                            enforceFocus={true}
                                            keyboard={true}
                                            manager={
                                              ModalManager {
                                                "add": [Function],
                                                "containers": Array [],
                                                "data": Array [],
                                                "handleContainerOverflow": true,
                                                "hideSiblingNodes": true,
                                                "isTopModal": [Function],
                                                "modals": Array [],
                                                "remove": [Function],
                                              }
                                            }
                                            onHide={[Function]}
                                            renderBackdrop={[Function]}
                                            restoreFocus={true}
                                            show={false}
                                          >
                                            <Modal
                                              autoFocus={true}
                                              backdrop="static"
                                              backdropClassName="modal-backdrop"
                                              backdropTransition={[Function]}
                                              containerClassName="modal-open"
                                              enforceFocus={true}
                                              keyboard={true}
                                              manager={
                                                ModalManager {
                                                  "add": [Function],
                                                  "containers": Array [],
                                                  "data": Array [],
                                                  "handleContainerOverflow": true,
                                                  "hideSiblingNodes": true,
                                                  "isTopModal": [Function],
                                                  "modals": Array [],
                                                  "remove": [Function],
                                                }
                                              }
                                              onEntering={[Function]}
                                              onExited={[Function]}
                                              onHide={[Function]}
                                              onMouseUp={[Function]}
                                              renderBackdrop={[Function]}
                                              restoreFocus={true}
                                              show={false}
                                              transition={[Function]}
                                            />
                                          </Modal>
                                        </StyledComponent>
                                      </Modal>
                                    </BootstrapModalWrapper>
                                  </ContentPackDownloadControl>
                                </div>
                              </Col>
                            </div>
                          </Row>
                          <Row
                            bsClass="row"
                            className="row-sm content-packs-summary"
                            componentClass="div"
                          >
                            <div
                              className="row-sm content-packs-summary row"
                            >
                              <Col
                                bsClass="col"
                                componentClass="div"
                                md={12}
                              >
                                <div
                                  className="col-md-12"
                                >
                                  Patterns to retreive rails production logs
                                   
                                </div>
                              </Col>
                            </div>
                          </Row>
                        </span>
                      </ListGroupItem>
                    </StyledComponent>
                  </ListGroupItem__StyledListGroupItem>
                </ForwardRef>
              </ControlledTableListItem>
              <ControlledTableListItem
                key="8"
              >
                <ForwardRef>
                  <ListGroupItem__StyledListGroupItem>
                    <StyledComponent
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "STYLES": Array [
                            "success",
                            "warning",
                            "danger",
                            "info",
                          ],
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "ListGroupItem__StyledListGroupItem-sc-1ky0joo-0",
                            "isStatic": false,
                            "lastClassName": "jRLKfG",
                            "rules": Array [
                              [Function],
                            ],
                          },
                          "displayName": "ListGroupItem__StyledListGroupItem",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "ListGroupItem__StyledListGroupItem-sc-1ky0joo-0",
                          "target": [Function],
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                    >
                      <ListGroupItem
                        bsClass="list-group-item"
                        className="ListGroupItem__StyledListGroupItem-sc-1ky0joo-0 jRLKfG"
                        listItem={false}
                      >
                        <span
                          className="ListGroupItem__StyledListGroupItem-sc-1ky0joo-0 jRLKfG list-group-item"
                        >
                          <Row
                            bsClass="row"
                            className="row-sm"
                            componentClass="div"
                          >
                            <div
                              className="row-sm row"
                            >
                              <Col
                                bsClass="col"
                                componentClass="div"
                                md={9}
                              >
                                <div
                                  className="col-md-9"
                                >
                                  <h3>
                                    <Link
                                      onlyActiveOnIndex={false}
                                      style={Object {}}
                                      to="/system/contentpacks/8"
                                    >
                                      <a
                                        onClick={[Function]}
                                        style={Object {}}
                                      />
                                    </Link>
                                     
                                    <small>
                                      Latest Version: 
                                      1
                                       
                                      <ContentPackStatus
                                        contentPackId="8"
                                        states={Array []}
                                      >
                                        <span />
                                      </ContentPackStatus>
                                       
                                    </small>
                                  </h3>
                                </div>
                              </Col>
                              <Col
                                bsClass="col"
                                className="text-right"
                                componentClass="div"
                                md={3}
                              >
                                <div
                                  className="text-right col-md-3"
                                >
                                   
                                  <ForwardRef
                                    bsSize="small"
                                    bsStyle="info"
                                    onClick={[Function]}
                                  >
                                    <Button__StyledButton
                                      bsSize="small"
                                      bsStyle="info"
                                      onClick={[Function]}
                                    >
                                      <StyledComponent
                                        bsSize="small"
                                        bsStyle="info"
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "SIZES": Array [
                                              "large",
                                              "small",
                                              "xsmall",
                                            ],
                                            "STYLES": Array [
                                              "success",
                                              "warning",
                                              "danger",
                                              "info",
                                              "default",
                                              "primary",
                                              "link",
                                            ],
                                            "attrs": Array [],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "Button__StyledButton-c9cbmb-0",
                                              "isStatic": false,
                                              "lastClassName": "jVYrA",
                                              "rules": Array [
                                                [Function],
                                              ],
                                            },
                                            "displayName": "Button__StyledButton",
                                            "foldedComponentIds": Array [],
                                            "render": [Function],
                                            "styledComponentId": "Button__StyledButton-c9cbmb-0",
                                            "target": [Function],
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                        onClick={[Function]}
                                      >
                                        <Button
                                          active={false}
                                          block={false}
                                          bsClass="btn"
                                          bsSize="small"
                                          bsStyle="info"
                                          className="Button__StyledButton-c9cbmb-0 jVYrA"
                                          disabled={false}
                                          onClick={[Function]}
                                        >
                                          <button
                                            className="Button__StyledButton-c9cbmb-0 jVYrA btn btn-sm btn-info"
                                            disabled={false}
                                            onClick={[Function]}
                                            type="button"
                                          >
                                            Install
                                          </button>
                                        </Button>
                                      </StyledComponent>
                                    </Button__StyledButton>
                                  </ForwardRef>
                                  <BootstrapModalWrapper
                                    backdrop="static"
                                    bsSize="large"
                                    onClose={[Function]}
                                    onHide={[Function]}
                                    onOpen={[Function]}
                                    showModal={false}
                                  >
                                    <Modal
                                      backdrop="static"
                                      bsSize="large"
                                      onHide={[Function]}
                                      show={false}
                                    >
                                      <StyledComponent
                                        backdrop="static"
                                        bsSize="large"
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "BACKDROP_TRANSITION_DURATION": 150,
                                            "Body": [Function],
                                            "Dialog": [Function],
                                            "Footer": [Function],
                                            "Header": [Function],
                                            "SIZES": Array [
                                              "large",
                                              "small",
                                            ],
                                            "TRANSITION_DURATION": 300,
                                            "Title": [Function],
                                            "attrs": Array [],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "Modal-nuree8-0",
                                              "isStatic": false,
                                              "lastClassName": "eNmkew",
                                              "rules": Array [
                                                [Function],
                                              ],
                                            },
                                            "displayName": "Modal",
                                            "foldedComponentIds": Array [],
                                            "render": [Function],
                                            "styledComponentId": "Modal-nuree8-0",
                                            "target": [Function],
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                        onHide={[Function]}
                                        show={false}
                                      >
                                        <Modal
                                          animation={true}
                                          autoFocus={true}
                                          backdrop="static"
                                          bsClass="modal"
                                          bsSize="large"
                                          className="Modal-nuree8-0 eNmkew"
                                          dialogComponentClass={[Function]}
                                          enforceFocus={true}
                                          keyboard={true}
                                          manager={
                                            ModalManager {
                                              "add": [Function],
                                              "containers": Array [],
                                              "data": Array [],
                                              "handleContainerOverflow": true,
                                              "hideSiblingNodes": true,
                                              "isTopModal": [Function],
                                              "modals": Array [],
                                              "remove": [Function],
                                            }
                                          }
                                          onHide={[Function]}
                                          renderBackdrop={[Function]}
                                          restoreFocus={true}
                                          show={false}
                                        >
                                          <Modal
                                            autoFocus={true}
                                            backdrop="static"
                                            backdropClassName="modal-backdrop"
                                            backdropTransition={[Function]}
                                            containerClassName="modal-open"
                                            enforceFocus={true}
                                            keyboard={true}
                                            manager={
                                              ModalManager {
                                                "add": [Function],
                                                "containers": Array [],
                                                "data": Array [],
                                                "handleContainerOverflow": true,
                                                "hideSiblingNodes": true,
                                                "isTopModal": [Function],
                                                "modals": Array [],
                                                "remove": [Function],
                                              }
                                            }
                                            onEntering={[Function]}
                                            onExited={[Function]}
                                            onHide={[Function]}
                                            onMouseUp={[Function]}
                                            renderBackdrop={[Function]}
                                            restoreFocus={true}
                                            show={false}
                                            transition={[Function]}
                                          />
                                        </Modal>
                                      </StyledComponent>
                                    </Modal>
                                  </BootstrapModalWrapper>
                                   
                                  <ForwardRef
                                    bsSize="small"
                                    id="more-actions-8"
                                    pullRight={true}
                                    title="More Actions"
                                  >
                                    <DropdownButton__StyledDropdownButton
                                      bsSize="small"
                                      id="more-actions-8"
                                      pullRight={true}
                                      title="More Actions"
                                    >
                                      <StyledComponent
                                        bsSize="small"
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "attrs": Array [],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "DropdownButton__StyledDropdownButton-sc-1343dcx-0",
                                              "isStatic": false,
                                              "lastClassName": "hsmsMV",
                                              "rules": Array [
                                                [Function],
                                              ],
                                            },
                                            "displayName": "DropdownButton__StyledDropdownButton",
                                            "foldedComponentIds": Array [],
                                            "render": [Function],
                                            "styledComponentId": "DropdownButton__StyledDropdownButton-sc-1343dcx-0",
                                            "target": [Function],
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                        id="more-actions-8"
                                        pullRight={true}
                                        title="More Actions"
                                      >
                                        <DropdownButton
                                          bsSize="small"
                                          className="DropdownButton__StyledDropdownButton-sc-1343dcx-0 hsmsMV"
                                          id="more-actions-8"
                                          pullRight={true}
                                          title="More Actions"
                                        >
                                          <ForwardRef
                                            bsSize="small"
                                            id="more-actions-8"
                                            pullRight={true}
                                          >
                                            <Uncontrolled(Dropdown)
                                              bsSize="small"
                                              id="more-actions-8"
                                              innerRef={null}
                                              pullRight={true}
                                            >
                                              <Dropdown
                                                bsClass="dropdown"
                                                bsSize="small"
                                                componentClass={[Function]}
                                                id="more-actions-8"
                                                onToggle={[Function]}
                                                pullRight={true}
                                              >
                                                <ButtonGroup
                                                  block={false}
                                                  bsClass="btn-group"
                                                  bsSize="small"
                                                  className="dropdown"
                                                  justified={false}
                                                  vertical={false}
                                                >
                                                  <div
                                                    className="dropdown btn-group btn-group-sm"
                                                  >
                                                    <DropdownToggle
                                                      bsClass="dropdown-toggle"
                                                      bsRole="toggle"
                                                      bsSize="small"
                                                      className="DropdownButton__StyledDropdownButton-sc-1343dcx-0 hsmsMV"
                                                      id="more-actions-8"
                                                      key=".0"
                                                      onClick={[Function]}
                                                      onKeyDown={[Function]}
                                                      open={false}
                                                      useAnchor={false}
                                                    >
                                                      <Button
                                                        active={false}
                                                        aria-expanded={false}
                                                        aria-haspopup={true}
                                                        block={false}
                                                        bsClass="btn"
                                                        bsSize="small"
                                                        bsStyle="default"
                                                        className="DropdownButton__StyledDropdownButton-sc-1343dcx-0 hsmsMV dropdown-toggle"
                                                        disabled={false}
                                                        id="more-actions-8"
                                                        onClick={[Function]}
                                                        onKeyDown={[Function]}
                                                        role="button"
                                                      >
                                                        <button
                                                          aria-expanded={false}
                                                          aria-haspopup={true}
                                                          className="DropdownButton__StyledDropdownButton-sc-1343dcx-0 hsmsMV dropdown-toggle btn btn-sm btn-default"
                                                          disabled={false}
                                                          id="more-actions-8"
                                                          onClick={[Function]}
                                                          onKeyDown={[Function]}
                                                          role="button"
                                                          type="button"
                                                        >
                                                          More Actions
                                                           
                                                          <span
                                                            className="caret"
                                                          />
                                                        </button>
                                                      </Button>
                                                    </DropdownToggle>
                                                    <DropdownMenu
                                                      bsClass="dropdown-menu"
                                                      bsRole="menu"
                                                      key=".1"
                                                      labelledBy="more-actions-8"
                                                      onClose={[Function]}
                                                      onSelect={[Function]}
                                                      pullRight={true}
                                                    >
                                                      <RootCloseWrapper
                                                        disabled={true}
                                                        event="click"
                                                        onRootClose={[Function]}
                                                      >
                                                        <ul
                                                          aria-labelledby="more-actions-8"
                                                          className="dropdown-menu dropdown-menu-right"
                                                          role="menu"
                                                        >
                                                          <LinkContainer
                                                            action="push"
                                                            key=".0"
                                                            onKeyDown={[Function]}
                                                            onSelect={[Function]}
                                                            onlyActiveOnIndex={false}
                                                            to="/system/contentpacks/8"
                                                          >
                                                            <MenuItem
                                                              action="push"
                                                              bsClass="dropdown"
                                                              disabled={false}
                                                              divider={false}
                                                              header={false}
                                                              onClick={[Function]}
                                                              onKeyDown={[Function]}
                                                              onSelect={[Function]}
                                                            >
                                                              <li
                                                                className=""
                                                                role="presentation"
                                                              >
                                                                <SafeAnchor
                                                                  action="push"
                                                                  componentClass="a"
                                                                  onClick={[Function]}
                                                                  onKeyDown={[Function]}
                                                                  role="menuitem"
                                                                  tabIndex="-1"
                                                                >
                                                                  <a
                                                                    action="push"
                                                                    href="#"
                                                                    onClick={[Function]}
                                                                    onKeyDown={[Function]}
                                                                    role="menuitem"
                                                                    tabIndex="-1"
                                                                  >
                                                                    Show
                                                                  </a>
                                                                </SafeAnchor>
                                                              </li>
                                                            </MenuItem>
                                                          </LinkContainer>
                                                          <LinkContainer
                                                            action="push"
                                                            key=".1"
                                                            onKeyDown={[Function]}
                                                            onSelect={[Function]}
                                                            onlyActiveOnIndex={false}
                                                            to="/system/contentpacks/8/1/edit"
                                                          >
                                                            <MenuItem
                                                              action="push"
                                                              bsClass="dropdown"
                                                              disabled={false}
                                                              divider={false}
                                                              header={false}
                                                              onClick={[Function]}
                                                              onKeyDown={[Function]}
                                                              onSelect={[Function]}
                                                            >
                                                              <li
                                                                className=""
                                                                role="presentation"
                                                              >
                                                                <SafeAnchor
                                                                  action="push"
                                                                  componentClass="a"
                                                                  onClick={[Function]}
                                                                  onKeyDown={[Function]}
                                                                  role="menuitem"
                                                                  tabIndex="-1"
                                                                >
                                                                  <a
                                                                    action="push"
                                                                    href="#"
                                                                    onClick={[Function]}
                                                                    onKeyDown={[Function]}
                                                                    role="menuitem"
                                                                    tabIndex="-1"
                                                                  >
                                                                    Create New Version
                                                                  </a>
                                                                </SafeAnchor>
                                                              </li>
                                                            </MenuItem>
                                                          </LinkContainer>
                                                          <MenuItem
                                                            bsClass="dropdown"
                                                            disabled={false}
                                                            divider={false}
                                                            header={false}
                                                            key=".2"
                                                            onKeyDown={[Function]}
                                                            onSelect={[Function]}
                                                          >
                                                            <li
                                                              className=""
                                                              role="presentation"
                                                            >
                                                              <SafeAnchor
                                                                componentClass="a"
                                                                onClick={[Function]}
                                                                onKeyDown={[Function]}
                                                                role="menuitem"
                                                                tabIndex="-1"
                                                              >
                                                                <a
                                                                  href="#"
                                                                  onClick={[Function]}
                                                                  onKeyDown={[Function]}
                                                                  role="menuitem"
                                                                  tabIndex="-1"
                                                                >
                                                                  Download
                                                                </a>
                                                              </SafeAnchor>
                                                            </li>
                                                          </MenuItem>
                                                          <MenuItem
                                                            bsClass="dropdown"
                                                            disabled={false}
                                                            divider={true}
                                                            header={false}
                                                            key=".3"
                                                            onKeyDown={[Function]}
                                                            onSelect={[Function]}
                                                          >
                                                            <li
                                                              className="divider"
                                                              onKeyDown={[Function]}
                                                              role="separator"
                                                            />
                                                          </MenuItem>
                                                          <MenuItem
                                                            bsClass="dropdown"
                                                            disabled={false}
                                                            divider={false}
                                                            header={false}
                                                            key=".4"
                                                            onKeyDown={[Function]}
                                                            onSelect={[Function]}
                                                          >
                                                            <li
                                                              className=""
                                                              role="presentation"
                                                            >
                                                              <SafeAnchor
                                                                componentClass="a"
                                                                onClick={[Function]}
                                                                onKeyDown={[Function]}
                                                                role="menuitem"
                                                                tabIndex="-1"
                                                              >
                                                                <a
                                                                  href="#"
                                                                  onClick={[Function]}
                                                                  onKeyDown={[Function]}
                                                                  role="menuitem"
                                                                  tabIndex="-1"
                                                                >
                                                                  Delete All Versions
                                                                </a>
                                                              </SafeAnchor>
                                                            </li>
                                                          </MenuItem>
                                                        </ul>
                                                      </RootCloseWrapper>
                                                    </DropdownMenu>
                                                  </div>
                                                </ButtonGroup>
                                              </Dropdown>
                                            </Uncontrolled(Dropdown)>
                                          </ForwardRef>
                                        </DropdownButton>
                                      </StyledComponent>
                                    </DropdownButton__StyledDropdownButton>
                                  </ForwardRef>
                                  <ContentPackDownloadControl
                                    contentPackId="8"
                                    revision={1}
                                  >
                                    <BootstrapModalWrapper
                                      backdrop="static"
                                      bsSize="large"
                                      onClose={[Function]}
                                      onHide={[Function]}
                                      onOpen={[Function]}
                                      showModal={false}
                                    >
                                      <Modal
                                        backdrop="static"
                                        bsSize="large"
                                        onHide={[Function]}
                                        show={false}
                                      >
                                        <StyledComponent
                                          backdrop="static"
                                          bsSize="large"
                                          forwardedComponent={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "BACKDROP_TRANSITION_DURATION": 150,
                                              "Body": [Function],
                                              "Dialog": [Function],
                                              "Footer": [Function],
                                              "Header": [Function],
                                              "SIZES": Array [
                                                "large",
                                                "small",
                                              ],
                                              "TRANSITION_DURATION": 300,
                                              "Title": [Function],
                                              "attrs": Array [],
                                              "componentStyle": ComponentStyle {
                                                "componentId": "Modal-nuree8-0",
                                                "isStatic": false,
                                                "lastClassName": "eNmkew",
                                                "rules": Array [
                                                  [Function],
                                                ],
                                              },
                                              "displayName": "Modal",
                                              "foldedComponentIds": Array [],
                                              "render": [Function],
                                              "styledComponentId": "Modal-nuree8-0",
                                              "target": [Function],
                                              "toString": [Function],
                                              "warnTooManyClasses": [Function],
                                              "withComponent": [Function],
                                            }
                                          }
                                          forwardedRef={null}
                                          onHide={[Function]}
                                          show={false}
                                        >
                                          <Modal
                                            animation={true}
                                            autoFocus={true}
                                            backdrop="static"
                                            bsClass="modal"
                                            bsSize="large"
                                            className="Modal-nuree8-0 eNmkew"
                                            dialogComponentClass={[Function]}
                                            enforceFocus={true}
                                            keyboard={true}
                                            manager={
                                              ModalManager {
                                                "add": [Function],
                                                "containers": Array [],
                                                "data": Array [],
                                                "handleContainerOverflow": true,
                                                "hideSiblingNodes": true,
                                                "isTopModal": [Function],
                                                "modals": Array [],
                                                "remove": [Function],
                                              }
                                            }
                                            onHide={[Function]}
                                            renderBackdrop={[Function]}
                                            restoreFocus={true}
                                            show={false}
                                          >
                                            <Modal
                                              autoFocus={true}
                                              backdrop="static"
                                              backdropClassName="modal-backdrop"
                                              backdropTransition={[Function]}
                                              containerClassName="modal-open"
                                              enforceFocus={true}
                                              keyboard={true}
                                              manager={
                                                ModalManager {
                                                  "add": [Function],
                                                  "containers": Array [],
                                                  "data": Array [],
                                                  "handleContainerOverflow": true,
                                                  "hideSiblingNodes": true,
                                                  "isTopModal": [Function],
                                                  "modals": Array [],
                                                  "remove": [Function],
                                                }
                                              }
                                              onEntering={[Function]}
                                              onExited={[Function]}
                                              onHide={[Function]}
                                              onMouseUp={[Function]}
                                              renderBackdrop={[Function]}
                                              restoreFocus={true}
                                              show={false}
                                              transition={[Function]}
                                            />
                                          </Modal>
                                        </StyledComponent>
                                      </Modal>
                                    </BootstrapModalWrapper>
                                  </ContentPackDownloadControl>
                                </div>
                              </Col>
                            </div>
                          </Row>
                          <Row
                            bsClass="row"
                            className="row-sm content-packs-summary"
                            componentClass="div"
                          >
                            <div
                              className="row-sm content-packs-summary row"
                            >
                              <Col
                                bsClass="col"
                                componentClass="div"
                                md={12}
                              >
                                <div
                                  className="col-md-12"
                                >
                                   
                                </div>
                              </Col>
                            </div>
                          </Row>
                        </span>
                      </ListGroupItem>
                    </StyledComponent>
                  </ListGroupItem__StyledListGroupItem>
                </ForwardRef>
              </ControlledTableListItem>
              <ControlledTableListItem
                key="9"
              >
                <ForwardRef>
                  <ListGroupItem__StyledListGroupItem>
                    <StyledComponent
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "STYLES": Array [
                            "success",
                            "warning",
                            "danger",
                            "info",
                          ],
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "ListGroupItem__StyledListGroupItem-sc-1ky0joo-0",
                            "isStatic": false,
                            "lastClassName": "jRLKfG",
                            "rules": Array [
                              [Function],
                            ],
                          },
                          "displayName": "ListGroupItem__StyledListGroupItem",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "ListGroupItem__StyledListGroupItem-sc-1ky0joo-0",
                          "target": [Function],
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                    >
                      <ListGroupItem
                        bsClass="list-group-item"
                        className="ListGroupItem__StyledListGroupItem-sc-1ky0joo-0 jRLKfG"
                        listItem={false}
                      >
                        <span
                          className="ListGroupItem__StyledListGroupItem-sc-1ky0joo-0 jRLKfG list-group-item"
                        >
                          <Row
                            bsClass="row"
                            className="row-sm"
                            componentClass="div"
                          >
                            <div
                              className="row-sm row"
                            >
                              <Col
                                bsClass="col"
                                componentClass="div"
                                md={9}
                              >
                                <div
                                  className="col-md-9"
                                >
                                  <h3>
                                    <Link
                                      onlyActiveOnIndex={false}
                                      style={Object {}}
                                      to="/system/contentpacks/9"
                                    >
                                      <a
                                        onClick={[Function]}
                                        style={Object {}}
                                      />
                                    </Link>
                                     
                                    <small>
                                      Latest Version: 
                                      1
                                       
                                      <ContentPackStatus
                                        contentPackId="9"
                                        states={Array []}
                                      >
                                        <span />
                                      </ContentPackStatus>
                                       
                                    </small>
                                  </h3>
                                </div>
                              </Col>
                              <Col
                                bsClass="col"
                                className="text-right"
                                componentClass="div"
                                md={3}
                              >
                                <div
                                  className="text-right col-md-3"
                                >
                                   
                                  <ForwardRef
                                    bsSize="small"
                                    bsStyle="info"
                                    onClick={[Function]}
                                  >
                                    <Button__StyledButton
                                      bsSize="small"
                                      bsStyle="info"
                                      onClick={[Function]}
                                    >
                                      <StyledComponent
                                        bsSize="small"
                                        bsStyle="info"
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "SIZES": Array [
                                              "large",
                                              "small",
                                              "xsmall",
                                            ],
                                            "STYLES": Array [
                                              "success",
                                              "warning",
                                              "danger",
                                              "info",
                                              "default",
                                              "primary",
                                              "link",
                                            ],
                                            "attrs": Array [],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "Button__StyledButton-c9cbmb-0",
                                              "isStatic": false,
                                              "lastClassName": "jVYrA",
                                              "rules": Array [
                                                [Function],
                                              ],
                                            },
                                            "displayName": "Button__StyledButton",
                                            "foldedComponentIds": Array [],
                                            "render": [Function],
                                            "styledComponentId": "Button__StyledButton-c9cbmb-0",
                                            "target": [Function],
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                        onClick={[Function]}
                                      >
                                        <Button
                                          active={false}
                                          block={false}
                                          bsClass="btn"
                                          bsSize="small"
                                          bsStyle="info"
                                          className="Button__StyledButton-c9cbmb-0 jVYrA"
                                          disabled={false}
                                          onClick={[Function]}
                                        >
                                          <button
                                            className="Button__StyledButton-c9cbmb-0 jVYrA btn btn-sm btn-info"
                                            disabled={false}
                                            onClick={[Function]}
                                            type="button"
                                          >
                                            Install
                                          </button>
                                        </Button>
                                      </StyledComponent>
                                    </Button__StyledButton>
                                  </ForwardRef>
                                  <BootstrapModalWrapper
                                    backdrop="static"
                                    bsSize="large"
                                    onClose={[Function]}
                                    onHide={[Function]}
                                    onOpen={[Function]}
                                    showModal={false}
                                  >
                                    <Modal
                                      backdrop="static"
                                      bsSize="large"
                                      onHide={[Function]}
                                      show={false}
                                    >
                                      <StyledComponent
                                        backdrop="static"
                                        bsSize="large"
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "BACKDROP_TRANSITION_DURATION": 150,
                                            "Body": [Function],
                                            "Dialog": [Function],
                                            "Footer": [Function],
                                            "Header": [Function],
                                            "SIZES": Array [
                                              "large",
                                              "small",
                                            ],
                                            "TRANSITION_DURATION": 300,
                                            "Title": [Function],
                                            "attrs": Array [],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "Modal-nuree8-0",
                                              "isStatic": false,
                                              "lastClassName": "eNmkew",
                                              "rules": Array [
                                                [Function],
                                              ],
                                            },
                                            "displayName": "Modal",
                                            "foldedComponentIds": Array [],
                                            "render": [Function],
                                            "styledComponentId": "Modal-nuree8-0",
                                            "target": [Function],
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                        onHide={[Function]}
                                        show={false}
                                      >
                                        <Modal
                                          animation={true}
                                          autoFocus={true}
                                          backdrop="static"
                                          bsClass="modal"
                                          bsSize="large"
                                          className="Modal-nuree8-0 eNmkew"
                                          dialogComponentClass={[Function]}
                                          enforceFocus={true}
                                          keyboard={true}
                                          manager={
                                            ModalManager {
                                              "add": [Function],
                                              "containers": Array [],
                                              "data": Array [],
                                              "handleContainerOverflow": true,
                                              "hideSiblingNodes": true,
                                              "isTopModal": [Function],
                                              "modals": Array [],
                                              "remove": [Function],
                                            }
                                          }
                                          onHide={[Function]}
                                          renderBackdrop={[Function]}
                                          restoreFocus={true}
                                          show={false}
                                        >
                                          <Modal
                                            autoFocus={true}
                                            backdrop="static"
                                            backdropClassName="modal-backdrop"
                                            backdropTransition={[Function]}
                                            containerClassName="modal-open"
                                            enforceFocus={true}
                                            keyboard={true}
                                            manager={
                                              ModalManager {
                                                "add": [Function],
                                                "containers": Array [],
                                                "data": Array [],
                                                "handleContainerOverflow": true,
                                                "hideSiblingNodes": true,
                                                "isTopModal": [Function],
                                                "modals": Array [],
                                                "remove": [Function],
                                              }
                                            }
                                            onEntering={[Function]}
                                            onExited={[Function]}
                                            onHide={[Function]}
                                            onMouseUp={[Function]}
                                            renderBackdrop={[Function]}
                                            restoreFocus={true}
                                            show={false}
                                            transition={[Function]}
                                          />
                                        </Modal>
                                      </StyledComponent>
                                    </Modal>
                                  </BootstrapModalWrapper>
                                   
                                  <ForwardRef
                                    bsSize="small"
                                    id="more-actions-9"
                                    pullRight={true}
                                    title="More Actions"
                                  >
                                    <DropdownButton__StyledDropdownButton
                                      bsSize="small"
                                      id="more-actions-9"
                                      pullRight={true}
                                      title="More Actions"
                                    >
                                      <StyledComponent
                                        bsSize="small"
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "attrs": Array [],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "DropdownButton__StyledDropdownButton-sc-1343dcx-0",
                                              "isStatic": false,
                                              "lastClassName": "hsmsMV",
                                              "rules": Array [
                                                [Function],
                                              ],
                                            },
                                            "displayName": "DropdownButton__StyledDropdownButton",
                                            "foldedComponentIds": Array [],
                                            "render": [Function],
                                            "styledComponentId": "DropdownButton__StyledDropdownButton-sc-1343dcx-0",
                                            "target": [Function],
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                        id="more-actions-9"
                                        pullRight={true}
                                        title="More Actions"
                                      >
                                        <DropdownButton
                                          bsSize="small"
                                          className="DropdownButton__StyledDropdownButton-sc-1343dcx-0 hsmsMV"
                                          id="more-actions-9"
                                          pullRight={true}
                                          title="More Actions"
                                        >
                                          <ForwardRef
                                            bsSize="small"
                                            id="more-actions-9"
                                            pullRight={true}
                                          >
                                            <Uncontrolled(Dropdown)
                                              bsSize="small"
                                              id="more-actions-9"
                                              innerRef={null}
                                              pullRight={true}
                                            >
                                              <Dropdown
                                                bsClass="dropdown"
                                                bsSize="small"
                                                componentClass={[Function]}
                                                id="more-actions-9"
                                                onToggle={[Function]}
                                                pullRight={true}
                                              >
                                                <ButtonGroup
                                                  block={false}
                                                  bsClass="btn-group"
                                                  bsSize="small"
                                                  className="dropdown"
                                                  justified={false}
                                                  vertical={false}
                                                >
                                                  <div
                                                    className="dropdown btn-group btn-group-sm"
                                                  >
                                                    <DropdownToggle
                                                      bsClass="dropdown-toggle"
                                                      bsRole="toggle"
                                                      bsSize="small"
                                                      className="DropdownButton__StyledDropdownButton-sc-1343dcx-0 hsmsMV"
                                                      id="more-actions-9"
                                                      key=".0"
                                                      onClick={[Function]}
                                                      onKeyDown={[Function]}
                                                      open={false}
                                                      useAnchor={false}
                                                    >
                                                      <Button
                                                        active={false}
                                                        aria-expanded={false}
                                                        aria-haspopup={true}
                                                        block={false}
                                                        bsClass="btn"
                                                        bsSize="small"
                                                        bsStyle="default"
                                                        className="DropdownButton__StyledDropdownButton-sc-1343dcx-0 hsmsMV dropdown-toggle"
                                                        disabled={false}
                                                        id="more-actions-9"
                                                        onClick={[Function]}
                                                        onKeyDown={[Function]}
                                                        role="button"
                                                      >
                                                        <button
                                                          aria-expanded={false}
                                                          aria-haspopup={true}
                                                          className="DropdownButton__StyledDropdownButton-sc-1343dcx-0 hsmsMV dropdown-toggle btn btn-sm btn-default"
                                                          disabled={false}
                                                          id="more-actions-9"
                                                          onClick={[Function]}
                                                          onKeyDown={[Function]}
                                                          role="button"
                                                          type="button"
                                                        >
                                                          More Actions
                                                           
                                                          <span
                                                            className="caret"
                                                          />
                                                        </button>
                                                      </Button>
                                                    </DropdownToggle>
                                                    <DropdownMenu
                                                      bsClass="dropdown-menu"
                                                      bsRole="menu"
                                                      key=".1"
                                                      labelledBy="more-actions-9"
                                                      onClose={[Function]}
                                                      onSelect={[Function]}
                                                      pullRight={true}
                                                    >
                                                      <RootCloseWrapper
                                                        disabled={true}
                                                        event="click"
                                                        onRootClose={[Function]}
                                                      >
                                                        <ul
                                                          aria-labelledby="more-actions-9"
                                                          className="dropdown-menu dropdown-menu-right"
                                                          role="menu"
                                                        >
                                                          <LinkContainer
                                                            action="push"
                                                            key=".0"
                                                            onKeyDown={[Function]}
                                                            onSelect={[Function]}
                                                            onlyActiveOnIndex={false}
                                                            to="/system/contentpacks/9"
                                                          >
                                                            <MenuItem
                                                              action="push"
                                                              bsClass="dropdown"
                                                              disabled={false}
                                                              divider={false}
                                                              header={false}
                                                              onClick={[Function]}
                                                              onKeyDown={[Function]}
                                                              onSelect={[Function]}
                                                            >
                                                              <li
                                                                className=""
                                                                role="presentation"
                                                              >
                                                                <SafeAnchor
                                                                  action="push"
                                                                  componentClass="a"
                                                                  onClick={[Function]}
                                                                  onKeyDown={[Function]}
                                                                  role="menuitem"
                                                                  tabIndex="-1"
                                                                >
                                                                  <a
                                                                    action="push"
                                                                    href="#"
                                                                    onClick={[Function]}
                                                                    onKeyDown={[Function]}
                                                                    role="menuitem"
                                                                    tabIndex="-1"
                                                                  >
                                                                    Show
                                                                  </a>
                                                                </SafeAnchor>
                                                              </li>
                                                            </MenuItem>
                                                          </LinkContainer>
                                                          <LinkContainer
                                                            action="push"
                                                            key=".1"
                                                            onKeyDown={[Function]}
                                                            onSelect={[Function]}
                                                            onlyActiveOnIndex={false}
                                                            to="/system/contentpacks/9/1/edit"
                                                          >
                                                            <MenuItem
                                                              action="push"
                                                              bsClass="dropdown"
                                                              disabled={false}
                                                              divider={false}
                                                              header={false}
                                                              onClick={[Function]}
                                                              onKeyDown={[Function]}
                                                              onSelect={[Function]}
                                                            >
                                                              <li
                                                                className=""
                                                                role="presentation"
                                                              >
                                                                <SafeAnchor
                                                                  action="push"
                                                                  componentClass="a"
                                                                  onClick={[Function]}
                                                                  onKeyDown={[Function]}
                                                                  role="menuitem"
                                                                  tabIndex="-1"
                                                                >
                                                                  <a
                                                                    action="push"
                                                                    href="#"
                                                                    onClick={[Function]}
                                                                    onKeyDown={[Function]}
                                                                    role="menuitem"
                                                                    tabIndex="-1"
                                                                  >
                                                                    Create New Version
                                                                  </a>
                                                                </SafeAnchor>
                                                              </li>
                                                            </MenuItem>
                                                          </LinkContainer>
                                                          <MenuItem
                                                            bsClass="dropdown"
                                                            disabled={false}
                                                            divider={false}
                                                            header={false}
                                                            key=".2"
                                                            onKeyDown={[Function]}
                                                            onSelect={[Function]}
                                                          >
                                                            <li
                                                              className=""
                                                              role="presentation"
                                                            >
                                                              <SafeAnchor
                                                                componentClass="a"
                                                                onClick={[Function]}
                                                                onKeyDown={[Function]}
                                                                role="menuitem"
                                                                tabIndex="-1"
                                                              >
                                                                <a
                                                                  href="#"
                                                                  onClick={[Function]}
                                                                  onKeyDown={[Function]}
                                                                  role="menuitem"
                                                                  tabIndex="-1"
                                                                >
                                                                  Download
                                                                </a>
                                                              </SafeAnchor>
                                                            </li>
                                                          </MenuItem>
                                                          <MenuItem
                                                            bsClass="dropdown"
                                                            disabled={false}
                                                            divider={true}
                                                            header={false}
                                                            key=".3"
                                                            onKeyDown={[Function]}
                                                            onSelect={[Function]}
                                                          >
                                                            <li
                                                              className="divider"
                                                              onKeyDown={[Function]}
                                                              role="separator"
                                                            />
                                                          </MenuItem>
                                                          <MenuItem
                                                            bsClass="dropdown"
                                                            disabled={false}
                                                            divider={false}
                                                            header={false}
                                                            key=".4"
                                                            onKeyDown={[Function]}
                                                            onSelect={[Function]}
                                                          >
                                                            <li
                                                              className=""
                                                              role="presentation"
                                                            >
                                                              <SafeAnchor
                                                                componentClass="a"
                                                                onClick={[Function]}
                                                                onKeyDown={[Function]}
                                                                role="menuitem"
                                                                tabIndex="-1"
                                                              >
                                                                <a
                                                                  href="#"
                                                                  onClick={[Function]}
                                                                  onKeyDown={[Function]}
                                                                  role="menuitem"
                                                                  tabIndex="-1"
                                                                >
                                                                  Delete All Versions
                                                                </a>
                                                              </SafeAnchor>
                                                            </li>
                                                          </MenuItem>
                                                        </ul>
                                                      </RootCloseWrapper>
                                                    </DropdownMenu>
                                                  </div>
                                                </ButtonGroup>
                                              </Dropdown>
                                            </Uncontrolled(Dropdown)>
                                          </ForwardRef>
                                        </DropdownButton>
                                      </StyledComponent>
                                    </DropdownButton__StyledDropdownButton>
                                  </ForwardRef>
                                  <ContentPackDownloadControl
                                    contentPackId="9"
                                    revision={1}
                                  >
                                    <BootstrapModalWrapper
                                      backdrop="static"
                                      bsSize="large"
                                      onClose={[Function]}
                                      onHide={[Function]}
                                      onOpen={[Function]}
                                      showModal={false}
                                    >
                                      <Modal
                                        backdrop="static"
                                        bsSize="large"
                                        onHide={[Function]}
                                        show={false}
                                      >
                                        <StyledComponent
                                          backdrop="static"
                                          bsSize="large"
                                          forwardedComponent={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "BACKDROP_TRANSITION_DURATION": 150,
                                              "Body": [Function],
                                              "Dialog": [Function],
                                              "Footer": [Function],
                                              "Header": [Function],
                                              "SIZES": Array [
                                                "large",
                                                "small",
                                              ],
                                              "TRANSITION_DURATION": 300,
                                              "Title": [Function],
                                              "attrs": Array [],
                                              "componentStyle": ComponentStyle {
                                                "componentId": "Modal-nuree8-0",
                                                "isStatic": false,
                                                "lastClassName": "eNmkew",
                                                "rules": Array [
                                                  [Function],
                                                ],
                                              },
                                              "displayName": "Modal",
                                              "foldedComponentIds": Array [],
                                              "render": [Function],
                                              "styledComponentId": "Modal-nuree8-0",
                                              "target": [Function],
                                              "toString": [Function],
                                              "warnTooManyClasses": [Function],
                                              "withComponent": [Function],
                                            }
                                          }
                                          forwardedRef={null}
                                          onHide={[Function]}
                                          show={false}
                                        >
                                          <Modal
                                            animation={true}
                                            autoFocus={true}
                                            backdrop="static"
                                            bsClass="modal"
                                            bsSize="large"
                                            className="Modal-nuree8-0 eNmkew"
                                            dialogComponentClass={[Function]}
                                            enforceFocus={true}
                                            keyboard={true}
                                            manager={
                                              ModalManager {
                                                "add": [Function],
                                                "containers": Array [],
                                                "data": Array [],
                                                "handleContainerOverflow": true,
                                                "hideSiblingNodes": true,
                                                "isTopModal": [Function],
                                                "modals": Array [],
                                                "remove": [Function],
                                              }
                                            }
                                            onHide={[Function]}
                                            renderBackdrop={[Function]}
                                            restoreFocus={true}
                                            show={false}
                                          >
                                            <Modal
                                              autoFocus={true}
                                              backdrop="static"
                                              backdropClassName="modal-backdrop"
                                              backdropTransition={[Function]}
                                              containerClassName="modal-open"
                                              enforceFocus={true}
                                              keyboard={true}
                                              manager={
                                                ModalManager {
                                                  "add": [Function],
                                                  "containers": Array [],
                                                  "data": Array [],
                                                  "handleContainerOverflow": true,
                                                  "hideSiblingNodes": true,
                                                  "isTopModal": [Function],
                                                  "modals": Array [],
                                                  "remove": [Function],
                                                }
                                              }
                                              onEntering={[Function]}
                                              onExited={[Function]}
                                              onHide={[Function]}
                                              onMouseUp={[Function]}
                                              renderBackdrop={[Function]}
                                              restoreFocus={true}
                                              show={false}
                                              transition={[Function]}
                                            />
                                          </Modal>
                                        </StyledComponent>
                                      </Modal>
                                    </BootstrapModalWrapper>
                                  </ContentPackDownloadControl>
                                </div>
                              </Col>
                            </div>
                          </Row>
                          <Row
                            bsClass="row"
                            className="row-sm content-packs-summary"
                            componentClass="div"
                          >
                            <div
                              className="row-sm content-packs-summary row"
                            >
                              <Col
                                bsClass="col"
                                componentClass="div"
                                md={12}
                              >
                                <div
                                  className="col-md-12"
                                >
                                  A crypted backup over ssh.
                                   
                                </div>
                              </Col>
                            </div>
                          </Row>
                        </span>
                      </ListGroupItem>
                    </StyledComponent>
                  </ListGroupItem__StyledListGroupItem>
                </ForwardRef>
              </ControlledTableListItem>
              <ControlledTableListItem
                key="10"
              >
                <ForwardRef>
                  <ListGroupItem__StyledListGroupItem>
                    <StyledComponent
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "STYLES": Array [
                            "success",
                            "warning",
                            "danger",
                            "info",
                          ],
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "ListGroupItem__StyledListGroupItem-sc-1ky0joo-0",
                            "isStatic": false,
                            "lastClassName": "jRLKfG",
                            "rules": Array [
                              [Function],
                            ],
                          },
                          "displayName": "ListGroupItem__StyledListGroupItem",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "ListGroupItem__StyledListGroupItem-sc-1ky0joo-0",
                          "target": [Function],
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                    >
                      <ListGroupItem
                        bsClass="list-group-item"
                        className="ListGroupItem__StyledListGroupItem-sc-1ky0joo-0 jRLKfG"
                        listItem={false}
                      >
                        <span
                          className="ListGroupItem__StyledListGroupItem-sc-1ky0joo-0 jRLKfG list-group-item"
                        >
                          <Row
                            bsClass="row"
                            className="row-sm"
                            componentClass="div"
                          >
                            <div
                              className="row-sm row"
                            >
                              <Col
                                bsClass="col"
                                componentClass="div"
                                md={9}
                              >
                                <div
                                  className="col-md-9"
                                >
                                  <h3>
                                    <Link
                                      onlyActiveOnIndex={false}
                                      style={Object {}}
                                      to="/system/contentpacks/10"
                                    >
                                      <a
                                        onClick={[Function]}
                                        style={Object {}}
                                      />
                                    </Link>
                                     
                                    <small>
                                      Latest Version: 
                                      1
                                       
                                      <ContentPackStatus
                                        contentPackId="10"
                                        states={Array []}
                                      >
                                        <span />
                                      </ContentPackStatus>
                                       
                                    </small>
                                  </h3>
                                </div>
                              </Col>
                              <Col
                                bsClass="col"
                                className="text-right"
                                componentClass="div"
                                md={3}
                              >
                                <div
                                  className="text-right col-md-3"
                                >
                                   
                                  <ForwardRef
                                    bsSize="small"
                                    bsStyle="info"
                                    onClick={[Function]}
                                  >
                                    <Button__StyledButton
                                      bsSize="small"
                                      bsStyle="info"
                                      onClick={[Function]}
                                    >
                                      <StyledComponent
                                        bsSize="small"
                                        bsStyle="info"
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "SIZES": Array [
                                              "large",
                                              "small",
                                              "xsmall",
                                            ],
                                            "STYLES": Array [
                                              "success",
                                              "warning",
                                              "danger",
                                              "info",
                                              "default",
                                              "primary",
                                              "link",
                                            ],
                                            "attrs": Array [],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "Button__StyledButton-c9cbmb-0",
                                              "isStatic": false,
                                              "lastClassName": "jVYrA",
                                              "rules": Array [
                                                [Function],
                                              ],
                                            },
                                            "displayName": "Button__StyledButton",
                                            "foldedComponentIds": Array [],
                                            "render": [Function],
                                            "styledComponentId": "Button__StyledButton-c9cbmb-0",
                                            "target": [Function],
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                        onClick={[Function]}
                                      >
                                        <Button
                                          active={false}
                                          block={false}
                                          bsClass="btn"
                                          bsSize="small"
                                          bsStyle="info"
                                          className="Button__StyledButton-c9cbmb-0 jVYrA"
                                          disabled={false}
                                          onClick={[Function]}
                                        >
                                          <button
                                            className="Button__StyledButton-c9cbmb-0 jVYrA btn btn-sm btn-info"
                                            disabled={false}
                                            onClick={[Function]}
                                            type="button"
                                          >
                                            Install
                                          </button>
                                        </Button>
                                      </StyledComponent>
                                    </Button__StyledButton>
                                  </ForwardRef>
                                  <BootstrapModalWrapper
                                    backdrop="static"
                                    bsSize="large"
                                    onClose={[Function]}
                                    onHide={[Function]}
                                    onOpen={[Function]}
                                    showModal={false}
                                  >
                                    <Modal
                                      backdrop="static"
                                      bsSize="large"
                                      onHide={[Function]}
                                      show={false}
                                    >
                                      <StyledComponent
                                        backdrop="static"
                                        bsSize="large"
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "BACKDROP_TRANSITION_DURATION": 150,
                                            "Body": [Function],
                                            "Dialog": [Function],
                                            "Footer": [Function],
                                            "Header": [Function],
                                            "SIZES": Array [
                                              "large",
                                              "small",
                                            ],
                                            "TRANSITION_DURATION": 300,
                                            "Title": [Function],
                                            "attrs": Array [],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "Modal-nuree8-0",
                                              "isStatic": false,
                                              "lastClassName": "eNmkew",
                                              "rules": Array [
                                                [Function],
                                              ],
                                            },
                                            "displayName": "Modal",
                                            "foldedComponentIds": Array [],
                                            "render": [Function],
                                            "styledComponentId": "Modal-nuree8-0",
                                            "target": [Function],
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                        onHide={[Function]}
                                        show={false}
                                      >
                                        <Modal
                                          animation={true}
                                          autoFocus={true}
                                          backdrop="static"
                                          bsClass="modal"
                                          bsSize="large"
                                          className="Modal-nuree8-0 eNmkew"
                                          dialogComponentClass={[Function]}
                                          enforceFocus={true}
                                          keyboard={true}
                                          manager={
                                            ModalManager {
                                              "add": [Function],
                                              "containers": Array [],
                                              "data": Array [],
                                              "handleContainerOverflow": true,
                                              "hideSiblingNodes": true,
                                              "isTopModal": [Function],
                                              "modals": Array [],
                                              "remove": [Function],
                                            }
                                          }
                                          onHide={[Function]}
                                          renderBackdrop={[Function]}
                                          restoreFocus={true}
                                          show={false}
                                        >
                                          <Modal
                                            autoFocus={true}
                                            backdrop="static"
                                            backdropClassName="modal-backdrop"
                                            backdropTransition={[Function]}
                                            containerClassName="modal-open"
                                            enforceFocus={true}
                                            keyboard={true}
                                            manager={
                                              ModalManager {
                                                "add": [Function],
                                                "containers": Array [],
                                                "data": Array [],
                                                "handleContainerOverflow": true,
                                                "hideSiblingNodes": true,
                                                "isTopModal": [Function],
                                                "modals": Array [],
                                                "remove": [Function],
                                              }
                                            }
                                            onEntering={[Function]}
                                            onExited={[Function]}
                                            onHide={[Function]}
                                            onMouseUp={[Function]}
                                            renderBackdrop={[Function]}
                                            restoreFocus={true}
                                            show={false}
                                            transition={[Function]}
                                          />
                                        </Modal>
                                      </StyledComponent>
                                    </Modal>
                                  </BootstrapModalWrapper>
                                   
                                  <ForwardRef
                                    bsSize="small"
                                    id="more-actions-10"
                                    pullRight={true}
                                    title="More Actions"
                                  >
                                    <DropdownButton__StyledDropdownButton
                                      bsSize="small"
                                      id="more-actions-10"
                                      pullRight={true}
                                      title="More Actions"
                                    >
                                      <StyledComponent
                                        bsSize="small"
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "attrs": Array [],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "DropdownButton__StyledDropdownButton-sc-1343dcx-0",
                                              "isStatic": false,
                                              "lastClassName": "hsmsMV",
                                              "rules": Array [
                                                [Function],
                                              ],
                                            },
                                            "displayName": "DropdownButton__StyledDropdownButton",
                                            "foldedComponentIds": Array [],
                                            "render": [Function],
                                            "styledComponentId": "DropdownButton__StyledDropdownButton-sc-1343dcx-0",
                                            "target": [Function],
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                        id="more-actions-10"
                                        pullRight={true}
                                        title="More Actions"
                                      >
                                        <DropdownButton
                                          bsSize="small"
                                          className="DropdownButton__StyledDropdownButton-sc-1343dcx-0 hsmsMV"
                                          id="more-actions-10"
                                          pullRight={true}
                                          title="More Actions"
                                        >
                                          <ForwardRef
                                            bsSize="small"
                                            id="more-actions-10"
                                            pullRight={true}
                                          >
                                            <Uncontrolled(Dropdown)
                                              bsSize="small"
                                              id="more-actions-10"
                                              innerRef={null}
                                              pullRight={true}
                                            >
                                              <Dropdown
                                                bsClass="dropdown"
                                                bsSize="small"
                                                componentClass={[Function]}
                                                id="more-actions-10"
                                                onToggle={[Function]}
                                                pullRight={true}
                                              >
                                                <ButtonGroup
                                                  block={false}
                                                  bsClass="btn-group"
                                                  bsSize="small"
                                                  className="dropdown"
                                                  justified={false}
                                                  vertical={false}
                                                >
                                                  <div
                                                    className="dropdown btn-group btn-group-sm"
                                                  >
                                                    <DropdownToggle
                                                      bsClass="dropdown-toggle"
                                                      bsRole="toggle"
                                                      bsSize="small"
                                                      className="DropdownButton__StyledDropdownButton-sc-1343dcx-0 hsmsMV"
                                                      id="more-actions-10"
                                                      key=".0"
                                                      onClick={[Function]}
                                                      onKeyDown={[Function]}
                                                      open={false}
                                                      useAnchor={false}
                                                    >
                                                      <Button
                                                        active={false}
                                                        aria-expanded={false}
                                                        aria-haspopup={true}
                                                        block={false}
                                                        bsClass="btn"
                                                        bsSize="small"
                                                        bsStyle="default"
                                                        className="DropdownButton__StyledDropdownButton-sc-1343dcx-0 hsmsMV dropdown-toggle"
                                                        disabled={false}
                                                        id="more-actions-10"
                                                        onClick={[Function]}
                                                        onKeyDown={[Function]}
                                                        role="button"
                                                      >
                                                        <button
                                                          aria-expanded={false}
                                                          aria-haspopup={true}
                                                          className="DropdownButton__StyledDropdownButton-sc-1343dcx-0 hsmsMV dropdown-toggle btn btn-sm btn-default"
                                                          disabled={false}
                                                          id="more-actions-10"
                                                          onClick={[Function]}
                                                          onKeyDown={[Function]}
                                                          role="button"
                                                          type="button"
                                                        >
                                                          More Actions
                                                           
                                                          <span
                                                            className="caret"
                                                          />
                                                        </button>
                                                      </Button>
                                                    </DropdownToggle>
                                                    <DropdownMenu
                                                      bsClass="dropdown-menu"
                                                      bsRole="menu"
                                                      key=".1"
                                                      labelledBy="more-actions-10"
                                                      onClose={[Function]}
                                                      onSelect={[Function]}
                                                      pullRight={true}
                                                    >
                                                      <RootCloseWrapper
                                                        disabled={true}
                                                        event="click"
                                                        onRootClose={[Function]}
                                                      >
                                                        <ul
                                                          aria-labelledby="more-actions-10"
                                                          className="dropdown-menu dropdown-menu-right"
                                                          role="menu"
                                                        >
                                                          <LinkContainer
                                                            action="push"
                                                            key=".0"
                                                            onKeyDown={[Function]}
                                                            onSelect={[Function]}
                                                            onlyActiveOnIndex={false}
                                                            to="/system/contentpacks/10"
                                                          >
                                                            <MenuItem
                                                              action="push"
                                                              bsClass="dropdown"
                                                              disabled={false}
                                                              divider={false}
                                                              header={false}
                                                              onClick={[Function]}
                                                              onKeyDown={[Function]}
                                                              onSelect={[Function]}
                                                            >
                                                              <li
                                                                className=""
                                                                role="presentation"
                                                              >
                                                                <SafeAnchor
                                                                  action="push"
                                                                  componentClass="a"
                                                                  onClick={[Function]}
                                                                  onKeyDown={[Function]}
                                                                  role="menuitem"
                                                                  tabIndex="-1"
                                                                >
                                                                  <a
                                                                    action="push"
                                                                    href="#"
                                                                    onClick={[Function]}
                                                                    onKeyDown={[Function]}
                                                                    role="menuitem"
                                                                    tabIndex="-1"
                                                                  >
                                                                    Show
                                                                  </a>
                                                                </SafeAnchor>
                                                              </li>
                                                            </MenuItem>
                                                          </LinkContainer>
                                                          <LinkContainer
                                                            action="push"
                                                            key=".1"
                                                            onKeyDown={[Function]}
                                                            onSelect={[Function]}
                                                            onlyActiveOnIndex={false}
                                                            to="/system/contentpacks/10/1/edit"
                                                          >
                                                            <MenuItem
                                                              action="push"
                                                              bsClass="dropdown"
                                                              disabled={false}
                                                              divider={false}
                                                              header={false}
                                                              onClick={[Function]}
                                                              onKeyDown={[Function]}
                                                              onSelect={[Function]}
                                                            >
                                                              <li
                                                                className=""
                                                                role="presentation"
                                                              >
                                                                <SafeAnchor
                                                                  action="push"
                                                                  componentClass="a"
                                                                  onClick={[Function]}
                                                                  onKeyDown={[Function]}
                                                                  role="menuitem"
                                                                  tabIndex="-1"
                                                                >
                                                                  <a
                                                                    action="push"
                                                                    href="#"
                                                                    onClick={[Function]}
                                                                    onKeyDown={[Function]}
                                                                    role="menuitem"
                                                                    tabIndex="-1"
                                                                  >
                                                                    Create New Version
                                                                  </a>
                                                                </SafeAnchor>
                                                              </li>
                                                            </MenuItem>
                                                          </LinkContainer>
                                                          <MenuItem
                                                            bsClass="dropdown"
                                                            disabled={false}
                                                            divider={false}
                                                            header={false}
                                                            key=".2"
                                                            onKeyDown={[Function]}
                                                            onSelect={[Function]}
                                                          >
                                                            <li
                                                              className=""
                                                              role="presentation"
                                                            >
                                                              <SafeAnchor
                                                                componentClass="a"
                                                                onClick={[Function]}
                                                                onKeyDown={[Function]}
                                                                role="menuitem"
                                                                tabIndex="-1"
                                                              >
                                                                <a
                                                                  href="#"
                                                                  onClick={[Function]}
                                                                  onKeyDown={[Function]}
                                                                  role="menuitem"
                                                                  tabIndex="-1"
                                                                >
                                                                  Download
                                                                </a>
                                                              </SafeAnchor>
                                                            </li>
                                                          </MenuItem>
                                                          <MenuItem
                                                            bsClass="dropdown"
                                                            disabled={false}
                                                            divider={true}
                                                            header={false}
                                                            key=".3"
                                                            onKeyDown={[Function]}
                                                            onSelect={[Function]}
                                                          >
                                                            <li
                                                              className="divider"
                                                              onKeyDown={[Function]}
                                                              role="separator"
                                                            />
                                                          </MenuItem>
                                                          <MenuItem
                                                            bsClass="dropdown"
                                                            disabled={false}
                                                            divider={false}
                                                            header={false}
                                                            key=".4"
                                                            onKeyDown={[Function]}
                                                            onSelect={[Function]}
                                                          >
                                                            <li
                                                              className=""
                                                              role="presentation"
                                                            >
                                                              <SafeAnchor
                                                                componentClass="a"
                                                                onClick={[Function]}
                                                                onKeyDown={[Function]}
                                                                role="menuitem"
                                                                tabIndex="-1"
                                                              >
                                                                <a
                                                                  href="#"
                                                                  onClick={[Function]}
                                                                  onKeyDown={[Function]}
                                                                  role="menuitem"
                                                                  tabIndex="-1"
                                                                >
                                                                  Delete All Versions
                                                                </a>
                                                              </SafeAnchor>
                                                            </li>
                                                          </MenuItem>
                                                        </ul>
                                                      </RootCloseWrapper>
                                                    </DropdownMenu>
                                                  </div>
                                                </ButtonGroup>
                                              </Dropdown>
                                            </Uncontrolled(Dropdown)>
                                          </ForwardRef>
                                        </DropdownButton>
                                      </StyledComponent>
                                    </DropdownButton__StyledDropdownButton>
                                  </ForwardRef>
                                  <ContentPackDownloadControl
                                    contentPackId="10"
                                    revision={1}
                                  >
                                    <BootstrapModalWrapper
                                      backdrop="static"
                                      bsSize="large"
                                      onClose={[Function]}
                                      onHide={[Function]}
                                      onOpen={[Function]}
                                      showModal={false}
                                    >
                                      <Modal
                                        backdrop="static"
                                        bsSize="large"
                                        onHide={[Function]}
                                        show={false}
                                      >
                                        <StyledComponent
                                          backdrop="static"
                                          bsSize="large"
                                          forwardedComponent={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "BACKDROP_TRANSITION_DURATION": 150,
                                              "Body": [Function],
                                              "Dialog": [Function],
                                              "Footer": [Function],
                                              "Header": [Function],
                                              "SIZES": Array [
                                                "large",
                                                "small",
                                              ],
                                              "TRANSITION_DURATION": 300,
                                              "Title": [Function],
                                              "attrs": Array [],
                                              "componentStyle": ComponentStyle {
                                                "componentId": "Modal-nuree8-0",
                                                "isStatic": false,
                                                "lastClassName": "eNmkew",
                                                "rules": Array [
                                                  [Function],
                                                ],
                                              },
                                              "displayName": "Modal",
                                              "foldedComponentIds": Array [],
                                              "render": [Function],
                                              "styledComponentId": "Modal-nuree8-0",
                                              "target": [Function],
                                              "toString": [Function],
                                              "warnTooManyClasses": [Function],
                                              "withComponent": [Function],
                                            }
                                          }
                                          forwardedRef={null}
                                          onHide={[Function]}
                                          show={false}
                                        >
                                          <Modal
                                            animation={true}
                                            autoFocus={true}
                                            backdrop="static"
                                            bsClass="modal"
                                            bsSize="large"
                                            className="Modal-nuree8-0 eNmkew"
                                            dialogComponentClass={[Function]}
                                            enforceFocus={true}
                                            keyboard={true}
                                            manager={
                                              ModalManager {
                                                "add": [Function],
                                                "containers": Array [],
                                                "data": Array [],
                                                "handleContainerOverflow": true,
                                                "hideSiblingNodes": true,
                                                "isTopModal": [Function],
                                                "modals": Array [],
                                                "remove": [Function],
                                              }
                                            }
                                            onHide={[Function]}
                                            renderBackdrop={[Function]}
                                            restoreFocus={true}
                                            show={false}
                                          >
                                            <Modal
                                              autoFocus={true}
                                              backdrop="static"
                                              backdropClassName="modal-backdrop"
                                              backdropTransition={[Function]}
                                              containerClassName="modal-open"
                                              enforceFocus={true}
                                              keyboard={true}
                                              manager={
                                                ModalManager {
                                                  "add": [Function],
                                                  "containers": Array [],
                                                  "data": Array [],
                                                  "handleContainerOverflow": true,
                                                  "hideSiblingNodes": true,
                                                  "isTopModal": [Function],
                                                  "modals": Array [],
                                                  "remove": [Function],
                                                }
                                              }
                                              onEntering={[Function]}
                                              onExited={[Function]}
                                              onHide={[Function]}
                                              onMouseUp={[Function]}
                                              renderBackdrop={[Function]}
                                              restoreFocus={true}
                                              show={false}
                                              transition={[Function]}
                                            />
                                          </Modal>
                                        </StyledComponent>
                                      </Modal>
                                    </BootstrapModalWrapper>
                                  </ContentPackDownloadControl>
                                </div>
                              </Col>
                            </div>
                          </Row>
                          <Row
                            bsClass="row"
                            className="row-sm content-packs-summary"
                            componentClass="div"
                          >
                            <div
                              className="row-sm content-packs-summary row"
                            >
                              <Col
                                bsClass="col"
                                componentClass="div"
                                md={12}
                              >
                                <div
                                  className="col-md-12"
                                >
                                  Fast but insecure backup
                                   
                                </div>
                              </Col>
                            </div>
                          </Row>
                        </span>
                      </ListGroupItem>
                    </StyledComponent>
                  </ListGroupItem__StyledListGroupItem>
                </ForwardRef>
              </ControlledTableListItem>
            </div>
          </ListGroup>
        </ListGroup>
      </div>
    </ControlledTableList>
    <Row
      bsClass="row"
      className="row-sm"
      componentClass="div"
    >
      <div
        className="row-sm row"
      >
        <Col
          bsClass="col"
          componentClass="div"
          md={5}
        >
          <div
            className="col-md-5"
          />
        </Col>
        <Col
          bsClass="col"
          componentClass="div"
          md={5}
        >
          <div
            className="col-md-5"
          >
            <Pagination
              boundaryPagesRange={1}
              currentPage={1}
              disabled={false}
              hideEllipsis={false}
              hideFirstAndLastPageLinks={false}
              hidePreviousAndNextPageLinks={false}
              onChange={[Function]}
              siblingPagesRange={1}
              totalPages={2}
            >
              <UltimatePaginationComponent
                boundaryPagesRange={1}
                currentPage={1}
                data-testid="graylog-pagination"
                disabled={false}
                hideEllipsis={false}
                hideFirstAndLastPageLinks={false}
                hidePreviousAndNextPageLinks={false}
                onChange={[Function]}
                siblingPagesRange={1}
                totalPages={2}
              >
                <Pagination__StyledBootstrapPagination
                  data-testid="graylog-pagination"
                >
                  <StyledComponent
                    data-testid="graylog-pagination"
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "Ellipsis": [Function],
                        "First": [Function],
                        "Item": [Function],
                        "Last": [Function],
                        "Next": [Function],
                        "Prev": [Function],
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "Pagination__StyledBootstrapPagination-aj0t2h-0",
                          "isStatic": false,
                          "lastClassName": "flIvuU",
                          "rules": Array [
                            [Function],
                          ],
                        },
                        "displayName": "Pagination__StyledBootstrapPagination",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "Pagination__StyledBootstrapPagination-aj0t2h-0",
                        "target": [Function],
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <Pagination
                      bsClass="pagination"
                      className="Pagination__StyledBootstrapPagination-aj0t2h-0 flIvuU"
                      data-testid="graylog-pagination"
                    >
                      <ul
                        className="Pagination__StyledBootstrapPagination-aj0t2h-0 flIvuU pagination"
                        data-testid="graylog-pagination"
                      >
                        <Component
                          isActive={true}
                          isDisabled={false}
                          key="-3"
                          onClick={[Function]}
                          type="FIRST_PAGE_LINK"
                          value={1}
                        >
                          <First
                            disabled={true}
                            onClick={[Function]}
                          >
                            <li
                              aria-label="First"
                              className="disabled"
                              onClick={[Function]}
                            >
                              <span>
                                <Icon
                                  name="angle-double-left"
                                  type="solid"
                                >
                                  <FontAwesomeIcon
                                    icon={
                                      Object {
                                        "iconName": "angle-double-left",
                                        "prefix": "fas",
                                      }
                                    }
                                  >
                                    <svg
                                      className="svg-inline--fa fa-angle-double-left"
                                    />
                                  </FontAwesomeIcon>
                                </Icon>
                              </span>
                            </li>
                          </First>
                        </Component>
                        <Component
                          isActive={true}
                          isDisabled={false}
                          key="-4"
                          onClick={[Function]}
                          type="PREVIOUS_PAGE_LINK"
                          value={1}
                        >
                          <Prev
                            disabled={true}
                            onClick={[Function]}
                          >
                            <li
                              aria-label="Prev"
                              className="disabled"
                              onClick={[Function]}
                            >
                              <span>
                                <Icon
                                  name="angle-left"
                                  type="solid"
                                >
                                  <FontAwesomeIcon
                                    icon={
                                      Object {
                                        "iconName": "angle-left",
                                        "prefix": "fas",
                                      }
                                    }
                                  >
                                    <svg
                                      className="svg-inline--fa fa-angle-left"
                                    />
                                  </FontAwesomeIcon>
                                </Icon>
                              </span>
                            </li>
                          </Prev>
                        </Component>
                        <Component
                          isActive={true}
                          isDisabled={false}
                          key="1"
                          onClick={[Function]}
                          type="PAGE"
                          value={1}
                        >
                          <PaginationItem
                            active={true}
                            activeLabel="(current)"
                            disabled={false}
                            onClick={[Function]}
                          >
                            <li
                              className="active"
                            >
                              <span
                                disabled={false}
                                onClick={[Function]}
                              >
                                1
                                <span
                                  className="sr-only"
                                >
                                  (current)
                                </span>
                              </span>
                            </li>
                          </PaginationItem>
                        </Component>
                        <Component
                          isActive={false}
                          isDisabled={false}
                          key="2"
                          onClick={[Function]}
                          type="PAGE"
                          value={2}
                        >
                          <PaginationItem
                            active={false}
                            activeLabel="(current)"
                            disabled={false}
                            onClick={[Function]}
                          >
                            <li
                              className=""
                            >
                              <SafeAnchor
                                componentClass="a"
                                disabled={false}
                                onClick={[Function]}
                              >
                                <a
                                  href="#"
                                  onClick={[Function]}
                                  onKeyDown={[Function]}
                                  role="button"
                                >
                                  2
                                </a>
                              </SafeAnchor>
                            </li>
                          </PaginationItem>
                        </Component>
                        <Component
                          isActive={false}
                          isDisabled={false}
                          key="-5"
                          onClick={[Function]}
                          type="NEXT_PAGE_LINK"
                          value={2}
                        >
                          <Next
                            disabled={false}
                            onClick={[Function]}
                          >
                            <li
                              aria-label="Next"
                              className=""
                              onClick={[Function]}
                            >
                              <SafeAnchor
                                componentClass="a"
                              >
                                <a
                                  href="#"
                                  onClick={[Function]}
                                  onKeyDown={[Function]}
                                  role="button"
                                >
                                  <Icon
                                    name="angle-right"
                                    type="solid"
                                  >
                                    <FontAwesomeIcon
                                      icon={
                                        Object {
                                          "iconName": "angle-right",
                                          "prefix": "fas",
                                        }
                                      }
                                    >
                                      <svg
                                        className="svg-inline--fa fa-angle-right"
                                      />
                                    </FontAwesomeIcon>
                                  </Icon>
                                </a>
                              </SafeAnchor>
                            </li>
                          </Next>
                        </Component>
                        <Component
                          isActive={false}
                          isDisabled={false}
                          key="-6"
                          onClick={[Function]}
                          type="LAST_PAGE_LINK"
                          value={2}
                        >
                          <Last
                            disabled={false}
                            onClick={[Function]}
                          >
                            <li
                              aria-label="Last"
                              className=""
                              onClick={[Function]}
                            >
                              <SafeAnchor
                                componentClass="a"
                              >
                                <a
                                  href="#"
                                  onClick={[Function]}
                                  onKeyDown={[Function]}
                                  role="button"
                                >
                                  <Icon
                                    name="angle-double-right"
                                    type="solid"
                                  >
                                    <FontAwesomeIcon
                                      icon={
                                        Object {
                                          "iconName": "angle-double-right",
                                          "prefix": "fas",
                                        }
                                      }
                                    >
                                      <svg
                                        className="svg-inline--fa fa-angle-double-right"
                                      />
                                    </FontAwesomeIcon>
                                  </Icon>
                                </a>
                              </SafeAnchor>
                            </li>
                          </Last>
                        </Component>
                      </ul>
                    </Pagination>
                  </StyledComponent>
                </Pagination__StyledBootstrapPagination>
              </UltimatePaginationComponent>
            </Pagination>
          </div>
        </Col>
        <Col
          bsClass="col"
          className="text-right"
          componentClass="div"
          md={2}
        >
          <div
            className="text-right col-md-2"
          >
            <span>
              Show: 
              <select
                onChange={[Function]}
                value={10}
              >
                <option>
                  10
                </option>
                <option>
                  25
                </option>
                <option>
                  50
                </option>
                <option>
                  100
                </option>
              </select>
            </span>
          </div>
        </Col>
      </div>
    </Row>
  </div>
</ContentPacksList>
`;

exports[`<ContentPacksList /> should render with empty content packs 1`] = `
<ContentPacksList
  contentPackMetadata={Object {}}
  contentPacks={Array []}
  onDeletePack={[Function]}
  onInstall={[Function]}
>
  <div>
    <Row
      bsClass="row"
      className="row-sm"
      componentClass="div"
    >
      <div
        className="row-sm row"
      >
        <Col
          bsClass="col"
          componentClass="div"
          md={5}
        >
          <div
            className="col-md-5"
          >
            <TypeAheadDataFilter
              data={Array []}
              displayKey="name"
              filterBy=""
              filterSuggestionAccessor=""
              filterSuggestions={Array []}
              id="content-packs-filter"
              label="Filter"
              onDataFiltered={[Function]}
              searchInKeys={
                Array [
                  "name",
                  "summary",
                ]
              }
            >
              <div
                className="filter"
              >
                <form
                  className="form-inline"
                  onSubmit={[Function]}
                  style={
                    Object {
                      "display": "inline",
                    }
                  }
                >
                  <TypeAheadInput
                    displayKey="name"
                    id="content-packs-filter"
                    label="Filter"
                    onSuggestionSelected={[Function]}
                    suggestionText="Filter by : "
                    suggestions={Array []}
                  >
                    <Input
                      addonAfter={null}
                      bsStyle={null}
                      buttonAfter={null}
                      help=""
                      id="content-packs-filter"
                      label="Filter"
                      placeholder=""
                      type="text"
                      wrapperClassName="typeahead-wrapper"
                    >
                      <Component
                        controlId="content-packs-filter"
                        validationState={null}
                      >
                        <FormGroup__StyledFormGroup
                          controlId="content-packs-filter"
                          validationState={null}
                        >
                          <StyledComponent
                            controlId="content-packs-filter"
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "SIZES": Array [
                                  "large",
                                  "small",
                                ],
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "FormGroup__StyledFormGroup-sc-1wv4cm9-0",
                                  "isStatic": false,
                                  "lastClassName": "gcTkZc",
                                  "rules": Array [
                                    [Function],
                                  ],
                                },
                                "displayName": "FormGroup__StyledFormGroup",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "FormGroup__StyledFormGroup-sc-1wv4cm9-0",
                                "target": [Function],
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                            validationState={null}
                          >
                            <FormGroup
                              bsClass="form-group"
                              className="FormGroup__StyledFormGroup-sc-1wv4cm9-0 gcTkZc"
                              controlId="content-packs-filter"
                              validationState={null}
                            >
                              <div
                                className="FormGroup__StyledFormGroup-sc-1wv4cm9-0 gcTkZc form-group"
                              >
                                <ControlLabel>
                                  <StyledComponent
                                    forwardedComponent={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "attrs": Array [],
                                        "componentStyle": ComponentStyle {
                                          "componentId": "ControlLabel-sc-1edmum5-0",
                                          "isStatic": false,
                                          "lastClassName": "hCskeX",
                                          "rules": Array [
                                            [Function],
                                          ],
                                        },
                                        "displayName": "ControlLabel",
                                        "foldedComponentIds": Array [],
                                        "render": [Function],
                                        "styledComponentId": "ControlLabel-sc-1edmum5-0",
                                        "target": [Function],
                                        "toString": [Function],
                                        "warnTooManyClasses": [Function],
                                        "withComponent": [Function],
                                      }
                                    }
                                    forwardedRef={null}
                                  >
                                    <ControlLabel
                                      bsClass="control-label"
                                      className="ControlLabel-sc-1edmum5-0 hCskeX"
                                      srOnly={false}
                                    >
                                      <label
                                        className="ControlLabel-sc-1edmum5-0 hCskeX control-label"
                                        htmlFor="content-packs-filter"
                                      >
                                        Filter
                                      </label>
                                    </ControlLabel>
                                  </StyledComponent>
                                </ControlLabel>
                                <InputWrapper
                                  className="typeahead-wrapper"
                                >
                                  <div
                                    className="typeahead-wrapper"
                                  >
                                    <FormControl
                                      componentClass="input"
                                      inputRef={[Function]}
                                      label="Filter"
                                      name="content-packs-filter"
                                      placeholder=""
                                      type="text"
                                    >
                                      <StyledComponent
                                        componentClass="input"
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "Feedback": [Function],
                                            "SIZES": Array [
                                              "small",
                                              "large",
                                            ],
                                            "Static": [Function],
                                            "attrs": Array [],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "FormControl-sc-1amoaox-0",
                                              "isStatic": false,
                                              "lastClassName": "eXfwDC",
                                              "rules": Array [
                                                [Function],
                                              ],
                                            },
                                            "displayName": "FormControl",
                                            "foldedComponentIds": Array [],
                                            "render": [Function],
                                            "styledComponentId": "FormControl-sc-1amoaox-0",
                                            "target": [Function],
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                        inputRef={[Function]}
                                        label="Filter"
                                        name="content-packs-filter"
                                        placeholder=""
                                        type="text"
                                      >
                                        <FormControl
                                          bsClass="form-control"
                                          className="FormControl-sc-1amoaox-0 eXfwDC"
                                          componentClass="input"
                                          inputRef={[Function]}
                                          label="Filter"
                                          name="content-packs-filter"
                                          placeholder=""
                                          type="text"
                                        >
                                          <input
                                            className="FormControl-sc-1amoaox-0 eXfwDC form-control"
                                            id="content-packs-filter"
                                            label="Filter"
                                            name="content-packs-filter"
                                            placeholder=""
                                            type="text"
                                          />
                                        </FormControl>
                                      </StyledComponent>
                                    </FormControl>
                                  </div>
                                </InputWrapper>
                              </div>
                            </FormGroup>
                          </StyledComponent>
                        </FormGroup__StyledFormGroup>
                      </Component>
                    </Input>
                  </TypeAheadInput>
                  <ForwardRef
                    style={
                      Object {
                        "marginLeft": 5,
                      }
                    }
                    type="submit"
                  >
                    <Button__StyledButton
                      style={
                        Object {
                          "marginLeft": 5,
                        }
                      }
                      type="submit"
                    >
                      <StyledComponent
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "SIZES": Array [
                              "large",
                              "small",
                              "xsmall",
                            ],
                            "STYLES": Array [
                              "success",
                              "warning",
                              "danger",
                              "info",
                              "default",
                              "primary",
                              "link",
                            ],
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Button__StyledButton-c9cbmb-0",
                              "isStatic": false,
                              "lastClassName": "jVYrA",
                              "rules": Array [
                                [Function],
                              ],
                            },
                            "displayName": "Button__StyledButton",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Button__StyledButton-c9cbmb-0",
                            "target": [Function],
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                        style={
                          Object {
                            "marginLeft": 5,
                          }
                        }
                        type="submit"
                      >
                        <Button
                          active={false}
                          block={false}
                          bsClass="btn"
                          bsStyle="default"
                          className="Button__StyledButton-c9cbmb-0 jVYrA"
                          disabled={false}
                          style={
                            Object {
                              "marginLeft": 5,
                            }
                          }
                          type="submit"
                        >
                          <button
                            className="Button__StyledButton-c9cbmb-0 jVYrA btn btn-default"
                            disabled={false}
                            style={
                              Object {
                                "marginLeft": 5,
                              }
                            }
                            type="submit"
                          >
                            Filter
                          </button>
                        </Button>
                      </StyledComponent>
                    </Button__StyledButton>
                  </ForwardRef>
                  <ForwardRef
                    disabled={true}
                    onClick={[Function]}
                    style={
                      Object {
                        "marginLeft": 5,
                      }
                    }
                    type="button"
                  >
                    <Button__StyledButton
                      disabled={true}
                      onClick={[Function]}
                      style={
                        Object {
                          "marginLeft": 5,
                        }
                      }
                      type="button"
                    >
                      <StyledComponent
                        disabled={true}
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "SIZES": Array [
                              "large",
                              "small",
                              "xsmall",
                            ],
                            "STYLES": Array [
                              "success",
                              "warning",
                              "danger",
                              "info",
                              "default",
                              "primary",
                              "link",
                            ],
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Button__StyledButton-c9cbmb-0",
                              "isStatic": false,
                              "lastClassName": "jVYrA",
                              "rules": Array [
                                [Function],
                              ],
                            },
                            "displayName": "Button__StyledButton",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Button__StyledButton-c9cbmb-0",
                            "target": [Function],
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                        onClick={[Function]}
                        style={
                          Object {
                            "marginLeft": 5,
                          }
                        }
                        type="button"
                      >
                        <Button
                          active={false}
                          block={false}
                          bsClass="btn"
                          bsStyle="default"
                          className="Button__StyledButton-c9cbmb-0 jVYrA"
                          disabled={true}
                          onClick={[Function]}
                          style={
                            Object {
                              "marginLeft": 5,
                            }
                          }
                          type="button"
                        >
                          <button
                            className="Button__StyledButton-c9cbmb-0 jVYrA btn btn-default"
                            disabled={true}
                            onClick={[Function]}
                            style={
                              Object {
                                "marginLeft": 5,
                              }
                            }
                            type="button"
                          >
                            Reset
                          </button>
                        </Button>
                      </StyledComponent>
                    </Button__StyledButton>
                  </ForwardRef>
                </form>
                <ul
                  className="pill-list"
                >
                  <Component />
                </ul>
              </div>
            </TypeAheadDataFilter>
          </div>
        </Col>
        <Col
          bsClass="col"
          componentClass="div"
          md={5}
        >
          <div
            className="col-md-5"
          >
            <Pagination
              boundaryPagesRange={1}
              currentPage={1}
              disabled={false}
              hideEllipsis={false}
              hideFirstAndLastPageLinks={false}
              hidePreviousAndNextPageLinks={false}
              onChange={[Function]}
              siblingPagesRange={1}
              totalPages={0}
            />
          </div>
        </Col>
        <Col
          bsClass="col"
          className="text-right"
          componentClass="div"
          md={2}
        >
          <div
            className="text-right col-md-2"
          >
            <span>
              Show: 
              <select
                onChange={[Function]}
                value={10}
              >
                <option>
                  10
                </option>
                <option>
                  25
                </option>
                <option>
                  50
                </option>
                <option>
                  100
                </option>
              </select>
            </span>
          </div>
        </Col>
      </div>
    </Row>
    <div>
      No content packs found. Please create or upload one
    </div>
    <Row
      bsClass="row"
      className="row-sm"
      componentClass="div"
    >
      <div
        className="row-sm row"
      >
        <Col
          bsClass="col"
          componentClass="div"
          md={5}
        >
          <div
            className="col-md-5"
          />
        </Col>
        <Col
          bsClass="col"
          componentClass="div"
          md={5}
        >
          <div
            className="col-md-5"
          >
            <Pagination
              boundaryPagesRange={1}
              currentPage={1}
              disabled={false}
              hideEllipsis={false}
              hideFirstAndLastPageLinks={false}
              hidePreviousAndNextPageLinks={false}
              onChange={[Function]}
              siblingPagesRange={1}
              totalPages={0}
            />
          </div>
        </Col>
        <Col
          bsClass="col"
          className="text-right"
          componentClass="div"
          md={2}
        >
          <div
            className="text-right col-md-2"
          >
            <span>
              Show: 
              <select
                onChange={[Function]}
                value={10}
              >
                <option>
                  10
                </option>
                <option>
                  25
                </option>
                <option>
                  50
                </option>
                <option>
                  100
                </option>
              </select>
            </span>
          </div>
        </Col>
      </div>
    </Row>
  </div>
</ContentPacksList>
`;
