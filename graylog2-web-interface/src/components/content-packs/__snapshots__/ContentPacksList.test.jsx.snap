// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<ContentPacksList /> should render with content packs 1`] = `
<ContentPacksList
  contentPackMetadata={
    Object {
      "1": Object {
        "1": Object {
          "installation_count": 1,
        },
      },
      "2": Object {
        "5": Object {
          "installation_count": 2,
        },
      },
    }
  }
  contentPacks={
    Array [
      Object {
        "id": "1",
        "rev": 1,
        "summary": "Grok Patterns to extract informations from UFW logfiles",
        "title": "UFW Grok Patterns",
        "version": "1.0",
      },
      Object {
        "id": "2",
        "rev": 1,
        "summary": "Patterns to retreive rails production logs",
        "title": "Rails Log Patterns",
        "version": "2.1",
      },
      Object {
        "id": "3",
        "rev": 1,
        "summary": "",
        "title": "Backup Content Pack",
        "version": "3.0",
      },
      Object {
        "id": "4",
        "rev": 1,
        "summary": "A crypted backup over ssh.",
        "title": "SSH Archive",
        "version": "3.4",
      },
      Object {
        "id": "5",
        "rev": 1,
        "summary": "Fast but insecure backup",
        "title": "FTP Backup",
        "version": "1.0",
      },
      Object {
        "id": "6",
        "rev": 1,
        "summary": "Grok Patterns to extract informations from UFW logfiles",
        "title": "UFW Grok Patterns",
        "version": "1.0",
      },
      Object {
        "id": "7",
        "rev": 1,
        "summary": "Patterns to retreive rails production logs",
        "title": "Rails Log Patterns",
        "version": "2.1",
      },
      Object {
        "id": "8",
        "rev": 1,
        "states": Array [
          "installed",
        ],
        "summary": "",
        "title": "Backup Content Pack",
        "version": "3.0",
      },
      Object {
        "id": "9",
        "rev": 1,
        "summary": "A crypted backup over ssh.",
        "title": "SSH Archive",
        "version": "3.4",
      },
      Object {
        "id": "10",
        "rev": 1,
        "summary": "Fast but insecure backup",
        "title": "FTP Backup",
        "version": "1.0",
      },
      Object {
        "id": "11",
        "rev": 1,
        "summary": "Grok Patterns to extract informations from UFW logfiles",
        "title": "UFW Grok Patterns",
        "version": "1.0",
      },
      Object {
        "id": "12",
        "rev": 1,
        "summary": "Patterns to retreive rails production logs",
        "title": "Rails Log Patterns",
        "version": "2.1",
      },
      Object {
        "id": "13",
        "rev": 1,
        "summary": "",
        "title": "Backup Content Pack",
        "version": "3.0",
      },
      Object {
        "id": "14",
        "rev": 1,
        "summary": "A crypted backup over ssh.",
        "title": "SSH Archive",
        "version": "3.4",
      },
      Object {
        "id": "15",
        "rev": 1,
        "summary": "Fast but insecure backup",
        "title": "FTP Backup",
        "version": "1.0",
      },
    ]
  }
  onDeletePack={[Function]}
  onInstall={[Function]}
>
  <div>
    <Row
      bsClass="row"
      className="row-sm"
      componentClass="div"
    >
      <div
        className="row-sm row"
      >
        <Col
          bsClass="col"
          componentClass="div"
          md={5}
        >
          <div
            className="col-md-5"
          >
            <TypeAheadDataFilter
              data={
                Array [
                  Object {
                    "id": "1",
                    "rev": 1,
                    "summary": "Grok Patterns to extract informations from UFW logfiles",
                    "title": "UFW Grok Patterns",
                    "version": "1.0",
                  },
                  Object {
                    "id": "2",
                    "rev": 1,
                    "summary": "Patterns to retreive rails production logs",
                    "title": "Rails Log Patterns",
                    "version": "2.1",
                  },
                  Object {
                    "id": "3",
                    "rev": 1,
                    "summary": "",
                    "title": "Backup Content Pack",
                    "version": "3.0",
                  },
                  Object {
                    "id": "4",
                    "rev": 1,
                    "summary": "A crypted backup over ssh.",
                    "title": "SSH Archive",
                    "version": "3.4",
                  },
                  Object {
                    "id": "5",
                    "rev": 1,
                    "summary": "Fast but insecure backup",
                    "title": "FTP Backup",
                    "version": "1.0",
                  },
                  Object {
                    "id": "6",
                    "rev": 1,
                    "summary": "Grok Patterns to extract informations from UFW logfiles",
                    "title": "UFW Grok Patterns",
                    "version": "1.0",
                  },
                  Object {
                    "id": "7",
                    "rev": 1,
                    "summary": "Patterns to retreive rails production logs",
                    "title": "Rails Log Patterns",
                    "version": "2.1",
                  },
                  Object {
                    "id": "8",
                    "rev": 1,
                    "states": Array [
                      "installed",
                    ],
                    "summary": "",
                    "title": "Backup Content Pack",
                    "version": "3.0",
                  },
                  Object {
                    "id": "9",
                    "rev": 1,
                    "summary": "A crypted backup over ssh.",
                    "title": "SSH Archive",
                    "version": "3.4",
                  },
                  Object {
                    "id": "10",
                    "rev": 1,
                    "summary": "Fast but insecure backup",
                    "title": "FTP Backup",
                    "version": "1.0",
                  },
                  Object {
                    "id": "11",
                    "rev": 1,
                    "summary": "Grok Patterns to extract informations from UFW logfiles",
                    "title": "UFW Grok Patterns",
                    "version": "1.0",
                  },
                  Object {
                    "id": "12",
                    "rev": 1,
                    "summary": "Patterns to retreive rails production logs",
                    "title": "Rails Log Patterns",
                    "version": "2.1",
                  },
                  Object {
                    "id": "13",
                    "rev": 1,
                    "summary": "",
                    "title": "Backup Content Pack",
                    "version": "3.0",
                  },
                  Object {
                    "id": "14",
                    "rev": 1,
                    "summary": "A crypted backup over ssh.",
                    "title": "SSH Archive",
                    "version": "3.4",
                  },
                  Object {
                    "id": "15",
                    "rev": 1,
                    "summary": "Fast but insecure backup",
                    "title": "FTP Backup",
                    "version": "1.0",
                  },
                ]
              }
              displayKey="name"
              filterBy=""
              filterSuggestionAccessor=""
              filterSuggestions={Array []}
              id="content-packs-filter"
              label="Filter"
              onDataFiltered={[Function]}
              searchInKeys={
                Array [
                  "name",
                  "summary",
                ]
              }
            >
              <div
                className="filter"
              >
                <form
                  className="form-inline"
                  onSubmit={[Function]}
                  style={
                    Object {
                      "display": "inline",
                    }
                  }
                >
                  <TypeAheadInput
                    displayKey="name"
                    id="content-packs-filter"
                    label="Filter"
                    onSuggestionSelected={[Function]}
                    suggestionText="Filter by : "
                    suggestions={Array []}
                  >
                    <Input
                      addonAfter={null}
                      bsStyle={null}
                      buttonAfter={null}
                      help=""
                      id="content-packs-filter"
                      label="Filter"
                      placeholder=""
                      type="text"
                      wrapperClassName="typeahead-wrapper"
                    >
                      <Component
                        controlId="content-packs-filter"
                        validationState={null}
                      >
                        <FormGroup__StyledFormGroup
                          controlId="content-packs-filter"
                          validationState={null}
                        >
                          <StyledComponent
                            controlId="content-packs-filter"
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "SIZES": Array [
                                  "large",
                                  "small",
                                ],
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "FormGroup__StyledFormGroup-sc-1wv4cm9-0",
                                  "isStatic": false,
                                  "lastClassName": "ekazNr",
                                  "rules": Array [
                                    [Function],
                                    ";",
                                  ],
                                },
                                "displayName": "FormGroup__StyledFormGroup",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "FormGroup__StyledFormGroup-sc-1wv4cm9-0",
                                "target": [Function],
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                            validationState={null}
                          >
                            <FormGroup
                              bsClass="form-group"
                              className="FormGroup__StyledFormGroup-sc-1wv4cm9-0 ekazNr"
                              controlId="content-packs-filter"
                              validationState={null}
                            >
                              <div
                                className="FormGroup__StyledFormGroup-sc-1wv4cm9-0 ekazNr form-group"
                              >
                                <ControlLabel>
                                  <StyledComponent
                                    forwardedComponent={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "attrs": Array [],
                                        "componentStyle": ComponentStyle {
                                          "componentId": "ControlLabel-sc-1edmum5-0",
                                          "isStatic": true,
                                          "lastClassName": "iZJNbd",
                                          "rules": Array [
                                            "color:",
                                            "#1F1F1F",
                                            ";font-weight:bold;margin-bottom:5px;display:inline-block;",
                                          ],
                                        },
                                        "displayName": "ControlLabel",
                                        "foldedComponentIds": Array [],
                                        "render": [Function],
                                        "styledComponentId": "ControlLabel-sc-1edmum5-0",
                                        "target": [Function],
                                        "toString": [Function],
                                        "warnTooManyClasses": [Function],
                                        "withComponent": [Function],
                                      }
                                    }
                                    forwardedRef={null}
                                  >
                                    <ControlLabel
                                      bsClass="control-label"
                                      className="ControlLabel-sc-1edmum5-0 iZJNbd"
                                      srOnly={false}
                                    >
                                      <label
                                        className="ControlLabel-sc-1edmum5-0 iZJNbd control-label"
                                        htmlFor="content-packs-filter"
                                      >
                                        Filter
                                      </label>
                                    </ControlLabel>
                                  </StyledComponent>
                                </ControlLabel>
                                <InputWrapper
                                  className="typeahead-wrapper"
                                >
                                  <div
                                    className="typeahead-wrapper"
                                  >
                                    <FormControl
                                      componentClass="input"
                                      inputRef={[Function]}
                                      label="Filter"
                                      name="content-packs-filter"
                                      placeholder=""
                                      type="text"
                                    >
                                      <StyledComponent
                                        componentClass="input"
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "Feedback": [Function],
                                            "SIZES": Array [
                                              "small",
                                              "large",
                                            ],
                                            "Static": [Function],
                                            "attrs": Array [],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "FormControl-sc-1amoaox-0",
                                              "isStatic": true,
                                              "lastClassName": "hdNTyr",
                                              "rules": Array [
                                                "color:",
                                                "#1F1F1F",
                                                ";background-color:",
                                                "#FFF",
                                                ";border-color:",
                                                "#DCE1E5",
                                                ";&:focus{border-color:",
                                                "#6DC6E7",
                                                ";box-shadow(inset 0 1px 1px rgba(0,0,0,.075),0 0 8px ",
                                                "rgba(109,198,231,0.4)",
                                                ");}&::-moz-placeholder,&:-ms-input-placeholder,&::-webkit-input-placeholder{color:",
                                                "#b8b8b8",
                                                ";}&[disabled],&[readonly],fieldset[disabled] &{background-color:",
                                                "#DCE1E5",
                                                ";}~ .form-control-feedback.glyphicon{display:none;}",
                                              ],
                                            },
                                            "displayName": "FormControl",
                                            "foldedComponentIds": Array [],
                                            "render": [Function],
                                            "styledComponentId": "FormControl-sc-1amoaox-0",
                                            "target": [Function],
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                        inputRef={[Function]}
                                        label="Filter"
                                        name="content-packs-filter"
                                        placeholder=""
                                        type="text"
                                      >
                                        <FormControl
                                          bsClass="form-control"
                                          className="FormControl-sc-1amoaox-0 hdNTyr"
                                          componentClass="input"
                                          inputRef={[Function]}
                                          label="Filter"
                                          name="content-packs-filter"
                                          placeholder=""
                                          type="text"
                                        >
                                          <input
                                            className="FormControl-sc-1amoaox-0 hdNTyr form-control"
                                            id="content-packs-filter"
                                            label="Filter"
                                            name="content-packs-filter"
                                            placeholder=""
                                            type="text"
                                          />
                                        </FormControl>
                                      </StyledComponent>
                                    </FormControl>
                                  </div>
                                </InputWrapper>
                              </div>
                            </FormGroup>
                          </StyledComponent>
                        </FormGroup__StyledFormGroup>
                      </Component>
                    </Input>
                  </TypeAheadInput>
                  <ForwardRef
                    bsStyle="default"
                    style={
                      Object {
                        "marginLeft": 5,
                      }
                    }
                    type="submit"
                  >
                    <Button
                      bsStyle="default"
                      style={
                        Object {
                          "marginLeft": 5,
                        }
                      }
                      type="submit"
                    >
                      <StyledComponent
                        bsStyle="default"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "SIZES": Array [
                              "large",
                              "small",
                              "xsmall",
                            ],
                            "STYLES": Array [
                              "success",
                              "warning",
                              "danger",
                              "info",
                              "default",
                              "primary",
                              "link",
                            ],
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Button-c9cbmb-0",
                              "isStatic": false,
                              "lastClassName": "iKWoaE",
                              "rules": Array [
                                [Function],
                              ],
                            },
                            "displayName": "Button",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Button-c9cbmb-0",
                            "target": [Function],
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                        style={
                          Object {
                            "marginLeft": 5,
                          }
                        }
                        type="submit"
                      >
                        <Button
                          active={false}
                          block={false}
                          bsClass="btn"
                          bsStyle="default"
                          className="Button-c9cbmb-0 iKWoaE"
                          disabled={false}
                          style={
                            Object {
                              "marginLeft": 5,
                            }
                          }
                          type="submit"
                        >
                          <button
                            className="Button-c9cbmb-0 iKWoaE btn btn-default"
                            disabled={false}
                            style={
                              Object {
                                "marginLeft": 5,
                              }
                            }
                            type="submit"
                          >
                            Filter
                          </button>
                        </Button>
                      </StyledComponent>
                    </Button>
                  </ForwardRef>
                  <ForwardRef
                    bsStyle="default"
                    disabled={true}
                    onClick={[Function]}
                    style={
                      Object {
                        "marginLeft": 5,
                      }
                    }
                    type="button"
                  >
                    <Button
                      bsStyle="default"
                      disabled={true}
                      onClick={[Function]}
                      style={
                        Object {
                          "marginLeft": 5,
                        }
                      }
                      type="button"
                    >
                      <StyledComponent
                        bsStyle="default"
                        disabled={true}
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "SIZES": Array [
                              "large",
                              "small",
                              "xsmall",
                            ],
                            "STYLES": Array [
                              "success",
                              "warning",
                              "danger",
                              "info",
                              "default",
                              "primary",
                              "link",
                            ],
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Button-c9cbmb-0",
                              "isStatic": false,
                              "lastClassName": "iKWoaE",
                              "rules": Array [
                                [Function],
                              ],
                            },
                            "displayName": "Button",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Button-c9cbmb-0",
                            "target": [Function],
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                        onClick={[Function]}
                        style={
                          Object {
                            "marginLeft": 5,
                          }
                        }
                        type="button"
                      >
                        <Button
                          active={false}
                          block={false}
                          bsClass="btn"
                          bsStyle="default"
                          className="Button-c9cbmb-0 iKWoaE"
                          disabled={true}
                          onClick={[Function]}
                          style={
                            Object {
                              "marginLeft": 5,
                            }
                          }
                          type="button"
                        >
                          <button
                            className="Button-c9cbmb-0 iKWoaE btn btn-default"
                            disabled={true}
                            onClick={[Function]}
                            style={
                              Object {
                                "marginLeft": 5,
                              }
                            }
                            type="button"
                          >
                            Reset
                          </button>
                        </Button>
                      </StyledComponent>
                    </Button>
                  </ForwardRef>
                </form>
                <ul
                  className="pill-list"
                >
                  <Component />
                </ul>
              </div>
            </TypeAheadDataFilter>
          </div>
        </Col>
        <Col
          bsClass="col"
          componentClass="div"
          md={5}
        >
          <div
            className="col-md-5"
          >
            <Pagination
              activePage={1}
              bsSize="small"
              bsStyle="pagination pager"
              first={true}
              items={2}
              last={true}
              maxButtons={10}
              next={true}
              onSelect={[Function]}
              prev={true}
            >
              <StyledComponent
                activePage={1}
                bsSize="small"
                bsStyle="pagination pager"
                first={true}
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "Pagination-sc-1u3exqe-0",
                      "isStatic": true,
                      "lastClassName": "gSmbxW",
                      "rules": Array [
                        "> li{> a,> span{color:",
                        "#9E1F63",
                        ";background-color:",
                        "#FFF",
                        ";border-color:",
                        "#DCE1E5",
                        ";&:hover,&:focus{color:",
                        "#5e123b",
                        ";background-color:",
                        "#F1F2F2",
                        ";border-color:",
                        "#DCE1E5",
                        ";}}}> .active > a,> .active > span{&,&:hover,&:focus{color:",
                        "#FFF",
                        ";background-color:",
                        "#9E1F63",
                        ";border-color:",
                        "#9E1F63",
                        ";}}> .disabled{> span,> span:hover,> span:focus,> a,> a:hover,> a:focus{color:",
                        "#93a2af",
                        ";background-color:",
                        "#FFF",
                        ";border-color:",
                        "#DCE1E5",
                        ";}}",
                      ],
                    },
                    "displayName": "Pagination",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "Pagination-sc-1u3exqe-0",
                    "target": [Function],
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
                items={2}
                last={true}
                maxButtons={10}
                next={true}
                onSelect={[Function]}
                prev={true}
              >
                <Pagination
                  activePage={1}
                  boundaryLinks={false}
                  bsClass="pagination"
                  bsSize="small"
                  bsStyle="pagination pager"
                  className="Pagination-sc-1u3exqe-0 gSmbxW"
                  ellipsis={true}
                  first={true}
                  items={2}
                  last={true}
                  maxButtons={10}
                  next={true}
                  onSelect={[Function]}
                  prev={true}
                >
                  <ul
                    className="Pagination-sc-1u3exqe-0 gSmbxW pagination pagination-sm pagination-pagination pager"
                  >
                    <PaginationButton
                      active={false}
                      componentClass={[Function]}
                      disabled={true}
                      eventKey={1}
                      onSelect={[Function]}
                    >
                      <li
                        className="disabled"
                      >
                        <SafeAnchor
                          componentClass="a"
                          disabled={true}
                          onClick={[Function]}
                        >
                          <a
                            href="#"
                            onClick={[Function]}
                            onKeyDown={[Function]}
                            role="button"
                            style={
                              Object {
                                "pointerEvents": "none",
                              }
                            }
                            tabIndex={-1}
                          >
                            <span
                              aria-label="First"
                            >
                              «
                            </span>
                          </a>
                        </SafeAnchor>
                      </li>
                    </PaginationButton>
                    <PaginationButton
                      active={false}
                      componentClass={[Function]}
                      disabled={true}
                      eventKey={0}
                      onSelect={[Function]}
                    >
                      <li
                        className="disabled"
                      >
                        <SafeAnchor
                          componentClass="a"
                          disabled={true}
                          onClick={[Function]}
                        >
                          <a
                            href="#"
                            onClick={[Function]}
                            onKeyDown={[Function]}
                            role="button"
                            style={
                              Object {
                                "pointerEvents": "none",
                              }
                            }
                            tabIndex={-1}
                          >
                            <span
                              aria-label="Previous"
                            >
                              ‹
                            </span>
                          </a>
                        </SafeAnchor>
                      </li>
                    </PaginationButton>
                    <PaginationButton
                      active={true}
                      componentClass={[Function]}
                      disabled={false}
                      eventKey={1}
                      key="1"
                      onSelect={[Function]}
                    >
                      <li
                        className="active"
                      >
                        <SafeAnchor
                          componentClass="a"
                          disabled={false}
                          onClick={[Function]}
                        >
                          <a
                            href="#"
                            onClick={[Function]}
                            onKeyDown={[Function]}
                            role="button"
                          >
                            1
                          </a>
                        </SafeAnchor>
                      </li>
                    </PaginationButton>
                    <PaginationButton
                      active={false}
                      componentClass={[Function]}
                      disabled={false}
                      eventKey={2}
                      key="2"
                      onSelect={[Function]}
                    >
                      <li
                        className=""
                      >
                        <SafeAnchor
                          componentClass="a"
                          disabled={false}
                          onClick={[Function]}
                        >
                          <a
                            href="#"
                            onClick={[Function]}
                            onKeyDown={[Function]}
                            role="button"
                          >
                            2
                          </a>
                        </SafeAnchor>
                      </li>
                    </PaginationButton>
                    <PaginationButton
                      active={false}
                      componentClass={[Function]}
                      disabled={false}
                      eventKey={2}
                      onSelect={[Function]}
                    >
                      <li
                        className=""
                      >
                        <SafeAnchor
                          componentClass="a"
                          disabled={false}
                          onClick={[Function]}
                        >
                          <a
                            href="#"
                            onClick={[Function]}
                            onKeyDown={[Function]}
                            role="button"
                          >
                            <span
                              aria-label="Next"
                            >
                              ›
                            </span>
                          </a>
                        </SafeAnchor>
                      </li>
                    </PaginationButton>
                    <PaginationButton
                      active={false}
                      componentClass={[Function]}
                      disabled={false}
                      eventKey={2}
                      onSelect={[Function]}
                    >
                      <li
                        className=""
                      >
                        <SafeAnchor
                          componentClass="a"
                          disabled={false}
                          onClick={[Function]}
                        >
                          <a
                            href="#"
                            onClick={[Function]}
                            onKeyDown={[Function]}
                            role="button"
                          >
                            <span
                              aria-label="Last"
                            >
                              »
                            </span>
                          </a>
                        </SafeAnchor>
                      </li>
                    </PaginationButton>
                  </ul>
                </Pagination>
              </StyledComponent>
            </Pagination>
          </div>
        </Col>
        <Col
          bsClass="col"
          className="text-right"
          componentClass="div"
          md={2}
        >
          <div
            className="text-right col-md-2"
          >
            <span>
              Show: 
              <select
                onChange={[Function]}
                value={10}
              >
                <option>
                  10
                </option>
                <option>
                  25
                </option>
                <option>
                  50
                </option>
                <option>
                  100
                </option>
              </select>
            </span>
          </div>
        </Col>
      </div>
    </Row>
    <ControlledTableList>
      <div>
        <ListGroup
          bsClass="list-group"
        >
          <div
            className="list-group"
          >
            <ControlledTableListHeader>
              <ForwardRef
                className="listGroupHeader"
              >
                <ListGroupItem
                  className="listGroupHeader"
                >
                  <StyledComponent
                    className="listGroupHeader"
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "STYLES": Array [
                          "success",
                          "warning",
                          "danger",
                          "info",
                        ],
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "ListGroupItem-sc-1ky0joo-0",
                          "isStatic": false,
                          "lastClassName": "igGIXt",
                          "rules": Array [
                            [Function],
                          ],
                        },
                        "displayName": "ListGroupItem",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "ListGroupItem-sc-1ky0joo-0",
                        "target": [Function],
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <ListGroupItem
                      bsClass="list-group-item"
                      className="listGroupHeader ListGroupItem-sc-1ky0joo-0 igGIXt"
                      listItem={false}
                    >
                      <span
                        className="listGroupHeader ListGroupItem-sc-1ky0joo-0 igGIXt list-group-item"
                      >
                        <div
                          className="headerWrapper"
                        />
                      </span>
                    </ListGroupItem>
                  </StyledComponent>
                </ListGroupItem>
              </ForwardRef>
            </ControlledTableListHeader>
            <ControlledTableListItem
              key="1"
            >
              <ForwardRef>
                <ListGroupItem>
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "STYLES": Array [
                          "success",
                          "warning",
                          "danger",
                          "info",
                        ],
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "ListGroupItem-sc-1ky0joo-0",
                          "isStatic": false,
                          "lastClassName": "igGIXt",
                          "rules": Array [
                            [Function],
                          ],
                        },
                        "displayName": "ListGroupItem",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "ListGroupItem-sc-1ky0joo-0",
                        "target": [Function],
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <ListGroupItem
                      bsClass="list-group-item"
                      className="ListGroupItem-sc-1ky0joo-0 igGIXt"
                      listItem={false}
                    >
                      <span
                        className="ListGroupItem-sc-1ky0joo-0 igGIXt list-group-item"
                      >
                        <Row
                          bsClass="row"
                          className="row-sm"
                          componentClass="div"
                        >
                          <div
                            className="row-sm row"
                          >
                            <Col
                              bsClass="col"
                              componentClass="div"
                              md={9}
                            >
                              <div
                                className="col-md-9"
                              >
                                <h3>
                                  <Link
                                    onlyActiveOnIndex={false}
                                    style={Object {}}
                                    to="/system/contentpacks/1"
                                  >
                                    <a
                                      onClick={[Function]}
                                      style={Object {}}
                                    />
                                  </Link>
                                   
                                  <small>
                                    Latest Version: 
                                    1
                                     
                                    <ContentPackStatus
                                      contentPackId="1"
                                      states={
                                        Array [
                                          "installed",
                                        ]
                                      }
                                    >
                                      <span>
                                        <Link
                                          key="installed"
                                          onlyActiveOnIndex={false}
                                          style={Object {}}
                                          to="/system/contentpacks/1"
                                        >
                                          <a
                                            onClick={[Function]}
                                            style={Object {}}
                                          >
                                            <ForwardRef
                                              bsClass="badge installed"
                                              bsStyle="default"
                                              key="installed"
                                            >
                                              <Badge
                                                bsClass="badge installed"
                                                bsStyle="default"
                                              >
                                                <StyledComponent
                                                  bsClass="badge installed"
                                                  bsStyle="default"
                                                  forwardedComponent={
                                                    Object {
                                                      "$$typeof": Symbol(react.forward_ref),
                                                      "attrs": Array [],
                                                      "componentStyle": ComponentStyle {
                                                        "componentId": "Badge-sc-4gzqz0-0",
                                                        "isStatic": false,
                                                        "lastClassName": "cwxrQE",
                                                        "rules": Array [
                                                          [Function],
                                                        ],
                                                      },
                                                      "displayName": "Badge",
                                                      "foldedComponentIds": Array [],
                                                      "render": [Function],
                                                      "styledComponentId": "Badge-sc-4gzqz0-0",
                                                      "target": [Function],
                                                      "toString": [Function],
                                                      "warnTooManyClasses": [Function],
                                                      "withComponent": [Function],
                                                    }
                                                  }
                                                  forwardedRef={null}
                                                >
                                                  <Badge
                                                    bsClass="badge installed"
                                                    bsStyle="default"
                                                    className="Badge-sc-4gzqz0-0 cwxrQE"
                                                    pullRight={false}
                                                  >
                                                    <span
                                                      className="Badge-sc-4gzqz0-0 cwxrQE badge installed badge installed-default"
                                                    >
                                                      installed
                                                    </span>
                                                  </Badge>
                                                </StyledComponent>
                                              </Badge>
                                            </ForwardRef>
                                          </a>
                                        </Link>
                                      </span>
                                    </ContentPackStatus>
                                     
                                  </small>
                                </h3>
                              </div>
                            </Col>
                            <Col
                              bsClass="col"
                              className="text-right"
                              componentClass="div"
                              md={3}
                            >
                              <div
                                className="text-right col-md-3"
                              >
                                 
                                <ForwardRef
                                  bsSize="small"
                                  bsStyle="info"
                                  onClick={[Function]}
                                >
                                  <Button
                                    bsSize="small"
                                    bsStyle="info"
                                    onClick={[Function]}
                                  >
                                    <StyledComponent
                                      bsSize="small"
                                      bsStyle="info"
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "SIZES": Array [
                                            "large",
                                            "small",
                                            "xsmall",
                                          ],
                                          "STYLES": Array [
                                            "success",
                                            "warning",
                                            "danger",
                                            "info",
                                            "default",
                                            "primary",
                                            "link",
                                          ],
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "Button-c9cbmb-0",
                                            "isStatic": false,
                                            "lastClassName": "gZfKUo",
                                            "rules": Array [
                                              [Function],
                                            ],
                                          },
                                          "displayName": "Button",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "Button-c9cbmb-0",
                                          "target": [Function],
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                      onClick={[Function]}
                                    >
                                      <Button
                                        active={false}
                                        block={false}
                                        bsClass="btn"
                                        bsSize="small"
                                        bsStyle="info"
                                        className="Button-c9cbmb-0 gZfKUo"
                                        disabled={false}
                                        onClick={[Function]}
                                      >
                                        <button
                                          className="Button-c9cbmb-0 gZfKUo btn btn-sm btn-info"
                                          disabled={false}
                                          onClick={[Function]}
                                          type="button"
                                        >
                                          Install
                                        </button>
                                      </Button>
                                    </StyledComponent>
                                  </Button>
                                </ForwardRef>
                                <BootstrapModalWrapper
                                  backdrop="static"
                                  bsSize="large"
                                  onClose={[Function]}
                                  onHide={[Function]}
                                  onOpen={[Function]}
                                  showModal={false}
                                >
                                  <Modal
                                    backdrop="static"
                                    bsSize="large"
                                    onHide={[Function]}
                                    show={false}
                                  >
                                    <StyledComponent
                                      backdrop="static"
                                      bsSize="large"
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "BACKDROP_TRANSITION_DURATION": 150,
                                          "Body": [Function],
                                          "Dialog": [Function],
                                          "Footer": [Function],
                                          "Header": [Function],
                                          "SIZES": Array [
                                            "large",
                                            "small",
                                          ],
                                          "TRANSITION_DURATION": 300,
                                          "Title": [Function],
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "Modal-nuree8-0",
                                            "isStatic": true,
                                            "lastClassName": "cHlGak",
                                            "rules": Array [
                                              ".modal-content{background-color:",
                                              "#FFF",
                                              ";border-color:",
                                              "rgba(31,31,31,0.2)",
                                              ";.modal-header{border-bottom-color:",
                                              "#DCE1E5",
                                              ";}.modal-footer{border-top-color:",
                                              "#DCE1E5",
                                              ";}}",
                                            ],
                                          },
                                          "displayName": "Modal",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "Modal-nuree8-0",
                                          "target": [Function],
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                      onHide={[Function]}
                                      show={false}
                                    >
                                      <Modal
                                        animation={true}
                                        autoFocus={true}
                                        backdrop="static"
                                        bsClass="modal"
                                        bsSize="large"
                                        className="Modal-nuree8-0 cHlGak"
                                        dialogComponentClass={[Function]}
                                        enforceFocus={true}
                                        keyboard={true}
                                        manager={
                                          ModalManager {
                                            "add": [Function],
                                            "containers": Array [],
                                            "data": Array [],
                                            "handleContainerOverflow": true,
                                            "hideSiblingNodes": true,
                                            "isTopModal": [Function],
                                            "modals": Array [],
                                            "remove": [Function],
                                          }
                                        }
                                        onHide={[Function]}
                                        renderBackdrop={[Function]}
                                        restoreFocus={true}
                                        show={false}
                                      >
                                        <Modal
                                          autoFocus={true}
                                          backdrop="static"
                                          backdropClassName="modal-backdrop"
                                          backdropTransitionTimeout={150}
                                          containerClassName="modal-open"
                                          dialogTransitionTimeout={300}
                                          enforceFocus={true}
                                          keyboard={true}
                                          manager={
                                            ModalManager {
                                              "add": [Function],
                                              "containers": Array [],
                                              "data": Array [],
                                              "handleContainerOverflow": true,
                                              "hideSiblingNodes": true,
                                              "isTopModal": [Function],
                                              "modals": Array [],
                                              "remove": [Function],
                                            }
                                          }
                                          onEntering={[Function]}
                                          onExited={[Function]}
                                          onHide={[Function]}
                                          renderBackdrop={[Function]}
                                          restoreFocus={true}
                                          show={false}
                                          transition={[Function]}
                                        />
                                      </Modal>
                                    </StyledComponent>
                                  </Modal>
                                </BootstrapModalWrapper>
                                 
                                <DropdownButton
                                  bsSize="small"
                                  id="more-actions-1"
                                  pullRight={true}
                                  title="More Actions"
                                >
                                  <StyledComponent
                                    bsSize="small"
                                    forwardedComponent={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "attrs": Array [],
                                        "componentStyle": ComponentStyle {
                                          "componentId": "DropdownButton-sc-1343dcx-0",
                                          "isStatic": false,
                                          "lastClassName": "jgZJTb",
                                          "rules": Array [
                                            [Function],
                                            ";",
                                            "& ~",
                                            " .dropdown-menu{> li > a{color:",
                                            "#1F1F1F",
                                            ";:hover,:focus{color:",
                                            "#484848",
                                            ";background-color:",
                                            "#F1F2F2",
                                            ";}}> .active > a{background-color:",
                                            "#6DC6E7",
                                            ";color:",
                                            "#f7fcfd",
                                            ";:hover,:focus{background-color:",
                                            "#16ACE3",
                                            ";color:",
                                            "#f3fafd",
                                            ";}}> .disabled > a{color:",
                                            "#8f8f8f",
                                            ";:hover,:focus{background-color:",
                                            "#F1F2F2",
                                            ";color:",
                                            "#b0b0b0",
                                            ";}}}",
                                            ";",
                                          ],
                                        },
                                        "displayName": "DropdownButton",
                                        "foldedComponentIds": Array [],
                                        "render": [Function],
                                        "styledComponentId": "DropdownButton-sc-1343dcx-0",
                                        "target": [Function],
                                        "toString": [Function],
                                        "warnTooManyClasses": [Function],
                                        "withComponent": [Function],
                                      }
                                    }
                                    forwardedRef={null}
                                    id="more-actions-1"
                                    pullRight={true}
                                    title="More Actions"
                                  >
                                    <DropdownButton
                                      bsSize="small"
                                      className="DropdownButton-sc-1343dcx-0 jgZJTb"
                                      id="more-actions-1"
                                      pullRight={true}
                                      title="More Actions"
                                    >
                                      <Uncontrolled(Dropdown)
                                        bsSize="small"
                                        id="more-actions-1"
                                        pullRight={true}
                                      >
                                        <Dropdown
                                          bsClass="dropdown"
                                          bsSize="small"
                                          componentClass={[Function]}
                                          id="more-actions-1"
                                          onToggle={[Function]}
                                          pullRight={true}
                                        >
                                          <ButtonGroup
                                            block={false}
                                            bsClass="btn-group"
                                            bsSize="small"
                                            className="dropdown"
                                            justified={false}
                                            vertical={false}
                                          >
                                            <div
                                              className="dropdown btn-group btn-group-sm"
                                            >
                                              <DropdownToggle
                                                bsClass="dropdown-toggle"
                                                bsRole="toggle"
                                                bsSize="small"
                                                className="DropdownButton-sc-1343dcx-0 jgZJTb"
                                                id="more-actions-1"
                                                key=".0"
                                                onClick={[Function]}
                                                onKeyDown={[Function]}
                                                open={false}
                                                useAnchor={false}
                                              >
                                                <Button
                                                  active={false}
                                                  aria-expanded={false}
                                                  aria-haspopup={true}
                                                  block={false}
                                                  bsClass="btn"
                                                  bsSize="small"
                                                  bsStyle="default"
                                                  className="DropdownButton-sc-1343dcx-0 jgZJTb dropdown-toggle"
                                                  disabled={false}
                                                  id="more-actions-1"
                                                  onClick={[Function]}
                                                  onKeyDown={[Function]}
                                                  role="button"
                                                >
                                                  <button
                                                    aria-expanded={false}
                                                    aria-haspopup={true}
                                                    className="DropdownButton-sc-1343dcx-0 jgZJTb dropdown-toggle btn btn-sm btn-default"
                                                    disabled={false}
                                                    id="more-actions-1"
                                                    onClick={[Function]}
                                                    onKeyDown={[Function]}
                                                    role="button"
                                                    type="button"
                                                  >
                                                    More Actions
                                                     
                                                    <span
                                                      className="caret"
                                                    />
                                                  </button>
                                                </Button>
                                              </DropdownToggle>
                                              <DropdownMenu
                                                bsClass="dropdown-menu"
                                                bsRole="menu"
                                                key=".1"
                                                labelledBy="more-actions-1"
                                                onClose={[Function]}
                                                onSelect={[Function]}
                                                pullRight={true}
                                              >
                                                <RootCloseWrapper
                                                  disabled={true}
                                                  event="click"
                                                  onRootClose={[Function]}
                                                >
                                                  <ul
                                                    aria-labelledby="more-actions-1"
                                                    className="dropdown-menu dropdown-menu-right"
                                                    role="menu"
                                                  >
                                                    <LinkContainer
                                                      action="push"
                                                      key=".0"
                                                      onKeyDown={[Function]}
                                                      onSelect={[Function]}
                                                      onlyActiveOnIndex={false}
                                                      to="/system/contentpacks/1"
                                                    >
                                                      <MenuItem
                                                        action="push"
                                                        bsClass="dropdown"
                                                        disabled={false}
                                                        divider={false}
                                                        header={false}
                                                        onClick={[Function]}
                                                        onKeyDown={[Function]}
                                                        onSelect={[Function]}
                                                      >
                                                        <li
                                                          className=""
                                                          role="presentation"
                                                        >
                                                          <SafeAnchor
                                                            action="push"
                                                            componentClass="a"
                                                            onClick={[Function]}
                                                            onKeyDown={[Function]}
                                                            role="menuitem"
                                                            tabIndex="-1"
                                                          >
                                                            <a
                                                              action="push"
                                                              href="#"
                                                              onClick={[Function]}
                                                              onKeyDown={[Function]}
                                                              role="menuitem"
                                                              tabIndex="-1"
                                                            >
                                                              Show
                                                            </a>
                                                          </SafeAnchor>
                                                        </li>
                                                      </MenuItem>
                                                    </LinkContainer>
                                                    <LinkContainer
                                                      action="push"
                                                      key=".1"
                                                      onKeyDown={[Function]}
                                                      onSelect={[Function]}
                                                      onlyActiveOnIndex={false}
                                                      to="/system/contentpacks/1/1/edit"
                                                    >
                                                      <MenuItem
                                                        action="push"
                                                        bsClass="dropdown"
                                                        disabled={false}
                                                        divider={false}
                                                        header={false}
                                                        onClick={[Function]}
                                                        onKeyDown={[Function]}
                                                        onSelect={[Function]}
                                                      >
                                                        <li
                                                          className=""
                                                          role="presentation"
                                                        >
                                                          <SafeAnchor
                                                            action="push"
                                                            componentClass="a"
                                                            onClick={[Function]}
                                                            onKeyDown={[Function]}
                                                            role="menuitem"
                                                            tabIndex="-1"
                                                          >
                                                            <a
                                                              action="push"
                                                              href="#"
                                                              onClick={[Function]}
                                                              onKeyDown={[Function]}
                                                              role="menuitem"
                                                              tabIndex="-1"
                                                            >
                                                              Create New Version
                                                            </a>
                                                          </SafeAnchor>
                                                        </li>
                                                      </MenuItem>
                                                    </LinkContainer>
                                                    <MenuItem
                                                      bsClass="dropdown"
                                                      disabled={false}
                                                      divider={false}
                                                      header={false}
                                                      key=".2"
                                                      onKeyDown={[Function]}
                                                      onSelect={[Function]}
                                                    >
                                                      <li
                                                        className=""
                                                        role="presentation"
                                                      >
                                                        <SafeAnchor
                                                          componentClass="a"
                                                          onClick={[Function]}
                                                          onKeyDown={[Function]}
                                                          role="menuitem"
                                                          tabIndex="-1"
                                                        >
                                                          <a
                                                            href="#"
                                                            onClick={[Function]}
                                                            onKeyDown={[Function]}
                                                            role="menuitem"
                                                            tabIndex="-1"
                                                          >
                                                            Download
                                                          </a>
                                                        </SafeAnchor>
                                                      </li>
                                                    </MenuItem>
                                                    <MenuItem
                                                      bsClass="dropdown"
                                                      disabled={false}
                                                      divider={true}
                                                      header={false}
                                                      key=".3"
                                                      onKeyDown={[Function]}
                                                      onSelect={[Function]}
                                                    >
                                                      <li
                                                        className="divider"
                                                        onKeyDown={[Function]}
                                                        role="separator"
                                                      />
                                                    </MenuItem>
                                                    <MenuItem
                                                      bsClass="dropdown"
                                                      disabled={false}
                                                      divider={false}
                                                      header={false}
                                                      key=".4"
                                                      onKeyDown={[Function]}
                                                      onSelect={[Function]}
                                                    >
                                                      <li
                                                        className=""
                                                        role="presentation"
                                                      >
                                                        <SafeAnchor
                                                          componentClass="a"
                                                          onClick={[Function]}
                                                          onKeyDown={[Function]}
                                                          role="menuitem"
                                                          tabIndex="-1"
                                                        >
                                                          <a
                                                            href="#"
                                                            onClick={[Function]}
                                                            onKeyDown={[Function]}
                                                            role="menuitem"
                                                            tabIndex="-1"
                                                          >
                                                            Delete All Versions
                                                          </a>
                                                        </SafeAnchor>
                                                      </li>
                                                    </MenuItem>
                                                  </ul>
                                                </RootCloseWrapper>
                                              </DropdownMenu>
                                            </div>
                                          </ButtonGroup>
                                        </Dropdown>
                                      </Uncontrolled(Dropdown)>
                                    </DropdownButton>
                                  </StyledComponent>
                                </DropdownButton>
                                <ContentPackDownloadControl
                                  contentPackId="1"
                                  revision={1}
                                >
                                  <BootstrapModalWrapper
                                    backdrop="static"
                                    bsSize="large"
                                    onClose={[Function]}
                                    onHide={[Function]}
                                    onOpen={[Function]}
                                    showModal={false}
                                  >
                                    <Modal
                                      backdrop="static"
                                      bsSize="large"
                                      onHide={[Function]}
                                      show={false}
                                    >
                                      <StyledComponent
                                        backdrop="static"
                                        bsSize="large"
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "BACKDROP_TRANSITION_DURATION": 150,
                                            "Body": [Function],
                                            "Dialog": [Function],
                                            "Footer": [Function],
                                            "Header": [Function],
                                            "SIZES": Array [
                                              "large",
                                              "small",
                                            ],
                                            "TRANSITION_DURATION": 300,
                                            "Title": [Function],
                                            "attrs": Array [],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "Modal-nuree8-0",
                                              "isStatic": true,
                                              "lastClassName": "cHlGak",
                                              "rules": Array [
                                                ".modal-content{background-color:",
                                                "#FFF",
                                                ";border-color:",
                                                "rgba(31,31,31,0.2)",
                                                ";.modal-header{border-bottom-color:",
                                                "#DCE1E5",
                                                ";}.modal-footer{border-top-color:",
                                                "#DCE1E5",
                                                ";}}",
                                              ],
                                            },
                                            "displayName": "Modal",
                                            "foldedComponentIds": Array [],
                                            "render": [Function],
                                            "styledComponentId": "Modal-nuree8-0",
                                            "target": [Function],
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                        onHide={[Function]}
                                        show={false}
                                      >
                                        <Modal
                                          animation={true}
                                          autoFocus={true}
                                          backdrop="static"
                                          bsClass="modal"
                                          bsSize="large"
                                          className="Modal-nuree8-0 cHlGak"
                                          dialogComponentClass={[Function]}
                                          enforceFocus={true}
                                          keyboard={true}
                                          manager={
                                            ModalManager {
                                              "add": [Function],
                                              "containers": Array [],
                                              "data": Array [],
                                              "handleContainerOverflow": true,
                                              "hideSiblingNodes": true,
                                              "isTopModal": [Function],
                                              "modals": Array [],
                                              "remove": [Function],
                                            }
                                          }
                                          onHide={[Function]}
                                          renderBackdrop={[Function]}
                                          restoreFocus={true}
                                          show={false}
                                        >
                                          <Modal
                                            autoFocus={true}
                                            backdrop="static"
                                            backdropClassName="modal-backdrop"
                                            backdropTransitionTimeout={150}
                                            containerClassName="modal-open"
                                            dialogTransitionTimeout={300}
                                            enforceFocus={true}
                                            keyboard={true}
                                            manager={
                                              ModalManager {
                                                "add": [Function],
                                                "containers": Array [],
                                                "data": Array [],
                                                "handleContainerOverflow": true,
                                                "hideSiblingNodes": true,
                                                "isTopModal": [Function],
                                                "modals": Array [],
                                                "remove": [Function],
                                              }
                                            }
                                            onEntering={[Function]}
                                            onExited={[Function]}
                                            onHide={[Function]}
                                            renderBackdrop={[Function]}
                                            restoreFocus={true}
                                            show={false}
                                            transition={[Function]}
                                          />
                                        </Modal>
                                      </StyledComponent>
                                    </Modal>
                                  </BootstrapModalWrapper>
                                </ContentPackDownloadControl>
                              </div>
                            </Col>
                          </div>
                        </Row>
                        <Row
                          bsClass="row"
                          className="row-sm content-packs-summary"
                          componentClass="div"
                        >
                          <div
                            className="row-sm content-packs-summary row"
                          >
                            <Col
                              bsClass="col"
                              componentClass="div"
                              md={12}
                            >
                              <div
                                className="col-md-12"
                              >
                                Grok Patterns to extract informations from UFW logfiles
                                 
                              </div>
                            </Col>
                          </div>
                        </Row>
                      </span>
                    </ListGroupItem>
                  </StyledComponent>
                </ListGroupItem>
              </ForwardRef>
            </ControlledTableListItem>
            <ControlledTableListItem
              key="2"
            >
              <ForwardRef>
                <ListGroupItem>
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "STYLES": Array [
                          "success",
                          "warning",
                          "danger",
                          "info",
                        ],
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "ListGroupItem-sc-1ky0joo-0",
                          "isStatic": false,
                          "lastClassName": "igGIXt",
                          "rules": Array [
                            [Function],
                          ],
                        },
                        "displayName": "ListGroupItem",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "ListGroupItem-sc-1ky0joo-0",
                        "target": [Function],
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <ListGroupItem
                      bsClass="list-group-item"
                      className="ListGroupItem-sc-1ky0joo-0 igGIXt"
                      listItem={false}
                    >
                      <span
                        className="ListGroupItem-sc-1ky0joo-0 igGIXt list-group-item"
                      >
                        <Row
                          bsClass="row"
                          className="row-sm"
                          componentClass="div"
                        >
                          <div
                            className="row-sm row"
                          >
                            <Col
                              bsClass="col"
                              componentClass="div"
                              md={9}
                            >
                              <div
                                className="col-md-9"
                              >
                                <h3>
                                  <Link
                                    onlyActiveOnIndex={false}
                                    style={Object {}}
                                    to="/system/contentpacks/2"
                                  >
                                    <a
                                      onClick={[Function]}
                                      style={Object {}}
                                    />
                                  </Link>
                                   
                                  <small>
                                    Latest Version: 
                                    1
                                     
                                    <ContentPackStatus
                                      contentPackId="2"
                                      states={
                                        Array [
                                          "installed",
                                        ]
                                      }
                                    >
                                      <span>
                                        <Link
                                          key="installed"
                                          onlyActiveOnIndex={false}
                                          style={Object {}}
                                          to="/system/contentpacks/2"
                                        >
                                          <a
                                            onClick={[Function]}
                                            style={Object {}}
                                          >
                                            <ForwardRef
                                              bsClass="badge installed"
                                              bsStyle="default"
                                              key="installed"
                                            >
                                              <Badge
                                                bsClass="badge installed"
                                                bsStyle="default"
                                              >
                                                <StyledComponent
                                                  bsClass="badge installed"
                                                  bsStyle="default"
                                                  forwardedComponent={
                                                    Object {
                                                      "$$typeof": Symbol(react.forward_ref),
                                                      "attrs": Array [],
                                                      "componentStyle": ComponentStyle {
                                                        "componentId": "Badge-sc-4gzqz0-0",
                                                        "isStatic": false,
                                                        "lastClassName": "cwxrQE",
                                                        "rules": Array [
                                                          [Function],
                                                        ],
                                                      },
                                                      "displayName": "Badge",
                                                      "foldedComponentIds": Array [],
                                                      "render": [Function],
                                                      "styledComponentId": "Badge-sc-4gzqz0-0",
                                                      "target": [Function],
                                                      "toString": [Function],
                                                      "warnTooManyClasses": [Function],
                                                      "withComponent": [Function],
                                                    }
                                                  }
                                                  forwardedRef={null}
                                                >
                                                  <Badge
                                                    bsClass="badge installed"
                                                    bsStyle="default"
                                                    className="Badge-sc-4gzqz0-0 cwxrQE"
                                                    pullRight={false}
                                                  >
                                                    <span
                                                      className="Badge-sc-4gzqz0-0 cwxrQE badge installed badge installed-default"
                                                    >
                                                      installed
                                                    </span>
                                                  </Badge>
                                                </StyledComponent>
                                              </Badge>
                                            </ForwardRef>
                                          </a>
                                        </Link>
                                      </span>
                                    </ContentPackStatus>
                                     
                                  </small>
                                </h3>
                              </div>
                            </Col>
                            <Col
                              bsClass="col"
                              className="text-right"
                              componentClass="div"
                              md={3}
                            >
                              <div
                                className="text-right col-md-3"
                              >
                                 
                                <ForwardRef
                                  bsSize="small"
                                  bsStyle="info"
                                  onClick={[Function]}
                                >
                                  <Button
                                    bsSize="small"
                                    bsStyle="info"
                                    onClick={[Function]}
                                  >
                                    <StyledComponent
                                      bsSize="small"
                                      bsStyle="info"
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "SIZES": Array [
                                            "large",
                                            "small",
                                            "xsmall",
                                          ],
                                          "STYLES": Array [
                                            "success",
                                            "warning",
                                            "danger",
                                            "info",
                                            "default",
                                            "primary",
                                            "link",
                                          ],
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "Button-c9cbmb-0",
                                            "isStatic": false,
                                            "lastClassName": "gZfKUo",
                                            "rules": Array [
                                              [Function],
                                            ],
                                          },
                                          "displayName": "Button",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "Button-c9cbmb-0",
                                          "target": [Function],
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                      onClick={[Function]}
                                    >
                                      <Button
                                        active={false}
                                        block={false}
                                        bsClass="btn"
                                        bsSize="small"
                                        bsStyle="info"
                                        className="Button-c9cbmb-0 gZfKUo"
                                        disabled={false}
                                        onClick={[Function]}
                                      >
                                        <button
                                          className="Button-c9cbmb-0 gZfKUo btn btn-sm btn-info"
                                          disabled={false}
                                          onClick={[Function]}
                                          type="button"
                                        >
                                          Install
                                        </button>
                                      </Button>
                                    </StyledComponent>
                                  </Button>
                                </ForwardRef>
                                <BootstrapModalWrapper
                                  backdrop="static"
                                  bsSize="large"
                                  onClose={[Function]}
                                  onHide={[Function]}
                                  onOpen={[Function]}
                                  showModal={false}
                                >
                                  <Modal
                                    backdrop="static"
                                    bsSize="large"
                                    onHide={[Function]}
                                    show={false}
                                  >
                                    <StyledComponent
                                      backdrop="static"
                                      bsSize="large"
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "BACKDROP_TRANSITION_DURATION": 150,
                                          "Body": [Function],
                                          "Dialog": [Function],
                                          "Footer": [Function],
                                          "Header": [Function],
                                          "SIZES": Array [
                                            "large",
                                            "small",
                                          ],
                                          "TRANSITION_DURATION": 300,
                                          "Title": [Function],
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "Modal-nuree8-0",
                                            "isStatic": true,
                                            "lastClassName": "cHlGak",
                                            "rules": Array [
                                              ".modal-content{background-color:",
                                              "#FFF",
                                              ";border-color:",
                                              "rgba(31,31,31,0.2)",
                                              ";.modal-header{border-bottom-color:",
                                              "#DCE1E5",
                                              ";}.modal-footer{border-top-color:",
                                              "#DCE1E5",
                                              ";}}",
                                            ],
                                          },
                                          "displayName": "Modal",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "Modal-nuree8-0",
                                          "target": [Function],
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                      onHide={[Function]}
                                      show={false}
                                    >
                                      <Modal
                                        animation={true}
                                        autoFocus={true}
                                        backdrop="static"
                                        bsClass="modal"
                                        bsSize="large"
                                        className="Modal-nuree8-0 cHlGak"
                                        dialogComponentClass={[Function]}
                                        enforceFocus={true}
                                        keyboard={true}
                                        manager={
                                          ModalManager {
                                            "add": [Function],
                                            "containers": Array [],
                                            "data": Array [],
                                            "handleContainerOverflow": true,
                                            "hideSiblingNodes": true,
                                            "isTopModal": [Function],
                                            "modals": Array [],
                                            "remove": [Function],
                                          }
                                        }
                                        onHide={[Function]}
                                        renderBackdrop={[Function]}
                                        restoreFocus={true}
                                        show={false}
                                      >
                                        <Modal
                                          autoFocus={true}
                                          backdrop="static"
                                          backdropClassName="modal-backdrop"
                                          backdropTransitionTimeout={150}
                                          containerClassName="modal-open"
                                          dialogTransitionTimeout={300}
                                          enforceFocus={true}
                                          keyboard={true}
                                          manager={
                                            ModalManager {
                                              "add": [Function],
                                              "containers": Array [],
                                              "data": Array [],
                                              "handleContainerOverflow": true,
                                              "hideSiblingNodes": true,
                                              "isTopModal": [Function],
                                              "modals": Array [],
                                              "remove": [Function],
                                            }
                                          }
                                          onEntering={[Function]}
                                          onExited={[Function]}
                                          onHide={[Function]}
                                          renderBackdrop={[Function]}
                                          restoreFocus={true}
                                          show={false}
                                          transition={[Function]}
                                        />
                                      </Modal>
                                    </StyledComponent>
                                  </Modal>
                                </BootstrapModalWrapper>
                                 
                                <DropdownButton
                                  bsSize="small"
                                  id="more-actions-2"
                                  pullRight={true}
                                  title="More Actions"
                                >
                                  <StyledComponent
                                    bsSize="small"
                                    forwardedComponent={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "attrs": Array [],
                                        "componentStyle": ComponentStyle {
                                          "componentId": "DropdownButton-sc-1343dcx-0",
                                          "isStatic": false,
                                          "lastClassName": "jgZJTb",
                                          "rules": Array [
                                            [Function],
                                            ";",
                                            "& ~",
                                            " .dropdown-menu{> li > a{color:",
                                            "#1F1F1F",
                                            ";:hover,:focus{color:",
                                            "#484848",
                                            ";background-color:",
                                            "#F1F2F2",
                                            ";}}> .active > a{background-color:",
                                            "#6DC6E7",
                                            ";color:",
                                            "#f7fcfd",
                                            ";:hover,:focus{background-color:",
                                            "#16ACE3",
                                            ";color:",
                                            "#f3fafd",
                                            ";}}> .disabled > a{color:",
                                            "#8f8f8f",
                                            ";:hover,:focus{background-color:",
                                            "#F1F2F2",
                                            ";color:",
                                            "#b0b0b0",
                                            ";}}}",
                                            ";",
                                          ],
                                        },
                                        "displayName": "DropdownButton",
                                        "foldedComponentIds": Array [],
                                        "render": [Function],
                                        "styledComponentId": "DropdownButton-sc-1343dcx-0",
                                        "target": [Function],
                                        "toString": [Function],
                                        "warnTooManyClasses": [Function],
                                        "withComponent": [Function],
                                      }
                                    }
                                    forwardedRef={null}
                                    id="more-actions-2"
                                    pullRight={true}
                                    title="More Actions"
                                  >
                                    <DropdownButton
                                      bsSize="small"
                                      className="DropdownButton-sc-1343dcx-0 jgZJTb"
                                      id="more-actions-2"
                                      pullRight={true}
                                      title="More Actions"
                                    >
                                      <Uncontrolled(Dropdown)
                                        bsSize="small"
                                        id="more-actions-2"
                                        pullRight={true}
                                      >
                                        <Dropdown
                                          bsClass="dropdown"
                                          bsSize="small"
                                          componentClass={[Function]}
                                          id="more-actions-2"
                                          onToggle={[Function]}
                                          pullRight={true}
                                        >
                                          <ButtonGroup
                                            block={false}
                                            bsClass="btn-group"
                                            bsSize="small"
                                            className="dropdown"
                                            justified={false}
                                            vertical={false}
                                          >
                                            <div
                                              className="dropdown btn-group btn-group-sm"
                                            >
                                              <DropdownToggle
                                                bsClass="dropdown-toggle"
                                                bsRole="toggle"
                                                bsSize="small"
                                                className="DropdownButton-sc-1343dcx-0 jgZJTb"
                                                id="more-actions-2"
                                                key=".0"
                                                onClick={[Function]}
                                                onKeyDown={[Function]}
                                                open={false}
                                                useAnchor={false}
                                              >
                                                <Button
                                                  active={false}
                                                  aria-expanded={false}
                                                  aria-haspopup={true}
                                                  block={false}
                                                  bsClass="btn"
                                                  bsSize="small"
                                                  bsStyle="default"
                                                  className="DropdownButton-sc-1343dcx-0 jgZJTb dropdown-toggle"
                                                  disabled={false}
                                                  id="more-actions-2"
                                                  onClick={[Function]}
                                                  onKeyDown={[Function]}
                                                  role="button"
                                                >
                                                  <button
                                                    aria-expanded={false}
                                                    aria-haspopup={true}
                                                    className="DropdownButton-sc-1343dcx-0 jgZJTb dropdown-toggle btn btn-sm btn-default"
                                                    disabled={false}
                                                    id="more-actions-2"
                                                    onClick={[Function]}
                                                    onKeyDown={[Function]}
                                                    role="button"
                                                    type="button"
                                                  >
                                                    More Actions
                                                     
                                                    <span
                                                      className="caret"
                                                    />
                                                  </button>
                                                </Button>
                                              </DropdownToggle>
                                              <DropdownMenu
                                                bsClass="dropdown-menu"
                                                bsRole="menu"
                                                key=".1"
                                                labelledBy="more-actions-2"
                                                onClose={[Function]}
                                                onSelect={[Function]}
                                                pullRight={true}
                                              >
                                                <RootCloseWrapper
                                                  disabled={true}
                                                  event="click"
                                                  onRootClose={[Function]}
                                                >
                                                  <ul
                                                    aria-labelledby="more-actions-2"
                                                    className="dropdown-menu dropdown-menu-right"
                                                    role="menu"
                                                  >
                                                    <LinkContainer
                                                      action="push"
                                                      key=".0"
                                                      onKeyDown={[Function]}
                                                      onSelect={[Function]}
                                                      onlyActiveOnIndex={false}
                                                      to="/system/contentpacks/2"
                                                    >
                                                      <MenuItem
                                                        action="push"
                                                        bsClass="dropdown"
                                                        disabled={false}
                                                        divider={false}
                                                        header={false}
                                                        onClick={[Function]}
                                                        onKeyDown={[Function]}
                                                        onSelect={[Function]}
                                                      >
                                                        <li
                                                          className=""
                                                          role="presentation"
                                                        >
                                                          <SafeAnchor
                                                            action="push"
                                                            componentClass="a"
                                                            onClick={[Function]}
                                                            onKeyDown={[Function]}
                                                            role="menuitem"
                                                            tabIndex="-1"
                                                          >
                                                            <a
                                                              action="push"
                                                              href="#"
                                                              onClick={[Function]}
                                                              onKeyDown={[Function]}
                                                              role="menuitem"
                                                              tabIndex="-1"
                                                            >
                                                              Show
                                                            </a>
                                                          </SafeAnchor>
                                                        </li>
                                                      </MenuItem>
                                                    </LinkContainer>
                                                    <LinkContainer
                                                      action="push"
                                                      key=".1"
                                                      onKeyDown={[Function]}
                                                      onSelect={[Function]}
                                                      onlyActiveOnIndex={false}
                                                      to="/system/contentpacks/2/1/edit"
                                                    >
                                                      <MenuItem
                                                        action="push"
                                                        bsClass="dropdown"
                                                        disabled={false}
                                                        divider={false}
                                                        header={false}
                                                        onClick={[Function]}
                                                        onKeyDown={[Function]}
                                                        onSelect={[Function]}
                                                      >
                                                        <li
                                                          className=""
                                                          role="presentation"
                                                        >
                                                          <SafeAnchor
                                                            action="push"
                                                            componentClass="a"
                                                            onClick={[Function]}
                                                            onKeyDown={[Function]}
                                                            role="menuitem"
                                                            tabIndex="-1"
                                                          >
                                                            <a
                                                              action="push"
                                                              href="#"
                                                              onClick={[Function]}
                                                              onKeyDown={[Function]}
                                                              role="menuitem"
                                                              tabIndex="-1"
                                                            >
                                                              Create New Version
                                                            </a>
                                                          </SafeAnchor>
                                                        </li>
                                                      </MenuItem>
                                                    </LinkContainer>
                                                    <MenuItem
                                                      bsClass="dropdown"
                                                      disabled={false}
                                                      divider={false}
                                                      header={false}
                                                      key=".2"
                                                      onKeyDown={[Function]}
                                                      onSelect={[Function]}
                                                    >
                                                      <li
                                                        className=""
                                                        role="presentation"
                                                      >
                                                        <SafeAnchor
                                                          componentClass="a"
                                                          onClick={[Function]}
                                                          onKeyDown={[Function]}
                                                          role="menuitem"
                                                          tabIndex="-1"
                                                        >
                                                          <a
                                                            href="#"
                                                            onClick={[Function]}
                                                            onKeyDown={[Function]}
                                                            role="menuitem"
                                                            tabIndex="-1"
                                                          >
                                                            Download
                                                          </a>
                                                        </SafeAnchor>
                                                      </li>
                                                    </MenuItem>
                                                    <MenuItem
                                                      bsClass="dropdown"
                                                      disabled={false}
                                                      divider={true}
                                                      header={false}
                                                      key=".3"
                                                      onKeyDown={[Function]}
                                                      onSelect={[Function]}
                                                    >
                                                      <li
                                                        className="divider"
                                                        onKeyDown={[Function]}
                                                        role="separator"
                                                      />
                                                    </MenuItem>
                                                    <MenuItem
                                                      bsClass="dropdown"
                                                      disabled={false}
                                                      divider={false}
                                                      header={false}
                                                      key=".4"
                                                      onKeyDown={[Function]}
                                                      onSelect={[Function]}
                                                    >
                                                      <li
                                                        className=""
                                                        role="presentation"
                                                      >
                                                        <SafeAnchor
                                                          componentClass="a"
                                                          onClick={[Function]}
                                                          onKeyDown={[Function]}
                                                          role="menuitem"
                                                          tabIndex="-1"
                                                        >
                                                          <a
                                                            href="#"
                                                            onClick={[Function]}
                                                            onKeyDown={[Function]}
                                                            role="menuitem"
                                                            tabIndex="-1"
                                                          >
                                                            Delete All Versions
                                                          </a>
                                                        </SafeAnchor>
                                                      </li>
                                                    </MenuItem>
                                                  </ul>
                                                </RootCloseWrapper>
                                              </DropdownMenu>
                                            </div>
                                          </ButtonGroup>
                                        </Dropdown>
                                      </Uncontrolled(Dropdown)>
                                    </DropdownButton>
                                  </StyledComponent>
                                </DropdownButton>
                                <ContentPackDownloadControl
                                  contentPackId="2"
                                  revision={1}
                                >
                                  <BootstrapModalWrapper
                                    backdrop="static"
                                    bsSize="large"
                                    onClose={[Function]}
                                    onHide={[Function]}
                                    onOpen={[Function]}
                                    showModal={false}
                                  >
                                    <Modal
                                      backdrop="static"
                                      bsSize="large"
                                      onHide={[Function]}
                                      show={false}
                                    >
                                      <StyledComponent
                                        backdrop="static"
                                        bsSize="large"
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "BACKDROP_TRANSITION_DURATION": 150,
                                            "Body": [Function],
                                            "Dialog": [Function],
                                            "Footer": [Function],
                                            "Header": [Function],
                                            "SIZES": Array [
                                              "large",
                                              "small",
                                            ],
                                            "TRANSITION_DURATION": 300,
                                            "Title": [Function],
                                            "attrs": Array [],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "Modal-nuree8-0",
                                              "isStatic": true,
                                              "lastClassName": "cHlGak",
                                              "rules": Array [
                                                ".modal-content{background-color:",
                                                "#FFF",
                                                ";border-color:",
                                                "rgba(31,31,31,0.2)",
                                                ";.modal-header{border-bottom-color:",
                                                "#DCE1E5",
                                                ";}.modal-footer{border-top-color:",
                                                "#DCE1E5",
                                                ";}}",
                                              ],
                                            },
                                            "displayName": "Modal",
                                            "foldedComponentIds": Array [],
                                            "render": [Function],
                                            "styledComponentId": "Modal-nuree8-0",
                                            "target": [Function],
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                        onHide={[Function]}
                                        show={false}
                                      >
                                        <Modal
                                          animation={true}
                                          autoFocus={true}
                                          backdrop="static"
                                          bsClass="modal"
                                          bsSize="large"
                                          className="Modal-nuree8-0 cHlGak"
                                          dialogComponentClass={[Function]}
                                          enforceFocus={true}
                                          keyboard={true}
                                          manager={
                                            ModalManager {
                                              "add": [Function],
                                              "containers": Array [],
                                              "data": Array [],
                                              "handleContainerOverflow": true,
                                              "hideSiblingNodes": true,
                                              "isTopModal": [Function],
                                              "modals": Array [],
                                              "remove": [Function],
                                            }
                                          }
                                          onHide={[Function]}
                                          renderBackdrop={[Function]}
                                          restoreFocus={true}
                                          show={false}
                                        >
                                          <Modal
                                            autoFocus={true}
                                            backdrop="static"
                                            backdropClassName="modal-backdrop"
                                            backdropTransitionTimeout={150}
                                            containerClassName="modal-open"
                                            dialogTransitionTimeout={300}
                                            enforceFocus={true}
                                            keyboard={true}
                                            manager={
                                              ModalManager {
                                                "add": [Function],
                                                "containers": Array [],
                                                "data": Array [],
                                                "handleContainerOverflow": true,
                                                "hideSiblingNodes": true,
                                                "isTopModal": [Function],
                                                "modals": Array [],
                                                "remove": [Function],
                                              }
                                            }
                                            onEntering={[Function]}
                                            onExited={[Function]}
                                            onHide={[Function]}
                                            renderBackdrop={[Function]}
                                            restoreFocus={true}
                                            show={false}
                                            transition={[Function]}
                                          />
                                        </Modal>
                                      </StyledComponent>
                                    </Modal>
                                  </BootstrapModalWrapper>
                                </ContentPackDownloadControl>
                              </div>
                            </Col>
                          </div>
                        </Row>
                        <Row
                          bsClass="row"
                          className="row-sm content-packs-summary"
                          componentClass="div"
                        >
                          <div
                            className="row-sm content-packs-summary row"
                          >
                            <Col
                              bsClass="col"
                              componentClass="div"
                              md={12}
                            >
                              <div
                                className="col-md-12"
                              >
                                Patterns to retreive rails production logs
                                 
                              </div>
                            </Col>
                          </div>
                        </Row>
                      </span>
                    </ListGroupItem>
                  </StyledComponent>
                </ListGroupItem>
              </ForwardRef>
            </ControlledTableListItem>
            <ControlledTableListItem
              key="3"
            >
              <ForwardRef>
                <ListGroupItem>
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "STYLES": Array [
                          "success",
                          "warning",
                          "danger",
                          "info",
                        ],
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "ListGroupItem-sc-1ky0joo-0",
                          "isStatic": false,
                          "lastClassName": "igGIXt",
                          "rules": Array [
                            [Function],
                          ],
                        },
                        "displayName": "ListGroupItem",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "ListGroupItem-sc-1ky0joo-0",
                        "target": [Function],
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <ListGroupItem
                      bsClass="list-group-item"
                      className="ListGroupItem-sc-1ky0joo-0 igGIXt"
                      listItem={false}
                    >
                      <span
                        className="ListGroupItem-sc-1ky0joo-0 igGIXt list-group-item"
                      >
                        <Row
                          bsClass="row"
                          className="row-sm"
                          componentClass="div"
                        >
                          <div
                            className="row-sm row"
                          >
                            <Col
                              bsClass="col"
                              componentClass="div"
                              md={9}
                            >
                              <div
                                className="col-md-9"
                              >
                                <h3>
                                  <Link
                                    onlyActiveOnIndex={false}
                                    style={Object {}}
                                    to="/system/contentpacks/3"
                                  >
                                    <a
                                      onClick={[Function]}
                                      style={Object {}}
                                    />
                                  </Link>
                                   
                                  <small>
                                    Latest Version: 
                                    1
                                     
                                    <ContentPackStatus
                                      contentPackId="3"
                                      states={Array []}
                                    >
                                      <span />
                                    </ContentPackStatus>
                                     
                                  </small>
                                </h3>
                              </div>
                            </Col>
                            <Col
                              bsClass="col"
                              className="text-right"
                              componentClass="div"
                              md={3}
                            >
                              <div
                                className="text-right col-md-3"
                              >
                                 
                                <ForwardRef
                                  bsSize="small"
                                  bsStyle="info"
                                  onClick={[Function]}
                                >
                                  <Button
                                    bsSize="small"
                                    bsStyle="info"
                                    onClick={[Function]}
                                  >
                                    <StyledComponent
                                      bsSize="small"
                                      bsStyle="info"
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "SIZES": Array [
                                            "large",
                                            "small",
                                            "xsmall",
                                          ],
                                          "STYLES": Array [
                                            "success",
                                            "warning",
                                            "danger",
                                            "info",
                                            "default",
                                            "primary",
                                            "link",
                                          ],
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "Button-c9cbmb-0",
                                            "isStatic": false,
                                            "lastClassName": "gZfKUo",
                                            "rules": Array [
                                              [Function],
                                            ],
                                          },
                                          "displayName": "Button",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "Button-c9cbmb-0",
                                          "target": [Function],
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                      onClick={[Function]}
                                    >
                                      <Button
                                        active={false}
                                        block={false}
                                        bsClass="btn"
                                        bsSize="small"
                                        bsStyle="info"
                                        className="Button-c9cbmb-0 gZfKUo"
                                        disabled={false}
                                        onClick={[Function]}
                                      >
                                        <button
                                          className="Button-c9cbmb-0 gZfKUo btn btn-sm btn-info"
                                          disabled={false}
                                          onClick={[Function]}
                                          type="button"
                                        >
                                          Install
                                        </button>
                                      </Button>
                                    </StyledComponent>
                                  </Button>
                                </ForwardRef>
                                <BootstrapModalWrapper
                                  backdrop="static"
                                  bsSize="large"
                                  onClose={[Function]}
                                  onHide={[Function]}
                                  onOpen={[Function]}
                                  showModal={false}
                                >
                                  <Modal
                                    backdrop="static"
                                    bsSize="large"
                                    onHide={[Function]}
                                    show={false}
                                  >
                                    <StyledComponent
                                      backdrop="static"
                                      bsSize="large"
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "BACKDROP_TRANSITION_DURATION": 150,
                                          "Body": [Function],
                                          "Dialog": [Function],
                                          "Footer": [Function],
                                          "Header": [Function],
                                          "SIZES": Array [
                                            "large",
                                            "small",
                                          ],
                                          "TRANSITION_DURATION": 300,
                                          "Title": [Function],
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "Modal-nuree8-0",
                                            "isStatic": true,
                                            "lastClassName": "cHlGak",
                                            "rules": Array [
                                              ".modal-content{background-color:",
                                              "#FFF",
                                              ";border-color:",
                                              "rgba(31,31,31,0.2)",
                                              ";.modal-header{border-bottom-color:",
                                              "#DCE1E5",
                                              ";}.modal-footer{border-top-color:",
                                              "#DCE1E5",
                                              ";}}",
                                            ],
                                          },
                                          "displayName": "Modal",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "Modal-nuree8-0",
                                          "target": [Function],
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                      onHide={[Function]}
                                      show={false}
                                    >
                                      <Modal
                                        animation={true}
                                        autoFocus={true}
                                        backdrop="static"
                                        bsClass="modal"
                                        bsSize="large"
                                        className="Modal-nuree8-0 cHlGak"
                                        dialogComponentClass={[Function]}
                                        enforceFocus={true}
                                        keyboard={true}
                                        manager={
                                          ModalManager {
                                            "add": [Function],
                                            "containers": Array [],
                                            "data": Array [],
                                            "handleContainerOverflow": true,
                                            "hideSiblingNodes": true,
                                            "isTopModal": [Function],
                                            "modals": Array [],
                                            "remove": [Function],
                                          }
                                        }
                                        onHide={[Function]}
                                        renderBackdrop={[Function]}
                                        restoreFocus={true}
                                        show={false}
                                      >
                                        <Modal
                                          autoFocus={true}
                                          backdrop="static"
                                          backdropClassName="modal-backdrop"
                                          backdropTransitionTimeout={150}
                                          containerClassName="modal-open"
                                          dialogTransitionTimeout={300}
                                          enforceFocus={true}
                                          keyboard={true}
                                          manager={
                                            ModalManager {
                                              "add": [Function],
                                              "containers": Array [],
                                              "data": Array [],
                                              "handleContainerOverflow": true,
                                              "hideSiblingNodes": true,
                                              "isTopModal": [Function],
                                              "modals": Array [],
                                              "remove": [Function],
                                            }
                                          }
                                          onEntering={[Function]}
                                          onExited={[Function]}
                                          onHide={[Function]}
                                          renderBackdrop={[Function]}
                                          restoreFocus={true}
                                          show={false}
                                          transition={[Function]}
                                        />
                                      </Modal>
                                    </StyledComponent>
                                  </Modal>
                                </BootstrapModalWrapper>
                                 
                                <DropdownButton
                                  bsSize="small"
                                  id="more-actions-3"
                                  pullRight={true}
                                  title="More Actions"
                                >
                                  <StyledComponent
                                    bsSize="small"
                                    forwardedComponent={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "attrs": Array [],
                                        "componentStyle": ComponentStyle {
                                          "componentId": "DropdownButton-sc-1343dcx-0",
                                          "isStatic": false,
                                          "lastClassName": "jgZJTb",
                                          "rules": Array [
                                            [Function],
                                            ";",
                                            "& ~",
                                            " .dropdown-menu{> li > a{color:",
                                            "#1F1F1F",
                                            ";:hover,:focus{color:",
                                            "#484848",
                                            ";background-color:",
                                            "#F1F2F2",
                                            ";}}> .active > a{background-color:",
                                            "#6DC6E7",
                                            ";color:",
                                            "#f7fcfd",
                                            ";:hover,:focus{background-color:",
                                            "#16ACE3",
                                            ";color:",
                                            "#f3fafd",
                                            ";}}> .disabled > a{color:",
                                            "#8f8f8f",
                                            ";:hover,:focus{background-color:",
                                            "#F1F2F2",
                                            ";color:",
                                            "#b0b0b0",
                                            ";}}}",
                                            ";",
                                          ],
                                        },
                                        "displayName": "DropdownButton",
                                        "foldedComponentIds": Array [],
                                        "render": [Function],
                                        "styledComponentId": "DropdownButton-sc-1343dcx-0",
                                        "target": [Function],
                                        "toString": [Function],
                                        "warnTooManyClasses": [Function],
                                        "withComponent": [Function],
                                      }
                                    }
                                    forwardedRef={null}
                                    id="more-actions-3"
                                    pullRight={true}
                                    title="More Actions"
                                  >
                                    <DropdownButton
                                      bsSize="small"
                                      className="DropdownButton-sc-1343dcx-0 jgZJTb"
                                      id="more-actions-3"
                                      pullRight={true}
                                      title="More Actions"
                                    >
                                      <Uncontrolled(Dropdown)
                                        bsSize="small"
                                        id="more-actions-3"
                                        pullRight={true}
                                      >
                                        <Dropdown
                                          bsClass="dropdown"
                                          bsSize="small"
                                          componentClass={[Function]}
                                          id="more-actions-3"
                                          onToggle={[Function]}
                                          pullRight={true}
                                        >
                                          <ButtonGroup
                                            block={false}
                                            bsClass="btn-group"
                                            bsSize="small"
                                            className="dropdown"
                                            justified={false}
                                            vertical={false}
                                          >
                                            <div
                                              className="dropdown btn-group btn-group-sm"
                                            >
                                              <DropdownToggle
                                                bsClass="dropdown-toggle"
                                                bsRole="toggle"
                                                bsSize="small"
                                                className="DropdownButton-sc-1343dcx-0 jgZJTb"
                                                id="more-actions-3"
                                                key=".0"
                                                onClick={[Function]}
                                                onKeyDown={[Function]}
                                                open={false}
                                                useAnchor={false}
                                              >
                                                <Button
                                                  active={false}
                                                  aria-expanded={false}
                                                  aria-haspopup={true}
                                                  block={false}
                                                  bsClass="btn"
                                                  bsSize="small"
                                                  bsStyle="default"
                                                  className="DropdownButton-sc-1343dcx-0 jgZJTb dropdown-toggle"
                                                  disabled={false}
                                                  id="more-actions-3"
                                                  onClick={[Function]}
                                                  onKeyDown={[Function]}
                                                  role="button"
                                                >
                                                  <button
                                                    aria-expanded={false}
                                                    aria-haspopup={true}
                                                    className="DropdownButton-sc-1343dcx-0 jgZJTb dropdown-toggle btn btn-sm btn-default"
                                                    disabled={false}
                                                    id="more-actions-3"
                                                    onClick={[Function]}
                                                    onKeyDown={[Function]}
                                                    role="button"
                                                    type="button"
                                                  >
                                                    More Actions
                                                     
                                                    <span
                                                      className="caret"
                                                    />
                                                  </button>
                                                </Button>
                                              </DropdownToggle>
                                              <DropdownMenu
                                                bsClass="dropdown-menu"
                                                bsRole="menu"
                                                key=".1"
                                                labelledBy="more-actions-3"
                                                onClose={[Function]}
                                                onSelect={[Function]}
                                                pullRight={true}
                                              >
                                                <RootCloseWrapper
                                                  disabled={true}
                                                  event="click"
                                                  onRootClose={[Function]}
                                                >
                                                  <ul
                                                    aria-labelledby="more-actions-3"
                                                    className="dropdown-menu dropdown-menu-right"
                                                    role="menu"
                                                  >
                                                    <LinkContainer
                                                      action="push"
                                                      key=".0"
                                                      onKeyDown={[Function]}
                                                      onSelect={[Function]}
                                                      onlyActiveOnIndex={false}
                                                      to="/system/contentpacks/3"
                                                    >
                                                      <MenuItem
                                                        action="push"
                                                        bsClass="dropdown"
                                                        disabled={false}
                                                        divider={false}
                                                        header={false}
                                                        onClick={[Function]}
                                                        onKeyDown={[Function]}
                                                        onSelect={[Function]}
                                                      >
                                                        <li
                                                          className=""
                                                          role="presentation"
                                                        >
                                                          <SafeAnchor
                                                            action="push"
                                                            componentClass="a"
                                                            onClick={[Function]}
                                                            onKeyDown={[Function]}
                                                            role="menuitem"
                                                            tabIndex="-1"
                                                          >
                                                            <a
                                                              action="push"
                                                              href="#"
                                                              onClick={[Function]}
                                                              onKeyDown={[Function]}
                                                              role="menuitem"
                                                              tabIndex="-1"
                                                            >
                                                              Show
                                                            </a>
                                                          </SafeAnchor>
                                                        </li>
                                                      </MenuItem>
                                                    </LinkContainer>
                                                    <LinkContainer
                                                      action="push"
                                                      key=".1"
                                                      onKeyDown={[Function]}
                                                      onSelect={[Function]}
                                                      onlyActiveOnIndex={false}
                                                      to="/system/contentpacks/3/1/edit"
                                                    >
                                                      <MenuItem
                                                        action="push"
                                                        bsClass="dropdown"
                                                        disabled={false}
                                                        divider={false}
                                                        header={false}
                                                        onClick={[Function]}
                                                        onKeyDown={[Function]}
                                                        onSelect={[Function]}
                                                      >
                                                        <li
                                                          className=""
                                                          role="presentation"
                                                        >
                                                          <SafeAnchor
                                                            action="push"
                                                            componentClass="a"
                                                            onClick={[Function]}
                                                            onKeyDown={[Function]}
                                                            role="menuitem"
                                                            tabIndex="-1"
                                                          >
                                                            <a
                                                              action="push"
                                                              href="#"
                                                              onClick={[Function]}
                                                              onKeyDown={[Function]}
                                                              role="menuitem"
                                                              tabIndex="-1"
                                                            >
                                                              Create New Version
                                                            </a>
                                                          </SafeAnchor>
                                                        </li>
                                                      </MenuItem>
                                                    </LinkContainer>
                                                    <MenuItem
                                                      bsClass="dropdown"
                                                      disabled={false}
                                                      divider={false}
                                                      header={false}
                                                      key=".2"
                                                      onKeyDown={[Function]}
                                                      onSelect={[Function]}
                                                    >
                                                      <li
                                                        className=""
                                                        role="presentation"
                                                      >
                                                        <SafeAnchor
                                                          componentClass="a"
                                                          onClick={[Function]}
                                                          onKeyDown={[Function]}
                                                          role="menuitem"
                                                          tabIndex="-1"
                                                        >
                                                          <a
                                                            href="#"
                                                            onClick={[Function]}
                                                            onKeyDown={[Function]}
                                                            role="menuitem"
                                                            tabIndex="-1"
                                                          >
                                                            Download
                                                          </a>
                                                        </SafeAnchor>
                                                      </li>
                                                    </MenuItem>
                                                    <MenuItem
                                                      bsClass="dropdown"
                                                      disabled={false}
                                                      divider={true}
                                                      header={false}
                                                      key=".3"
                                                      onKeyDown={[Function]}
                                                      onSelect={[Function]}
                                                    >
                                                      <li
                                                        className="divider"
                                                        onKeyDown={[Function]}
                                                        role="separator"
                                                      />
                                                    </MenuItem>
                                                    <MenuItem
                                                      bsClass="dropdown"
                                                      disabled={false}
                                                      divider={false}
                                                      header={false}
                                                      key=".4"
                                                      onKeyDown={[Function]}
                                                      onSelect={[Function]}
                                                    >
                                                      <li
                                                        className=""
                                                        role="presentation"
                                                      >
                                                        <SafeAnchor
                                                          componentClass="a"
                                                          onClick={[Function]}
                                                          onKeyDown={[Function]}
                                                          role="menuitem"
                                                          tabIndex="-1"
                                                        >
                                                          <a
                                                            href="#"
                                                            onClick={[Function]}
                                                            onKeyDown={[Function]}
                                                            role="menuitem"
                                                            tabIndex="-1"
                                                          >
                                                            Delete All Versions
                                                          </a>
                                                        </SafeAnchor>
                                                      </li>
                                                    </MenuItem>
                                                  </ul>
                                                </RootCloseWrapper>
                                              </DropdownMenu>
                                            </div>
                                          </ButtonGroup>
                                        </Dropdown>
                                      </Uncontrolled(Dropdown)>
                                    </DropdownButton>
                                  </StyledComponent>
                                </DropdownButton>
                                <ContentPackDownloadControl
                                  contentPackId="3"
                                  revision={1}
                                >
                                  <BootstrapModalWrapper
                                    backdrop="static"
                                    bsSize="large"
                                    onClose={[Function]}
                                    onHide={[Function]}
                                    onOpen={[Function]}
                                    showModal={false}
                                  >
                                    <Modal
                                      backdrop="static"
                                      bsSize="large"
                                      onHide={[Function]}
                                      show={false}
                                    >
                                      <StyledComponent
                                        backdrop="static"
                                        bsSize="large"
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "BACKDROP_TRANSITION_DURATION": 150,
                                            "Body": [Function],
                                            "Dialog": [Function],
                                            "Footer": [Function],
                                            "Header": [Function],
                                            "SIZES": Array [
                                              "large",
                                              "small",
                                            ],
                                            "TRANSITION_DURATION": 300,
                                            "Title": [Function],
                                            "attrs": Array [],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "Modal-nuree8-0",
                                              "isStatic": true,
                                              "lastClassName": "cHlGak",
                                              "rules": Array [
                                                ".modal-content{background-color:",
                                                "#FFF",
                                                ";border-color:",
                                                "rgba(31,31,31,0.2)",
                                                ";.modal-header{border-bottom-color:",
                                                "#DCE1E5",
                                                ";}.modal-footer{border-top-color:",
                                                "#DCE1E5",
                                                ";}}",
                                              ],
                                            },
                                            "displayName": "Modal",
                                            "foldedComponentIds": Array [],
                                            "render": [Function],
                                            "styledComponentId": "Modal-nuree8-0",
                                            "target": [Function],
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                        onHide={[Function]}
                                        show={false}
                                      >
                                        <Modal
                                          animation={true}
                                          autoFocus={true}
                                          backdrop="static"
                                          bsClass="modal"
                                          bsSize="large"
                                          className="Modal-nuree8-0 cHlGak"
                                          dialogComponentClass={[Function]}
                                          enforceFocus={true}
                                          keyboard={true}
                                          manager={
                                            ModalManager {
                                              "add": [Function],
                                              "containers": Array [],
                                              "data": Array [],
                                              "handleContainerOverflow": true,
                                              "hideSiblingNodes": true,
                                              "isTopModal": [Function],
                                              "modals": Array [],
                                              "remove": [Function],
                                            }
                                          }
                                          onHide={[Function]}
                                          renderBackdrop={[Function]}
                                          restoreFocus={true}
                                          show={false}
                                        >
                                          <Modal
                                            autoFocus={true}
                                            backdrop="static"
                                            backdropClassName="modal-backdrop"
                                            backdropTransitionTimeout={150}
                                            containerClassName="modal-open"
                                            dialogTransitionTimeout={300}
                                            enforceFocus={true}
                                            keyboard={true}
                                            manager={
                                              ModalManager {
                                                "add": [Function],
                                                "containers": Array [],
                                                "data": Array [],
                                                "handleContainerOverflow": true,
                                                "hideSiblingNodes": true,
                                                "isTopModal": [Function],
                                                "modals": Array [],
                                                "remove": [Function],
                                              }
                                            }
                                            onEntering={[Function]}
                                            onExited={[Function]}
                                            onHide={[Function]}
                                            renderBackdrop={[Function]}
                                            restoreFocus={true}
                                            show={false}
                                            transition={[Function]}
                                          />
                                        </Modal>
                                      </StyledComponent>
                                    </Modal>
                                  </BootstrapModalWrapper>
                                </ContentPackDownloadControl>
                              </div>
                            </Col>
                          </div>
                        </Row>
                        <Row
                          bsClass="row"
                          className="row-sm content-packs-summary"
                          componentClass="div"
                        >
                          <div
                            className="row-sm content-packs-summary row"
                          >
                            <Col
                              bsClass="col"
                              componentClass="div"
                              md={12}
                            >
                              <div
                                className="col-md-12"
                              >
                                 
                              </div>
                            </Col>
                          </div>
                        </Row>
                      </span>
                    </ListGroupItem>
                  </StyledComponent>
                </ListGroupItem>
              </ForwardRef>
            </ControlledTableListItem>
            <ControlledTableListItem
              key="4"
            >
              <ForwardRef>
                <ListGroupItem>
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "STYLES": Array [
                          "success",
                          "warning",
                          "danger",
                          "info",
                        ],
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "ListGroupItem-sc-1ky0joo-0",
                          "isStatic": false,
                          "lastClassName": "igGIXt",
                          "rules": Array [
                            [Function],
                          ],
                        },
                        "displayName": "ListGroupItem",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "ListGroupItem-sc-1ky0joo-0",
                        "target": [Function],
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <ListGroupItem
                      bsClass="list-group-item"
                      className="ListGroupItem-sc-1ky0joo-0 igGIXt"
                      listItem={false}
                    >
                      <span
                        className="ListGroupItem-sc-1ky0joo-0 igGIXt list-group-item"
                      >
                        <Row
                          bsClass="row"
                          className="row-sm"
                          componentClass="div"
                        >
                          <div
                            className="row-sm row"
                          >
                            <Col
                              bsClass="col"
                              componentClass="div"
                              md={9}
                            >
                              <div
                                className="col-md-9"
                              >
                                <h3>
                                  <Link
                                    onlyActiveOnIndex={false}
                                    style={Object {}}
                                    to="/system/contentpacks/4"
                                  >
                                    <a
                                      onClick={[Function]}
                                      style={Object {}}
                                    />
                                  </Link>
                                   
                                  <small>
                                    Latest Version: 
                                    1
                                     
                                    <ContentPackStatus
                                      contentPackId="4"
                                      states={Array []}
                                    >
                                      <span />
                                    </ContentPackStatus>
                                     
                                  </small>
                                </h3>
                              </div>
                            </Col>
                            <Col
                              bsClass="col"
                              className="text-right"
                              componentClass="div"
                              md={3}
                            >
                              <div
                                className="text-right col-md-3"
                              >
                                 
                                <ForwardRef
                                  bsSize="small"
                                  bsStyle="info"
                                  onClick={[Function]}
                                >
                                  <Button
                                    bsSize="small"
                                    bsStyle="info"
                                    onClick={[Function]}
                                  >
                                    <StyledComponent
                                      bsSize="small"
                                      bsStyle="info"
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "SIZES": Array [
                                            "large",
                                            "small",
                                            "xsmall",
                                          ],
                                          "STYLES": Array [
                                            "success",
                                            "warning",
                                            "danger",
                                            "info",
                                            "default",
                                            "primary",
                                            "link",
                                          ],
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "Button-c9cbmb-0",
                                            "isStatic": false,
                                            "lastClassName": "gZfKUo",
                                            "rules": Array [
                                              [Function],
                                            ],
                                          },
                                          "displayName": "Button",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "Button-c9cbmb-0",
                                          "target": [Function],
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                      onClick={[Function]}
                                    >
                                      <Button
                                        active={false}
                                        block={false}
                                        bsClass="btn"
                                        bsSize="small"
                                        bsStyle="info"
                                        className="Button-c9cbmb-0 gZfKUo"
                                        disabled={false}
                                        onClick={[Function]}
                                      >
                                        <button
                                          className="Button-c9cbmb-0 gZfKUo btn btn-sm btn-info"
                                          disabled={false}
                                          onClick={[Function]}
                                          type="button"
                                        >
                                          Install
                                        </button>
                                      </Button>
                                    </StyledComponent>
                                  </Button>
                                </ForwardRef>
                                <BootstrapModalWrapper
                                  backdrop="static"
                                  bsSize="large"
                                  onClose={[Function]}
                                  onHide={[Function]}
                                  onOpen={[Function]}
                                  showModal={false}
                                >
                                  <Modal
                                    backdrop="static"
                                    bsSize="large"
                                    onHide={[Function]}
                                    show={false}
                                  >
                                    <StyledComponent
                                      backdrop="static"
                                      bsSize="large"
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "BACKDROP_TRANSITION_DURATION": 150,
                                          "Body": [Function],
                                          "Dialog": [Function],
                                          "Footer": [Function],
                                          "Header": [Function],
                                          "SIZES": Array [
                                            "large",
                                            "small",
                                          ],
                                          "TRANSITION_DURATION": 300,
                                          "Title": [Function],
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "Modal-nuree8-0",
                                            "isStatic": true,
                                            "lastClassName": "cHlGak",
                                            "rules": Array [
                                              ".modal-content{background-color:",
                                              "#FFF",
                                              ";border-color:",
                                              "rgba(31,31,31,0.2)",
                                              ";.modal-header{border-bottom-color:",
                                              "#DCE1E5",
                                              ";}.modal-footer{border-top-color:",
                                              "#DCE1E5",
                                              ";}}",
                                            ],
                                          },
                                          "displayName": "Modal",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "Modal-nuree8-0",
                                          "target": [Function],
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                      onHide={[Function]}
                                      show={false}
                                    >
                                      <Modal
                                        animation={true}
                                        autoFocus={true}
                                        backdrop="static"
                                        bsClass="modal"
                                        bsSize="large"
                                        className="Modal-nuree8-0 cHlGak"
                                        dialogComponentClass={[Function]}
                                        enforceFocus={true}
                                        keyboard={true}
                                        manager={
                                          ModalManager {
                                            "add": [Function],
                                            "containers": Array [],
                                            "data": Array [],
                                            "handleContainerOverflow": true,
                                            "hideSiblingNodes": true,
                                            "isTopModal": [Function],
                                            "modals": Array [],
                                            "remove": [Function],
                                          }
                                        }
                                        onHide={[Function]}
                                        renderBackdrop={[Function]}
                                        restoreFocus={true}
                                        show={false}
                                      >
                                        <Modal
                                          autoFocus={true}
                                          backdrop="static"
                                          backdropClassName="modal-backdrop"
                                          backdropTransitionTimeout={150}
                                          containerClassName="modal-open"
                                          dialogTransitionTimeout={300}
                                          enforceFocus={true}
                                          keyboard={true}
                                          manager={
                                            ModalManager {
                                              "add": [Function],
                                              "containers": Array [],
                                              "data": Array [],
                                              "handleContainerOverflow": true,
                                              "hideSiblingNodes": true,
                                              "isTopModal": [Function],
                                              "modals": Array [],
                                              "remove": [Function],
                                            }
                                          }
                                          onEntering={[Function]}
                                          onExited={[Function]}
                                          onHide={[Function]}
                                          renderBackdrop={[Function]}
                                          restoreFocus={true}
                                          show={false}
                                          transition={[Function]}
                                        />
                                      </Modal>
                                    </StyledComponent>
                                  </Modal>
                                </BootstrapModalWrapper>
                                 
                                <DropdownButton
                                  bsSize="small"
                                  id="more-actions-4"
                                  pullRight={true}
                                  title="More Actions"
                                >
                                  <StyledComponent
                                    bsSize="small"
                                    forwardedComponent={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "attrs": Array [],
                                        "componentStyle": ComponentStyle {
                                          "componentId": "DropdownButton-sc-1343dcx-0",
                                          "isStatic": false,
                                          "lastClassName": "jgZJTb",
                                          "rules": Array [
                                            [Function],
                                            ";",
                                            "& ~",
                                            " .dropdown-menu{> li > a{color:",
                                            "#1F1F1F",
                                            ";:hover,:focus{color:",
                                            "#484848",
                                            ";background-color:",
                                            "#F1F2F2",
                                            ";}}> .active > a{background-color:",
                                            "#6DC6E7",
                                            ";color:",
                                            "#f7fcfd",
                                            ";:hover,:focus{background-color:",
                                            "#16ACE3",
                                            ";color:",
                                            "#f3fafd",
                                            ";}}> .disabled > a{color:",
                                            "#8f8f8f",
                                            ";:hover,:focus{background-color:",
                                            "#F1F2F2",
                                            ";color:",
                                            "#b0b0b0",
                                            ";}}}",
                                            ";",
                                          ],
                                        },
                                        "displayName": "DropdownButton",
                                        "foldedComponentIds": Array [],
                                        "render": [Function],
                                        "styledComponentId": "DropdownButton-sc-1343dcx-0",
                                        "target": [Function],
                                        "toString": [Function],
                                        "warnTooManyClasses": [Function],
                                        "withComponent": [Function],
                                      }
                                    }
                                    forwardedRef={null}
                                    id="more-actions-4"
                                    pullRight={true}
                                    title="More Actions"
                                  >
                                    <DropdownButton
                                      bsSize="small"
                                      className="DropdownButton-sc-1343dcx-0 jgZJTb"
                                      id="more-actions-4"
                                      pullRight={true}
                                      title="More Actions"
                                    >
                                      <Uncontrolled(Dropdown)
                                        bsSize="small"
                                        id="more-actions-4"
                                        pullRight={true}
                                      >
                                        <Dropdown
                                          bsClass="dropdown"
                                          bsSize="small"
                                          componentClass={[Function]}
                                          id="more-actions-4"
                                          onToggle={[Function]}
                                          pullRight={true}
                                        >
                                          <ButtonGroup
                                            block={false}
                                            bsClass="btn-group"
                                            bsSize="small"
                                            className="dropdown"
                                            justified={false}
                                            vertical={false}
                                          >
                                            <div
                                              className="dropdown btn-group btn-group-sm"
                                            >
                                              <DropdownToggle
                                                bsClass="dropdown-toggle"
                                                bsRole="toggle"
                                                bsSize="small"
                                                className="DropdownButton-sc-1343dcx-0 jgZJTb"
                                                id="more-actions-4"
                                                key=".0"
                                                onClick={[Function]}
                                                onKeyDown={[Function]}
                                                open={false}
                                                useAnchor={false}
                                              >
                                                <Button
                                                  active={false}
                                                  aria-expanded={false}
                                                  aria-haspopup={true}
                                                  block={false}
                                                  bsClass="btn"
                                                  bsSize="small"
                                                  bsStyle="default"
                                                  className="DropdownButton-sc-1343dcx-0 jgZJTb dropdown-toggle"
                                                  disabled={false}
                                                  id="more-actions-4"
                                                  onClick={[Function]}
                                                  onKeyDown={[Function]}
                                                  role="button"
                                                >
                                                  <button
                                                    aria-expanded={false}
                                                    aria-haspopup={true}
                                                    className="DropdownButton-sc-1343dcx-0 jgZJTb dropdown-toggle btn btn-sm btn-default"
                                                    disabled={false}
                                                    id="more-actions-4"
                                                    onClick={[Function]}
                                                    onKeyDown={[Function]}
                                                    role="button"
                                                    type="button"
                                                  >
                                                    More Actions
                                                     
                                                    <span
                                                      className="caret"
                                                    />
                                                  </button>
                                                </Button>
                                              </DropdownToggle>
                                              <DropdownMenu
                                                bsClass="dropdown-menu"
                                                bsRole="menu"
                                                key=".1"
                                                labelledBy="more-actions-4"
                                                onClose={[Function]}
                                                onSelect={[Function]}
                                                pullRight={true}
                                              >
                                                <RootCloseWrapper
                                                  disabled={true}
                                                  event="click"
                                                  onRootClose={[Function]}
                                                >
                                                  <ul
                                                    aria-labelledby="more-actions-4"
                                                    className="dropdown-menu dropdown-menu-right"
                                                    role="menu"
                                                  >
                                                    <LinkContainer
                                                      action="push"
                                                      key=".0"
                                                      onKeyDown={[Function]}
                                                      onSelect={[Function]}
                                                      onlyActiveOnIndex={false}
                                                      to="/system/contentpacks/4"
                                                    >
                                                      <MenuItem
                                                        action="push"
                                                        bsClass="dropdown"
                                                        disabled={false}
                                                        divider={false}
                                                        header={false}
                                                        onClick={[Function]}
                                                        onKeyDown={[Function]}
                                                        onSelect={[Function]}
                                                      >
                                                        <li
                                                          className=""
                                                          role="presentation"
                                                        >
                                                          <SafeAnchor
                                                            action="push"
                                                            componentClass="a"
                                                            onClick={[Function]}
                                                            onKeyDown={[Function]}
                                                            role="menuitem"
                                                            tabIndex="-1"
                                                          >
                                                            <a
                                                              action="push"
                                                              href="#"
                                                              onClick={[Function]}
                                                              onKeyDown={[Function]}
                                                              role="menuitem"
                                                              tabIndex="-1"
                                                            >
                                                              Show
                                                            </a>
                                                          </SafeAnchor>
                                                        </li>
                                                      </MenuItem>
                                                    </LinkContainer>
                                                    <LinkContainer
                                                      action="push"
                                                      key=".1"
                                                      onKeyDown={[Function]}
                                                      onSelect={[Function]}
                                                      onlyActiveOnIndex={false}
                                                      to="/system/contentpacks/4/1/edit"
                                                    >
                                                      <MenuItem
                                                        action="push"
                                                        bsClass="dropdown"
                                                        disabled={false}
                                                        divider={false}
                                                        header={false}
                                                        onClick={[Function]}
                                                        onKeyDown={[Function]}
                                                        onSelect={[Function]}
                                                      >
                                                        <li
                                                          className=""
                                                          role="presentation"
                                                        >
                                                          <SafeAnchor
                                                            action="push"
                                                            componentClass="a"
                                                            onClick={[Function]}
                                                            onKeyDown={[Function]}
                                                            role="menuitem"
                                                            tabIndex="-1"
                                                          >
                                                            <a
                                                              action="push"
                                                              href="#"
                                                              onClick={[Function]}
                                                              onKeyDown={[Function]}
                                                              role="menuitem"
                                                              tabIndex="-1"
                                                            >
                                                              Create New Version
                                                            </a>
                                                          </SafeAnchor>
                                                        </li>
                                                      </MenuItem>
                                                    </LinkContainer>
                                                    <MenuItem
                                                      bsClass="dropdown"
                                                      disabled={false}
                                                      divider={false}
                                                      header={false}
                                                      key=".2"
                                                      onKeyDown={[Function]}
                                                      onSelect={[Function]}
                                                    >
                                                      <li
                                                        className=""
                                                        role="presentation"
                                                      >
                                                        <SafeAnchor
                                                          componentClass="a"
                                                          onClick={[Function]}
                                                          onKeyDown={[Function]}
                                                          role="menuitem"
                                                          tabIndex="-1"
                                                        >
                                                          <a
                                                            href="#"
                                                            onClick={[Function]}
                                                            onKeyDown={[Function]}
                                                            role="menuitem"
                                                            tabIndex="-1"
                                                          >
                                                            Download
                                                          </a>
                                                        </SafeAnchor>
                                                      </li>
                                                    </MenuItem>
                                                    <MenuItem
                                                      bsClass="dropdown"
                                                      disabled={false}
                                                      divider={true}
                                                      header={false}
                                                      key=".3"
                                                      onKeyDown={[Function]}
                                                      onSelect={[Function]}
                                                    >
                                                      <li
                                                        className="divider"
                                                        onKeyDown={[Function]}
                                                        role="separator"
                                                      />
                                                    </MenuItem>
                                                    <MenuItem
                                                      bsClass="dropdown"
                                                      disabled={false}
                                                      divider={false}
                                                      header={false}
                                                      key=".4"
                                                      onKeyDown={[Function]}
                                                      onSelect={[Function]}
                                                    >
                                                      <li
                                                        className=""
                                                        role="presentation"
                                                      >
                                                        <SafeAnchor
                                                          componentClass="a"
                                                          onClick={[Function]}
                                                          onKeyDown={[Function]}
                                                          role="menuitem"
                                                          tabIndex="-1"
                                                        >
                                                          <a
                                                            href="#"
                                                            onClick={[Function]}
                                                            onKeyDown={[Function]}
                                                            role="menuitem"
                                                            tabIndex="-1"
                                                          >
                                                            Delete All Versions
                                                          </a>
                                                        </SafeAnchor>
                                                      </li>
                                                    </MenuItem>
                                                  </ul>
                                                </RootCloseWrapper>
                                              </DropdownMenu>
                                            </div>
                                          </ButtonGroup>
                                        </Dropdown>
                                      </Uncontrolled(Dropdown)>
                                    </DropdownButton>
                                  </StyledComponent>
                                </DropdownButton>
                                <ContentPackDownloadControl
                                  contentPackId="4"
                                  revision={1}
                                >
                                  <BootstrapModalWrapper
                                    backdrop="static"
                                    bsSize="large"
                                    onClose={[Function]}
                                    onHide={[Function]}
                                    onOpen={[Function]}
                                    showModal={false}
                                  >
                                    <Modal
                                      backdrop="static"
                                      bsSize="large"
                                      onHide={[Function]}
                                      show={false}
                                    >
                                      <StyledComponent
                                        backdrop="static"
                                        bsSize="large"
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "BACKDROP_TRANSITION_DURATION": 150,
                                            "Body": [Function],
                                            "Dialog": [Function],
                                            "Footer": [Function],
                                            "Header": [Function],
                                            "SIZES": Array [
                                              "large",
                                              "small",
                                            ],
                                            "TRANSITION_DURATION": 300,
                                            "Title": [Function],
                                            "attrs": Array [],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "Modal-nuree8-0",
                                              "isStatic": true,
                                              "lastClassName": "cHlGak",
                                              "rules": Array [
                                                ".modal-content{background-color:",
                                                "#FFF",
                                                ";border-color:",
                                                "rgba(31,31,31,0.2)",
                                                ";.modal-header{border-bottom-color:",
                                                "#DCE1E5",
                                                ";}.modal-footer{border-top-color:",
                                                "#DCE1E5",
                                                ";}}",
                                              ],
                                            },
                                            "displayName": "Modal",
                                            "foldedComponentIds": Array [],
                                            "render": [Function],
                                            "styledComponentId": "Modal-nuree8-0",
                                            "target": [Function],
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                        onHide={[Function]}
                                        show={false}
                                      >
                                        <Modal
                                          animation={true}
                                          autoFocus={true}
                                          backdrop="static"
                                          bsClass="modal"
                                          bsSize="large"
                                          className="Modal-nuree8-0 cHlGak"
                                          dialogComponentClass={[Function]}
                                          enforceFocus={true}
                                          keyboard={true}
                                          manager={
                                            ModalManager {
                                              "add": [Function],
                                              "containers": Array [],
                                              "data": Array [],
                                              "handleContainerOverflow": true,
                                              "hideSiblingNodes": true,
                                              "isTopModal": [Function],
                                              "modals": Array [],
                                              "remove": [Function],
                                            }
                                          }
                                          onHide={[Function]}
                                          renderBackdrop={[Function]}
                                          restoreFocus={true}
                                          show={false}
                                        >
                                          <Modal
                                            autoFocus={true}
                                            backdrop="static"
                                            backdropClassName="modal-backdrop"
                                            backdropTransitionTimeout={150}
                                            containerClassName="modal-open"
                                            dialogTransitionTimeout={300}
                                            enforceFocus={true}
                                            keyboard={true}
                                            manager={
                                              ModalManager {
                                                "add": [Function],
                                                "containers": Array [],
                                                "data": Array [],
                                                "handleContainerOverflow": true,
                                                "hideSiblingNodes": true,
                                                "isTopModal": [Function],
                                                "modals": Array [],
                                                "remove": [Function],
                                              }
                                            }
                                            onEntering={[Function]}
                                            onExited={[Function]}
                                            onHide={[Function]}
                                            renderBackdrop={[Function]}
                                            restoreFocus={true}
                                            show={false}
                                            transition={[Function]}
                                          />
                                        </Modal>
                                      </StyledComponent>
                                    </Modal>
                                  </BootstrapModalWrapper>
                                </ContentPackDownloadControl>
                              </div>
                            </Col>
                          </div>
                        </Row>
                        <Row
                          bsClass="row"
                          className="row-sm content-packs-summary"
                          componentClass="div"
                        >
                          <div
                            className="row-sm content-packs-summary row"
                          >
                            <Col
                              bsClass="col"
                              componentClass="div"
                              md={12}
                            >
                              <div
                                className="col-md-12"
                              >
                                A crypted backup over ssh.
                                 
                              </div>
                            </Col>
                          </div>
                        </Row>
                      </span>
                    </ListGroupItem>
                  </StyledComponent>
                </ListGroupItem>
              </ForwardRef>
            </ControlledTableListItem>
            <ControlledTableListItem
              key="5"
            >
              <ForwardRef>
                <ListGroupItem>
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "STYLES": Array [
                          "success",
                          "warning",
                          "danger",
                          "info",
                        ],
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "ListGroupItem-sc-1ky0joo-0",
                          "isStatic": false,
                          "lastClassName": "igGIXt",
                          "rules": Array [
                            [Function],
                          ],
                        },
                        "displayName": "ListGroupItem",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "ListGroupItem-sc-1ky0joo-0",
                        "target": [Function],
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <ListGroupItem
                      bsClass="list-group-item"
                      className="ListGroupItem-sc-1ky0joo-0 igGIXt"
                      listItem={false}
                    >
                      <span
                        className="ListGroupItem-sc-1ky0joo-0 igGIXt list-group-item"
                      >
                        <Row
                          bsClass="row"
                          className="row-sm"
                          componentClass="div"
                        >
                          <div
                            className="row-sm row"
                          >
                            <Col
                              bsClass="col"
                              componentClass="div"
                              md={9}
                            >
                              <div
                                className="col-md-9"
                              >
                                <h3>
                                  <Link
                                    onlyActiveOnIndex={false}
                                    style={Object {}}
                                    to="/system/contentpacks/5"
                                  >
                                    <a
                                      onClick={[Function]}
                                      style={Object {}}
                                    />
                                  </Link>
                                   
                                  <small>
                                    Latest Version: 
                                    1
                                     
                                    <ContentPackStatus
                                      contentPackId="5"
                                      states={Array []}
                                    >
                                      <span />
                                    </ContentPackStatus>
                                     
                                  </small>
                                </h3>
                              </div>
                            </Col>
                            <Col
                              bsClass="col"
                              className="text-right"
                              componentClass="div"
                              md={3}
                            >
                              <div
                                className="text-right col-md-3"
                              >
                                 
                                <ForwardRef
                                  bsSize="small"
                                  bsStyle="info"
                                  onClick={[Function]}
                                >
                                  <Button
                                    bsSize="small"
                                    bsStyle="info"
                                    onClick={[Function]}
                                  >
                                    <StyledComponent
                                      bsSize="small"
                                      bsStyle="info"
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "SIZES": Array [
                                            "large",
                                            "small",
                                            "xsmall",
                                          ],
                                          "STYLES": Array [
                                            "success",
                                            "warning",
                                            "danger",
                                            "info",
                                            "default",
                                            "primary",
                                            "link",
                                          ],
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "Button-c9cbmb-0",
                                            "isStatic": false,
                                            "lastClassName": "gZfKUo",
                                            "rules": Array [
                                              [Function],
                                            ],
                                          },
                                          "displayName": "Button",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "Button-c9cbmb-0",
                                          "target": [Function],
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                      onClick={[Function]}
                                    >
                                      <Button
                                        active={false}
                                        block={false}
                                        bsClass="btn"
                                        bsSize="small"
                                        bsStyle="info"
                                        className="Button-c9cbmb-0 gZfKUo"
                                        disabled={false}
                                        onClick={[Function]}
                                      >
                                        <button
                                          className="Button-c9cbmb-0 gZfKUo btn btn-sm btn-info"
                                          disabled={false}
                                          onClick={[Function]}
                                          type="button"
                                        >
                                          Install
                                        </button>
                                      </Button>
                                    </StyledComponent>
                                  </Button>
                                </ForwardRef>
                                <BootstrapModalWrapper
                                  backdrop="static"
                                  bsSize="large"
                                  onClose={[Function]}
                                  onHide={[Function]}
                                  onOpen={[Function]}
                                  showModal={false}
                                >
                                  <Modal
                                    backdrop="static"
                                    bsSize="large"
                                    onHide={[Function]}
                                    show={false}
                                  >
                                    <StyledComponent
                                      backdrop="static"
                                      bsSize="large"
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "BACKDROP_TRANSITION_DURATION": 150,
                                          "Body": [Function],
                                          "Dialog": [Function],
                                          "Footer": [Function],
                                          "Header": [Function],
                                          "SIZES": Array [
                                            "large",
                                            "small",
                                          ],
                                          "TRANSITION_DURATION": 300,
                                          "Title": [Function],
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "Modal-nuree8-0",
                                            "isStatic": true,
                                            "lastClassName": "cHlGak",
                                            "rules": Array [
                                              ".modal-content{background-color:",
                                              "#FFF",
                                              ";border-color:",
                                              "rgba(31,31,31,0.2)",
                                              ";.modal-header{border-bottom-color:",
                                              "#DCE1E5",
                                              ";}.modal-footer{border-top-color:",
                                              "#DCE1E5",
                                              ";}}",
                                            ],
                                          },
                                          "displayName": "Modal",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "Modal-nuree8-0",
                                          "target": [Function],
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                      onHide={[Function]}
                                      show={false}
                                    >
                                      <Modal
                                        animation={true}
                                        autoFocus={true}
                                        backdrop="static"
                                        bsClass="modal"
                                        bsSize="large"
                                        className="Modal-nuree8-0 cHlGak"
                                        dialogComponentClass={[Function]}
                                        enforceFocus={true}
                                        keyboard={true}
                                        manager={
                                          ModalManager {
                                            "add": [Function],
                                            "containers": Array [],
                                            "data": Array [],
                                            "handleContainerOverflow": true,
                                            "hideSiblingNodes": true,
                                            "isTopModal": [Function],
                                            "modals": Array [],
                                            "remove": [Function],
                                          }
                                        }
                                        onHide={[Function]}
                                        renderBackdrop={[Function]}
                                        restoreFocus={true}
                                        show={false}
                                      >
                                        <Modal
                                          autoFocus={true}
                                          backdrop="static"
                                          backdropClassName="modal-backdrop"
                                          backdropTransitionTimeout={150}
                                          containerClassName="modal-open"
                                          dialogTransitionTimeout={300}
                                          enforceFocus={true}
                                          keyboard={true}
                                          manager={
                                            ModalManager {
                                              "add": [Function],
                                              "containers": Array [],
                                              "data": Array [],
                                              "handleContainerOverflow": true,
                                              "hideSiblingNodes": true,
                                              "isTopModal": [Function],
                                              "modals": Array [],
                                              "remove": [Function],
                                            }
                                          }
                                          onEntering={[Function]}
                                          onExited={[Function]}
                                          onHide={[Function]}
                                          renderBackdrop={[Function]}
                                          restoreFocus={true}
                                          show={false}
                                          transition={[Function]}
                                        />
                                      </Modal>
                                    </StyledComponent>
                                  </Modal>
                                </BootstrapModalWrapper>
                                 
                                <DropdownButton
                                  bsSize="small"
                                  id="more-actions-5"
                                  pullRight={true}
                                  title="More Actions"
                                >
                                  <StyledComponent
                                    bsSize="small"
                                    forwardedComponent={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "attrs": Array [],
                                        "componentStyle": ComponentStyle {
                                          "componentId": "DropdownButton-sc-1343dcx-0",
                                          "isStatic": false,
                                          "lastClassName": "jgZJTb",
                                          "rules": Array [
                                            [Function],
                                            ";",
                                            "& ~",
                                            " .dropdown-menu{> li > a{color:",
                                            "#1F1F1F",
                                            ";:hover,:focus{color:",
                                            "#484848",
                                            ";background-color:",
                                            "#F1F2F2",
                                            ";}}> .active > a{background-color:",
                                            "#6DC6E7",
                                            ";color:",
                                            "#f7fcfd",
                                            ";:hover,:focus{background-color:",
                                            "#16ACE3",
                                            ";color:",
                                            "#f3fafd",
                                            ";}}> .disabled > a{color:",
                                            "#8f8f8f",
                                            ";:hover,:focus{background-color:",
                                            "#F1F2F2",
                                            ";color:",
                                            "#b0b0b0",
                                            ";}}}",
                                            ";",
                                          ],
                                        },
                                        "displayName": "DropdownButton",
                                        "foldedComponentIds": Array [],
                                        "render": [Function],
                                        "styledComponentId": "DropdownButton-sc-1343dcx-0",
                                        "target": [Function],
                                        "toString": [Function],
                                        "warnTooManyClasses": [Function],
                                        "withComponent": [Function],
                                      }
                                    }
                                    forwardedRef={null}
                                    id="more-actions-5"
                                    pullRight={true}
                                    title="More Actions"
                                  >
                                    <DropdownButton
                                      bsSize="small"
                                      className="DropdownButton-sc-1343dcx-0 jgZJTb"
                                      id="more-actions-5"
                                      pullRight={true}
                                      title="More Actions"
                                    >
                                      <Uncontrolled(Dropdown)
                                        bsSize="small"
                                        id="more-actions-5"
                                        pullRight={true}
                                      >
                                        <Dropdown
                                          bsClass="dropdown"
                                          bsSize="small"
                                          componentClass={[Function]}
                                          id="more-actions-5"
                                          onToggle={[Function]}
                                          pullRight={true}
                                        >
                                          <ButtonGroup
                                            block={false}
                                            bsClass="btn-group"
                                            bsSize="small"
                                            className="dropdown"
                                            justified={false}
                                            vertical={false}
                                          >
                                            <div
                                              className="dropdown btn-group btn-group-sm"
                                            >
                                              <DropdownToggle
                                                bsClass="dropdown-toggle"
                                                bsRole="toggle"
                                                bsSize="small"
                                                className="DropdownButton-sc-1343dcx-0 jgZJTb"
                                                id="more-actions-5"
                                                key=".0"
                                                onClick={[Function]}
                                                onKeyDown={[Function]}
                                                open={false}
                                                useAnchor={false}
                                              >
                                                <Button
                                                  active={false}
                                                  aria-expanded={false}
                                                  aria-haspopup={true}
                                                  block={false}
                                                  bsClass="btn"
                                                  bsSize="small"
                                                  bsStyle="default"
                                                  className="DropdownButton-sc-1343dcx-0 jgZJTb dropdown-toggle"
                                                  disabled={false}
                                                  id="more-actions-5"
                                                  onClick={[Function]}
                                                  onKeyDown={[Function]}
                                                  role="button"
                                                >
                                                  <button
                                                    aria-expanded={false}
                                                    aria-haspopup={true}
                                                    className="DropdownButton-sc-1343dcx-0 jgZJTb dropdown-toggle btn btn-sm btn-default"
                                                    disabled={false}
                                                    id="more-actions-5"
                                                    onClick={[Function]}
                                                    onKeyDown={[Function]}
                                                    role="button"
                                                    type="button"
                                                  >
                                                    More Actions
                                                     
                                                    <span
                                                      className="caret"
                                                    />
                                                  </button>
                                                </Button>
                                              </DropdownToggle>
                                              <DropdownMenu
                                                bsClass="dropdown-menu"
                                                bsRole="menu"
                                                key=".1"
                                                labelledBy="more-actions-5"
                                                onClose={[Function]}
                                                onSelect={[Function]}
                                                pullRight={true}
                                              >
                                                <RootCloseWrapper
                                                  disabled={true}
                                                  event="click"
                                                  onRootClose={[Function]}
                                                >
                                                  <ul
                                                    aria-labelledby="more-actions-5"
                                                    className="dropdown-menu dropdown-menu-right"
                                                    role="menu"
                                                  >
                                                    <LinkContainer
                                                      action="push"
                                                      key=".0"
                                                      onKeyDown={[Function]}
                                                      onSelect={[Function]}
                                                      onlyActiveOnIndex={false}
                                                      to="/system/contentpacks/5"
                                                    >
                                                      <MenuItem
                                                        action="push"
                                                        bsClass="dropdown"
                                                        disabled={false}
                                                        divider={false}
                                                        header={false}
                                                        onClick={[Function]}
                                                        onKeyDown={[Function]}
                                                        onSelect={[Function]}
                                                      >
                                                        <li
                                                          className=""
                                                          role="presentation"
                                                        >
                                                          <SafeAnchor
                                                            action="push"
                                                            componentClass="a"
                                                            onClick={[Function]}
                                                            onKeyDown={[Function]}
                                                            role="menuitem"
                                                            tabIndex="-1"
                                                          >
                                                            <a
                                                              action="push"
                                                              href="#"
                                                              onClick={[Function]}
                                                              onKeyDown={[Function]}
                                                              role="menuitem"
                                                              tabIndex="-1"
                                                            >
                                                              Show
                                                            </a>
                                                          </SafeAnchor>
                                                        </li>
                                                      </MenuItem>
                                                    </LinkContainer>
                                                    <LinkContainer
                                                      action="push"
                                                      key=".1"
                                                      onKeyDown={[Function]}
                                                      onSelect={[Function]}
                                                      onlyActiveOnIndex={false}
                                                      to="/system/contentpacks/5/1/edit"
                                                    >
                                                      <MenuItem
                                                        action="push"
                                                        bsClass="dropdown"
                                                        disabled={false}
                                                        divider={false}
                                                        header={false}
                                                        onClick={[Function]}
                                                        onKeyDown={[Function]}
                                                        onSelect={[Function]}
                                                      >
                                                        <li
                                                          className=""
                                                          role="presentation"
                                                        >
                                                          <SafeAnchor
                                                            action="push"
                                                            componentClass="a"
                                                            onClick={[Function]}
                                                            onKeyDown={[Function]}
                                                            role="menuitem"
                                                            tabIndex="-1"
                                                          >
                                                            <a
                                                              action="push"
                                                              href="#"
                                                              onClick={[Function]}
                                                              onKeyDown={[Function]}
                                                              role="menuitem"
                                                              tabIndex="-1"
                                                            >
                                                              Create New Version
                                                            </a>
                                                          </SafeAnchor>
                                                        </li>
                                                      </MenuItem>
                                                    </LinkContainer>
                                                    <MenuItem
                                                      bsClass="dropdown"
                                                      disabled={false}
                                                      divider={false}
                                                      header={false}
                                                      key=".2"
                                                      onKeyDown={[Function]}
                                                      onSelect={[Function]}
                                                    >
                                                      <li
                                                        className=""
                                                        role="presentation"
                                                      >
                                                        <SafeAnchor
                                                          componentClass="a"
                                                          onClick={[Function]}
                                                          onKeyDown={[Function]}
                                                          role="menuitem"
                                                          tabIndex="-1"
                                                        >
                                                          <a
                                                            href="#"
                                                            onClick={[Function]}
                                                            onKeyDown={[Function]}
                                                            role="menuitem"
                                                            tabIndex="-1"
                                                          >
                                                            Download
                                                          </a>
                                                        </SafeAnchor>
                                                      </li>
                                                    </MenuItem>
                                                    <MenuItem
                                                      bsClass="dropdown"
                                                      disabled={false}
                                                      divider={true}
                                                      header={false}
                                                      key=".3"
                                                      onKeyDown={[Function]}
                                                      onSelect={[Function]}
                                                    >
                                                      <li
                                                        className="divider"
                                                        onKeyDown={[Function]}
                                                        role="separator"
                                                      />
                                                    </MenuItem>
                                                    <MenuItem
                                                      bsClass="dropdown"
                                                      disabled={false}
                                                      divider={false}
                                                      header={false}
                                                      key=".4"
                                                      onKeyDown={[Function]}
                                                      onSelect={[Function]}
                                                    >
                                                      <li
                                                        className=""
                                                        role="presentation"
                                                      >
                                                        <SafeAnchor
                                                          componentClass="a"
                                                          onClick={[Function]}
                                                          onKeyDown={[Function]}
                                                          role="menuitem"
                                                          tabIndex="-1"
                                                        >
                                                          <a
                                                            href="#"
                                                            onClick={[Function]}
                                                            onKeyDown={[Function]}
                                                            role="menuitem"
                                                            tabIndex="-1"
                                                          >
                                                            Delete All Versions
                                                          </a>
                                                        </SafeAnchor>
                                                      </li>
                                                    </MenuItem>
                                                  </ul>
                                                </RootCloseWrapper>
                                              </DropdownMenu>
                                            </div>
                                          </ButtonGroup>
                                        </Dropdown>
                                      </Uncontrolled(Dropdown)>
                                    </DropdownButton>
                                  </StyledComponent>
                                </DropdownButton>
                                <ContentPackDownloadControl
                                  contentPackId="5"
                                  revision={1}
                                >
                                  <BootstrapModalWrapper
                                    backdrop="static"
                                    bsSize="large"
                                    onClose={[Function]}
                                    onHide={[Function]}
                                    onOpen={[Function]}
                                    showModal={false}
                                  >
                                    <Modal
                                      backdrop="static"
                                      bsSize="large"
                                      onHide={[Function]}
                                      show={false}
                                    >
                                      <StyledComponent
                                        backdrop="static"
                                        bsSize="large"
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "BACKDROP_TRANSITION_DURATION": 150,
                                            "Body": [Function],
                                            "Dialog": [Function],
                                            "Footer": [Function],
                                            "Header": [Function],
                                            "SIZES": Array [
                                              "large",
                                              "small",
                                            ],
                                            "TRANSITION_DURATION": 300,
                                            "Title": [Function],
                                            "attrs": Array [],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "Modal-nuree8-0",
                                              "isStatic": true,
                                              "lastClassName": "cHlGak",
                                              "rules": Array [
                                                ".modal-content{background-color:",
                                                "#FFF",
                                                ";border-color:",
                                                "rgba(31,31,31,0.2)",
                                                ";.modal-header{border-bottom-color:",
                                                "#DCE1E5",
                                                ";}.modal-footer{border-top-color:",
                                                "#DCE1E5",
                                                ";}}",
                                              ],
                                            },
                                            "displayName": "Modal",
                                            "foldedComponentIds": Array [],
                                            "render": [Function],
                                            "styledComponentId": "Modal-nuree8-0",
                                            "target": [Function],
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                        onHide={[Function]}
                                        show={false}
                                      >
                                        <Modal
                                          animation={true}
                                          autoFocus={true}
                                          backdrop="static"
                                          bsClass="modal"
                                          bsSize="large"
                                          className="Modal-nuree8-0 cHlGak"
                                          dialogComponentClass={[Function]}
                                          enforceFocus={true}
                                          keyboard={true}
                                          manager={
                                            ModalManager {
                                              "add": [Function],
                                              "containers": Array [],
                                              "data": Array [],
                                              "handleContainerOverflow": true,
                                              "hideSiblingNodes": true,
                                              "isTopModal": [Function],
                                              "modals": Array [],
                                              "remove": [Function],
                                            }
                                          }
                                          onHide={[Function]}
                                          renderBackdrop={[Function]}
                                          restoreFocus={true}
                                          show={false}
                                        >
                                          <Modal
                                            autoFocus={true}
                                            backdrop="static"
                                            backdropClassName="modal-backdrop"
                                            backdropTransitionTimeout={150}
                                            containerClassName="modal-open"
                                            dialogTransitionTimeout={300}
                                            enforceFocus={true}
                                            keyboard={true}
                                            manager={
                                              ModalManager {
                                                "add": [Function],
                                                "containers": Array [],
                                                "data": Array [],
                                                "handleContainerOverflow": true,
                                                "hideSiblingNodes": true,
                                                "isTopModal": [Function],
                                                "modals": Array [],
                                                "remove": [Function],
                                              }
                                            }
                                            onEntering={[Function]}
                                            onExited={[Function]}
                                            onHide={[Function]}
                                            renderBackdrop={[Function]}
                                            restoreFocus={true}
                                            show={false}
                                            transition={[Function]}
                                          />
                                        </Modal>
                                      </StyledComponent>
                                    </Modal>
                                  </BootstrapModalWrapper>
                                </ContentPackDownloadControl>
                              </div>
                            </Col>
                          </div>
                        </Row>
                        <Row
                          bsClass="row"
                          className="row-sm content-packs-summary"
                          componentClass="div"
                        >
                          <div
                            className="row-sm content-packs-summary row"
                          >
                            <Col
                              bsClass="col"
                              componentClass="div"
                              md={12}
                            >
                              <div
                                className="col-md-12"
                              >
                                Fast but insecure backup
                                 
                              </div>
                            </Col>
                          </div>
                        </Row>
                      </span>
                    </ListGroupItem>
                  </StyledComponent>
                </ListGroupItem>
              </ForwardRef>
            </ControlledTableListItem>
            <ControlledTableListItem
              key="6"
            >
              <ForwardRef>
                <ListGroupItem>
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "STYLES": Array [
                          "success",
                          "warning",
                          "danger",
                          "info",
                        ],
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "ListGroupItem-sc-1ky0joo-0",
                          "isStatic": false,
                          "lastClassName": "igGIXt",
                          "rules": Array [
                            [Function],
                          ],
                        },
                        "displayName": "ListGroupItem",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "ListGroupItem-sc-1ky0joo-0",
                        "target": [Function],
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <ListGroupItem
                      bsClass="list-group-item"
                      className="ListGroupItem-sc-1ky0joo-0 igGIXt"
                      listItem={false}
                    >
                      <span
                        className="ListGroupItem-sc-1ky0joo-0 igGIXt list-group-item"
                      >
                        <Row
                          bsClass="row"
                          className="row-sm"
                          componentClass="div"
                        >
                          <div
                            className="row-sm row"
                          >
                            <Col
                              bsClass="col"
                              componentClass="div"
                              md={9}
                            >
                              <div
                                className="col-md-9"
                              >
                                <h3>
                                  <Link
                                    onlyActiveOnIndex={false}
                                    style={Object {}}
                                    to="/system/contentpacks/6"
                                  >
                                    <a
                                      onClick={[Function]}
                                      style={Object {}}
                                    />
                                  </Link>
                                   
                                  <small>
                                    Latest Version: 
                                    1
                                     
                                    <ContentPackStatus
                                      contentPackId="6"
                                      states={Array []}
                                    >
                                      <span />
                                    </ContentPackStatus>
                                     
                                  </small>
                                </h3>
                              </div>
                            </Col>
                            <Col
                              bsClass="col"
                              className="text-right"
                              componentClass="div"
                              md={3}
                            >
                              <div
                                className="text-right col-md-3"
                              >
                                 
                                <ForwardRef
                                  bsSize="small"
                                  bsStyle="info"
                                  onClick={[Function]}
                                >
                                  <Button
                                    bsSize="small"
                                    bsStyle="info"
                                    onClick={[Function]}
                                  >
                                    <StyledComponent
                                      bsSize="small"
                                      bsStyle="info"
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "SIZES": Array [
                                            "large",
                                            "small",
                                            "xsmall",
                                          ],
                                          "STYLES": Array [
                                            "success",
                                            "warning",
                                            "danger",
                                            "info",
                                            "default",
                                            "primary",
                                            "link",
                                          ],
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "Button-c9cbmb-0",
                                            "isStatic": false,
                                            "lastClassName": "gZfKUo",
                                            "rules": Array [
                                              [Function],
                                            ],
                                          },
                                          "displayName": "Button",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "Button-c9cbmb-0",
                                          "target": [Function],
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                      onClick={[Function]}
                                    >
                                      <Button
                                        active={false}
                                        block={false}
                                        bsClass="btn"
                                        bsSize="small"
                                        bsStyle="info"
                                        className="Button-c9cbmb-0 gZfKUo"
                                        disabled={false}
                                        onClick={[Function]}
                                      >
                                        <button
                                          className="Button-c9cbmb-0 gZfKUo btn btn-sm btn-info"
                                          disabled={false}
                                          onClick={[Function]}
                                          type="button"
                                        >
                                          Install
                                        </button>
                                      </Button>
                                    </StyledComponent>
                                  </Button>
                                </ForwardRef>
                                <BootstrapModalWrapper
                                  backdrop="static"
                                  bsSize="large"
                                  onClose={[Function]}
                                  onHide={[Function]}
                                  onOpen={[Function]}
                                  showModal={false}
                                >
                                  <Modal
                                    backdrop="static"
                                    bsSize="large"
                                    onHide={[Function]}
                                    show={false}
                                  >
                                    <StyledComponent
                                      backdrop="static"
                                      bsSize="large"
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "BACKDROP_TRANSITION_DURATION": 150,
                                          "Body": [Function],
                                          "Dialog": [Function],
                                          "Footer": [Function],
                                          "Header": [Function],
                                          "SIZES": Array [
                                            "large",
                                            "small",
                                          ],
                                          "TRANSITION_DURATION": 300,
                                          "Title": [Function],
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "Modal-nuree8-0",
                                            "isStatic": true,
                                            "lastClassName": "cHlGak",
                                            "rules": Array [
                                              ".modal-content{background-color:",
                                              "#FFF",
                                              ";border-color:",
                                              "rgba(31,31,31,0.2)",
                                              ";.modal-header{border-bottom-color:",
                                              "#DCE1E5",
                                              ";}.modal-footer{border-top-color:",
                                              "#DCE1E5",
                                              ";}}",
                                            ],
                                          },
                                          "displayName": "Modal",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "Modal-nuree8-0",
                                          "target": [Function],
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                      onHide={[Function]}
                                      show={false}
                                    >
                                      <Modal
                                        animation={true}
                                        autoFocus={true}
                                        backdrop="static"
                                        bsClass="modal"
                                        bsSize="large"
                                        className="Modal-nuree8-0 cHlGak"
                                        dialogComponentClass={[Function]}
                                        enforceFocus={true}
                                        keyboard={true}
                                        manager={
                                          ModalManager {
                                            "add": [Function],
                                            "containers": Array [],
                                            "data": Array [],
                                            "handleContainerOverflow": true,
                                            "hideSiblingNodes": true,
                                            "isTopModal": [Function],
                                            "modals": Array [],
                                            "remove": [Function],
                                          }
                                        }
                                        onHide={[Function]}
                                        renderBackdrop={[Function]}
                                        restoreFocus={true}
                                        show={false}
                                      >
                                        <Modal
                                          autoFocus={true}
                                          backdrop="static"
                                          backdropClassName="modal-backdrop"
                                          backdropTransitionTimeout={150}
                                          containerClassName="modal-open"
                                          dialogTransitionTimeout={300}
                                          enforceFocus={true}
                                          keyboard={true}
                                          manager={
                                            ModalManager {
                                              "add": [Function],
                                              "containers": Array [],
                                              "data": Array [],
                                              "handleContainerOverflow": true,
                                              "hideSiblingNodes": true,
                                              "isTopModal": [Function],
                                              "modals": Array [],
                                              "remove": [Function],
                                            }
                                          }
                                          onEntering={[Function]}
                                          onExited={[Function]}
                                          onHide={[Function]}
                                          renderBackdrop={[Function]}
                                          restoreFocus={true}
                                          show={false}
                                          transition={[Function]}
                                        />
                                      </Modal>
                                    </StyledComponent>
                                  </Modal>
                                </BootstrapModalWrapper>
                                 
                                <DropdownButton
                                  bsSize="small"
                                  id="more-actions-6"
                                  pullRight={true}
                                  title="More Actions"
                                >
                                  <StyledComponent
                                    bsSize="small"
                                    forwardedComponent={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "attrs": Array [],
                                        "componentStyle": ComponentStyle {
                                          "componentId": "DropdownButton-sc-1343dcx-0",
                                          "isStatic": false,
                                          "lastClassName": "jgZJTb",
                                          "rules": Array [
                                            [Function],
                                            ";",
                                            "& ~",
                                            " .dropdown-menu{> li > a{color:",
                                            "#1F1F1F",
                                            ";:hover,:focus{color:",
                                            "#484848",
                                            ";background-color:",
                                            "#F1F2F2",
                                            ";}}> .active > a{background-color:",
                                            "#6DC6E7",
                                            ";color:",
                                            "#f7fcfd",
                                            ";:hover,:focus{background-color:",
                                            "#16ACE3",
                                            ";color:",
                                            "#f3fafd",
                                            ";}}> .disabled > a{color:",
                                            "#8f8f8f",
                                            ";:hover,:focus{background-color:",
                                            "#F1F2F2",
                                            ";color:",
                                            "#b0b0b0",
                                            ";}}}",
                                            ";",
                                          ],
                                        },
                                        "displayName": "DropdownButton",
                                        "foldedComponentIds": Array [],
                                        "render": [Function],
                                        "styledComponentId": "DropdownButton-sc-1343dcx-0",
                                        "target": [Function],
                                        "toString": [Function],
                                        "warnTooManyClasses": [Function],
                                        "withComponent": [Function],
                                      }
                                    }
                                    forwardedRef={null}
                                    id="more-actions-6"
                                    pullRight={true}
                                    title="More Actions"
                                  >
                                    <DropdownButton
                                      bsSize="small"
                                      className="DropdownButton-sc-1343dcx-0 jgZJTb"
                                      id="more-actions-6"
                                      pullRight={true}
                                      title="More Actions"
                                    >
                                      <Uncontrolled(Dropdown)
                                        bsSize="small"
                                        id="more-actions-6"
                                        pullRight={true}
                                      >
                                        <Dropdown
                                          bsClass="dropdown"
                                          bsSize="small"
                                          componentClass={[Function]}
                                          id="more-actions-6"
                                          onToggle={[Function]}
                                          pullRight={true}
                                        >
                                          <ButtonGroup
                                            block={false}
                                            bsClass="btn-group"
                                            bsSize="small"
                                            className="dropdown"
                                            justified={false}
                                            vertical={false}
                                          >
                                            <div
                                              className="dropdown btn-group btn-group-sm"
                                            >
                                              <DropdownToggle
                                                bsClass="dropdown-toggle"
                                                bsRole="toggle"
                                                bsSize="small"
                                                className="DropdownButton-sc-1343dcx-0 jgZJTb"
                                                id="more-actions-6"
                                                key=".0"
                                                onClick={[Function]}
                                                onKeyDown={[Function]}
                                                open={false}
                                                useAnchor={false}
                                              >
                                                <Button
                                                  active={false}
                                                  aria-expanded={false}
                                                  aria-haspopup={true}
                                                  block={false}
                                                  bsClass="btn"
                                                  bsSize="small"
                                                  bsStyle="default"
                                                  className="DropdownButton-sc-1343dcx-0 jgZJTb dropdown-toggle"
                                                  disabled={false}
                                                  id="more-actions-6"
                                                  onClick={[Function]}
                                                  onKeyDown={[Function]}
                                                  role="button"
                                                >
                                                  <button
                                                    aria-expanded={false}
                                                    aria-haspopup={true}
                                                    className="DropdownButton-sc-1343dcx-0 jgZJTb dropdown-toggle btn btn-sm btn-default"
                                                    disabled={false}
                                                    id="more-actions-6"
                                                    onClick={[Function]}
                                                    onKeyDown={[Function]}
                                                    role="button"
                                                    type="button"
                                                  >
                                                    More Actions
                                                     
                                                    <span
                                                      className="caret"
                                                    />
                                                  </button>
                                                </Button>
                                              </DropdownToggle>
                                              <DropdownMenu
                                                bsClass="dropdown-menu"
                                                bsRole="menu"
                                                key=".1"
                                                labelledBy="more-actions-6"
                                                onClose={[Function]}
                                                onSelect={[Function]}
                                                pullRight={true}
                                              >
                                                <RootCloseWrapper
                                                  disabled={true}
                                                  event="click"
                                                  onRootClose={[Function]}
                                                >
                                                  <ul
                                                    aria-labelledby="more-actions-6"
                                                    className="dropdown-menu dropdown-menu-right"
                                                    role="menu"
                                                  >
                                                    <LinkContainer
                                                      action="push"
                                                      key=".0"
                                                      onKeyDown={[Function]}
                                                      onSelect={[Function]}
                                                      onlyActiveOnIndex={false}
                                                      to="/system/contentpacks/6"
                                                    >
                                                      <MenuItem
                                                        action="push"
                                                        bsClass="dropdown"
                                                        disabled={false}
                                                        divider={false}
                                                        header={false}
                                                        onClick={[Function]}
                                                        onKeyDown={[Function]}
                                                        onSelect={[Function]}
                                                      >
                                                        <li
                                                          className=""
                                                          role="presentation"
                                                        >
                                                          <SafeAnchor
                                                            action="push"
                                                            componentClass="a"
                                                            onClick={[Function]}
                                                            onKeyDown={[Function]}
                                                            role="menuitem"
                                                            tabIndex="-1"
                                                          >
                                                            <a
                                                              action="push"
                                                              href="#"
                                                              onClick={[Function]}
                                                              onKeyDown={[Function]}
                                                              role="menuitem"
                                                              tabIndex="-1"
                                                            >
                                                              Show
                                                            </a>
                                                          </SafeAnchor>
                                                        </li>
                                                      </MenuItem>
                                                    </LinkContainer>
                                                    <LinkContainer
                                                      action="push"
                                                      key=".1"
                                                      onKeyDown={[Function]}
                                                      onSelect={[Function]}
                                                      onlyActiveOnIndex={false}
                                                      to="/system/contentpacks/6/1/edit"
                                                    >
                                                      <MenuItem
                                                        action="push"
                                                        bsClass="dropdown"
                                                        disabled={false}
                                                        divider={false}
                                                        header={false}
                                                        onClick={[Function]}
                                                        onKeyDown={[Function]}
                                                        onSelect={[Function]}
                                                      >
                                                        <li
                                                          className=""
                                                          role="presentation"
                                                        >
                                                          <SafeAnchor
                                                            action="push"
                                                            componentClass="a"
                                                            onClick={[Function]}
                                                            onKeyDown={[Function]}
                                                            role="menuitem"
                                                            tabIndex="-1"
                                                          >
                                                            <a
                                                              action="push"
                                                              href="#"
                                                              onClick={[Function]}
                                                              onKeyDown={[Function]}
                                                              role="menuitem"
                                                              tabIndex="-1"
                                                            >
                                                              Create New Version
                                                            </a>
                                                          </SafeAnchor>
                                                        </li>
                                                      </MenuItem>
                                                    </LinkContainer>
                                                    <MenuItem
                                                      bsClass="dropdown"
                                                      disabled={false}
                                                      divider={false}
                                                      header={false}
                                                      key=".2"
                                                      onKeyDown={[Function]}
                                                      onSelect={[Function]}
                                                    >
                                                      <li
                                                        className=""
                                                        role="presentation"
                                                      >
                                                        <SafeAnchor
                                                          componentClass="a"
                                                          onClick={[Function]}
                                                          onKeyDown={[Function]}
                                                          role="menuitem"
                                                          tabIndex="-1"
                                                        >
                                                          <a
                                                            href="#"
                                                            onClick={[Function]}
                                                            onKeyDown={[Function]}
                                                            role="menuitem"
                                                            tabIndex="-1"
                                                          >
                                                            Download
                                                          </a>
                                                        </SafeAnchor>
                                                      </li>
                                                    </MenuItem>
                                                    <MenuItem
                                                      bsClass="dropdown"
                                                      disabled={false}
                                                      divider={true}
                                                      header={false}
                                                      key=".3"
                                                      onKeyDown={[Function]}
                                                      onSelect={[Function]}
                                                    >
                                                      <li
                                                        className="divider"
                                                        onKeyDown={[Function]}
                                                        role="separator"
                                                      />
                                                    </MenuItem>
                                                    <MenuItem
                                                      bsClass="dropdown"
                                                      disabled={false}
                                                      divider={false}
                                                      header={false}
                                                      key=".4"
                                                      onKeyDown={[Function]}
                                                      onSelect={[Function]}
                                                    >
                                                      <li
                                                        className=""
                                                        role="presentation"
                                                      >
                                                        <SafeAnchor
                                                          componentClass="a"
                                                          onClick={[Function]}
                                                          onKeyDown={[Function]}
                                                          role="menuitem"
                                                          tabIndex="-1"
                                                        >
                                                          <a
                                                            href="#"
                                                            onClick={[Function]}
                                                            onKeyDown={[Function]}
                                                            role="menuitem"
                                                            tabIndex="-1"
                                                          >
                                                            Delete All Versions
                                                          </a>
                                                        </SafeAnchor>
                                                      </li>
                                                    </MenuItem>
                                                  </ul>
                                                </RootCloseWrapper>
                                              </DropdownMenu>
                                            </div>
                                          </ButtonGroup>
                                        </Dropdown>
                                      </Uncontrolled(Dropdown)>
                                    </DropdownButton>
                                  </StyledComponent>
                                </DropdownButton>
                                <ContentPackDownloadControl
                                  contentPackId="6"
                                  revision={1}
                                >
                                  <BootstrapModalWrapper
                                    backdrop="static"
                                    bsSize="large"
                                    onClose={[Function]}
                                    onHide={[Function]}
                                    onOpen={[Function]}
                                    showModal={false}
                                  >
                                    <Modal
                                      backdrop="static"
                                      bsSize="large"
                                      onHide={[Function]}
                                      show={false}
                                    >
                                      <StyledComponent
                                        backdrop="static"
                                        bsSize="large"
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "BACKDROP_TRANSITION_DURATION": 150,
                                            "Body": [Function],
                                            "Dialog": [Function],
                                            "Footer": [Function],
                                            "Header": [Function],
                                            "SIZES": Array [
                                              "large",
                                              "small",
                                            ],
                                            "TRANSITION_DURATION": 300,
                                            "Title": [Function],
                                            "attrs": Array [],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "Modal-nuree8-0",
                                              "isStatic": true,
                                              "lastClassName": "cHlGak",
                                              "rules": Array [
                                                ".modal-content{background-color:",
                                                "#FFF",
                                                ";border-color:",
                                                "rgba(31,31,31,0.2)",
                                                ";.modal-header{border-bottom-color:",
                                                "#DCE1E5",
                                                ";}.modal-footer{border-top-color:",
                                                "#DCE1E5",
                                                ";}}",
                                              ],
                                            },
                                            "displayName": "Modal",
                                            "foldedComponentIds": Array [],
                                            "render": [Function],
                                            "styledComponentId": "Modal-nuree8-0",
                                            "target": [Function],
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                        onHide={[Function]}
                                        show={false}
                                      >
                                        <Modal
                                          animation={true}
                                          autoFocus={true}
                                          backdrop="static"
                                          bsClass="modal"
                                          bsSize="large"
                                          className="Modal-nuree8-0 cHlGak"
                                          dialogComponentClass={[Function]}
                                          enforceFocus={true}
                                          keyboard={true}
                                          manager={
                                            ModalManager {
                                              "add": [Function],
                                              "containers": Array [],
                                              "data": Array [],
                                              "handleContainerOverflow": true,
                                              "hideSiblingNodes": true,
                                              "isTopModal": [Function],
                                              "modals": Array [],
                                              "remove": [Function],
                                            }
                                          }
                                          onHide={[Function]}
                                          renderBackdrop={[Function]}
                                          restoreFocus={true}
                                          show={false}
                                        >
                                          <Modal
                                            autoFocus={true}
                                            backdrop="static"
                                            backdropClassName="modal-backdrop"
                                            backdropTransitionTimeout={150}
                                            containerClassName="modal-open"
                                            dialogTransitionTimeout={300}
                                            enforceFocus={true}
                                            keyboard={true}
                                            manager={
                                              ModalManager {
                                                "add": [Function],
                                                "containers": Array [],
                                                "data": Array [],
                                                "handleContainerOverflow": true,
                                                "hideSiblingNodes": true,
                                                "isTopModal": [Function],
                                                "modals": Array [],
                                                "remove": [Function],
                                              }
                                            }
                                            onEntering={[Function]}
                                            onExited={[Function]}
                                            onHide={[Function]}
                                            renderBackdrop={[Function]}
                                            restoreFocus={true}
                                            show={false}
                                            transition={[Function]}
                                          />
                                        </Modal>
                                      </StyledComponent>
                                    </Modal>
                                  </BootstrapModalWrapper>
                                </ContentPackDownloadControl>
                              </div>
                            </Col>
                          </div>
                        </Row>
                        <Row
                          bsClass="row"
                          className="row-sm content-packs-summary"
                          componentClass="div"
                        >
                          <div
                            className="row-sm content-packs-summary row"
                          >
                            <Col
                              bsClass="col"
                              componentClass="div"
                              md={12}
                            >
                              <div
                                className="col-md-12"
                              >
                                Grok Patterns to extract informations from UFW logfiles
                                 
                              </div>
                            </Col>
                          </div>
                        </Row>
                      </span>
                    </ListGroupItem>
                  </StyledComponent>
                </ListGroupItem>
              </ForwardRef>
            </ControlledTableListItem>
            <ControlledTableListItem
              key="7"
            >
              <ForwardRef>
                <ListGroupItem>
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "STYLES": Array [
                          "success",
                          "warning",
                          "danger",
                          "info",
                        ],
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "ListGroupItem-sc-1ky0joo-0",
                          "isStatic": false,
                          "lastClassName": "igGIXt",
                          "rules": Array [
                            [Function],
                          ],
                        },
                        "displayName": "ListGroupItem",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "ListGroupItem-sc-1ky0joo-0",
                        "target": [Function],
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <ListGroupItem
                      bsClass="list-group-item"
                      className="ListGroupItem-sc-1ky0joo-0 igGIXt"
                      listItem={false}
                    >
                      <span
                        className="ListGroupItem-sc-1ky0joo-0 igGIXt list-group-item"
                      >
                        <Row
                          bsClass="row"
                          className="row-sm"
                          componentClass="div"
                        >
                          <div
                            className="row-sm row"
                          >
                            <Col
                              bsClass="col"
                              componentClass="div"
                              md={9}
                            >
                              <div
                                className="col-md-9"
                              >
                                <h3>
                                  <Link
                                    onlyActiveOnIndex={false}
                                    style={Object {}}
                                    to="/system/contentpacks/7"
                                  >
                                    <a
                                      onClick={[Function]}
                                      style={Object {}}
                                    />
                                  </Link>
                                   
                                  <small>
                                    Latest Version: 
                                    1
                                     
                                    <ContentPackStatus
                                      contentPackId="7"
                                      states={Array []}
                                    >
                                      <span />
                                    </ContentPackStatus>
                                     
                                  </small>
                                </h3>
                              </div>
                            </Col>
                            <Col
                              bsClass="col"
                              className="text-right"
                              componentClass="div"
                              md={3}
                            >
                              <div
                                className="text-right col-md-3"
                              >
                                 
                                <ForwardRef
                                  bsSize="small"
                                  bsStyle="info"
                                  onClick={[Function]}
                                >
                                  <Button
                                    bsSize="small"
                                    bsStyle="info"
                                    onClick={[Function]}
                                  >
                                    <StyledComponent
                                      bsSize="small"
                                      bsStyle="info"
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "SIZES": Array [
                                            "large",
                                            "small",
                                            "xsmall",
                                          ],
                                          "STYLES": Array [
                                            "success",
                                            "warning",
                                            "danger",
                                            "info",
                                            "default",
                                            "primary",
                                            "link",
                                          ],
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "Button-c9cbmb-0",
                                            "isStatic": false,
                                            "lastClassName": "gZfKUo",
                                            "rules": Array [
                                              [Function],
                                            ],
                                          },
                                          "displayName": "Button",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "Button-c9cbmb-0",
                                          "target": [Function],
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                      onClick={[Function]}
                                    >
                                      <Button
                                        active={false}
                                        block={false}
                                        bsClass="btn"
                                        bsSize="small"
                                        bsStyle="info"
                                        className="Button-c9cbmb-0 gZfKUo"
                                        disabled={false}
                                        onClick={[Function]}
                                      >
                                        <button
                                          className="Button-c9cbmb-0 gZfKUo btn btn-sm btn-info"
                                          disabled={false}
                                          onClick={[Function]}
                                          type="button"
                                        >
                                          Install
                                        </button>
                                      </Button>
                                    </StyledComponent>
                                  </Button>
                                </ForwardRef>
                                <BootstrapModalWrapper
                                  backdrop="static"
                                  bsSize="large"
                                  onClose={[Function]}
                                  onHide={[Function]}
                                  onOpen={[Function]}
                                  showModal={false}
                                >
                                  <Modal
                                    backdrop="static"
                                    bsSize="large"
                                    onHide={[Function]}
                                    show={false}
                                  >
                                    <StyledComponent
                                      backdrop="static"
                                      bsSize="large"
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "BACKDROP_TRANSITION_DURATION": 150,
                                          "Body": [Function],
                                          "Dialog": [Function],
                                          "Footer": [Function],
                                          "Header": [Function],
                                          "SIZES": Array [
                                            "large",
                                            "small",
                                          ],
                                          "TRANSITION_DURATION": 300,
                                          "Title": [Function],
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "Modal-nuree8-0",
                                            "isStatic": true,
                                            "lastClassName": "cHlGak",
                                            "rules": Array [
                                              ".modal-content{background-color:",
                                              "#FFF",
                                              ";border-color:",
                                              "rgba(31,31,31,0.2)",
                                              ";.modal-header{border-bottom-color:",
                                              "#DCE1E5",
                                              ";}.modal-footer{border-top-color:",
                                              "#DCE1E5",
                                              ";}}",
                                            ],
                                          },
                                          "displayName": "Modal",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "Modal-nuree8-0",
                                          "target": [Function],
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                      onHide={[Function]}
                                      show={false}
                                    >
                                      <Modal
                                        animation={true}
                                        autoFocus={true}
                                        backdrop="static"
                                        bsClass="modal"
                                        bsSize="large"
                                        className="Modal-nuree8-0 cHlGak"
                                        dialogComponentClass={[Function]}
                                        enforceFocus={true}
                                        keyboard={true}
                                        manager={
                                          ModalManager {
                                            "add": [Function],
                                            "containers": Array [],
                                            "data": Array [],
                                            "handleContainerOverflow": true,
                                            "hideSiblingNodes": true,
                                            "isTopModal": [Function],
                                            "modals": Array [],
                                            "remove": [Function],
                                          }
                                        }
                                        onHide={[Function]}
                                        renderBackdrop={[Function]}
                                        restoreFocus={true}
                                        show={false}
                                      >
                                        <Modal
                                          autoFocus={true}
                                          backdrop="static"
                                          backdropClassName="modal-backdrop"
                                          backdropTransitionTimeout={150}
                                          containerClassName="modal-open"
                                          dialogTransitionTimeout={300}
                                          enforceFocus={true}
                                          keyboard={true}
                                          manager={
                                            ModalManager {
                                              "add": [Function],
                                              "containers": Array [],
                                              "data": Array [],
                                              "handleContainerOverflow": true,
                                              "hideSiblingNodes": true,
                                              "isTopModal": [Function],
                                              "modals": Array [],
                                              "remove": [Function],
                                            }
                                          }
                                          onEntering={[Function]}
                                          onExited={[Function]}
                                          onHide={[Function]}
                                          renderBackdrop={[Function]}
                                          restoreFocus={true}
                                          show={false}
                                          transition={[Function]}
                                        />
                                      </Modal>
                                    </StyledComponent>
                                  </Modal>
                                </BootstrapModalWrapper>
                                 
                                <DropdownButton
                                  bsSize="small"
                                  id="more-actions-7"
                                  pullRight={true}
                                  title="More Actions"
                                >
                                  <StyledComponent
                                    bsSize="small"
                                    forwardedComponent={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "attrs": Array [],
                                        "componentStyle": ComponentStyle {
                                          "componentId": "DropdownButton-sc-1343dcx-0",
                                          "isStatic": false,
                                          "lastClassName": "jgZJTb",
                                          "rules": Array [
                                            [Function],
                                            ";",
                                            "& ~",
                                            " .dropdown-menu{> li > a{color:",
                                            "#1F1F1F",
                                            ";:hover,:focus{color:",
                                            "#484848",
                                            ";background-color:",
                                            "#F1F2F2",
                                            ";}}> .active > a{background-color:",
                                            "#6DC6E7",
                                            ";color:",
                                            "#f7fcfd",
                                            ";:hover,:focus{background-color:",
                                            "#16ACE3",
                                            ";color:",
                                            "#f3fafd",
                                            ";}}> .disabled > a{color:",
                                            "#8f8f8f",
                                            ";:hover,:focus{background-color:",
                                            "#F1F2F2",
                                            ";color:",
                                            "#b0b0b0",
                                            ";}}}",
                                            ";",
                                          ],
                                        },
                                        "displayName": "DropdownButton",
                                        "foldedComponentIds": Array [],
                                        "render": [Function],
                                        "styledComponentId": "DropdownButton-sc-1343dcx-0",
                                        "target": [Function],
                                        "toString": [Function],
                                        "warnTooManyClasses": [Function],
                                        "withComponent": [Function],
                                      }
                                    }
                                    forwardedRef={null}
                                    id="more-actions-7"
                                    pullRight={true}
                                    title="More Actions"
                                  >
                                    <DropdownButton
                                      bsSize="small"
                                      className="DropdownButton-sc-1343dcx-0 jgZJTb"
                                      id="more-actions-7"
                                      pullRight={true}
                                      title="More Actions"
                                    >
                                      <Uncontrolled(Dropdown)
                                        bsSize="small"
                                        id="more-actions-7"
                                        pullRight={true}
                                      >
                                        <Dropdown
                                          bsClass="dropdown"
                                          bsSize="small"
                                          componentClass={[Function]}
                                          id="more-actions-7"
                                          onToggle={[Function]}
                                          pullRight={true}
                                        >
                                          <ButtonGroup
                                            block={false}
                                            bsClass="btn-group"
                                            bsSize="small"
                                            className="dropdown"
                                            justified={false}
                                            vertical={false}
                                          >
                                            <div
                                              className="dropdown btn-group btn-group-sm"
                                            >
                                              <DropdownToggle
                                                bsClass="dropdown-toggle"
                                                bsRole="toggle"
                                                bsSize="small"
                                                className="DropdownButton-sc-1343dcx-0 jgZJTb"
                                                id="more-actions-7"
                                                key=".0"
                                                onClick={[Function]}
                                                onKeyDown={[Function]}
                                                open={false}
                                                useAnchor={false}
                                              >
                                                <Button
                                                  active={false}
                                                  aria-expanded={false}
                                                  aria-haspopup={true}
                                                  block={false}
                                                  bsClass="btn"
                                                  bsSize="small"
                                                  bsStyle="default"
                                                  className="DropdownButton-sc-1343dcx-0 jgZJTb dropdown-toggle"
                                                  disabled={false}
                                                  id="more-actions-7"
                                                  onClick={[Function]}
                                                  onKeyDown={[Function]}
                                                  role="button"
                                                >
                                                  <button
                                                    aria-expanded={false}
                                                    aria-haspopup={true}
                                                    className="DropdownButton-sc-1343dcx-0 jgZJTb dropdown-toggle btn btn-sm btn-default"
                                                    disabled={false}
                                                    id="more-actions-7"
                                                    onClick={[Function]}
                                                    onKeyDown={[Function]}
                                                    role="button"
                                                    type="button"
                                                  >
                                                    More Actions
                                                     
                                                    <span
                                                      className="caret"
                                                    />
                                                  </button>
                                                </Button>
                                              </DropdownToggle>
                                              <DropdownMenu
                                                bsClass="dropdown-menu"
                                                bsRole="menu"
                                                key=".1"
                                                labelledBy="more-actions-7"
                                                onClose={[Function]}
                                                onSelect={[Function]}
                                                pullRight={true}
                                              >
                                                <RootCloseWrapper
                                                  disabled={true}
                                                  event="click"
                                                  onRootClose={[Function]}
                                                >
                                                  <ul
                                                    aria-labelledby="more-actions-7"
                                                    className="dropdown-menu dropdown-menu-right"
                                                    role="menu"
                                                  >
                                                    <LinkContainer
                                                      action="push"
                                                      key=".0"
                                                      onKeyDown={[Function]}
                                                      onSelect={[Function]}
                                                      onlyActiveOnIndex={false}
                                                      to="/system/contentpacks/7"
                                                    >
                                                      <MenuItem
                                                        action="push"
                                                        bsClass="dropdown"
                                                        disabled={false}
                                                        divider={false}
                                                        header={false}
                                                        onClick={[Function]}
                                                        onKeyDown={[Function]}
                                                        onSelect={[Function]}
                                                      >
                                                        <li
                                                          className=""
                                                          role="presentation"
                                                        >
                                                          <SafeAnchor
                                                            action="push"
                                                            componentClass="a"
                                                            onClick={[Function]}
                                                            onKeyDown={[Function]}
                                                            role="menuitem"
                                                            tabIndex="-1"
                                                          >
                                                            <a
                                                              action="push"
                                                              href="#"
                                                              onClick={[Function]}
                                                              onKeyDown={[Function]}
                                                              role="menuitem"
                                                              tabIndex="-1"
                                                            >
                                                              Show
                                                            </a>
                                                          </SafeAnchor>
                                                        </li>
                                                      </MenuItem>
                                                    </LinkContainer>
                                                    <LinkContainer
                                                      action="push"
                                                      key=".1"
                                                      onKeyDown={[Function]}
                                                      onSelect={[Function]}
                                                      onlyActiveOnIndex={false}
                                                      to="/system/contentpacks/7/1/edit"
                                                    >
                                                      <MenuItem
                                                        action="push"
                                                        bsClass="dropdown"
                                                        disabled={false}
                                                        divider={false}
                                                        header={false}
                                                        onClick={[Function]}
                                                        onKeyDown={[Function]}
                                                        onSelect={[Function]}
                                                      >
                                                        <li
                                                          className=""
                                                          role="presentation"
                                                        >
                                                          <SafeAnchor
                                                            action="push"
                                                            componentClass="a"
                                                            onClick={[Function]}
                                                            onKeyDown={[Function]}
                                                            role="menuitem"
                                                            tabIndex="-1"
                                                          >
                                                            <a
                                                              action="push"
                                                              href="#"
                                                              onClick={[Function]}
                                                              onKeyDown={[Function]}
                                                              role="menuitem"
                                                              tabIndex="-1"
                                                            >
                                                              Create New Version
                                                            </a>
                                                          </SafeAnchor>
                                                        </li>
                                                      </MenuItem>
                                                    </LinkContainer>
                                                    <MenuItem
                                                      bsClass="dropdown"
                                                      disabled={false}
                                                      divider={false}
                                                      header={false}
                                                      key=".2"
                                                      onKeyDown={[Function]}
                                                      onSelect={[Function]}
                                                    >
                                                      <li
                                                        className=""
                                                        role="presentation"
                                                      >
                                                        <SafeAnchor
                                                          componentClass="a"
                                                          onClick={[Function]}
                                                          onKeyDown={[Function]}
                                                          role="menuitem"
                                                          tabIndex="-1"
                                                        >
                                                          <a
                                                            href="#"
                                                            onClick={[Function]}
                                                            onKeyDown={[Function]}
                                                            role="menuitem"
                                                            tabIndex="-1"
                                                          >
                                                            Download
                                                          </a>
                                                        </SafeAnchor>
                                                      </li>
                                                    </MenuItem>
                                                    <MenuItem
                                                      bsClass="dropdown"
                                                      disabled={false}
                                                      divider={true}
                                                      header={false}
                                                      key=".3"
                                                      onKeyDown={[Function]}
                                                      onSelect={[Function]}
                                                    >
                                                      <li
                                                        className="divider"
                                                        onKeyDown={[Function]}
                                                        role="separator"
                                                      />
                                                    </MenuItem>
                                                    <MenuItem
                                                      bsClass="dropdown"
                                                      disabled={false}
                                                      divider={false}
                                                      header={false}
                                                      key=".4"
                                                      onKeyDown={[Function]}
                                                      onSelect={[Function]}
                                                    >
                                                      <li
                                                        className=""
                                                        role="presentation"
                                                      >
                                                        <SafeAnchor
                                                          componentClass="a"
                                                          onClick={[Function]}
                                                          onKeyDown={[Function]}
                                                          role="menuitem"
                                                          tabIndex="-1"
                                                        >
                                                          <a
                                                            href="#"
                                                            onClick={[Function]}
                                                            onKeyDown={[Function]}
                                                            role="menuitem"
                                                            tabIndex="-1"
                                                          >
                                                            Delete All Versions
                                                          </a>
                                                        </SafeAnchor>
                                                      </li>
                                                    </MenuItem>
                                                  </ul>
                                                </RootCloseWrapper>
                                              </DropdownMenu>
                                            </div>
                                          </ButtonGroup>
                                        </Dropdown>
                                      </Uncontrolled(Dropdown)>
                                    </DropdownButton>
                                  </StyledComponent>
                                </DropdownButton>
                                <ContentPackDownloadControl
                                  contentPackId="7"
                                  revision={1}
                                >
                                  <BootstrapModalWrapper
                                    backdrop="static"
                                    bsSize="large"
                                    onClose={[Function]}
                                    onHide={[Function]}
                                    onOpen={[Function]}
                                    showModal={false}
                                  >
                                    <Modal
                                      backdrop="static"
                                      bsSize="large"
                                      onHide={[Function]}
                                      show={false}
                                    >
                                      <StyledComponent
                                        backdrop="static"
                                        bsSize="large"
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "BACKDROP_TRANSITION_DURATION": 150,
                                            "Body": [Function],
                                            "Dialog": [Function],
                                            "Footer": [Function],
                                            "Header": [Function],
                                            "SIZES": Array [
                                              "large",
                                              "small",
                                            ],
                                            "TRANSITION_DURATION": 300,
                                            "Title": [Function],
                                            "attrs": Array [],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "Modal-nuree8-0",
                                              "isStatic": true,
                                              "lastClassName": "cHlGak",
                                              "rules": Array [
                                                ".modal-content{background-color:",
                                                "#FFF",
                                                ";border-color:",
                                                "rgba(31,31,31,0.2)",
                                                ";.modal-header{border-bottom-color:",
                                                "#DCE1E5",
                                                ";}.modal-footer{border-top-color:",
                                                "#DCE1E5",
                                                ";}}",
                                              ],
                                            },
                                            "displayName": "Modal",
                                            "foldedComponentIds": Array [],
                                            "render": [Function],
                                            "styledComponentId": "Modal-nuree8-0",
                                            "target": [Function],
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                        onHide={[Function]}
                                        show={false}
                                      >
                                        <Modal
                                          animation={true}
                                          autoFocus={true}
                                          backdrop="static"
                                          bsClass="modal"
                                          bsSize="large"
                                          className="Modal-nuree8-0 cHlGak"
                                          dialogComponentClass={[Function]}
                                          enforceFocus={true}
                                          keyboard={true}
                                          manager={
                                            ModalManager {
                                              "add": [Function],
                                              "containers": Array [],
                                              "data": Array [],
                                              "handleContainerOverflow": true,
                                              "hideSiblingNodes": true,
                                              "isTopModal": [Function],
                                              "modals": Array [],
                                              "remove": [Function],
                                            }
                                          }
                                          onHide={[Function]}
                                          renderBackdrop={[Function]}
                                          restoreFocus={true}
                                          show={false}
                                        >
                                          <Modal
                                            autoFocus={true}
                                            backdrop="static"
                                            backdropClassName="modal-backdrop"
                                            backdropTransitionTimeout={150}
                                            containerClassName="modal-open"
                                            dialogTransitionTimeout={300}
                                            enforceFocus={true}
                                            keyboard={true}
                                            manager={
                                              ModalManager {
                                                "add": [Function],
                                                "containers": Array [],
                                                "data": Array [],
                                                "handleContainerOverflow": true,
                                                "hideSiblingNodes": true,
                                                "isTopModal": [Function],
                                                "modals": Array [],
                                                "remove": [Function],
                                              }
                                            }
                                            onEntering={[Function]}
                                            onExited={[Function]}
                                            onHide={[Function]}
                                            renderBackdrop={[Function]}
                                            restoreFocus={true}
                                            show={false}
                                            transition={[Function]}
                                          />
                                        </Modal>
                                      </StyledComponent>
                                    </Modal>
                                  </BootstrapModalWrapper>
                                </ContentPackDownloadControl>
                              </div>
                            </Col>
                          </div>
                        </Row>
                        <Row
                          bsClass="row"
                          className="row-sm content-packs-summary"
                          componentClass="div"
                        >
                          <div
                            className="row-sm content-packs-summary row"
                          >
                            <Col
                              bsClass="col"
                              componentClass="div"
                              md={12}
                            >
                              <div
                                className="col-md-12"
                              >
                                Patterns to retreive rails production logs
                                 
                              </div>
                            </Col>
                          </div>
                        </Row>
                      </span>
                    </ListGroupItem>
                  </StyledComponent>
                </ListGroupItem>
              </ForwardRef>
            </ControlledTableListItem>
            <ControlledTableListItem
              key="8"
            >
              <ForwardRef>
                <ListGroupItem>
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "STYLES": Array [
                          "success",
                          "warning",
                          "danger",
                          "info",
                        ],
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "ListGroupItem-sc-1ky0joo-0",
                          "isStatic": false,
                          "lastClassName": "igGIXt",
                          "rules": Array [
                            [Function],
                          ],
                        },
                        "displayName": "ListGroupItem",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "ListGroupItem-sc-1ky0joo-0",
                        "target": [Function],
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <ListGroupItem
                      bsClass="list-group-item"
                      className="ListGroupItem-sc-1ky0joo-0 igGIXt"
                      listItem={false}
                    >
                      <span
                        className="ListGroupItem-sc-1ky0joo-0 igGIXt list-group-item"
                      >
                        <Row
                          bsClass="row"
                          className="row-sm"
                          componentClass="div"
                        >
                          <div
                            className="row-sm row"
                          >
                            <Col
                              bsClass="col"
                              componentClass="div"
                              md={9}
                            >
                              <div
                                className="col-md-9"
                              >
                                <h3>
                                  <Link
                                    onlyActiveOnIndex={false}
                                    style={Object {}}
                                    to="/system/contentpacks/8"
                                  >
                                    <a
                                      onClick={[Function]}
                                      style={Object {}}
                                    />
                                  </Link>
                                   
                                  <small>
                                    Latest Version: 
                                    1
                                     
                                    <ContentPackStatus
                                      contentPackId="8"
                                      states={Array []}
                                    >
                                      <span />
                                    </ContentPackStatus>
                                     
                                  </small>
                                </h3>
                              </div>
                            </Col>
                            <Col
                              bsClass="col"
                              className="text-right"
                              componentClass="div"
                              md={3}
                            >
                              <div
                                className="text-right col-md-3"
                              >
                                 
                                <ForwardRef
                                  bsSize="small"
                                  bsStyle="info"
                                  onClick={[Function]}
                                >
                                  <Button
                                    bsSize="small"
                                    bsStyle="info"
                                    onClick={[Function]}
                                  >
                                    <StyledComponent
                                      bsSize="small"
                                      bsStyle="info"
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "SIZES": Array [
                                            "large",
                                            "small",
                                            "xsmall",
                                          ],
                                          "STYLES": Array [
                                            "success",
                                            "warning",
                                            "danger",
                                            "info",
                                            "default",
                                            "primary",
                                            "link",
                                          ],
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "Button-c9cbmb-0",
                                            "isStatic": false,
                                            "lastClassName": "gZfKUo",
                                            "rules": Array [
                                              [Function],
                                            ],
                                          },
                                          "displayName": "Button",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "Button-c9cbmb-0",
                                          "target": [Function],
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                      onClick={[Function]}
                                    >
                                      <Button
                                        active={false}
                                        block={false}
                                        bsClass="btn"
                                        bsSize="small"
                                        bsStyle="info"
                                        className="Button-c9cbmb-0 gZfKUo"
                                        disabled={false}
                                        onClick={[Function]}
                                      >
                                        <button
                                          className="Button-c9cbmb-0 gZfKUo btn btn-sm btn-info"
                                          disabled={false}
                                          onClick={[Function]}
                                          type="button"
                                        >
                                          Install
                                        </button>
                                      </Button>
                                    </StyledComponent>
                                  </Button>
                                </ForwardRef>
                                <BootstrapModalWrapper
                                  backdrop="static"
                                  bsSize="large"
                                  onClose={[Function]}
                                  onHide={[Function]}
                                  onOpen={[Function]}
                                  showModal={false}
                                >
                                  <Modal
                                    backdrop="static"
                                    bsSize="large"
                                    onHide={[Function]}
                                    show={false}
                                  >
                                    <StyledComponent
                                      backdrop="static"
                                      bsSize="large"
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "BACKDROP_TRANSITION_DURATION": 150,
                                          "Body": [Function],
                                          "Dialog": [Function],
                                          "Footer": [Function],
                                          "Header": [Function],
                                          "SIZES": Array [
                                            "large",
                                            "small",
                                          ],
                                          "TRANSITION_DURATION": 300,
                                          "Title": [Function],
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "Modal-nuree8-0",
                                            "isStatic": true,
                                            "lastClassName": "cHlGak",
                                            "rules": Array [
                                              ".modal-content{background-color:",
                                              "#FFF",
                                              ";border-color:",
                                              "rgba(31,31,31,0.2)",
                                              ";.modal-header{border-bottom-color:",
                                              "#DCE1E5",
                                              ";}.modal-footer{border-top-color:",
                                              "#DCE1E5",
                                              ";}}",
                                            ],
                                          },
                                          "displayName": "Modal",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "Modal-nuree8-0",
                                          "target": [Function],
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                      onHide={[Function]}
                                      show={false}
                                    >
                                      <Modal
                                        animation={true}
                                        autoFocus={true}
                                        backdrop="static"
                                        bsClass="modal"
                                        bsSize="large"
                                        className="Modal-nuree8-0 cHlGak"
                                        dialogComponentClass={[Function]}
                                        enforceFocus={true}
                                        keyboard={true}
                                        manager={
                                          ModalManager {
                                            "add": [Function],
                                            "containers": Array [],
                                            "data": Array [],
                                            "handleContainerOverflow": true,
                                            "hideSiblingNodes": true,
                                            "isTopModal": [Function],
                                            "modals": Array [],
                                            "remove": [Function],
                                          }
                                        }
                                        onHide={[Function]}
                                        renderBackdrop={[Function]}
                                        restoreFocus={true}
                                        show={false}
                                      >
                                        <Modal
                                          autoFocus={true}
                                          backdrop="static"
                                          backdropClassName="modal-backdrop"
                                          backdropTransitionTimeout={150}
                                          containerClassName="modal-open"
                                          dialogTransitionTimeout={300}
                                          enforceFocus={true}
                                          keyboard={true}
                                          manager={
                                            ModalManager {
                                              "add": [Function],
                                              "containers": Array [],
                                              "data": Array [],
                                              "handleContainerOverflow": true,
                                              "hideSiblingNodes": true,
                                              "isTopModal": [Function],
                                              "modals": Array [],
                                              "remove": [Function],
                                            }
                                          }
                                          onEntering={[Function]}
                                          onExited={[Function]}
                                          onHide={[Function]}
                                          renderBackdrop={[Function]}
                                          restoreFocus={true}
                                          show={false}
                                          transition={[Function]}
                                        />
                                      </Modal>
                                    </StyledComponent>
                                  </Modal>
                                </BootstrapModalWrapper>
                                 
                                <DropdownButton
                                  bsSize="small"
                                  id="more-actions-8"
                                  pullRight={true}
                                  title="More Actions"
                                >
                                  <StyledComponent
                                    bsSize="small"
                                    forwardedComponent={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "attrs": Array [],
                                        "componentStyle": ComponentStyle {
                                          "componentId": "DropdownButton-sc-1343dcx-0",
                                          "isStatic": false,
                                          "lastClassName": "jgZJTb",
                                          "rules": Array [
                                            [Function],
                                            ";",
                                            "& ~",
                                            " .dropdown-menu{> li > a{color:",
                                            "#1F1F1F",
                                            ";:hover,:focus{color:",
                                            "#484848",
                                            ";background-color:",
                                            "#F1F2F2",
                                            ";}}> .active > a{background-color:",
                                            "#6DC6E7",
                                            ";color:",
                                            "#f7fcfd",
                                            ";:hover,:focus{background-color:",
                                            "#16ACE3",
                                            ";color:",
                                            "#f3fafd",
                                            ";}}> .disabled > a{color:",
                                            "#8f8f8f",
                                            ";:hover,:focus{background-color:",
                                            "#F1F2F2",
                                            ";color:",
                                            "#b0b0b0",
                                            ";}}}",
                                            ";",
                                          ],
                                        },
                                        "displayName": "DropdownButton",
                                        "foldedComponentIds": Array [],
                                        "render": [Function],
                                        "styledComponentId": "DropdownButton-sc-1343dcx-0",
                                        "target": [Function],
                                        "toString": [Function],
                                        "warnTooManyClasses": [Function],
                                        "withComponent": [Function],
                                      }
                                    }
                                    forwardedRef={null}
                                    id="more-actions-8"
                                    pullRight={true}
                                    title="More Actions"
                                  >
                                    <DropdownButton
                                      bsSize="small"
                                      className="DropdownButton-sc-1343dcx-0 jgZJTb"
                                      id="more-actions-8"
                                      pullRight={true}
                                      title="More Actions"
                                    >
                                      <Uncontrolled(Dropdown)
                                        bsSize="small"
                                        id="more-actions-8"
                                        pullRight={true}
                                      >
                                        <Dropdown
                                          bsClass="dropdown"
                                          bsSize="small"
                                          componentClass={[Function]}
                                          id="more-actions-8"
                                          onToggle={[Function]}
                                          pullRight={true}
                                        >
                                          <ButtonGroup
                                            block={false}
                                            bsClass="btn-group"
                                            bsSize="small"
                                            className="dropdown"
                                            justified={false}
                                            vertical={false}
                                          >
                                            <div
                                              className="dropdown btn-group btn-group-sm"
                                            >
                                              <DropdownToggle
                                                bsClass="dropdown-toggle"
                                                bsRole="toggle"
                                                bsSize="small"
                                                className="DropdownButton-sc-1343dcx-0 jgZJTb"
                                                id="more-actions-8"
                                                key=".0"
                                                onClick={[Function]}
                                                onKeyDown={[Function]}
                                                open={false}
                                                useAnchor={false}
                                              >
                                                <Button
                                                  active={false}
                                                  aria-expanded={false}
                                                  aria-haspopup={true}
                                                  block={false}
                                                  bsClass="btn"
                                                  bsSize="small"
                                                  bsStyle="default"
                                                  className="DropdownButton-sc-1343dcx-0 jgZJTb dropdown-toggle"
                                                  disabled={false}
                                                  id="more-actions-8"
                                                  onClick={[Function]}
                                                  onKeyDown={[Function]}
                                                  role="button"
                                                >
                                                  <button
                                                    aria-expanded={false}
                                                    aria-haspopup={true}
                                                    className="DropdownButton-sc-1343dcx-0 jgZJTb dropdown-toggle btn btn-sm btn-default"
                                                    disabled={false}
                                                    id="more-actions-8"
                                                    onClick={[Function]}
                                                    onKeyDown={[Function]}
                                                    role="button"
                                                    type="button"
                                                  >
                                                    More Actions
                                                     
                                                    <span
                                                      className="caret"
                                                    />
                                                  </button>
                                                </Button>
                                              </DropdownToggle>
                                              <DropdownMenu
                                                bsClass="dropdown-menu"
                                                bsRole="menu"
                                                key=".1"
                                                labelledBy="more-actions-8"
                                                onClose={[Function]}
                                                onSelect={[Function]}
                                                pullRight={true}
                                              >
                                                <RootCloseWrapper
                                                  disabled={true}
                                                  event="click"
                                                  onRootClose={[Function]}
                                                >
                                                  <ul
                                                    aria-labelledby="more-actions-8"
                                                    className="dropdown-menu dropdown-menu-right"
                                                    role="menu"
                                                  >
                                                    <LinkContainer
                                                      action="push"
                                                      key=".0"
                                                      onKeyDown={[Function]}
                                                      onSelect={[Function]}
                                                      onlyActiveOnIndex={false}
                                                      to="/system/contentpacks/8"
                                                    >
                                                      <MenuItem
                                                        action="push"
                                                        bsClass="dropdown"
                                                        disabled={false}
                                                        divider={false}
                                                        header={false}
                                                        onClick={[Function]}
                                                        onKeyDown={[Function]}
                                                        onSelect={[Function]}
                                                      >
                                                        <li
                                                          className=""
                                                          role="presentation"
                                                        >
                                                          <SafeAnchor
                                                            action="push"
                                                            componentClass="a"
                                                            onClick={[Function]}
                                                            onKeyDown={[Function]}
                                                            role="menuitem"
                                                            tabIndex="-1"
                                                          >
                                                            <a
                                                              action="push"
                                                              href="#"
                                                              onClick={[Function]}
                                                              onKeyDown={[Function]}
                                                              role="menuitem"
                                                              tabIndex="-1"
                                                            >
                                                              Show
                                                            </a>
                                                          </SafeAnchor>
                                                        </li>
                                                      </MenuItem>
                                                    </LinkContainer>
                                                    <LinkContainer
                                                      action="push"
                                                      key=".1"
                                                      onKeyDown={[Function]}
                                                      onSelect={[Function]}
                                                      onlyActiveOnIndex={false}
                                                      to="/system/contentpacks/8/1/edit"
                                                    >
                                                      <MenuItem
                                                        action="push"
                                                        bsClass="dropdown"
                                                        disabled={false}
                                                        divider={false}
                                                        header={false}
                                                        onClick={[Function]}
                                                        onKeyDown={[Function]}
                                                        onSelect={[Function]}
                                                      >
                                                        <li
                                                          className=""
                                                          role="presentation"
                                                        >
                                                          <SafeAnchor
                                                            action="push"
                                                            componentClass="a"
                                                            onClick={[Function]}
                                                            onKeyDown={[Function]}
                                                            role="menuitem"
                                                            tabIndex="-1"
                                                          >
                                                            <a
                                                              action="push"
                                                              href="#"
                                                              onClick={[Function]}
                                                              onKeyDown={[Function]}
                                                              role="menuitem"
                                                              tabIndex="-1"
                                                            >
                                                              Create New Version
                                                            </a>
                                                          </SafeAnchor>
                                                        </li>
                                                      </MenuItem>
                                                    </LinkContainer>
                                                    <MenuItem
                                                      bsClass="dropdown"
                                                      disabled={false}
                                                      divider={false}
                                                      header={false}
                                                      key=".2"
                                                      onKeyDown={[Function]}
                                                      onSelect={[Function]}
                                                    >
                                                      <li
                                                        className=""
                                                        role="presentation"
                                                      >
                                                        <SafeAnchor
                                                          componentClass="a"
                                                          onClick={[Function]}
                                                          onKeyDown={[Function]}
                                                          role="menuitem"
                                                          tabIndex="-1"
                                                        >
                                                          <a
                                                            href="#"
                                                            onClick={[Function]}
                                                            onKeyDown={[Function]}
                                                            role="menuitem"
                                                            tabIndex="-1"
                                                          >
                                                            Download
                                                          </a>
                                                        </SafeAnchor>
                                                      </li>
                                                    </MenuItem>
                                                    <MenuItem
                                                      bsClass="dropdown"
                                                      disabled={false}
                                                      divider={true}
                                                      header={false}
                                                      key=".3"
                                                      onKeyDown={[Function]}
                                                      onSelect={[Function]}
                                                    >
                                                      <li
                                                        className="divider"
                                                        onKeyDown={[Function]}
                                                        role="separator"
                                                      />
                                                    </MenuItem>
                                                    <MenuItem
                                                      bsClass="dropdown"
                                                      disabled={false}
                                                      divider={false}
                                                      header={false}
                                                      key=".4"
                                                      onKeyDown={[Function]}
                                                      onSelect={[Function]}
                                                    >
                                                      <li
                                                        className=""
                                                        role="presentation"
                                                      >
                                                        <SafeAnchor
                                                          componentClass="a"
                                                          onClick={[Function]}
                                                          onKeyDown={[Function]}
                                                          role="menuitem"
                                                          tabIndex="-1"
                                                        >
                                                          <a
                                                            href="#"
                                                            onClick={[Function]}
                                                            onKeyDown={[Function]}
                                                            role="menuitem"
                                                            tabIndex="-1"
                                                          >
                                                            Delete All Versions
                                                          </a>
                                                        </SafeAnchor>
                                                      </li>
                                                    </MenuItem>
                                                  </ul>
                                                </RootCloseWrapper>
                                              </DropdownMenu>
                                            </div>
                                          </ButtonGroup>
                                        </Dropdown>
                                      </Uncontrolled(Dropdown)>
                                    </DropdownButton>
                                  </StyledComponent>
                                </DropdownButton>
                                <ContentPackDownloadControl
                                  contentPackId="8"
                                  revision={1}
                                >
                                  <BootstrapModalWrapper
                                    backdrop="static"
                                    bsSize="large"
                                    onClose={[Function]}
                                    onHide={[Function]}
                                    onOpen={[Function]}
                                    showModal={false}
                                  >
                                    <Modal
                                      backdrop="static"
                                      bsSize="large"
                                      onHide={[Function]}
                                      show={false}
                                    >
                                      <StyledComponent
                                        backdrop="static"
                                        bsSize="large"
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "BACKDROP_TRANSITION_DURATION": 150,
                                            "Body": [Function],
                                            "Dialog": [Function],
                                            "Footer": [Function],
                                            "Header": [Function],
                                            "SIZES": Array [
                                              "large",
                                              "small",
                                            ],
                                            "TRANSITION_DURATION": 300,
                                            "Title": [Function],
                                            "attrs": Array [],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "Modal-nuree8-0",
                                              "isStatic": true,
                                              "lastClassName": "cHlGak",
                                              "rules": Array [
                                                ".modal-content{background-color:",
                                                "#FFF",
                                                ";border-color:",
                                                "rgba(31,31,31,0.2)",
                                                ";.modal-header{border-bottom-color:",
                                                "#DCE1E5",
                                                ";}.modal-footer{border-top-color:",
                                                "#DCE1E5",
                                                ";}}",
                                              ],
                                            },
                                            "displayName": "Modal",
                                            "foldedComponentIds": Array [],
                                            "render": [Function],
                                            "styledComponentId": "Modal-nuree8-0",
                                            "target": [Function],
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                        onHide={[Function]}
                                        show={false}
                                      >
                                        <Modal
                                          animation={true}
                                          autoFocus={true}
                                          backdrop="static"
                                          bsClass="modal"
                                          bsSize="large"
                                          className="Modal-nuree8-0 cHlGak"
                                          dialogComponentClass={[Function]}
                                          enforceFocus={true}
                                          keyboard={true}
                                          manager={
                                            ModalManager {
                                              "add": [Function],
                                              "containers": Array [],
                                              "data": Array [],
                                              "handleContainerOverflow": true,
                                              "hideSiblingNodes": true,
                                              "isTopModal": [Function],
                                              "modals": Array [],
                                              "remove": [Function],
                                            }
                                          }
                                          onHide={[Function]}
                                          renderBackdrop={[Function]}
                                          restoreFocus={true}
                                          show={false}
                                        >
                                          <Modal
                                            autoFocus={true}
                                            backdrop="static"
                                            backdropClassName="modal-backdrop"
                                            backdropTransitionTimeout={150}
                                            containerClassName="modal-open"
                                            dialogTransitionTimeout={300}
                                            enforceFocus={true}
                                            keyboard={true}
                                            manager={
                                              ModalManager {
                                                "add": [Function],
                                                "containers": Array [],
                                                "data": Array [],
                                                "handleContainerOverflow": true,
                                                "hideSiblingNodes": true,
                                                "isTopModal": [Function],
                                                "modals": Array [],
                                                "remove": [Function],
                                              }
                                            }
                                            onEntering={[Function]}
                                            onExited={[Function]}
                                            onHide={[Function]}
                                            renderBackdrop={[Function]}
                                            restoreFocus={true}
                                            show={false}
                                            transition={[Function]}
                                          />
                                        </Modal>
                                      </StyledComponent>
                                    </Modal>
                                  </BootstrapModalWrapper>
                                </ContentPackDownloadControl>
                              </div>
                            </Col>
                          </div>
                        </Row>
                        <Row
                          bsClass="row"
                          className="row-sm content-packs-summary"
                          componentClass="div"
                        >
                          <div
                            className="row-sm content-packs-summary row"
                          >
                            <Col
                              bsClass="col"
                              componentClass="div"
                              md={12}
                            >
                              <div
                                className="col-md-12"
                              >
                                 
                              </div>
                            </Col>
                          </div>
                        </Row>
                      </span>
                    </ListGroupItem>
                  </StyledComponent>
                </ListGroupItem>
              </ForwardRef>
            </ControlledTableListItem>
            <ControlledTableListItem
              key="9"
            >
              <ForwardRef>
                <ListGroupItem>
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "STYLES": Array [
                          "success",
                          "warning",
                          "danger",
                          "info",
                        ],
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "ListGroupItem-sc-1ky0joo-0",
                          "isStatic": false,
                          "lastClassName": "igGIXt",
                          "rules": Array [
                            [Function],
                          ],
                        },
                        "displayName": "ListGroupItem",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "ListGroupItem-sc-1ky0joo-0",
                        "target": [Function],
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <ListGroupItem
                      bsClass="list-group-item"
                      className="ListGroupItem-sc-1ky0joo-0 igGIXt"
                      listItem={false}
                    >
                      <span
                        className="ListGroupItem-sc-1ky0joo-0 igGIXt list-group-item"
                      >
                        <Row
                          bsClass="row"
                          className="row-sm"
                          componentClass="div"
                        >
                          <div
                            className="row-sm row"
                          >
                            <Col
                              bsClass="col"
                              componentClass="div"
                              md={9}
                            >
                              <div
                                className="col-md-9"
                              >
                                <h3>
                                  <Link
                                    onlyActiveOnIndex={false}
                                    style={Object {}}
                                    to="/system/contentpacks/9"
                                  >
                                    <a
                                      onClick={[Function]}
                                      style={Object {}}
                                    />
                                  </Link>
                                   
                                  <small>
                                    Latest Version: 
                                    1
                                     
                                    <ContentPackStatus
                                      contentPackId="9"
                                      states={Array []}
                                    >
                                      <span />
                                    </ContentPackStatus>
                                     
                                  </small>
                                </h3>
                              </div>
                            </Col>
                            <Col
                              bsClass="col"
                              className="text-right"
                              componentClass="div"
                              md={3}
                            >
                              <div
                                className="text-right col-md-3"
                              >
                                 
                                <ForwardRef
                                  bsSize="small"
                                  bsStyle="info"
                                  onClick={[Function]}
                                >
                                  <Button
                                    bsSize="small"
                                    bsStyle="info"
                                    onClick={[Function]}
                                  >
                                    <StyledComponent
                                      bsSize="small"
                                      bsStyle="info"
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "SIZES": Array [
                                            "large",
                                            "small",
                                            "xsmall",
                                          ],
                                          "STYLES": Array [
                                            "success",
                                            "warning",
                                            "danger",
                                            "info",
                                            "default",
                                            "primary",
                                            "link",
                                          ],
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "Button-c9cbmb-0",
                                            "isStatic": false,
                                            "lastClassName": "gZfKUo",
                                            "rules": Array [
                                              [Function],
                                            ],
                                          },
                                          "displayName": "Button",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "Button-c9cbmb-0",
                                          "target": [Function],
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                      onClick={[Function]}
                                    >
                                      <Button
                                        active={false}
                                        block={false}
                                        bsClass="btn"
                                        bsSize="small"
                                        bsStyle="info"
                                        className="Button-c9cbmb-0 gZfKUo"
                                        disabled={false}
                                        onClick={[Function]}
                                      >
                                        <button
                                          className="Button-c9cbmb-0 gZfKUo btn btn-sm btn-info"
                                          disabled={false}
                                          onClick={[Function]}
                                          type="button"
                                        >
                                          Install
                                        </button>
                                      </Button>
                                    </StyledComponent>
                                  </Button>
                                </ForwardRef>
                                <BootstrapModalWrapper
                                  backdrop="static"
                                  bsSize="large"
                                  onClose={[Function]}
                                  onHide={[Function]}
                                  onOpen={[Function]}
                                  showModal={false}
                                >
                                  <Modal
                                    backdrop="static"
                                    bsSize="large"
                                    onHide={[Function]}
                                    show={false}
                                  >
                                    <StyledComponent
                                      backdrop="static"
                                      bsSize="large"
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "BACKDROP_TRANSITION_DURATION": 150,
                                          "Body": [Function],
                                          "Dialog": [Function],
                                          "Footer": [Function],
                                          "Header": [Function],
                                          "SIZES": Array [
                                            "large",
                                            "small",
                                          ],
                                          "TRANSITION_DURATION": 300,
                                          "Title": [Function],
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "Modal-nuree8-0",
                                            "isStatic": true,
                                            "lastClassName": "cHlGak",
                                            "rules": Array [
                                              ".modal-content{background-color:",
                                              "#FFF",
                                              ";border-color:",
                                              "rgba(31,31,31,0.2)",
                                              ";.modal-header{border-bottom-color:",
                                              "#DCE1E5",
                                              ";}.modal-footer{border-top-color:",
                                              "#DCE1E5",
                                              ";}}",
                                            ],
                                          },
                                          "displayName": "Modal",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "Modal-nuree8-0",
                                          "target": [Function],
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                      onHide={[Function]}
                                      show={false}
                                    >
                                      <Modal
                                        animation={true}
                                        autoFocus={true}
                                        backdrop="static"
                                        bsClass="modal"
                                        bsSize="large"
                                        className="Modal-nuree8-0 cHlGak"
                                        dialogComponentClass={[Function]}
                                        enforceFocus={true}
                                        keyboard={true}
                                        manager={
                                          ModalManager {
                                            "add": [Function],
                                            "containers": Array [],
                                            "data": Array [],
                                            "handleContainerOverflow": true,
                                            "hideSiblingNodes": true,
                                            "isTopModal": [Function],
                                            "modals": Array [],
                                            "remove": [Function],
                                          }
                                        }
                                        onHide={[Function]}
                                        renderBackdrop={[Function]}
                                        restoreFocus={true}
                                        show={false}
                                      >
                                        <Modal
                                          autoFocus={true}
                                          backdrop="static"
                                          backdropClassName="modal-backdrop"
                                          backdropTransitionTimeout={150}
                                          containerClassName="modal-open"
                                          dialogTransitionTimeout={300}
                                          enforceFocus={true}
                                          keyboard={true}
                                          manager={
                                            ModalManager {
                                              "add": [Function],
                                              "containers": Array [],
                                              "data": Array [],
                                              "handleContainerOverflow": true,
                                              "hideSiblingNodes": true,
                                              "isTopModal": [Function],
                                              "modals": Array [],
                                              "remove": [Function],
                                            }
                                          }
                                          onEntering={[Function]}
                                          onExited={[Function]}
                                          onHide={[Function]}
                                          renderBackdrop={[Function]}
                                          restoreFocus={true}
                                          show={false}
                                          transition={[Function]}
                                        />
                                      </Modal>
                                    </StyledComponent>
                                  </Modal>
                                </BootstrapModalWrapper>
                                 
                                <DropdownButton
                                  bsSize="small"
                                  id="more-actions-9"
                                  pullRight={true}
                                  title="More Actions"
                                >
                                  <StyledComponent
                                    bsSize="small"
                                    forwardedComponent={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "attrs": Array [],
                                        "componentStyle": ComponentStyle {
                                          "componentId": "DropdownButton-sc-1343dcx-0",
                                          "isStatic": false,
                                          "lastClassName": "jgZJTb",
                                          "rules": Array [
                                            [Function],
                                            ";",
                                            "& ~",
                                            " .dropdown-menu{> li > a{color:",
                                            "#1F1F1F",
                                            ";:hover,:focus{color:",
                                            "#484848",
                                            ";background-color:",
                                            "#F1F2F2",
                                            ";}}> .active > a{background-color:",
                                            "#6DC6E7",
                                            ";color:",
                                            "#f7fcfd",
                                            ";:hover,:focus{background-color:",
                                            "#16ACE3",
                                            ";color:",
                                            "#f3fafd",
                                            ";}}> .disabled > a{color:",
                                            "#8f8f8f",
                                            ";:hover,:focus{background-color:",
                                            "#F1F2F2",
                                            ";color:",
                                            "#b0b0b0",
                                            ";}}}",
                                            ";",
                                          ],
                                        },
                                        "displayName": "DropdownButton",
                                        "foldedComponentIds": Array [],
                                        "render": [Function],
                                        "styledComponentId": "DropdownButton-sc-1343dcx-0",
                                        "target": [Function],
                                        "toString": [Function],
                                        "warnTooManyClasses": [Function],
                                        "withComponent": [Function],
                                      }
                                    }
                                    forwardedRef={null}
                                    id="more-actions-9"
                                    pullRight={true}
                                    title="More Actions"
                                  >
                                    <DropdownButton
                                      bsSize="small"
                                      className="DropdownButton-sc-1343dcx-0 jgZJTb"
                                      id="more-actions-9"
                                      pullRight={true}
                                      title="More Actions"
                                    >
                                      <Uncontrolled(Dropdown)
                                        bsSize="small"
                                        id="more-actions-9"
                                        pullRight={true}
                                      >
                                        <Dropdown
                                          bsClass="dropdown"
                                          bsSize="small"
                                          componentClass={[Function]}
                                          id="more-actions-9"
                                          onToggle={[Function]}
                                          pullRight={true}
                                        >
                                          <ButtonGroup
                                            block={false}
                                            bsClass="btn-group"
                                            bsSize="small"
                                            className="dropdown"
                                            justified={false}
                                            vertical={false}
                                          >
                                            <div
                                              className="dropdown btn-group btn-group-sm"
                                            >
                                              <DropdownToggle
                                                bsClass="dropdown-toggle"
                                                bsRole="toggle"
                                                bsSize="small"
                                                className="DropdownButton-sc-1343dcx-0 jgZJTb"
                                                id="more-actions-9"
                                                key=".0"
                                                onClick={[Function]}
                                                onKeyDown={[Function]}
                                                open={false}
                                                useAnchor={false}
                                              >
                                                <Button
                                                  active={false}
                                                  aria-expanded={false}
                                                  aria-haspopup={true}
                                                  block={false}
                                                  bsClass="btn"
                                                  bsSize="small"
                                                  bsStyle="default"
                                                  className="DropdownButton-sc-1343dcx-0 jgZJTb dropdown-toggle"
                                                  disabled={false}
                                                  id="more-actions-9"
                                                  onClick={[Function]}
                                                  onKeyDown={[Function]}
                                                  role="button"
                                                >
                                                  <button
                                                    aria-expanded={false}
                                                    aria-haspopup={true}
                                                    className="DropdownButton-sc-1343dcx-0 jgZJTb dropdown-toggle btn btn-sm btn-default"
                                                    disabled={false}
                                                    id="more-actions-9"
                                                    onClick={[Function]}
                                                    onKeyDown={[Function]}
                                                    role="button"
                                                    type="button"
                                                  >
                                                    More Actions
                                                     
                                                    <span
                                                      className="caret"
                                                    />
                                                  </button>
                                                </Button>
                                              </DropdownToggle>
                                              <DropdownMenu
                                                bsClass="dropdown-menu"
                                                bsRole="menu"
                                                key=".1"
                                                labelledBy="more-actions-9"
                                                onClose={[Function]}
                                                onSelect={[Function]}
                                                pullRight={true}
                                              >
                                                <RootCloseWrapper
                                                  disabled={true}
                                                  event="click"
                                                  onRootClose={[Function]}
                                                >
                                                  <ul
                                                    aria-labelledby="more-actions-9"
                                                    className="dropdown-menu dropdown-menu-right"
                                                    role="menu"
                                                  >
                                                    <LinkContainer
                                                      action="push"
                                                      key=".0"
                                                      onKeyDown={[Function]}
                                                      onSelect={[Function]}
                                                      onlyActiveOnIndex={false}
                                                      to="/system/contentpacks/9"
                                                    >
                                                      <MenuItem
                                                        action="push"
                                                        bsClass="dropdown"
                                                        disabled={false}
                                                        divider={false}
                                                        header={false}
                                                        onClick={[Function]}
                                                        onKeyDown={[Function]}
                                                        onSelect={[Function]}
                                                      >
                                                        <li
                                                          className=""
                                                          role="presentation"
                                                        >
                                                          <SafeAnchor
                                                            action="push"
                                                            componentClass="a"
                                                            onClick={[Function]}
                                                            onKeyDown={[Function]}
                                                            role="menuitem"
                                                            tabIndex="-1"
                                                          >
                                                            <a
                                                              action="push"
                                                              href="#"
                                                              onClick={[Function]}
                                                              onKeyDown={[Function]}
                                                              role="menuitem"
                                                              tabIndex="-1"
                                                            >
                                                              Show
                                                            </a>
                                                          </SafeAnchor>
                                                        </li>
                                                      </MenuItem>
                                                    </LinkContainer>
                                                    <LinkContainer
                                                      action="push"
                                                      key=".1"
                                                      onKeyDown={[Function]}
                                                      onSelect={[Function]}
                                                      onlyActiveOnIndex={false}
                                                      to="/system/contentpacks/9/1/edit"
                                                    >
                                                      <MenuItem
                                                        action="push"
                                                        bsClass="dropdown"
                                                        disabled={false}
                                                        divider={false}
                                                        header={false}
                                                        onClick={[Function]}
                                                        onKeyDown={[Function]}
                                                        onSelect={[Function]}
                                                      >
                                                        <li
                                                          className=""
                                                          role="presentation"
                                                        >
                                                          <SafeAnchor
                                                            action="push"
                                                            componentClass="a"
                                                            onClick={[Function]}
                                                            onKeyDown={[Function]}
                                                            role="menuitem"
                                                            tabIndex="-1"
                                                          >
                                                            <a
                                                              action="push"
                                                              href="#"
                                                              onClick={[Function]}
                                                              onKeyDown={[Function]}
                                                              role="menuitem"
                                                              tabIndex="-1"
                                                            >
                                                              Create New Version
                                                            </a>
                                                          </SafeAnchor>
                                                        </li>
                                                      </MenuItem>
                                                    </LinkContainer>
                                                    <MenuItem
                                                      bsClass="dropdown"
                                                      disabled={false}
                                                      divider={false}
                                                      header={false}
                                                      key=".2"
                                                      onKeyDown={[Function]}
                                                      onSelect={[Function]}
                                                    >
                                                      <li
                                                        className=""
                                                        role="presentation"
                                                      >
                                                        <SafeAnchor
                                                          componentClass="a"
                                                          onClick={[Function]}
                                                          onKeyDown={[Function]}
                                                          role="menuitem"
                                                          tabIndex="-1"
                                                        >
                                                          <a
                                                            href="#"
                                                            onClick={[Function]}
                                                            onKeyDown={[Function]}
                                                            role="menuitem"
                                                            tabIndex="-1"
                                                          >
                                                            Download
                                                          </a>
                                                        </SafeAnchor>
                                                      </li>
                                                    </MenuItem>
                                                    <MenuItem
                                                      bsClass="dropdown"
                                                      disabled={false}
                                                      divider={true}
                                                      header={false}
                                                      key=".3"
                                                      onKeyDown={[Function]}
                                                      onSelect={[Function]}
                                                    >
                                                      <li
                                                        className="divider"
                                                        onKeyDown={[Function]}
                                                        role="separator"
                                                      />
                                                    </MenuItem>
                                                    <MenuItem
                                                      bsClass="dropdown"
                                                      disabled={false}
                                                      divider={false}
                                                      header={false}
                                                      key=".4"
                                                      onKeyDown={[Function]}
                                                      onSelect={[Function]}
                                                    >
                                                      <li
                                                        className=""
                                                        role="presentation"
                                                      >
                                                        <SafeAnchor
                                                          componentClass="a"
                                                          onClick={[Function]}
                                                          onKeyDown={[Function]}
                                                          role="menuitem"
                                                          tabIndex="-1"
                                                        >
                                                          <a
                                                            href="#"
                                                            onClick={[Function]}
                                                            onKeyDown={[Function]}
                                                            role="menuitem"
                                                            tabIndex="-1"
                                                          >
                                                            Delete All Versions
                                                          </a>
                                                        </SafeAnchor>
                                                      </li>
                                                    </MenuItem>
                                                  </ul>
                                                </RootCloseWrapper>
                                              </DropdownMenu>
                                            </div>
                                          </ButtonGroup>
                                        </Dropdown>
                                      </Uncontrolled(Dropdown)>
                                    </DropdownButton>
                                  </StyledComponent>
                                </DropdownButton>
                                <ContentPackDownloadControl
                                  contentPackId="9"
                                  revision={1}
                                >
                                  <BootstrapModalWrapper
                                    backdrop="static"
                                    bsSize="large"
                                    onClose={[Function]}
                                    onHide={[Function]}
                                    onOpen={[Function]}
                                    showModal={false}
                                  >
                                    <Modal
                                      backdrop="static"
                                      bsSize="large"
                                      onHide={[Function]}
                                      show={false}
                                    >
                                      <StyledComponent
                                        backdrop="static"
                                        bsSize="large"
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "BACKDROP_TRANSITION_DURATION": 150,
                                            "Body": [Function],
                                            "Dialog": [Function],
                                            "Footer": [Function],
                                            "Header": [Function],
                                            "SIZES": Array [
                                              "large",
                                              "small",
                                            ],
                                            "TRANSITION_DURATION": 300,
                                            "Title": [Function],
                                            "attrs": Array [],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "Modal-nuree8-0",
                                              "isStatic": true,
                                              "lastClassName": "cHlGak",
                                              "rules": Array [
                                                ".modal-content{background-color:",
                                                "#FFF",
                                                ";border-color:",
                                                "rgba(31,31,31,0.2)",
                                                ";.modal-header{border-bottom-color:",
                                                "#DCE1E5",
                                                ";}.modal-footer{border-top-color:",
                                                "#DCE1E5",
                                                ";}}",
                                              ],
                                            },
                                            "displayName": "Modal",
                                            "foldedComponentIds": Array [],
                                            "render": [Function],
                                            "styledComponentId": "Modal-nuree8-0",
                                            "target": [Function],
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                        onHide={[Function]}
                                        show={false}
                                      >
                                        <Modal
                                          animation={true}
                                          autoFocus={true}
                                          backdrop="static"
                                          bsClass="modal"
                                          bsSize="large"
                                          className="Modal-nuree8-0 cHlGak"
                                          dialogComponentClass={[Function]}
                                          enforceFocus={true}
                                          keyboard={true}
                                          manager={
                                            ModalManager {
                                              "add": [Function],
                                              "containers": Array [],
                                              "data": Array [],
                                              "handleContainerOverflow": true,
                                              "hideSiblingNodes": true,
                                              "isTopModal": [Function],
                                              "modals": Array [],
                                              "remove": [Function],
                                            }
                                          }
                                          onHide={[Function]}
                                          renderBackdrop={[Function]}
                                          restoreFocus={true}
                                          show={false}
                                        >
                                          <Modal
                                            autoFocus={true}
                                            backdrop="static"
                                            backdropClassName="modal-backdrop"
                                            backdropTransitionTimeout={150}
                                            containerClassName="modal-open"
                                            dialogTransitionTimeout={300}
                                            enforceFocus={true}
                                            keyboard={true}
                                            manager={
                                              ModalManager {
                                                "add": [Function],
                                                "containers": Array [],
                                                "data": Array [],
                                                "handleContainerOverflow": true,
                                                "hideSiblingNodes": true,
                                                "isTopModal": [Function],
                                                "modals": Array [],
                                                "remove": [Function],
                                              }
                                            }
                                            onEntering={[Function]}
                                            onExited={[Function]}
                                            onHide={[Function]}
                                            renderBackdrop={[Function]}
                                            restoreFocus={true}
                                            show={false}
                                            transition={[Function]}
                                          />
                                        </Modal>
                                      </StyledComponent>
                                    </Modal>
                                  </BootstrapModalWrapper>
                                </ContentPackDownloadControl>
                              </div>
                            </Col>
                          </div>
                        </Row>
                        <Row
                          bsClass="row"
                          className="row-sm content-packs-summary"
                          componentClass="div"
                        >
                          <div
                            className="row-sm content-packs-summary row"
                          >
                            <Col
                              bsClass="col"
                              componentClass="div"
                              md={12}
                            >
                              <div
                                className="col-md-12"
                              >
                                A crypted backup over ssh.
                                 
                              </div>
                            </Col>
                          </div>
                        </Row>
                      </span>
                    </ListGroupItem>
                  </StyledComponent>
                </ListGroupItem>
              </ForwardRef>
            </ControlledTableListItem>
            <ControlledTableListItem
              key="10"
            >
              <ForwardRef>
                <ListGroupItem>
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "STYLES": Array [
                          "success",
                          "warning",
                          "danger",
                          "info",
                        ],
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "ListGroupItem-sc-1ky0joo-0",
                          "isStatic": false,
                          "lastClassName": "igGIXt",
                          "rules": Array [
                            [Function],
                          ],
                        },
                        "displayName": "ListGroupItem",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "ListGroupItem-sc-1ky0joo-0",
                        "target": [Function],
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <ListGroupItem
                      bsClass="list-group-item"
                      className="ListGroupItem-sc-1ky0joo-0 igGIXt"
                      listItem={false}
                    >
                      <span
                        className="ListGroupItem-sc-1ky0joo-0 igGIXt list-group-item"
                      >
                        <Row
                          bsClass="row"
                          className="row-sm"
                          componentClass="div"
                        >
                          <div
                            className="row-sm row"
                          >
                            <Col
                              bsClass="col"
                              componentClass="div"
                              md={9}
                            >
                              <div
                                className="col-md-9"
                              >
                                <h3>
                                  <Link
                                    onlyActiveOnIndex={false}
                                    style={Object {}}
                                    to="/system/contentpacks/10"
                                  >
                                    <a
                                      onClick={[Function]}
                                      style={Object {}}
                                    />
                                  </Link>
                                   
                                  <small>
                                    Latest Version: 
                                    1
                                     
                                    <ContentPackStatus
                                      contentPackId="10"
                                      states={Array []}
                                    >
                                      <span />
                                    </ContentPackStatus>
                                     
                                  </small>
                                </h3>
                              </div>
                            </Col>
                            <Col
                              bsClass="col"
                              className="text-right"
                              componentClass="div"
                              md={3}
                            >
                              <div
                                className="text-right col-md-3"
                              >
                                 
                                <ForwardRef
                                  bsSize="small"
                                  bsStyle="info"
                                  onClick={[Function]}
                                >
                                  <Button
                                    bsSize="small"
                                    bsStyle="info"
                                    onClick={[Function]}
                                  >
                                    <StyledComponent
                                      bsSize="small"
                                      bsStyle="info"
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "SIZES": Array [
                                            "large",
                                            "small",
                                            "xsmall",
                                          ],
                                          "STYLES": Array [
                                            "success",
                                            "warning",
                                            "danger",
                                            "info",
                                            "default",
                                            "primary",
                                            "link",
                                          ],
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "Button-c9cbmb-0",
                                            "isStatic": false,
                                            "lastClassName": "gZfKUo",
                                            "rules": Array [
                                              [Function],
                                            ],
                                          },
                                          "displayName": "Button",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "Button-c9cbmb-0",
                                          "target": [Function],
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                      onClick={[Function]}
                                    >
                                      <Button
                                        active={false}
                                        block={false}
                                        bsClass="btn"
                                        bsSize="small"
                                        bsStyle="info"
                                        className="Button-c9cbmb-0 gZfKUo"
                                        disabled={false}
                                        onClick={[Function]}
                                      >
                                        <button
                                          className="Button-c9cbmb-0 gZfKUo btn btn-sm btn-info"
                                          disabled={false}
                                          onClick={[Function]}
                                          type="button"
                                        >
                                          Install
                                        </button>
                                      </Button>
                                    </StyledComponent>
                                  </Button>
                                </ForwardRef>
                                <BootstrapModalWrapper
                                  backdrop="static"
                                  bsSize="large"
                                  onClose={[Function]}
                                  onHide={[Function]}
                                  onOpen={[Function]}
                                  showModal={false}
                                >
                                  <Modal
                                    backdrop="static"
                                    bsSize="large"
                                    onHide={[Function]}
                                    show={false}
                                  >
                                    <StyledComponent
                                      backdrop="static"
                                      bsSize="large"
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "BACKDROP_TRANSITION_DURATION": 150,
                                          "Body": [Function],
                                          "Dialog": [Function],
                                          "Footer": [Function],
                                          "Header": [Function],
                                          "SIZES": Array [
                                            "large",
                                            "small",
                                          ],
                                          "TRANSITION_DURATION": 300,
                                          "Title": [Function],
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "Modal-nuree8-0",
                                            "isStatic": true,
                                            "lastClassName": "cHlGak",
                                            "rules": Array [
                                              ".modal-content{background-color:",
                                              "#FFF",
                                              ";border-color:",
                                              "rgba(31,31,31,0.2)",
                                              ";.modal-header{border-bottom-color:",
                                              "#DCE1E5",
                                              ";}.modal-footer{border-top-color:",
                                              "#DCE1E5",
                                              ";}}",
                                            ],
                                          },
                                          "displayName": "Modal",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "Modal-nuree8-0",
                                          "target": [Function],
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                      onHide={[Function]}
                                      show={false}
                                    >
                                      <Modal
                                        animation={true}
                                        autoFocus={true}
                                        backdrop="static"
                                        bsClass="modal"
                                        bsSize="large"
                                        className="Modal-nuree8-0 cHlGak"
                                        dialogComponentClass={[Function]}
                                        enforceFocus={true}
                                        keyboard={true}
                                        manager={
                                          ModalManager {
                                            "add": [Function],
                                            "containers": Array [],
                                            "data": Array [],
                                            "handleContainerOverflow": true,
                                            "hideSiblingNodes": true,
                                            "isTopModal": [Function],
                                            "modals": Array [],
                                            "remove": [Function],
                                          }
                                        }
                                        onHide={[Function]}
                                        renderBackdrop={[Function]}
                                        restoreFocus={true}
                                        show={false}
                                      >
                                        <Modal
                                          autoFocus={true}
                                          backdrop="static"
                                          backdropClassName="modal-backdrop"
                                          backdropTransitionTimeout={150}
                                          containerClassName="modal-open"
                                          dialogTransitionTimeout={300}
                                          enforceFocus={true}
                                          keyboard={true}
                                          manager={
                                            ModalManager {
                                              "add": [Function],
                                              "containers": Array [],
                                              "data": Array [],
                                              "handleContainerOverflow": true,
                                              "hideSiblingNodes": true,
                                              "isTopModal": [Function],
                                              "modals": Array [],
                                              "remove": [Function],
                                            }
                                          }
                                          onEntering={[Function]}
                                          onExited={[Function]}
                                          onHide={[Function]}
                                          renderBackdrop={[Function]}
                                          restoreFocus={true}
                                          show={false}
                                          transition={[Function]}
                                        />
                                      </Modal>
                                    </StyledComponent>
                                  </Modal>
                                </BootstrapModalWrapper>
                                 
                                <DropdownButton
                                  bsSize="small"
                                  id="more-actions-10"
                                  pullRight={true}
                                  title="More Actions"
                                >
                                  <StyledComponent
                                    bsSize="small"
                                    forwardedComponent={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "attrs": Array [],
                                        "componentStyle": ComponentStyle {
                                          "componentId": "DropdownButton-sc-1343dcx-0",
                                          "isStatic": false,
                                          "lastClassName": "jgZJTb",
                                          "rules": Array [
                                            [Function],
                                            ";",
                                            "& ~",
                                            " .dropdown-menu{> li > a{color:",
                                            "#1F1F1F",
                                            ";:hover,:focus{color:",
                                            "#484848",
                                            ";background-color:",
                                            "#F1F2F2",
                                            ";}}> .active > a{background-color:",
                                            "#6DC6E7",
                                            ";color:",
                                            "#f7fcfd",
                                            ";:hover,:focus{background-color:",
                                            "#16ACE3",
                                            ";color:",
                                            "#f3fafd",
                                            ";}}> .disabled > a{color:",
                                            "#8f8f8f",
                                            ";:hover,:focus{background-color:",
                                            "#F1F2F2",
                                            ";color:",
                                            "#b0b0b0",
                                            ";}}}",
                                            ";",
                                          ],
                                        },
                                        "displayName": "DropdownButton",
                                        "foldedComponentIds": Array [],
                                        "render": [Function],
                                        "styledComponentId": "DropdownButton-sc-1343dcx-0",
                                        "target": [Function],
                                        "toString": [Function],
                                        "warnTooManyClasses": [Function],
                                        "withComponent": [Function],
                                      }
                                    }
                                    forwardedRef={null}
                                    id="more-actions-10"
                                    pullRight={true}
                                    title="More Actions"
                                  >
                                    <DropdownButton
                                      bsSize="small"
                                      className="DropdownButton-sc-1343dcx-0 jgZJTb"
                                      id="more-actions-10"
                                      pullRight={true}
                                      title="More Actions"
                                    >
                                      <Uncontrolled(Dropdown)
                                        bsSize="small"
                                        id="more-actions-10"
                                        pullRight={true}
                                      >
                                        <Dropdown
                                          bsClass="dropdown"
                                          bsSize="small"
                                          componentClass={[Function]}
                                          id="more-actions-10"
                                          onToggle={[Function]}
                                          pullRight={true}
                                        >
                                          <ButtonGroup
                                            block={false}
                                            bsClass="btn-group"
                                            bsSize="small"
                                            className="dropdown"
                                            justified={false}
                                            vertical={false}
                                          >
                                            <div
                                              className="dropdown btn-group btn-group-sm"
                                            >
                                              <DropdownToggle
                                                bsClass="dropdown-toggle"
                                                bsRole="toggle"
                                                bsSize="small"
                                                className="DropdownButton-sc-1343dcx-0 jgZJTb"
                                                id="more-actions-10"
                                                key=".0"
                                                onClick={[Function]}
                                                onKeyDown={[Function]}
                                                open={false}
                                                useAnchor={false}
                                              >
                                                <Button
                                                  active={false}
                                                  aria-expanded={false}
                                                  aria-haspopup={true}
                                                  block={false}
                                                  bsClass="btn"
                                                  bsSize="small"
                                                  bsStyle="default"
                                                  className="DropdownButton-sc-1343dcx-0 jgZJTb dropdown-toggle"
                                                  disabled={false}
                                                  id="more-actions-10"
                                                  onClick={[Function]}
                                                  onKeyDown={[Function]}
                                                  role="button"
                                                >
                                                  <button
                                                    aria-expanded={false}
                                                    aria-haspopup={true}
                                                    className="DropdownButton-sc-1343dcx-0 jgZJTb dropdown-toggle btn btn-sm btn-default"
                                                    disabled={false}
                                                    id="more-actions-10"
                                                    onClick={[Function]}
                                                    onKeyDown={[Function]}
                                                    role="button"
                                                    type="button"
                                                  >
                                                    More Actions
                                                     
                                                    <span
                                                      className="caret"
                                                    />
                                                  </button>
                                                </Button>
                                              </DropdownToggle>
                                              <DropdownMenu
                                                bsClass="dropdown-menu"
                                                bsRole="menu"
                                                key=".1"
                                                labelledBy="more-actions-10"
                                                onClose={[Function]}
                                                onSelect={[Function]}
                                                pullRight={true}
                                              >
                                                <RootCloseWrapper
                                                  disabled={true}
                                                  event="click"
                                                  onRootClose={[Function]}
                                                >
                                                  <ul
                                                    aria-labelledby="more-actions-10"
                                                    className="dropdown-menu dropdown-menu-right"
                                                    role="menu"
                                                  >
                                                    <LinkContainer
                                                      action="push"
                                                      key=".0"
                                                      onKeyDown={[Function]}
                                                      onSelect={[Function]}
                                                      onlyActiveOnIndex={false}
                                                      to="/system/contentpacks/10"
                                                    >
                                                      <MenuItem
                                                        action="push"
                                                        bsClass="dropdown"
                                                        disabled={false}
                                                        divider={false}
                                                        header={false}
                                                        onClick={[Function]}
                                                        onKeyDown={[Function]}
                                                        onSelect={[Function]}
                                                      >
                                                        <li
                                                          className=""
                                                          role="presentation"
                                                        >
                                                          <SafeAnchor
                                                            action="push"
                                                            componentClass="a"
                                                            onClick={[Function]}
                                                            onKeyDown={[Function]}
                                                            role="menuitem"
                                                            tabIndex="-1"
                                                          >
                                                            <a
                                                              action="push"
                                                              href="#"
                                                              onClick={[Function]}
                                                              onKeyDown={[Function]}
                                                              role="menuitem"
                                                              tabIndex="-1"
                                                            >
                                                              Show
                                                            </a>
                                                          </SafeAnchor>
                                                        </li>
                                                      </MenuItem>
                                                    </LinkContainer>
                                                    <LinkContainer
                                                      action="push"
                                                      key=".1"
                                                      onKeyDown={[Function]}
                                                      onSelect={[Function]}
                                                      onlyActiveOnIndex={false}
                                                      to="/system/contentpacks/10/1/edit"
                                                    >
                                                      <MenuItem
                                                        action="push"
                                                        bsClass="dropdown"
                                                        disabled={false}
                                                        divider={false}
                                                        header={false}
                                                        onClick={[Function]}
                                                        onKeyDown={[Function]}
                                                        onSelect={[Function]}
                                                      >
                                                        <li
                                                          className=""
                                                          role="presentation"
                                                        >
                                                          <SafeAnchor
                                                            action="push"
                                                            componentClass="a"
                                                            onClick={[Function]}
                                                            onKeyDown={[Function]}
                                                            role="menuitem"
                                                            tabIndex="-1"
                                                          >
                                                            <a
                                                              action="push"
                                                              href="#"
                                                              onClick={[Function]}
                                                              onKeyDown={[Function]}
                                                              role="menuitem"
                                                              tabIndex="-1"
                                                            >
                                                              Create New Version
                                                            </a>
                                                          </SafeAnchor>
                                                        </li>
                                                      </MenuItem>
                                                    </LinkContainer>
                                                    <MenuItem
                                                      bsClass="dropdown"
                                                      disabled={false}
                                                      divider={false}
                                                      header={false}
                                                      key=".2"
                                                      onKeyDown={[Function]}
                                                      onSelect={[Function]}
                                                    >
                                                      <li
                                                        className=""
                                                        role="presentation"
                                                      >
                                                        <SafeAnchor
                                                          componentClass="a"
                                                          onClick={[Function]}
                                                          onKeyDown={[Function]}
                                                          role="menuitem"
                                                          tabIndex="-1"
                                                        >
                                                          <a
                                                            href="#"
                                                            onClick={[Function]}
                                                            onKeyDown={[Function]}
                                                            role="menuitem"
                                                            tabIndex="-1"
                                                          >
                                                            Download
                                                          </a>
                                                        </SafeAnchor>
                                                      </li>
                                                    </MenuItem>
                                                    <MenuItem
                                                      bsClass="dropdown"
                                                      disabled={false}
                                                      divider={true}
                                                      header={false}
                                                      key=".3"
                                                      onKeyDown={[Function]}
                                                      onSelect={[Function]}
                                                    >
                                                      <li
                                                        className="divider"
                                                        onKeyDown={[Function]}
                                                        role="separator"
                                                      />
                                                    </MenuItem>
                                                    <MenuItem
                                                      bsClass="dropdown"
                                                      disabled={false}
                                                      divider={false}
                                                      header={false}
                                                      key=".4"
                                                      onKeyDown={[Function]}
                                                      onSelect={[Function]}
                                                    >
                                                      <li
                                                        className=""
                                                        role="presentation"
                                                      >
                                                        <SafeAnchor
                                                          componentClass="a"
                                                          onClick={[Function]}
                                                          onKeyDown={[Function]}
                                                          role="menuitem"
                                                          tabIndex="-1"
                                                        >
                                                          <a
                                                            href="#"
                                                            onClick={[Function]}
                                                            onKeyDown={[Function]}
                                                            role="menuitem"
                                                            tabIndex="-1"
                                                          >
                                                            Delete All Versions
                                                          </a>
                                                        </SafeAnchor>
                                                      </li>
                                                    </MenuItem>
                                                  </ul>
                                                </RootCloseWrapper>
                                              </DropdownMenu>
                                            </div>
                                          </ButtonGroup>
                                        </Dropdown>
                                      </Uncontrolled(Dropdown)>
                                    </DropdownButton>
                                  </StyledComponent>
                                </DropdownButton>
                                <ContentPackDownloadControl
                                  contentPackId="10"
                                  revision={1}
                                >
                                  <BootstrapModalWrapper
                                    backdrop="static"
                                    bsSize="large"
                                    onClose={[Function]}
                                    onHide={[Function]}
                                    onOpen={[Function]}
                                    showModal={false}
                                  >
                                    <Modal
                                      backdrop="static"
                                      bsSize="large"
                                      onHide={[Function]}
                                      show={false}
                                    >
                                      <StyledComponent
                                        backdrop="static"
                                        bsSize="large"
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "BACKDROP_TRANSITION_DURATION": 150,
                                            "Body": [Function],
                                            "Dialog": [Function],
                                            "Footer": [Function],
                                            "Header": [Function],
                                            "SIZES": Array [
                                              "large",
                                              "small",
                                            ],
                                            "TRANSITION_DURATION": 300,
                                            "Title": [Function],
                                            "attrs": Array [],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "Modal-nuree8-0",
                                              "isStatic": true,
                                              "lastClassName": "cHlGak",
                                              "rules": Array [
                                                ".modal-content{background-color:",
                                                "#FFF",
                                                ";border-color:",
                                                "rgba(31,31,31,0.2)",
                                                ";.modal-header{border-bottom-color:",
                                                "#DCE1E5",
                                                ";}.modal-footer{border-top-color:",
                                                "#DCE1E5",
                                                ";}}",
                                              ],
                                            },
                                            "displayName": "Modal",
                                            "foldedComponentIds": Array [],
                                            "render": [Function],
                                            "styledComponentId": "Modal-nuree8-0",
                                            "target": [Function],
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                        onHide={[Function]}
                                        show={false}
                                      >
                                        <Modal
                                          animation={true}
                                          autoFocus={true}
                                          backdrop="static"
                                          bsClass="modal"
                                          bsSize="large"
                                          className="Modal-nuree8-0 cHlGak"
                                          dialogComponentClass={[Function]}
                                          enforceFocus={true}
                                          keyboard={true}
                                          manager={
                                            ModalManager {
                                              "add": [Function],
                                              "containers": Array [],
                                              "data": Array [],
                                              "handleContainerOverflow": true,
                                              "hideSiblingNodes": true,
                                              "isTopModal": [Function],
                                              "modals": Array [],
                                              "remove": [Function],
                                            }
                                          }
                                          onHide={[Function]}
                                          renderBackdrop={[Function]}
                                          restoreFocus={true}
                                          show={false}
                                        >
                                          <Modal
                                            autoFocus={true}
                                            backdrop="static"
                                            backdropClassName="modal-backdrop"
                                            backdropTransitionTimeout={150}
                                            containerClassName="modal-open"
                                            dialogTransitionTimeout={300}
                                            enforceFocus={true}
                                            keyboard={true}
                                            manager={
                                              ModalManager {
                                                "add": [Function],
                                                "containers": Array [],
                                                "data": Array [],
                                                "handleContainerOverflow": true,
                                                "hideSiblingNodes": true,
                                                "isTopModal": [Function],
                                                "modals": Array [],
                                                "remove": [Function],
                                              }
                                            }
                                            onEntering={[Function]}
                                            onExited={[Function]}
                                            onHide={[Function]}
                                            renderBackdrop={[Function]}
                                            restoreFocus={true}
                                            show={false}
                                            transition={[Function]}
                                          />
                                        </Modal>
                                      </StyledComponent>
                                    </Modal>
                                  </BootstrapModalWrapper>
                                </ContentPackDownloadControl>
                              </div>
                            </Col>
                          </div>
                        </Row>
                        <Row
                          bsClass="row"
                          className="row-sm content-packs-summary"
                          componentClass="div"
                        >
                          <div
                            className="row-sm content-packs-summary row"
                          >
                            <Col
                              bsClass="col"
                              componentClass="div"
                              md={12}
                            >
                              <div
                                className="col-md-12"
                              >
                                Fast but insecure backup
                                 
                              </div>
                            </Col>
                          </div>
                        </Row>
                      </span>
                    </ListGroupItem>
                  </StyledComponent>
                </ListGroupItem>
              </ForwardRef>
            </ControlledTableListItem>
          </div>
        </ListGroup>
      </div>
    </ControlledTableList>
    <Row
      bsClass="row"
      className="row-sm"
      componentClass="div"
    >
      <div
        className="row-sm row"
      >
        <Col
          bsClass="col"
          componentClass="div"
          md={5}
        >
          <div
            className="col-md-5"
          />
        </Col>
        <Col
          bsClass="col"
          componentClass="div"
          md={5}
        >
          <div
            className="col-md-5"
          >
            <Pagination
              activePage={1}
              bsSize="small"
              bsStyle="pagination pager"
              first={true}
              items={2}
              last={true}
              maxButtons={10}
              next={true}
              onSelect={[Function]}
              prev={true}
            >
              <StyledComponent
                activePage={1}
                bsSize="small"
                bsStyle="pagination pager"
                first={true}
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "Pagination-sc-1u3exqe-0",
                      "isStatic": true,
                      "lastClassName": "gSmbxW",
                      "rules": Array [
                        "> li{> a,> span{color:",
                        "#9E1F63",
                        ";background-color:",
                        "#FFF",
                        ";border-color:",
                        "#DCE1E5",
                        ";&:hover,&:focus{color:",
                        "#5e123b",
                        ";background-color:",
                        "#F1F2F2",
                        ";border-color:",
                        "#DCE1E5",
                        ";}}}> .active > a,> .active > span{&,&:hover,&:focus{color:",
                        "#FFF",
                        ";background-color:",
                        "#9E1F63",
                        ";border-color:",
                        "#9E1F63",
                        ";}}> .disabled{> span,> span:hover,> span:focus,> a,> a:hover,> a:focus{color:",
                        "#93a2af",
                        ";background-color:",
                        "#FFF",
                        ";border-color:",
                        "#DCE1E5",
                        ";}}",
                      ],
                    },
                    "displayName": "Pagination",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "Pagination-sc-1u3exqe-0",
                    "target": [Function],
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
                items={2}
                last={true}
                maxButtons={10}
                next={true}
                onSelect={[Function]}
                prev={true}
              >
                <Pagination
                  activePage={1}
                  boundaryLinks={false}
                  bsClass="pagination"
                  bsSize="small"
                  bsStyle="pagination pager"
                  className="Pagination-sc-1u3exqe-0 gSmbxW"
                  ellipsis={true}
                  first={true}
                  items={2}
                  last={true}
                  maxButtons={10}
                  next={true}
                  onSelect={[Function]}
                  prev={true}
                >
                  <ul
                    className="Pagination-sc-1u3exqe-0 gSmbxW pagination pagination-sm pagination-pagination pager"
                  >
                    <PaginationButton
                      active={false}
                      componentClass={[Function]}
                      disabled={true}
                      eventKey={1}
                      onSelect={[Function]}
                    >
                      <li
                        className="disabled"
                      >
                        <SafeAnchor
                          componentClass="a"
                          disabled={true}
                          onClick={[Function]}
                        >
                          <a
                            href="#"
                            onClick={[Function]}
                            onKeyDown={[Function]}
                            role="button"
                            style={
                              Object {
                                "pointerEvents": "none",
                              }
                            }
                            tabIndex={-1}
                          >
                            <span
                              aria-label="First"
                            >
                              «
                            </span>
                          </a>
                        </SafeAnchor>
                      </li>
                    </PaginationButton>
                    <PaginationButton
                      active={false}
                      componentClass={[Function]}
                      disabled={true}
                      eventKey={0}
                      onSelect={[Function]}
                    >
                      <li
                        className="disabled"
                      >
                        <SafeAnchor
                          componentClass="a"
                          disabled={true}
                          onClick={[Function]}
                        >
                          <a
                            href="#"
                            onClick={[Function]}
                            onKeyDown={[Function]}
                            role="button"
                            style={
                              Object {
                                "pointerEvents": "none",
                              }
                            }
                            tabIndex={-1}
                          >
                            <span
                              aria-label="Previous"
                            >
                              ‹
                            </span>
                          </a>
                        </SafeAnchor>
                      </li>
                    </PaginationButton>
                    <PaginationButton
                      active={true}
                      componentClass={[Function]}
                      disabled={false}
                      eventKey={1}
                      key="1"
                      onSelect={[Function]}
                    >
                      <li
                        className="active"
                      >
                        <SafeAnchor
                          componentClass="a"
                          disabled={false}
                          onClick={[Function]}
                        >
                          <a
                            href="#"
                            onClick={[Function]}
                            onKeyDown={[Function]}
                            role="button"
                          >
                            1
                          </a>
                        </SafeAnchor>
                      </li>
                    </PaginationButton>
                    <PaginationButton
                      active={false}
                      componentClass={[Function]}
                      disabled={false}
                      eventKey={2}
                      key="2"
                      onSelect={[Function]}
                    >
                      <li
                        className=""
                      >
                        <SafeAnchor
                          componentClass="a"
                          disabled={false}
                          onClick={[Function]}
                        >
                          <a
                            href="#"
                            onClick={[Function]}
                            onKeyDown={[Function]}
                            role="button"
                          >
                            2
                          </a>
                        </SafeAnchor>
                      </li>
                    </PaginationButton>
                    <PaginationButton
                      active={false}
                      componentClass={[Function]}
                      disabled={false}
                      eventKey={2}
                      onSelect={[Function]}
                    >
                      <li
                        className=""
                      >
                        <SafeAnchor
                          componentClass="a"
                          disabled={false}
                          onClick={[Function]}
                        >
                          <a
                            href="#"
                            onClick={[Function]}
                            onKeyDown={[Function]}
                            role="button"
                          >
                            <span
                              aria-label="Next"
                            >
                              ›
                            </span>
                          </a>
                        </SafeAnchor>
                      </li>
                    </PaginationButton>
                    <PaginationButton
                      active={false}
                      componentClass={[Function]}
                      disabled={false}
                      eventKey={2}
                      onSelect={[Function]}
                    >
                      <li
                        className=""
                      >
                        <SafeAnchor
                          componentClass="a"
                          disabled={false}
                          onClick={[Function]}
                        >
                          <a
                            href="#"
                            onClick={[Function]}
                            onKeyDown={[Function]}
                            role="button"
                          >
                            <span
                              aria-label="Last"
                            >
                              »
                            </span>
                          </a>
                        </SafeAnchor>
                      </li>
                    </PaginationButton>
                  </ul>
                </Pagination>
              </StyledComponent>
            </Pagination>
          </div>
        </Col>
        <Col
          bsClass="col"
          className="text-right"
          componentClass="div"
          md={2}
        >
          <div
            className="text-right col-md-2"
          >
            <span>
              Show: 
              <select
                onChange={[Function]}
                value={10}
              >
                <option>
                  10
                </option>
                <option>
                  25
                </option>
                <option>
                  50
                </option>
                <option>
                  100
                </option>
              </select>
            </span>
          </div>
        </Col>
      </div>
    </Row>
  </div>
</ContentPacksList>
`;

exports[`<ContentPacksList /> should render with empty content packs 1`] = `
<ContentPacksList
  contentPackMetadata={Object {}}
  contentPacks={Array []}
  onDeletePack={[Function]}
  onInstall={[Function]}
>
  <div>
    <Row
      bsClass="row"
      className="row-sm"
      componentClass="div"
    >
      <div
        className="row-sm row"
      >
        <Col
          bsClass="col"
          componentClass="div"
          md={5}
        >
          <div
            className="col-md-5"
          >
            <TypeAheadDataFilter
              data={Array []}
              displayKey="name"
              filterBy=""
              filterSuggestionAccessor=""
              filterSuggestions={Array []}
              id="content-packs-filter"
              label="Filter"
              onDataFiltered={[Function]}
              searchInKeys={
                Array [
                  "name",
                  "summary",
                ]
              }
            >
              <div
                className="filter"
              >
                <form
                  className="form-inline"
                  onSubmit={[Function]}
                  style={
                    Object {
                      "display": "inline",
                    }
                  }
                >
                  <TypeAheadInput
                    displayKey="name"
                    id="content-packs-filter"
                    label="Filter"
                    onSuggestionSelected={[Function]}
                    suggestionText="Filter by : "
                    suggestions={Array []}
                  >
                    <Input
                      addonAfter={null}
                      bsStyle={null}
                      buttonAfter={null}
                      help=""
                      id="content-packs-filter"
                      label="Filter"
                      placeholder=""
                      type="text"
                      wrapperClassName="typeahead-wrapper"
                    >
                      <Component
                        controlId="content-packs-filter"
                        validationState={null}
                      >
                        <FormGroup__StyledFormGroup
                          controlId="content-packs-filter"
                          validationState={null}
                        >
                          <StyledComponent
                            controlId="content-packs-filter"
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "SIZES": Array [
                                  "large",
                                  "small",
                                ],
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "FormGroup__StyledFormGroup-sc-1wv4cm9-0",
                                  "isStatic": false,
                                  "lastClassName": "ekazNr",
                                  "rules": Array [
                                    [Function],
                                    ";",
                                  ],
                                },
                                "displayName": "FormGroup__StyledFormGroup",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "FormGroup__StyledFormGroup-sc-1wv4cm9-0",
                                "target": [Function],
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                            validationState={null}
                          >
                            <FormGroup
                              bsClass="form-group"
                              className="FormGroup__StyledFormGroup-sc-1wv4cm9-0 ekazNr"
                              controlId="content-packs-filter"
                              validationState={null}
                            >
                              <div
                                className="FormGroup__StyledFormGroup-sc-1wv4cm9-0 ekazNr form-group"
                              >
                                <ControlLabel>
                                  <StyledComponent
                                    forwardedComponent={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "attrs": Array [],
                                        "componentStyle": ComponentStyle {
                                          "componentId": "ControlLabel-sc-1edmum5-0",
                                          "isStatic": true,
                                          "lastClassName": "iZJNbd",
                                          "rules": Array [
                                            "color:",
                                            "#1F1F1F",
                                            ";font-weight:bold;margin-bottom:5px;display:inline-block;",
                                          ],
                                        },
                                        "displayName": "ControlLabel",
                                        "foldedComponentIds": Array [],
                                        "render": [Function],
                                        "styledComponentId": "ControlLabel-sc-1edmum5-0",
                                        "target": [Function],
                                        "toString": [Function],
                                        "warnTooManyClasses": [Function],
                                        "withComponent": [Function],
                                      }
                                    }
                                    forwardedRef={null}
                                  >
                                    <ControlLabel
                                      bsClass="control-label"
                                      className="ControlLabel-sc-1edmum5-0 iZJNbd"
                                      srOnly={false}
                                    >
                                      <label
                                        className="ControlLabel-sc-1edmum5-0 iZJNbd control-label"
                                        htmlFor="content-packs-filter"
                                      >
                                        Filter
                                      </label>
                                    </ControlLabel>
                                  </StyledComponent>
                                </ControlLabel>
                                <InputWrapper
                                  className="typeahead-wrapper"
                                >
                                  <div
                                    className="typeahead-wrapper"
                                  >
                                    <FormControl
                                      componentClass="input"
                                      inputRef={[Function]}
                                      label="Filter"
                                      name="content-packs-filter"
                                      placeholder=""
                                      type="text"
                                    >
                                      <StyledComponent
                                        componentClass="input"
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "Feedback": [Function],
                                            "SIZES": Array [
                                              "small",
                                              "large",
                                            ],
                                            "Static": [Function],
                                            "attrs": Array [],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "FormControl-sc-1amoaox-0",
                                              "isStatic": true,
                                              "lastClassName": "hdNTyr",
                                              "rules": Array [
                                                "color:",
                                                "#1F1F1F",
                                                ";background-color:",
                                                "#FFF",
                                                ";border-color:",
                                                "#DCE1E5",
                                                ";&:focus{border-color:",
                                                "#6DC6E7",
                                                ";box-shadow(inset 0 1px 1px rgba(0,0,0,.075),0 0 8px ",
                                                "rgba(109,198,231,0.4)",
                                                ");}&::-moz-placeholder,&:-ms-input-placeholder,&::-webkit-input-placeholder{color:",
                                                "#b8b8b8",
                                                ";}&[disabled],&[readonly],fieldset[disabled] &{background-color:",
                                                "#DCE1E5",
                                                ";}~ .form-control-feedback.glyphicon{display:none;}",
                                              ],
                                            },
                                            "displayName": "FormControl",
                                            "foldedComponentIds": Array [],
                                            "render": [Function],
                                            "styledComponentId": "FormControl-sc-1amoaox-0",
                                            "target": [Function],
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                        inputRef={[Function]}
                                        label="Filter"
                                        name="content-packs-filter"
                                        placeholder=""
                                        type="text"
                                      >
                                        <FormControl
                                          bsClass="form-control"
                                          className="FormControl-sc-1amoaox-0 hdNTyr"
                                          componentClass="input"
                                          inputRef={[Function]}
                                          label="Filter"
                                          name="content-packs-filter"
                                          placeholder=""
                                          type="text"
                                        >
                                          <input
                                            className="FormControl-sc-1amoaox-0 hdNTyr form-control"
                                            id="content-packs-filter"
                                            label="Filter"
                                            name="content-packs-filter"
                                            placeholder=""
                                            type="text"
                                          />
                                        </FormControl>
                                      </StyledComponent>
                                    </FormControl>
                                  </div>
                                </InputWrapper>
                              </div>
                            </FormGroup>
                          </StyledComponent>
                        </FormGroup__StyledFormGroup>
                      </Component>
                    </Input>
                  </TypeAheadInput>
                  <ForwardRef
                    bsStyle="default"
                    style={
                      Object {
                        "marginLeft": 5,
                      }
                    }
                    type="submit"
                  >
                    <Button
                      bsStyle="default"
                      style={
                        Object {
                          "marginLeft": 5,
                        }
                      }
                      type="submit"
                    >
                      <StyledComponent
                        bsStyle="default"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "SIZES": Array [
                              "large",
                              "small",
                              "xsmall",
                            ],
                            "STYLES": Array [
                              "success",
                              "warning",
                              "danger",
                              "info",
                              "default",
                              "primary",
                              "link",
                            ],
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Button-c9cbmb-0",
                              "isStatic": false,
                              "lastClassName": "iKWoaE",
                              "rules": Array [
                                [Function],
                              ],
                            },
                            "displayName": "Button",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Button-c9cbmb-0",
                            "target": [Function],
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                        style={
                          Object {
                            "marginLeft": 5,
                          }
                        }
                        type="submit"
                      >
                        <Button
                          active={false}
                          block={false}
                          bsClass="btn"
                          bsStyle="default"
                          className="Button-c9cbmb-0 iKWoaE"
                          disabled={false}
                          style={
                            Object {
                              "marginLeft": 5,
                            }
                          }
                          type="submit"
                        >
                          <button
                            className="Button-c9cbmb-0 iKWoaE btn btn-default"
                            disabled={false}
                            style={
                              Object {
                                "marginLeft": 5,
                              }
                            }
                            type="submit"
                          >
                            Filter
                          </button>
                        </Button>
                      </StyledComponent>
                    </Button>
                  </ForwardRef>
                  <ForwardRef
                    bsStyle="default"
                    disabled={true}
                    onClick={[Function]}
                    style={
                      Object {
                        "marginLeft": 5,
                      }
                    }
                    type="button"
                  >
                    <Button
                      bsStyle="default"
                      disabled={true}
                      onClick={[Function]}
                      style={
                        Object {
                          "marginLeft": 5,
                        }
                      }
                      type="button"
                    >
                      <StyledComponent
                        bsStyle="default"
                        disabled={true}
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "SIZES": Array [
                              "large",
                              "small",
                              "xsmall",
                            ],
                            "STYLES": Array [
                              "success",
                              "warning",
                              "danger",
                              "info",
                              "default",
                              "primary",
                              "link",
                            ],
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Button-c9cbmb-0",
                              "isStatic": false,
                              "lastClassName": "iKWoaE",
                              "rules": Array [
                                [Function],
                              ],
                            },
                            "displayName": "Button",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Button-c9cbmb-0",
                            "target": [Function],
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                        onClick={[Function]}
                        style={
                          Object {
                            "marginLeft": 5,
                          }
                        }
                        type="button"
                      >
                        <Button
                          active={false}
                          block={false}
                          bsClass="btn"
                          bsStyle="default"
                          className="Button-c9cbmb-0 iKWoaE"
                          disabled={true}
                          onClick={[Function]}
                          style={
                            Object {
                              "marginLeft": 5,
                            }
                          }
                          type="button"
                        >
                          <button
                            className="Button-c9cbmb-0 iKWoaE btn btn-default"
                            disabled={true}
                            onClick={[Function]}
                            style={
                              Object {
                                "marginLeft": 5,
                              }
                            }
                            type="button"
                          >
                            Reset
                          </button>
                        </Button>
                      </StyledComponent>
                    </Button>
                  </ForwardRef>
                </form>
                <ul
                  className="pill-list"
                >
                  <Component />
                </ul>
              </div>
            </TypeAheadDataFilter>
          </div>
        </Col>
        <Col
          bsClass="col"
          componentClass="div"
          md={5}
        >
          <div
            className="col-md-5"
          >
            <Pagination
              activePage={1}
              bsSize="small"
              bsStyle="pagination pager"
              first={true}
              items={0}
              last={true}
              maxButtons={10}
              next={true}
              onSelect={[Function]}
              prev={true}
            >
              <StyledComponent
                activePage={1}
                bsSize="small"
                bsStyle="pagination pager"
                first={true}
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "Pagination-sc-1u3exqe-0",
                      "isStatic": true,
                      "lastClassName": "gSmbxW",
                      "rules": Array [
                        "> li{> a,> span{color:",
                        "#9E1F63",
                        ";background-color:",
                        "#FFF",
                        ";border-color:",
                        "#DCE1E5",
                        ";&:hover,&:focus{color:",
                        "#5e123b",
                        ";background-color:",
                        "#F1F2F2",
                        ";border-color:",
                        "#DCE1E5",
                        ";}}}> .active > a,> .active > span{&,&:hover,&:focus{color:",
                        "#FFF",
                        ";background-color:",
                        "#9E1F63",
                        ";border-color:",
                        "#9E1F63",
                        ";}}> .disabled{> span,> span:hover,> span:focus,> a,> a:hover,> a:focus{color:",
                        "#93a2af",
                        ";background-color:",
                        "#FFF",
                        ";border-color:",
                        "#DCE1E5",
                        ";}}",
                      ],
                    },
                    "displayName": "Pagination",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "Pagination-sc-1u3exqe-0",
                    "target": [Function],
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
                items={0}
                last={true}
                maxButtons={10}
                next={true}
                onSelect={[Function]}
                prev={true}
              >
                <Pagination
                  activePage={1}
                  boundaryLinks={false}
                  bsClass="pagination"
                  bsSize="small"
                  bsStyle="pagination pager"
                  className="Pagination-sc-1u3exqe-0 gSmbxW"
                  ellipsis={true}
                  first={true}
                  items={0}
                  last={true}
                  maxButtons={10}
                  next={true}
                  onSelect={[Function]}
                  prev={true}
                >
                  <ul
                    className="Pagination-sc-1u3exqe-0 gSmbxW pagination pagination-sm pagination-pagination pager"
                  >
                    <PaginationButton
                      active={false}
                      componentClass={[Function]}
                      disabled={true}
                      eventKey={1}
                      onSelect={[Function]}
                    >
                      <li
                        className="disabled"
                      >
                        <SafeAnchor
                          componentClass="a"
                          disabled={true}
                          onClick={[Function]}
                        >
                          <a
                            href="#"
                            onClick={[Function]}
                            onKeyDown={[Function]}
                            role="button"
                            style={
                              Object {
                                "pointerEvents": "none",
                              }
                            }
                            tabIndex={-1}
                          >
                            <span
                              aria-label="First"
                            >
                              «
                            </span>
                          </a>
                        </SafeAnchor>
                      </li>
                    </PaginationButton>
                    <PaginationButton
                      active={false}
                      componentClass={[Function]}
                      disabled={true}
                      eventKey={0}
                      onSelect={[Function]}
                    >
                      <li
                        className="disabled"
                      >
                        <SafeAnchor
                          componentClass="a"
                          disabled={true}
                          onClick={[Function]}
                        >
                          <a
                            href="#"
                            onClick={[Function]}
                            onKeyDown={[Function]}
                            role="button"
                            style={
                              Object {
                                "pointerEvents": "none",
                              }
                            }
                            tabIndex={-1}
                          >
                            <span
                              aria-label="Previous"
                            >
                              ‹
                            </span>
                          </a>
                        </SafeAnchor>
                      </li>
                    </PaginationButton>
                    <PaginationButton
                      active={false}
                      componentClass={[Function]}
                      disabled={true}
                      eventKey={2}
                      onSelect={[Function]}
                    >
                      <li
                        className="disabled"
                      >
                        <SafeAnchor
                          componentClass="a"
                          disabled={true}
                          onClick={[Function]}
                        >
                          <a
                            href="#"
                            onClick={[Function]}
                            onKeyDown={[Function]}
                            role="button"
                            style={
                              Object {
                                "pointerEvents": "none",
                              }
                            }
                            tabIndex={-1}
                          >
                            <span
                              aria-label="Next"
                            >
                              ›
                            </span>
                          </a>
                        </SafeAnchor>
                      </li>
                    </PaginationButton>
                    <PaginationButton
                      active={false}
                      componentClass={[Function]}
                      disabled={true}
                      eventKey={0}
                      onSelect={[Function]}
                    >
                      <li
                        className="disabled"
                      >
                        <SafeAnchor
                          componentClass="a"
                          disabled={true}
                          onClick={[Function]}
                        >
                          <a
                            href="#"
                            onClick={[Function]}
                            onKeyDown={[Function]}
                            role="button"
                            style={
                              Object {
                                "pointerEvents": "none",
                              }
                            }
                            tabIndex={-1}
                          >
                            <span
                              aria-label="Last"
                            >
                              »
                            </span>
                          </a>
                        </SafeAnchor>
                      </li>
                    </PaginationButton>
                  </ul>
                </Pagination>
              </StyledComponent>
            </Pagination>
          </div>
        </Col>
        <Col
          bsClass="col"
          className="text-right"
          componentClass="div"
          md={2}
        >
          <div
            className="text-right col-md-2"
          >
            <span>
              Show: 
              <select
                onChange={[Function]}
                value={10}
              >
                <option>
                  10
                </option>
                <option>
                  25
                </option>
                <option>
                  50
                </option>
                <option>
                  100
                </option>
              </select>
            </span>
          </div>
        </Col>
      </div>
    </Row>
    <div>
      No content packs found. Please create or upload one
    </div>
    <Row
      bsClass="row"
      className="row-sm"
      componentClass="div"
    >
      <div
        className="row-sm row"
      >
        <Col
          bsClass="col"
          componentClass="div"
          md={5}
        >
          <div
            className="col-md-5"
          />
        </Col>
        <Col
          bsClass="col"
          componentClass="div"
          md={5}
        >
          <div
            className="col-md-5"
          >
            <Pagination
              activePage={1}
              bsSize="small"
              bsStyle="pagination pager"
              first={true}
              items={0}
              last={true}
              maxButtons={10}
              next={true}
              onSelect={[Function]}
              prev={true}
            >
              <StyledComponent
                activePage={1}
                bsSize="small"
                bsStyle="pagination pager"
                first={true}
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "Pagination-sc-1u3exqe-0",
                      "isStatic": true,
                      "lastClassName": "gSmbxW",
                      "rules": Array [
                        "> li{> a,> span{color:",
                        "#9E1F63",
                        ";background-color:",
                        "#FFF",
                        ";border-color:",
                        "#DCE1E5",
                        ";&:hover,&:focus{color:",
                        "#5e123b",
                        ";background-color:",
                        "#F1F2F2",
                        ";border-color:",
                        "#DCE1E5",
                        ";}}}> .active > a,> .active > span{&,&:hover,&:focus{color:",
                        "#FFF",
                        ";background-color:",
                        "#9E1F63",
                        ";border-color:",
                        "#9E1F63",
                        ";}}> .disabled{> span,> span:hover,> span:focus,> a,> a:hover,> a:focus{color:",
                        "#93a2af",
                        ";background-color:",
                        "#FFF",
                        ";border-color:",
                        "#DCE1E5",
                        ";}}",
                      ],
                    },
                    "displayName": "Pagination",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "Pagination-sc-1u3exqe-0",
                    "target": [Function],
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
                items={0}
                last={true}
                maxButtons={10}
                next={true}
                onSelect={[Function]}
                prev={true}
              >
                <Pagination
                  activePage={1}
                  boundaryLinks={false}
                  bsClass="pagination"
                  bsSize="small"
                  bsStyle="pagination pager"
                  className="Pagination-sc-1u3exqe-0 gSmbxW"
                  ellipsis={true}
                  first={true}
                  items={0}
                  last={true}
                  maxButtons={10}
                  next={true}
                  onSelect={[Function]}
                  prev={true}
                >
                  <ul
                    className="Pagination-sc-1u3exqe-0 gSmbxW pagination pagination-sm pagination-pagination pager"
                  >
                    <PaginationButton
                      active={false}
                      componentClass={[Function]}
                      disabled={true}
                      eventKey={1}
                      onSelect={[Function]}
                    >
                      <li
                        className="disabled"
                      >
                        <SafeAnchor
                          componentClass="a"
                          disabled={true}
                          onClick={[Function]}
                        >
                          <a
                            href="#"
                            onClick={[Function]}
                            onKeyDown={[Function]}
                            role="button"
                            style={
                              Object {
                                "pointerEvents": "none",
                              }
                            }
                            tabIndex={-1}
                          >
                            <span
                              aria-label="First"
                            >
                              «
                            </span>
                          </a>
                        </SafeAnchor>
                      </li>
                    </PaginationButton>
                    <PaginationButton
                      active={false}
                      componentClass={[Function]}
                      disabled={true}
                      eventKey={0}
                      onSelect={[Function]}
                    >
                      <li
                        className="disabled"
                      >
                        <SafeAnchor
                          componentClass="a"
                          disabled={true}
                          onClick={[Function]}
                        >
                          <a
                            href="#"
                            onClick={[Function]}
                            onKeyDown={[Function]}
                            role="button"
                            style={
                              Object {
                                "pointerEvents": "none",
                              }
                            }
                            tabIndex={-1}
                          >
                            <span
                              aria-label="Previous"
                            >
                              ‹
                            </span>
                          </a>
                        </SafeAnchor>
                      </li>
                    </PaginationButton>
                    <PaginationButton
                      active={false}
                      componentClass={[Function]}
                      disabled={true}
                      eventKey={2}
                      onSelect={[Function]}
                    >
                      <li
                        className="disabled"
                      >
                        <SafeAnchor
                          componentClass="a"
                          disabled={true}
                          onClick={[Function]}
                        >
                          <a
                            href="#"
                            onClick={[Function]}
                            onKeyDown={[Function]}
                            role="button"
                            style={
                              Object {
                                "pointerEvents": "none",
                              }
                            }
                            tabIndex={-1}
                          >
                            <span
                              aria-label="Next"
                            >
                              ›
                            </span>
                          </a>
                        </SafeAnchor>
                      </li>
                    </PaginationButton>
                    <PaginationButton
                      active={false}
                      componentClass={[Function]}
                      disabled={true}
                      eventKey={0}
                      onSelect={[Function]}
                    >
                      <li
                        className="disabled"
                      >
                        <SafeAnchor
                          componentClass="a"
                          disabled={true}
                          onClick={[Function]}
                        >
                          <a
                            href="#"
                            onClick={[Function]}
                            onKeyDown={[Function]}
                            role="button"
                            style={
                              Object {
                                "pointerEvents": "none",
                              }
                            }
                            tabIndex={-1}
                          >
                            <span
                              aria-label="Last"
                            >
                              »
                            </span>
                          </a>
                        </SafeAnchor>
                      </li>
                    </PaginationButton>
                  </ul>
                </Pagination>
              </StyledComponent>
            </Pagination>
          </div>
        </Col>
        <Col
          bsClass="col"
          className="text-right"
          componentClass="div"
          md={2}
        >
          <div
            className="text-right col-md-2"
          >
            <span>
              Show: 
              <select
                onChange={[Function]}
                value={10}
              >
                <option>
                  10
                </option>
                <option>
                  25
                </option>
                <option>
                  50
                </option>
                <option>
                  100
                </option>
              </select>
            </span>
          </div>
        </Col>
      </div>
    </Row>
  </div>
</ContentPacksList>
`;
