// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<ContentPacksList /> should render with content packs 1`] = `
.c3.btn-danger {
  background-color: #ad0707;
  border-color: #b23939;
  color: rgb(252,249,249);
  -webkit-transition: background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;
  transition: background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;
}

.c3.btn-danger:hover {
  background-color: #a00e0e;
  border-color: #a53636;
  color: #e9e6e6;
}

.c3.btn-danger.active {
  background-color: #b75151;
  border-color: #bc6363;
  color: rgb(252,249,249);
}

.c3.btn-danger.active:hover {
  background-color: #a94c4c;
  border-color: #ad5c5c;
  color: #e9e6e6;
}

.c3.btn-danger[disabled],
.c3.btn-danger.disabled {
  background-color: #c07272;
  border-color: #bc6363;
  color: rgb(252,250,250);
}

.c3.btn-danger[disabled]:hover,
.c3.btn-danger.disabled:hover {
  background-color: #c07272;
  border-color: #bc6363;
  color: rgb(252,250,250);
}

.c3.btn-default {
  background-color: #e6e6e6;
  border-color: #e0e0e0;
  color: rgb(73,73,73);
  -webkit-transition: background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;
  transition: background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;
}

.c3.btn-default:hover {
  background-color: #d4d4d4;
  border-color: #cfcfcf;
  color: #444444;
}

.c3.btn-default.active {
  background-color: #dadada;
  border-color: #d4d4d4;
  color: rgb(49,49,49);
}

.c3.btn-default.active:hover {
  background-color: #cacaca;
  border-color: #c4c4c4;
  color: #2f2f2f;
}

.c3.btn-default[disabled],
.c3.btn-default.disabled {
  background-color: #cecece;
  border-color: #d4d4d4;
  color: rgb(80,80,80);
}

.c3.btn-default[disabled]:hover,
.c3.btn-default.disabled:hover {
  background-color: #cecece;
  border-color: #d4d4d4;
  color: rgb(80,80,80);
}

.c3.btn-info {
  background-color: #0063be;
  border-color: #3970c2;
  color: rgb(249,250,252);
  -webkit-transition: background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;
  transition: background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;
}

.c3.btn-info:hover {
  background-color: #0c5cb0;
  border-color: #3668b3;
  color: #e6e7e9;
}

.c3.btn-info.active {
  background-color: #517cc5;
  border-color: #6386c9;
  color: rgb(249,250,252);
}

.c3.btn-info.active:hover {
  background-color: #4b73b6;
  border-color: #5c7dba;
  color: #e6e7e9;
}

.c3.btn-info[disabled],
.c3.btn-info.disabled {
  background-color: #7290cd;
  border-color: #6386c9;
  color: rgb(250,251,253);
}

.c3.btn-info[disabled]:hover,
.c3.btn-info.disabled:hover {
  background-color: #7290cd;
  border-color: #6386c9;
  color: rgb(250,251,253);
}

.c3.btn-link {
  background-color: rgba(255,255,255,0);
  border-color: rgba(255,255,255,0);
  color: #702785;
  -webkit-transition: background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;
  transition: background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;
}

.c3.btn-link:hover {
  background-color: #ebebeb26;
  border-color: #ebebeb26;
  color: #68267b;
}

.c3.btn-link.active {
  background-color: rgba(255,255,255,0);
  border-color: rgba(255,255,255,0);
  color: #410057;
}

.c3.btn-link.active:hover {
  background-color: rgba(255,255,255,0);
  border-color: #ebebeb26;
  color: #3d0c51;
}

.c3.btn-link[disabled],
.c3.btn-link.disabled {
  background-color: rgba(255,255,255,0);
  border-color: rgba(255,255,255,0);
  color: #702785;
}

.c3.btn-link[disabled]:hover,
.c3.btn-link.disabled:hover {
  background-color: rgba(255,255,255,0);
  border-color: rgba(255,255,255,0);
  color: #702785;
}

.c3.btn-primary {
  background-color: #702785;
  border-color: #7b458e;
  color: rgb(234,229,236);
  -webkit-transition: background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;
  transition: background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;
}

.c3.btn-primary:hover {
  background-color: #68267b;
  border-color: #724083;
  color: #d8d3da;
}

.c3.btn-primary.active {
  background-color: #855996;
  border-color: #8f699d;
  color: rgb(250,249,251);
}

.c3.btn-primary.active:hover {
  background-color: #7c538b;
  border-color: #846292;
  color: #e7e6e8;
}

.c3.btn-primary[disabled],
.c3.btn-primary.disabled {
  background-color: #9877a5;
  border-color: #8f699d;
  color: rgb(251,250,251);
}

.c3.btn-primary[disabled]:hover,
.c3.btn-primary.disabled:hover {
  background-color: #9877a5;
  border-color: #8f699d;
  color: rgb(251,250,251);
}

.c3.btn-success {
  background-color: #00ae42;
  border-color: #39b356;
  color: rgb(249,252,249);
  -webkit-transition: background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;
  transition: background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;
}

.c3.btn-success:hover {
  background-color: #0ca13e;
  border-color: #36a550;
  color: #e6e9e6;
}

.c3.btn-success.active {
  background-color: #51b866;
  border-color: #63bc74;
  color: rgb(249,252,250);
}

.c3.btn-success.active:hover {
  background-color: #4baa5f;
  border-color: #5cae6c;
  color: #e6e9e7;
}

.c3.btn-success[disabled],
.c3.btn-success.disabled {
  background-color: #72c180;
  border-color: #63bc74;
  color: rgb(250,252,250);
}

.c3.btn-success[disabled]:hover,
.c3.btn-success.disabled:hover {
  background-color: #72c180;
  border-color: #63bc74;
  color: rgb(250,252,250);
}

.c3.btn-warning {
  background-color: #ffd200;
  border-color: #f9cd07;
  color: rgb(57,47,0);
  -webkit-transition: background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;
  transition: background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;
}

.c3.btn-warning:hover {
  background-color: #ebc20c;
  border-color: #e6bd0e;
  color: #362d0c;
}

.c3.btn-warning.active {
  background-color: #f2c70a;
  border-color: #ebc20c;
  color: rgb(54,45,2);
}

.c3.btn-warning.active:hover {
  background-color: #e0b80f;
  border-color: #d9b310;
  color: #332b0c;
}

.c3.btn-warning[disabled],
.c3.btn-warning.disabled {
  background-color: #e4bc0e;
  border-color: #ebc20c;
  color: rgb(88,73,5);
}

.c3.btn-warning[disabled]:hover,
.c3.btn-warning.disabled:hover {
  background-color: #e4bc0e;
  border-color: #ebc20c;
  color: rgb(88,73,5);
}

.c1 {
  color: #1f1f1f;
  font-weight: bold;
  margin-bottom: 5px;
  display: inline-block;
}

.c12.btn-danger {
  background-color: #ad0707;
  border-color: #b23939;
  color: rgb(252,249,249);
  -webkit-transition: background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;
  transition: background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;
}

.c12.btn-danger:hover {
  background-color: #a00e0e;
  border-color: #a53636;
  color: #e9e6e6;
}

.c12.btn-danger.active {
  background-color: #b75151;
  border-color: #bc6363;
  color: rgb(252,249,249);
}

.c12.btn-danger.active:hover {
  background-color: #a94c4c;
  border-color: #ad5c5c;
  color: #e9e6e6;
}

.c12.btn-danger[disabled],
.c12.btn-danger.disabled {
  background-color: #c07272;
  border-color: #bc6363;
  color: rgb(252,250,250);
}

.c12.btn-danger[disabled]:hover,
.c12.btn-danger.disabled:hover {
  background-color: #c07272;
  border-color: #bc6363;
  color: rgb(252,250,250);
}

.c12.btn-default {
  background-color: #e6e6e6;
  border-color: #e0e0e0;
  color: rgb(73,73,73);
  -webkit-transition: background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;
  transition: background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;
}

.c12.btn-default:hover {
  background-color: #d4d4d4;
  border-color: #cfcfcf;
  color: #444444;
}

.c12.btn-default.active {
  background-color: #dadada;
  border-color: #d4d4d4;
  color: rgb(49,49,49);
}

.c12.btn-default.active:hover {
  background-color: #cacaca;
  border-color: #c4c4c4;
  color: #2f2f2f;
}

.c12.btn-default[disabled],
.c12.btn-default.disabled {
  background-color: #cecece;
  border-color: #d4d4d4;
  color: rgb(80,80,80);
}

.c12.btn-default[disabled]:hover,
.c12.btn-default.disabled:hover {
  background-color: #cecece;
  border-color: #d4d4d4;
  color: rgb(80,80,80);
}

.c12.btn-info {
  background-color: #0063be;
  border-color: #3970c2;
  color: rgb(249,250,252);
  -webkit-transition: background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;
  transition: background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;
}

.c12.btn-info:hover {
  background-color: #0c5cb0;
  border-color: #3668b3;
  color: #e6e7e9;
}

.c12.btn-info.active {
  background-color: #517cc5;
  border-color: #6386c9;
  color: rgb(249,250,252);
}

.c12.btn-info.active:hover {
  background-color: #4b73b6;
  border-color: #5c7dba;
  color: #e6e7e9;
}

.c12.btn-info[disabled],
.c12.btn-info.disabled {
  background-color: #7290cd;
  border-color: #6386c9;
  color: rgb(250,251,253);
}

.c12.btn-info[disabled]:hover,
.c12.btn-info.disabled:hover {
  background-color: #7290cd;
  border-color: #6386c9;
  color: rgb(250,251,253);
}

.c12.btn-link {
  background-color: rgba(255,255,255,0);
  border-color: rgba(255,255,255,0);
  color: #702785;
  -webkit-transition: background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;
  transition: background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;
}

.c12.btn-link:hover {
  background-color: #ebebeb26;
  border-color: #ebebeb26;
  color: #68267b;
}

.c12.btn-link.active {
  background-color: rgba(255,255,255,0);
  border-color: rgba(255,255,255,0);
  color: #410057;
}

.c12.btn-link.active:hover {
  background-color: rgba(255,255,255,0);
  border-color: #ebebeb26;
  color: #3d0c51;
}

.c12.btn-link[disabled],
.c12.btn-link.disabled {
  background-color: rgba(255,255,255,0);
  border-color: rgba(255,255,255,0);
  color: #702785;
}

.c12.btn-link[disabled]:hover,
.c12.btn-link.disabled:hover {
  background-color: rgba(255,255,255,0);
  border-color: rgba(255,255,255,0);
  color: #702785;
}

.c12.btn-primary {
  background-color: #702785;
  border-color: #7b458e;
  color: rgb(234,229,236);
  -webkit-transition: background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;
  transition: background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;
}

.c12.btn-primary:hover {
  background-color: #68267b;
  border-color: #724083;
  color: #d8d3da;
}

.c12.btn-primary.active {
  background-color: #855996;
  border-color: #8f699d;
  color: rgb(250,249,251);
}

.c12.btn-primary.active:hover {
  background-color: #7c538b;
  border-color: #846292;
  color: #e7e6e8;
}

.c12.btn-primary[disabled],
.c12.btn-primary.disabled {
  background-color: #9877a5;
  border-color: #8f699d;
  color: rgb(251,250,251);
}

.c12.btn-primary[disabled]:hover,
.c12.btn-primary.disabled:hover {
  background-color: #9877a5;
  border-color: #8f699d;
  color: rgb(251,250,251);
}

.c12.btn-success {
  background-color: #00ae42;
  border-color: #39b356;
  color: rgb(249,252,249);
  -webkit-transition: background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;
  transition: background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;
}

.c12.btn-success:hover {
  background-color: #0ca13e;
  border-color: #36a550;
  color: #e6e9e6;
}

.c12.btn-success.active {
  background-color: #51b866;
  border-color: #63bc74;
  color: rgb(249,252,250);
}

.c12.btn-success.active:hover {
  background-color: #4baa5f;
  border-color: #5cae6c;
  color: #e6e9e7;
}

.c12.btn-success[disabled],
.c12.btn-success.disabled {
  background-color: #72c180;
  border-color: #63bc74;
  color: rgb(250,252,250);
}

.c12.btn-success[disabled]:hover,
.c12.btn-success.disabled:hover {
  background-color: #72c180;
  border-color: #63bc74;
  color: rgb(250,252,250);
}

.c12.btn-warning {
  background-color: #ffd200;
  border-color: #f9cd07;
  color: rgb(57,47,0);
  -webkit-transition: background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;
  transition: background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;
}

.c12.btn-warning:hover {
  background-color: #ebc20c;
  border-color: #e6bd0e;
  color: #362d0c;
}

.c12.btn-warning.active {
  background-color: #f2c70a;
  border-color: #ebc20c;
  color: rgb(54,45,2);
}

.c12.btn-warning.active:hover {
  background-color: #e0b80f;
  border-color: #d9b310;
  color: #332b0c;
}

.c12.btn-warning[disabled],
.c12.btn-warning.disabled {
  background-color: #e4bc0e;
  border-color: #ebc20c;
  color: rgb(88,73,5);
}

.c12.btn-warning[disabled]:hover,
.c12.btn-warning.disabled:hover {
  background-color: #e4bc0e;
  border-color: #ebc20c;
  color: rgb(88,73,5);
}

.c12 ~ .dropdown-menu {
  background-color: #fff;
  box-shadow: 0 3px 3px rgba(115,115,115,0.25);
}

.c12 ~ .dropdown-menu > li > a {
  color: #1f1f1f;
}

.c12 ~ .dropdown-menu > li > a:hover,
.c12 ~ .dropdown-menu > li > a:focus {
  color: #575757;
  background-color: #f3f3f3;
}

.c12 ~ .dropdown-menu > .active > a {
  color: #575757;
  background-color: #f3f3f3;
}

.c12 ~ .dropdown-menu > .active > a:hover,
.c12 ~ .dropdown-menu > .active > a:focus {
  color: #2d2d2d;
  background-color: #d0d0d0;
}

.c12 ~ .dropdown-menu > .disabled > a {
  color: #737373;
  background-color: #f3f3f3;
}

.c12 ~ .dropdown-menu > .disabled > a:hover,
.c12 ~ .dropdown-menu > .disabled > a:focus {
  color: #737373;
  background-color: #f3f3f3;
}

.c2.form-control {
  color: #1f1f1f;
  background-color: #fff;
  border-color: #a6a6a6;
}

.c2.form-control::-webkit-input-placeholder {
  color: #9b9b9b;
}

.c2.form-control::-moz-placeholder {
  color: #9b9b9b;
}

.c2.form-control:-ms-input-placeholder {
  color: #9b9b9b;
}

.c2.form-control::placeholder {
  color: #9b9b9b;
}

.c2.form-control:focus {
  border-color: #7894ce;
  box-shadow: inset 0 1px 1px rgba(0,0,0,0.075),0 0 8px rgba(120,148,206,0.4);
}

.c2.form-control[disabled],
.c2.form-control[readonly],
fieldset[disabled] .c2.form-control {
  background-color: #dddddd;
  color: #9b9b9b;
}

.c2.form-control ~ .form-control-feedback.glyphicon {
  display: none;
}

.c8 {
  background-color: #fff;
  border-color: #d0d0d0;
}

.c8 .list-group-item-heading {
  font-weight: bold;
}

a.c8,
button.c8 {
  color: #702785;
}

a.c8 .list-group-item-heading,
button.c8 .list-group-item-heading {
  color: #2d2d2d;
  font-weight: bold;
}

a.c8:hover:not(.disabled),
button.c8:hover:not(.disabled),
a.c8:focus:not(.disabled),
button.c8:focus:not(.disabled) {
  background-color: #f3f3f3;
  color: #410057;
}

a.c8:hover:not(.disabled).active,
button.c8:hover:not(.disabled).active,
a.c8:focus:not(.disabled).active,
button.c8:focus:not(.disabled).active {
  color: #2d2d2d;
  background-color: #f3f3f3;
  border-color: #f3f3f3;
}

a.c8:hover:not(.disabled) .list-group-item-heading,
button.c8:hover:not(.disabled) .list-group-item-heading,
a.c8:focus:not(.disabled) .list-group-item-heading,
button.c8:focus:not(.disabled) .list-group-item-heading {
  color: #1f1f1f;
}

.c8.disabled,
.c8.disabled:hover,
.c8.disabled:focus {
  color: #828282;
  background-color: #f3f3f3;
}

.c8.disabled .list-group-item-heading,
.c8.disabled:hover .list-group-item-heading,
.c8.disabled:focus .list-group-item-heading {
  color: inherit;
  font-weight: bold;
}

.c8.disabled .list-group-item-text,
.c8.disabled:hover .list-group-item-text,
.c8.disabled:focus .list-group-item-text {
  color: #828282;
}

.c8.active,
.c8.active:hover,
.c8.active:focus {
  color: #575757;
  background-color: #eff2f8;
  border-color: #eff2f8;
  z-index: auto;
}

.c8.active .list-group-item-heading,
.c8.active:hover .list-group-item-heading,
.c8.active:focus .list-group-item-heading,
.c8.active .list-group-item-heading > small,
.c8.active:hover .list-group-item-heading > small,
.c8.active:focus .list-group-item-heading > small,
.c8.active .list-group-item-heading > .small,
.c8.active:hover .list-group-item-heading > .small,
.c8.active:focus .list-group-item-heading > .small {
  color: inherit;
  font-weight: bold;
}

.c8.active .list-group-item-text,
.c8.active:hover .list-group-item-text,
.c8.active:focus .list-group-item-text {
  color: #9b7ca8;
}

.c11 .modal-backdrop {
  height: 100000%;
  z-index: 1030;
}

.c11 form {
  margin-bottom: 0;
}

.c11 .modal-dialog {
  margin-top: 55px;
}

.c11 .modal-dialog .modal-content {
  background-color: #fff;
  border-color: #a6a6a6;
}

.c11 .modal-header {
  border-bottom-color: #a6a6a6;
}

.c11 .modal-header button.close {
  color: currentColor;
}

.c11 .modal-footer {
  border-top-color: #a6a6a6;
}

.c11 .modal-title {
  font-size: 1.424rem;
}

.c11 .modal-body .form-group {
  margin-bottom: 5px;
}

.c0.content {
  background-color: #fff;
  border: 1px solid #d0d0d0;
  margin-bottom: 9px;
  border-radius: 4px;
}

.c7 {
  background-color: #f3f3f3;
  font-size: 1rem;
  color: rgb(77,77,77);
  padding: 0 15px;
}

.c7 .form-group {
  margin: 0;
}

.c9 {
  margin: 10px 0;
  min-height: 20px;
}

.c4.pagination {
  font-size: 0.889rem;
}

.c4.pagination > li > a,
.c4.pagination > li > span {
  color: rgb(81,81,81);
  background-color: #fff;
  border-color: #a6a6a6;
}

.c4.pagination > li > a:hover,
.c4.pagination > li > span:hover,
.c4.pagination > li > a:focus,
.c4.pagination > li > span:focus {
  color: rgb(47,47,47);
  background-color: #d0d0d0;
  border-color: #a6a6a6;
}

.c4.pagination > li.active > a,
.c4.pagination > li.active > span,
.c4.pagination > li.active > a:hover,
.c4.pagination > li.active > span:hover,
.c4.pagination > li.active > a:focus,
.c4.pagination > li.active > span:focus {
  color: rgb(76,77,78);
  background-color: #eff2f8;
  border-color: #bdc8e4;
}

.c4.pagination > li.disabled > a,
.c4.pagination > li.disabled > a:hover,
.c4.pagination > li.disabled > a:focus,
.c4.pagination > li.disabled > span,
.c4.pagination > li.disabled > span:hover,
.c4.pagination > li.disabled > span:focus {
  color: #a6a6a6;
  background-color: #fff;
  border-color: #d0d0d0;
}

.c10 {
  margin-left: 4px;
  background-color: #009a3a;
  color: #1f1f1f;
}

.c5 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: end;
  -webkit-justify-content: flex-end;
  -ms-flex-pack: end;
  justify-content: flex-end;
}

.c5 span {
  margin-right: 3px;
}

.c6 {
  width: 75px;
}

<ContentPacksList
  contentPackMetadata={
    Object {
      "1": Object {
        "1": Object {
          "installation_count": 1,
        },
      },
      "2": Object {
        "5": Object {
          "installation_count": 2,
        },
      },
    }
  }
  contentPacks={
    Array [
      Object {
        "id": "1",
        "rev": 1,
        "summary": "Grok Patterns to extract informations from UFW logfiles",
        "title": "UFW Grok Patterns",
        "version": "1.0",
      },
      Object {
        "id": "2",
        "rev": 1,
        "summary": "Patterns to retreive rails production logs",
        "title": "Rails Log Patterns",
        "version": "2.1",
      },
      Object {
        "id": "3",
        "rev": 1,
        "summary": "",
        "title": "Backup Content Pack",
        "version": "3.0",
      },
      Object {
        "id": "4",
        "rev": 1,
        "summary": "A crypted backup over ssh.",
        "title": "SSH Archive",
        "version": "3.4",
      },
      Object {
        "id": "5",
        "rev": 1,
        "summary": "Fast but insecure backup",
        "title": "FTP Backup",
        "version": "1.0",
      },
      Object {
        "id": "6",
        "rev": 1,
        "summary": "Grok Patterns to extract informations from UFW logfiles",
        "title": "UFW Grok Patterns",
        "version": "1.0",
      },
      Object {
        "id": "7",
        "rev": 1,
        "summary": "Patterns to retreive rails production logs",
        "title": "Rails Log Patterns",
        "version": "2.1",
      },
      Object {
        "id": "8",
        "rev": 1,
        "states": Array [
          "installed",
        ],
        "summary": "",
        "title": "Backup Content Pack",
        "version": "3.0",
      },
      Object {
        "id": "9",
        "rev": 1,
        "summary": "A crypted backup over ssh.",
        "title": "SSH Archive",
        "version": "3.4",
      },
      Object {
        "id": "10",
        "rev": 1,
        "summary": "Fast but insecure backup",
        "title": "FTP Backup",
        "version": "1.0",
      },
      Object {
        "id": "11",
        "rev": 1,
        "summary": "Grok Patterns to extract informations from UFW logfiles",
        "title": "UFW Grok Patterns",
        "version": "1.0",
      },
      Object {
        "id": "12",
        "rev": 1,
        "summary": "Patterns to retreive rails production logs",
        "title": "Rails Log Patterns",
        "version": "2.1",
      },
      Object {
        "id": "13",
        "rev": 1,
        "summary": "",
        "title": "Backup Content Pack",
        "version": "3.0",
      },
      Object {
        "id": "14",
        "rev": 1,
        "summary": "A crypted backup over ssh.",
        "title": "SSH Archive",
        "version": "3.4",
      },
      Object {
        "id": "15",
        "rev": 1,
        "summary": "Fast but insecure backup",
        "title": "FTP Backup",
        "version": "1.0",
      },
    ]
  }
  onDeletePack={[Function]}
  onInstall={[Function]}
>
  <div>
    <Row
      className="row-sm"
    >
      <Row
        bsClass="row"
        className="c0 row-sm"
        componentClass="div"
      >
        <div
          className="c0 row-sm row"
        >
          <Col
            bsClass="col"
            componentClass="div"
            md={5}
          >
            <div
              className="col-md-5"
            >
              <TypeAheadDataFilter
                data={
                  Array [
                    Object {
                      "id": "1",
                      "rev": 1,
                      "summary": "Grok Patterns to extract informations from UFW logfiles",
                      "title": "UFW Grok Patterns",
                      "version": "1.0",
                    },
                    Object {
                      "id": "2",
                      "rev": 1,
                      "summary": "Patterns to retreive rails production logs",
                      "title": "Rails Log Patterns",
                      "version": "2.1",
                    },
                    Object {
                      "id": "3",
                      "rev": 1,
                      "summary": "",
                      "title": "Backup Content Pack",
                      "version": "3.0",
                    },
                    Object {
                      "id": "4",
                      "rev": 1,
                      "summary": "A crypted backup over ssh.",
                      "title": "SSH Archive",
                      "version": "3.4",
                    },
                    Object {
                      "id": "5",
                      "rev": 1,
                      "summary": "Fast but insecure backup",
                      "title": "FTP Backup",
                      "version": "1.0",
                    },
                    Object {
                      "id": "6",
                      "rev": 1,
                      "summary": "Grok Patterns to extract informations from UFW logfiles",
                      "title": "UFW Grok Patterns",
                      "version": "1.0",
                    },
                    Object {
                      "id": "7",
                      "rev": 1,
                      "summary": "Patterns to retreive rails production logs",
                      "title": "Rails Log Patterns",
                      "version": "2.1",
                    },
                    Object {
                      "id": "8",
                      "rev": 1,
                      "states": Array [
                        "installed",
                      ],
                      "summary": "",
                      "title": "Backup Content Pack",
                      "version": "3.0",
                    },
                    Object {
                      "id": "9",
                      "rev": 1,
                      "summary": "A crypted backup over ssh.",
                      "title": "SSH Archive",
                      "version": "3.4",
                    },
                    Object {
                      "id": "10",
                      "rev": 1,
                      "summary": "Fast but insecure backup",
                      "title": "FTP Backup",
                      "version": "1.0",
                    },
                    Object {
                      "id": "11",
                      "rev": 1,
                      "summary": "Grok Patterns to extract informations from UFW logfiles",
                      "title": "UFW Grok Patterns",
                      "version": "1.0",
                    },
                    Object {
                      "id": "12",
                      "rev": 1,
                      "summary": "Patterns to retreive rails production logs",
                      "title": "Rails Log Patterns",
                      "version": "2.1",
                    },
                    Object {
                      "id": "13",
                      "rev": 1,
                      "summary": "",
                      "title": "Backup Content Pack",
                      "version": "3.0",
                    },
                    Object {
                      "id": "14",
                      "rev": 1,
                      "summary": "A crypted backup over ssh.",
                      "title": "SSH Archive",
                      "version": "3.4",
                    },
                    Object {
                      "id": "15",
                      "rev": 1,
                      "summary": "Fast but insecure backup",
                      "title": "FTP Backup",
                      "version": "1.0",
                    },
                  ]
                }
                displayKey="name"
                filterBy=""
                filterSuggestionAccessor=""
                filterSuggestions={Array []}
                id="content-packs-filter"
                label="Filter"
                onDataFiltered={[Function]}
                searchInKeys={
                  Array [
                    "name",
                    "summary",
                  ]
                }
              >
                <div
                  className="filter"
                >
                  <form
                    className="form-inline"
                    onSubmit={[Function]}
                    style={
                      Object {
                        "display": "inline",
                      }
                    }
                  >
                    <TypeAheadInput
                      displayKey="name"
                      id="content-packs-filter"
                      label="Filter"
                      onSuggestionSelected={[Function]}
                      suggestionText="Filter by : "
                      suggestions={Array []}
                    >
                      <Input
                        addonAfter={null}
                        bsStyle={null}
                        buttonAfter={null}
                        help=""
                        id="content-packs-filter"
                        label="Filter"
                        placeholder=""
                        type="text"
                        wrapperClassName="typeahead-wrapper"
                      >
                        <Component
                          controlId="content-packs-filter"
                          validationState={null}
                        >
                          <FormGroup__StyledFormGroup
                            controlId="content-packs-filter"
                            validationState={null}
                          >
                            <FormGroup
                              bsClass="form-group"
                              className=""
                              controlId="content-packs-filter"
                              validationState={null}
                            >
                              <div
                                className="form-group"
                              >
                                <ControlLabel>
                                  <ControlLabel
                                    bsClass="control-label"
                                    className="c1"
                                    srOnly={false}
                                  >
                                    <label
                                      className="c1 control-label"
                                      htmlFor="content-packs-filter"
                                    >
                                      Filter
                                    </label>
                                  </ControlLabel>
                                </ControlLabel>
                                <InputWrapper
                                  className="typeahead-wrapper"
                                >
                                  <div
                                    className="typeahead-wrapper"
                                  >
                                    <FormControl
                                      componentClass="input"
                                      inputRef={[Function]}
                                      label="Filter"
                                      name="content-packs-filter"
                                      placeholder=""
                                      type="text"
                                    >
                                      <FormControl
                                        bsClass="form-control"
                                        className="c2"
                                        componentClass="input"
                                        inputRef={[Function]}
                                        label="Filter"
                                        name="content-packs-filter"
                                        placeholder=""
                                        type="text"
                                      >
                                        <input
                                          className="c2 form-control"
                                          id="content-packs-filter"
                                          label="Filter"
                                          name="content-packs-filter"
                                          placeholder=""
                                          type="text"
                                        />
                                      </FormControl>
                                    </FormControl>
                                  </div>
                                </InputWrapper>
                              </div>
                            </FormGroup>
                          </FormGroup__StyledFormGroup>
                        </Component>
                      </Input>
                    </TypeAheadInput>
                    <Button
                      style={
                        Object {
                          "marginLeft": 5,
                        }
                      }
                      type="submit"
                    >
                      <Button
                        active={false}
                        block={false}
                        bsClass="btn"
                        bsStyle="default"
                        className="c3"
                        disabled={false}
                        style={
                          Object {
                            "marginLeft": 5,
                          }
                        }
                        type="submit"
                      >
                        <button
                          className="c3 btn btn-default"
                          disabled={false}
                          style={
                            Object {
                              "marginLeft": 5,
                            }
                          }
                          type="submit"
                        >
                          Filter
                        </button>
                      </Button>
                    </Button>
                    <Button
                      disabled={true}
                      onClick={[Function]}
                      style={
                        Object {
                          "marginLeft": 5,
                        }
                      }
                      type="button"
                    >
                      <Button
                        active={false}
                        block={false}
                        bsClass="btn"
                        bsStyle="default"
                        className="c3"
                        disabled={true}
                        onClick={[Function]}
                        style={
                          Object {
                            "marginLeft": 5,
                          }
                        }
                        type="button"
                      >
                        <button
                          className="c3 btn btn-default"
                          disabled={true}
                          onClick={[Function]}
                          style={
                            Object {
                              "marginLeft": 5,
                            }
                          }
                          type="button"
                        >
                          Reset
                        </button>
                      </Button>
                    </Button>
                  </form>
                  <ul
                    className="pill-list"
                  >
                    <Component />
                  </ul>
                </div>
              </TypeAheadDataFilter>
            </div>
          </Col>
          <Col
            bsClass="col"
            componentClass="div"
            md={5}
          >
            <div
              className="col-md-5"
            >
              <Pagination
                boundaryPagesRange={1}
                currentPage={1}
                disabled={false}
                hideEllipsis={false}
                hideFirstAndLastPageLinks={false}
                hidePreviousAndNextPageLinks={false}
                onChange={[Function]}
                siblingPagesRange={1}
                totalPages={2}
              >
                <UltimatePaginationComponent
                  boundaryPagesRange={1}
                  currentPage={1}
                  data-testid="graylog-pagination"
                  disabled={false}
                  hideEllipsis={false}
                  hideFirstAndLastPageLinks={false}
                  hidePreviousAndNextPageLinks={false}
                  onChange={[Function]}
                  siblingPagesRange={1}
                  totalPages={2}
                >
                  <Pagination__StyledBootstrapPagination
                    data-testid="graylog-pagination"
                  >
                    <Pagination
                      bsClass="pagination"
                      className="c4"
                      data-testid="graylog-pagination"
                    >
                      <ul
                        className="c4 pagination"
                        data-testid="graylog-pagination"
                      >
                        <Component
                          isActive={true}
                          isDisabled={false}
                          key="-3"
                          onClick={[Function]}
                          type="FIRST_PAGE_LINK"
                          value={1}
                        >
                          <First
                            disabled={true}
                            onClick={[Function]}
                          >
                            <li
                              aria-label="First"
                              className="disabled"
                              onClick={[Function]}
                            >
                              <span>
                                <Icon
                                  name="angle-double-left"
                                  type="solid"
                                >
                                  <FontAwesomeIcon
                                    icon={
                                      Object {
                                        "iconName": "angle-double-left",
                                        "prefix": "fas",
                                      }
                                    }
                                  >
                                    <svg
                                      className="svg-inline--fa fa-angle-double-left"
                                    />
                                  </FontAwesomeIcon>
                                </Icon>
                              </span>
                            </li>
                          </First>
                        </Component>
                        <Component
                          isActive={true}
                          isDisabled={false}
                          key="-4"
                          onClick={[Function]}
                          type="PREVIOUS_PAGE_LINK"
                          value={1}
                        >
                          <Prev
                            disabled={true}
                            onClick={[Function]}
                          >
                            <li
                              aria-label="Prev"
                              className="disabled"
                              onClick={[Function]}
                            >
                              <span>
                                <Icon
                                  name="angle-left"
                                  type="solid"
                                >
                                  <FontAwesomeIcon
                                    icon={
                                      Object {
                                        "iconName": "angle-left",
                                        "prefix": "fas",
                                      }
                                    }
                                  >
                                    <svg
                                      className="svg-inline--fa fa-angle-left"
                                    />
                                  </FontAwesomeIcon>
                                </Icon>
                              </span>
                            </li>
                          </Prev>
                        </Component>
                        <Component
                          isActive={true}
                          isDisabled={false}
                          key="1"
                          onClick={[Function]}
                          type="PAGE"
                          value={1}
                        >
                          <PaginationItem
                            active={true}
                            activeLabel="(current)"
                            disabled={false}
                            onClick={[Function]}
                          >
                            <li
                              className="active"
                            >
                              <span
                                disabled={false}
                                onClick={[Function]}
                              >
                                1
                                <span
                                  className="sr-only"
                                >
                                  (current)
                                </span>
                              </span>
                            </li>
                          </PaginationItem>
                        </Component>
                        <Component
                          isActive={false}
                          isDisabled={false}
                          key="2"
                          onClick={[Function]}
                          type="PAGE"
                          value={2}
                        >
                          <PaginationItem
                            active={false}
                            activeLabel="(current)"
                            disabled={false}
                            onClick={[Function]}
                          >
                            <li
                              className=""
                            >
                              <SafeAnchor
                                componentClass="a"
                                disabled={false}
                                onClick={[Function]}
                              >
                                <a
                                  href="#"
                                  onClick={[Function]}
                                  onKeyDown={[Function]}
                                  role="button"
                                >
                                  2
                                </a>
                              </SafeAnchor>
                            </li>
                          </PaginationItem>
                        </Component>
                        <Component
                          isActive={false}
                          isDisabled={false}
                          key="-5"
                          onClick={[Function]}
                          type="NEXT_PAGE_LINK"
                          value={2}
                        >
                          <Next
                            disabled={false}
                            onClick={[Function]}
                          >
                            <li
                              aria-label="Next"
                              className=""
                              onClick={[Function]}
                            >
                              <SafeAnchor
                                componentClass="a"
                              >
                                <a
                                  href="#"
                                  onClick={[Function]}
                                  onKeyDown={[Function]}
                                  role="button"
                                >
                                  <Icon
                                    name="angle-right"
                                    type="solid"
                                  >
                                    <FontAwesomeIcon
                                      icon={
                                        Object {
                                          "iconName": "angle-right",
                                          "prefix": "fas",
                                        }
                                      }
                                    >
                                      <svg
                                        className="svg-inline--fa fa-angle-right"
                                      />
                                    </FontAwesomeIcon>
                                  </Icon>
                                </a>
                              </SafeAnchor>
                            </li>
                          </Next>
                        </Component>
                        <Component
                          isActive={false}
                          isDisabled={false}
                          key="-6"
                          onClick={[Function]}
                          type="LAST_PAGE_LINK"
                          value={2}
                        >
                          <Last
                            disabled={false}
                            onClick={[Function]}
                          >
                            <li
                              aria-label="Last"
                              className=""
                              onClick={[Function]}
                            >
                              <SafeAnchor
                                componentClass="a"
                              >
                                <a
                                  href="#"
                                  onClick={[Function]}
                                  onKeyDown={[Function]}
                                  role="button"
                                >
                                  <Icon
                                    name="angle-double-right"
                                    type="solid"
                                  >
                                    <FontAwesomeIcon
                                      icon={
                                        Object {
                                          "iconName": "angle-double-right",
                                          "prefix": "fas",
                                        }
                                      }
                                    >
                                      <svg
                                        className="svg-inline--fa fa-angle-double-right"
                                      />
                                    </FontAwesomeIcon>
                                  </Icon>
                                </a>
                              </SafeAnchor>
                            </li>
                          </Last>
                        </Component>
                      </ul>
                    </Pagination>
                  </Pagination__StyledBootstrapPagination>
                </UltimatePaginationComponent>
              </Pagination>
            </div>
          </Col>
          <Col
            bsClass="col"
            className="text-right"
            componentClass="div"
            md={2}
          >
            <div
              className="text-right col-md-2"
            >
              <ContentPacksList__PageSizeSelector>
                <span
                  className="c5"
                >
                  <span>
                    Show:
                  </span>
                  <ContentPacksList__StyledSizeSelect
                    clearable={false}
                    onChange={[Function]}
                    options={
                      Array [
                        Object {
                          "label": "10",
                          "value": "10",
                        },
                        Object {
                          "label": "25",
                          "value": "25",
                        },
                        Object {
                          "label": "50",
                          "value": "50",
                        },
                        Object {
                          "label": "100",
                          "value": "100",
                        },
                      ]
                    }
                    value="10"
                  >
                    <WithTheme(Select)
                      className="c6"
                      clearable={false}
                      onChange={[Function]}
                      options={
                        Array [
                          Object {
                            "label": "10",
                            "value": "10",
                          },
                          Object {
                            "label": "25",
                            "value": "25",
                          },
                          Object {
                            "label": "50",
                            "value": "50",
                          },
                          Object {
                            "label": "100",
                            "value": "100",
                          },
                        ]
                      }
                      value="10"
                    >
                      <Select
                        allowCreate={false}
                        autoFocus={false}
                        className="c6"
                        clearable={false}
                        components={null}
                        delimiter=","
                        disabled={false}
                        displayKey="label"
                        ignoreAccents={true}
                        matchProp="any"
                        multi={false}
                        onChange={[Function]}
                        options={
                          Array [
                            Object {
                              "label": "10",
                              "value": "10",
                            },
                            Object {
                              "label": "25",
                              "value": "25",
                            },
                            Object {
                              "label": "50",
                              "value": "50",
                            },
                            Object {
                              "label": "100",
                              "value": "100",
                            },
                          ]
                        }
                        size="normal"
                        theme={
                          Object {
                            "breakpoints": Object {
                              "max": Object {
                                "lg": "1199px",
                                "md": "991px",
                                "sm": "767px",
                                "xs": "479px",
                              },
                              "min": Object {
                                "lg": "1200px",
                                "md": "992px",
                                "sm": "768px",
                                "xs": "480px",
                              },
                            },
                            "changeMode": [Function],
                            "colors": Object {
                              "brand": Object {
                                "primary": "#ff3633",
                                "secondary": "#fff",
                                "tertiary": "#1f1f1f",
                              },
                              "global": Object {
                                "background": "#e8e8e8",
                                "contentBackground": "#fff",
                                "link": "#702785",
                                "linkHover": "#410057",
                                "navigationBackground": "#fff",
                                "navigationBoxShadow": "rgba(115,115,115,0.25)",
                                "textAlt": "#fff",
                                "textDefault": "#1f1f1f",
                              },
                              "gray": Object {
                                "10": "#1f1f1f",
                                "100": "#ffffff",
                                "20": "#383838",
                                "30": "#515151",
                                "40": "#6a6a6a",
                                "50": "#838383",
                                "60": "#9b9b9b",
                                "70": "#b4b4b4",
                                "80": "#cdcdcd",
                                "90": "#e6e6e6",
                              },
                              "input": Object {
                                "background": "#fff",
                                "backgroundDisabled": "#dddddd",
                                "border": "#a6a6a6",
                                "borderFocus": "#7894ce",
                                "boxShadow": "inset 0 1px 1px rgba(0, 0, 0, 0.075), 0 0 8px rgba(120,148,206,0.4)",
                                "color": "#1f1f1f",
                                "colorDisabled": "#9b9b9b",
                                "placeholder": "#9b9b9b",
                              },
                              "table": Object {
                                "background": "#fafafa",
                                "backgroundAlt": "#f0f0f0",
                                "backgroundHover": "#f5f5f5",
                                "variant": Object {
                                  "active": "#e6e6e6",
                                  "danger": "#eddddd",
                                  "info": "#dde2f0",
                                  "primary": "#e4dee7",
                                  "success": "#ddeddf",
                                  "warning": "#fff5dd",
                                },
                                "variantHover": Object {
                                  "active": "#d0d0d0",
                                  "danger": "#debdbd",
                                  "info": "#bdc8e4",
                                  "primary": "#cbbfd1",
                                  "success": "#bddec2",
                                  "warning": "#ffecbd",
                                },
                              },
                              "variant": Object {
                                "danger": "#ad0707",
                                "dark": Object {
                                  "danger": "#990606",
                                  "default": "#737373",
                                  "info": "#0057a8",
                                  "primary": "#632275",
                                  "success": "#009a3a",
                                  "warning": "#e1b900",
                                },
                                "darker": Object {
                                  "danger": "#740505",
                                  "default": "#575757",
                                  "info": "#00427f",
                                  "primary": "#4b1a59",
                                  "success": "#00752c",
                                  "warning": "#ab8d00",
                                },
                                "darkest": Object {
                                  "danger": "#3c0202",
                                  "default": "#2d2d2d",
                                  "info": "#002242",
                                  "primary": "#270e2e",
                                  "success": "#003c17",
                                  "warning": "#584900",
                                },
                                "default": "#828282",
                                "info": "#0063be",
                                "light": Object {
                                  "danger": "#c27878",
                                  "default": "#a6a6a6",
                                  "info": "#7894ce",
                                  "primary": "#9b7ca8",
                                  "success": "#78c385",
                                  "warning": "#ffdd78",
                                },
                                "lighter": Object {
                                  "danger": "#debdbd",
                                  "default": "#d0d0d0",
                                  "info": "#bdc8e4",
                                  "primary": "#cbbfd1",
                                  "success": "#bddec2",
                                  "warning": "#ffecbd",
                                },
                                "lightest": Object {
                                  "danger": "#f7efef",
                                  "default": "#f3f3f3",
                                  "info": "#eff2f8",
                                  "primary": "#f2f0f4",
                                  "success": "#eff7f0",
                                  "warning": "#fffaef",
                                },
                                "primary": "#702785",
                                "success": "#00ae42",
                                "warning": "#ffd200",
                              },
                            },
                            "components": Object {
                              "aceEditor": Array [
                                ".ace_editor{border:1px solid ",
                                "#cdcdcd",
                                ";border-radius:5px;}.ace-graylog{background-color:",
                                "#fff",
                                ";color:",
                                "#2d2d2d",
                                ";&.ace_multiselect .ace_selection.ace_start{box-shadow:0 0 3px 0 ",
                                "#fff",
                                ";}.ace_gutter{background:",
                                "#f3f3f3",
                                ";color:",
                                "#2d2d2d",
                                ";}.ace_print-margin{width:1px;background:",
                                "#f3f3f3",
                                ";}.ace_cursor{color:",
                                "#a6a6a6",
                                ";}.ace_marker-layer{.ace_selection{background:",
                                "#b4b4b4",
                                ";}.ace_step{background:rgb(255,255,0);}.ace_bracket{margin:-1px 0 0 -1px;border:1px solid ",
                                "#b4b4b4",
                                ";}.ace_selected-word{border:1px solid ",
                                "#9b9b9b",
                                ";}.ace_active-line{background:",
                                "#e6e6e6",
                                ";}}.ace_gutter-active-line{background-color:",
                                "#cdcdcd",
                                ";}.ace_invisible{color:",
                                "#b4b4b4",
                                ";}.ace_keyword,.ace_meta,.ace_storage,.ace_storage.ace_type,.ace_support.ace_type{color:",
                                "#702785",
                                ";}.ace_keyword.ace_operator{color:",
                                "#00427f",
                                ";}.ace_constant.ace_character,.ace_constant.ace_language,.ace_constant.ace_numeric,.ace_keyword.ace_other.ace_unit,.ace_support.ace_constant,.ace_variable.ace_parameter{color:",
                                "#4b1a59",
                                ";}.ace_constant.ace_other{color:",
                                "#575757",
                                ";}.ace_invalid{color:",
                                "#fff",
                                ";background-color:",
                                "#c27878",
                                ";}.ace_invalid.ace_deprecated{color:",
                                "#fff",
                                ";background-color:",
                                "#702785",
                                ";}.ace_fold{background-color:",
                                "#0063be",
                                ";border-color:",
                                "#2d2d2d",
                                ";}.ace_entity.ace_name.ace_function,.ace_support.ace_function,.ace_variable{color:",
                                "#0063be",
                                ";}.ace_support.ace_class,.ace_support.ace_type{color:",
                                "#ab8d00",
                                ";}.ace_heading,.ace_markup.ace_heading,.ace_string{color:",
                                "#00752c",
                                ";}.ace_entity.ace_name.ace_tag,.ace_entity.ace_other.ace_attribute-name,.ace_meta.ace_tag,.ace_string.ace_regexp,.ace_variable{color:",
                                "#c27878",
                                ";}.ace_comment{color:",
                                "#737373",
                                ";}}",
                              ],
                              "button": Array [
                                Array [
                                  "&.btn-",
                                  "danger",
                                  "{background-color:",
                                  "#ad0707",
                                  ";border-color:",
                                  "#b23939",
                                  ";color:",
                                  "rgb(252,249,249)",
                                  ";transition:background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;:hover{background-color:",
                                  "#a00e0e",
                                  ";border-color:",
                                  "#a53636",
                                  ";color:",
                                  "#e9e6e6",
                                  ";}&.active{background-color:",
                                  "#b75151",
                                  ";border-color:",
                                  "#bc6363",
                                  ";color:",
                                  "rgb(252,249,249)",
                                  ";:hover{background-color:",
                                  "#a94c4c",
                                  ";border-color:",
                                  "#ad5c5c",
                                  ";color:",
                                  "#e9e6e6",
                                  ";}}&[disabled],&.disabled{background-color:",
                                  "#c07272",
                                  ";border-color:",
                                  "#bc6363",
                                  ";color:",
                                  "rgb(252,250,250)",
                                  ";:hover{background-color:",
                                  "#c07272",
                                  ";border-color:",
                                  "#bc6363",
                                  ";color:",
                                  "rgb(252,250,250)",
                                  ";}}}",
                                ],
                                Array [
                                  "&.btn-",
                                  "default",
                                  "{background-color:",
                                  "#e6e6e6",
                                  ";border-color:",
                                  "#e0e0e0",
                                  ";color:",
                                  "rgb(73,73,73)",
                                  ";transition:background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;:hover{background-color:",
                                  "#d4d4d4",
                                  ";border-color:",
                                  "#cfcfcf",
                                  ";color:",
                                  "#444444",
                                  ";}&.active{background-color:",
                                  "#dadada",
                                  ";border-color:",
                                  "#d4d4d4",
                                  ";color:",
                                  "rgb(49,49,49)",
                                  ";:hover{background-color:",
                                  "#cacaca",
                                  ";border-color:",
                                  "#c4c4c4",
                                  ";color:",
                                  "#2f2f2f",
                                  ";}}&[disabled],&.disabled{background-color:",
                                  "#cecece",
                                  ";border-color:",
                                  "#d4d4d4",
                                  ";color:",
                                  "rgb(80,80,80)",
                                  ";:hover{background-color:",
                                  "#cecece",
                                  ";border-color:",
                                  "#d4d4d4",
                                  ";color:",
                                  "rgb(80,80,80)",
                                  ";}}}",
                                ],
                                Array [
                                  "&.btn-",
                                  "info",
                                  "{background-color:",
                                  "#0063be",
                                  ";border-color:",
                                  "#3970c2",
                                  ";color:",
                                  "rgb(249,250,252)",
                                  ";transition:background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;:hover{background-color:",
                                  "#0c5cb0",
                                  ";border-color:",
                                  "#3668b3",
                                  ";color:",
                                  "#e6e7e9",
                                  ";}&.active{background-color:",
                                  "#517cc5",
                                  ";border-color:",
                                  "#6386c9",
                                  ";color:",
                                  "rgb(249,250,252)",
                                  ";:hover{background-color:",
                                  "#4b73b6",
                                  ";border-color:",
                                  "#5c7dba",
                                  ";color:",
                                  "#e6e7e9",
                                  ";}}&[disabled],&.disabled{background-color:",
                                  "#7290cd",
                                  ";border-color:",
                                  "#6386c9",
                                  ";color:",
                                  "rgb(250,251,253)",
                                  ";:hover{background-color:",
                                  "#7290cd",
                                  ";border-color:",
                                  "#6386c9",
                                  ";color:",
                                  "rgb(250,251,253)",
                                  ";}}}",
                                ],
                                Array [
                                  "&.btn-",
                                  "link",
                                  "{background-color:",
                                  "rgba(255, 255, 255, 0)",
                                  ";border-color:",
                                  "rgba(255, 255, 255, 0)",
                                  ";color:",
                                  "#702785",
                                  ";transition:background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;:hover{background-color:",
                                  "#ebebeb26",
                                  ";border-color:",
                                  "#ebebeb26",
                                  ";color:",
                                  "#68267b",
                                  ";}&.active{background-color:",
                                  "rgba(255, 255, 255, 0)",
                                  ";border-color:",
                                  "rgba(255, 255, 255, 0)",
                                  ";color:",
                                  "#410057",
                                  ";:hover{background-color:",
                                  "rgba(255, 255, 255, 0)",
                                  ";border-color:",
                                  "#ebebeb26",
                                  ";color:",
                                  "#3d0c51",
                                  ";}}&[disabled],&.disabled{background-color:",
                                  "rgba(255, 255, 255, 0)",
                                  ";border-color:",
                                  "rgba(255, 255, 255, 0)",
                                  ";color:",
                                  "#702785",
                                  ";:hover{background-color:",
                                  "rgba(255, 255, 255, 0)",
                                  ";border-color:",
                                  "rgba(255, 255, 255, 0)",
                                  ";color:",
                                  "#702785",
                                  ";}}}",
                                ],
                                Array [
                                  "&.btn-",
                                  "primary",
                                  "{background-color:",
                                  "#702785",
                                  ";border-color:",
                                  "#7b458e",
                                  ";color:",
                                  "rgb(234,229,236)",
                                  ";transition:background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;:hover{background-color:",
                                  "#68267b",
                                  ";border-color:",
                                  "#724083",
                                  ";color:",
                                  "#d8d3da",
                                  ";}&.active{background-color:",
                                  "#855996",
                                  ";border-color:",
                                  "#8f699d",
                                  ";color:",
                                  "rgb(250,249,251)",
                                  ";:hover{background-color:",
                                  "#7c538b",
                                  ";border-color:",
                                  "#846292",
                                  ";color:",
                                  "#e7e6e8",
                                  ";}}&[disabled],&.disabled{background-color:",
                                  "#9877a5",
                                  ";border-color:",
                                  "#8f699d",
                                  ";color:",
                                  "rgb(251,250,251)",
                                  ";:hover{background-color:",
                                  "#9877a5",
                                  ";border-color:",
                                  "#8f699d",
                                  ";color:",
                                  "rgb(251,250,251)",
                                  ";}}}",
                                ],
                                Array [
                                  "&.btn-",
                                  "success",
                                  "{background-color:",
                                  "#00ae42",
                                  ";border-color:",
                                  "#39b356",
                                  ";color:",
                                  "rgb(249,252,249)",
                                  ";transition:background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;:hover{background-color:",
                                  "#0ca13e",
                                  ";border-color:",
                                  "#36a550",
                                  ";color:",
                                  "#e6e9e6",
                                  ";}&.active{background-color:",
                                  "#51b866",
                                  ";border-color:",
                                  "#63bc74",
                                  ";color:",
                                  "rgb(249,252,250)",
                                  ";:hover{background-color:",
                                  "#4baa5f",
                                  ";border-color:",
                                  "#5cae6c",
                                  ";color:",
                                  "#e6e9e7",
                                  ";}}&[disabled],&.disabled{background-color:",
                                  "#72c180",
                                  ";border-color:",
                                  "#63bc74",
                                  ";color:",
                                  "rgb(250,252,250)",
                                  ";:hover{background-color:",
                                  "#72c180",
                                  ";border-color:",
                                  "#63bc74",
                                  ";color:",
                                  "rgb(250,252,250)",
                                  ";}}}",
                                ],
                                Array [
                                  "&.btn-",
                                  "warning",
                                  "{background-color:",
                                  "#ffd200",
                                  ";border-color:",
                                  "#f9cd07",
                                  ";color:",
                                  "rgb(57,47,0)",
                                  ";transition:background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;:hover{background-color:",
                                  "#ebc20c",
                                  ";border-color:",
                                  "#e6bd0e",
                                  ";color:",
                                  "#362d0c",
                                  ";}&.active{background-color:",
                                  "#f2c70a",
                                  ";border-color:",
                                  "#ebc20c",
                                  ";color:",
                                  "rgb(54,45,2)",
                                  ";:hover{background-color:",
                                  "#e0b80f",
                                  ";border-color:",
                                  "#d9b310",
                                  ";color:",
                                  "#332b0c",
                                  ";}}&[disabled],&.disabled{background-color:",
                                  "#e4bc0e",
                                  ";border-color:",
                                  "#ebc20c",
                                  ";color:",
                                  "rgb(88,73,5)",
                                  ";:hover{background-color:",
                                  "#e4bc0e",
                                  ";border-color:",
                                  "#ebc20c",
                                  ";color:",
                                  "rgb(88,73,5)",
                                  ";}}}",
                                ],
                              ],
                            },
                            "fonts": Object {
                              "family": Object {
                                "body": "\\"Open Sans\\", \\"Helvetica Neue\\", Helvetica, Arial, sans-serif",
                                "monospace": "\\"Roboto Mono\\", Menlo, Monaco, Consolas, \\"Courier New\\", monospace",
                              },
                              "size": Object {
                                "body": "1rem",
                                "h1": "1.802rem",
                                "h2": "1.602rem",
                                "h3": "1.424rem",
                                "h4": "1.266rem",
                                "h5": "1.125rem",
                                "h6": "1rem",
                                "huge": "2.027rem",
                                "large": "1.125rem",
                                "root": "87.5%",
                                "small": "0.889rem",
                                "tiny": "0.79rem",
                              },
                            },
                            "mode": "teint",
                            "utils": Object {
                              "colorLevel": [Function],
                              "contrastingColor": [Function],
                              "opacify": [Function],
                              "readableColor": [Function],
                            },
                          }
                        }
                        value="10"
                        valueKey="value"
                      >
                        <StateManager
                          allowCreate={false}
                          autoFocus={false}
                          className="c6"
                          components={
                            Object {
                              "DropdownIndicator": [Function],
                              "IndicatorSeparator": [Function],
                              "MultiValueRemove": [Function],
                            }
                          }
                          defaultInputValue=""
                          defaultMenuIsOpen={false}
                          defaultValue={null}
                          delimiter=","
                          displayKey="label"
                          filterOption={[Function]}
                          getOptionLabel={[Function]}
                          getOptionValue={[Function]}
                          ignoreAccents={true}
                          isClearable={false}
                          isDisabled={false}
                          isMulti={false}
                          isOptionDisabled={[Function]}
                          onChange={[Function]}
                          options={
                            Array [
                              Object {
                                "label": "10",
                                "value": "10",
                              },
                              Object {
                                "label": "25",
                                "value": "25",
                              },
                              Object {
                                "label": "50",
                                "value": "50",
                              },
                              Object {
                                "label": "100",
                                "value": "100",
                              },
                            ]
                          }
                          size="normal"
                          styles={
                            Object {
                              "clearIndicator": [Function],
                              "control": [Function],
                              "dropdownIndicator": [Function],
                              "menu": [Function],
                              "multiValue": [Function],
                              "multiValueLabel": [Function],
                              "multiValueRemove": [Function],
                              "placeholder": [Function],
                              "singleValue": [Function],
                              "valueContainer": [Function],
                            }
                          }
                          theme={[Function]}
                          value={
                            Array [
                              Object {
                                "label": "10",
                                "value": "10",
                              },
                            ]
                          }
                          valueKey="value"
                        >
                          <Select
                            allowCreate={false}
                            autoFocus={false}
                            backspaceRemovesValue={true}
                            blurInputOnSelect={true}
                            captureMenuScroll={false}
                            className="c6"
                            closeMenuOnScroll={false}
                            closeMenuOnSelect={true}
                            components={
                              Object {
                                "DropdownIndicator": [Function],
                                "IndicatorSeparator": [Function],
                                "MultiValueRemove": [Function],
                              }
                            }
                            controlShouldRenderValue={true}
                            delimiter=","
                            displayKey="label"
                            escapeClearsValue={false}
                            filterOption={[Function]}
                            formatGroupLabel={[Function]}
                            getOptionLabel={[Function]}
                            getOptionValue={[Function]}
                            ignoreAccents={true}
                            inputValue=""
                            isClearable={false}
                            isDisabled={false}
                            isLoading={false}
                            isMulti={false}
                            isOptionDisabled={[Function]}
                            isRtl={false}
                            isSearchable={true}
                            loadingMessage={[Function]}
                            maxMenuHeight={300}
                            menuIsOpen={false}
                            menuPlacement="bottom"
                            menuPosition="absolute"
                            menuShouldBlockScroll={false}
                            menuShouldScrollIntoView={true}
                            minMenuHeight={140}
                            noOptionsMessage={[Function]}
                            onChange={[Function]}
                            onInputChange={[Function]}
                            onMenuClose={[Function]}
                            onMenuOpen={[Function]}
                            openMenuOnClick={true}
                            openMenuOnFocus={false}
                            options={
                              Array [
                                Object {
                                  "label": "10",
                                  "value": "10",
                                },
                                Object {
                                  "label": "25",
                                  "value": "25",
                                },
                                Object {
                                  "label": "50",
                                  "value": "50",
                                },
                                Object {
                                  "label": "100",
                                  "value": "100",
                                },
                              ]
                            }
                            pageSize={5}
                            placeholder="Select..."
                            screenReaderStatus={[Function]}
                            size="normal"
                            styles={
                              Object {
                                "clearIndicator": [Function],
                                "control": [Function],
                                "dropdownIndicator": [Function],
                                "menu": [Function],
                                "multiValue": [Function],
                                "multiValueLabel": [Function],
                                "multiValueRemove": [Function],
                                "placeholder": [Function],
                                "singleValue": [Function],
                                "valueContainer": [Function],
                              }
                            }
                            tabIndex="0"
                            tabSelectsValue={true}
                            theme={[Function]}
                            value={
                              Array [
                                Object {
                                  "label": "10",
                                  "value": "10",
                                },
                              ]
                            }
                            valueKey="value"
                          >
                            <SelectContainer
                              className="c6"
                              clearValue={[Function]}
                              cx={[Function]}
                              getStyles={[Function]}
                              getValue={[Function]}
                              hasValue={true}
                              innerProps={
                                Object {
                                  "id": undefined,
                                  "onKeyDown": [Function],
                                }
                              }
                              isDisabled={false}
                              isFocused={false}
                              isMulti={false}
                              isRtl={false}
                              options={
                                Array [
                                  Object {
                                    "label": "10",
                                    "value": "10",
                                  },
                                  Object {
                                    "label": "25",
                                    "value": "25",
                                  },
                                  Object {
                                    "label": "50",
                                    "value": "50",
                                  },
                                  Object {
                                    "label": "100",
                                    "value": "100",
                                  },
                                ]
                              }
                              selectOption={[Function]}
                              selectProps={
                                Object {
                                  "addLabelText": undefined,
                                  "allowCreate": false,
                                  "autoFocus": false,
                                  "backspaceRemovesValue": true,
                                  "blurInputOnSelect": true,
                                  "captureMenuScroll": false,
                                  "className": "ContentPacksList__StyledSizeSelect-dqllb7-1 c6",
                                  "closeMenuOnScroll": false,
                                  "closeMenuOnSelect": true,
                                  "components": Object {
                                    "DropdownIndicator": [Function],
                                    "IndicatorSeparator": [Function],
                                    "MultiValueRemove": [Function],
                                  },
                                  "controlShouldRenderValue": true,
                                  "delimiter": ",",
                                  "displayKey": "label",
                                  "escapeClearsValue": false,
                                  "filterOption": [Function],
                                  "formatGroupLabel": [Function],
                                  "getOptionLabel": [Function],
                                  "getOptionValue": [Function],
                                  "ignoreAccents": true,
                                  "inputValue": "",
                                  "isClearable": false,
                                  "isDisabled": false,
                                  "isLoading": false,
                                  "isMulti": false,
                                  "isOptionDisabled": [Function],
                                  "isRtl": false,
                                  "isSearchable": true,
                                  "loadingMessage": [Function],
                                  "maxMenuHeight": 300,
                                  "menuIsOpen": false,
                                  "menuPlacement": "bottom",
                                  "menuPosition": "absolute",
                                  "menuShouldBlockScroll": false,
                                  "menuShouldScrollIntoView": true,
                                  "minMenuHeight": 140,
                                  "noOptionsMessage": [Function],
                                  "onChange": [Function],
                                  "onInputChange": [Function],
                                  "onMenuClose": [Function],
                                  "onMenuOpen": [Function],
                                  "onReactSelectChange": undefined,
                                  "openMenuOnClick": true,
                                  "openMenuOnFocus": false,
                                  "options": Array [
                                    Object {
                                      "label": "10",
                                      "value": "10",
                                    },
                                    Object {
                                      "label": "25",
                                      "value": "25",
                                    },
                                    Object {
                                      "label": "50",
                                      "value": "50",
                                    },
                                    Object {
                                      "label": "100",
                                      "value": "100",
                                    },
                                  ],
                                  "pageSize": 5,
                                  "placeholder": "Select...",
                                  "screenReaderStatus": [Function],
                                  "size": "normal",
                                  "styles": Object {
                                    "clearIndicator": [Function],
                                    "control": [Function],
                                    "dropdownIndicator": [Function],
                                    "menu": [Function],
                                    "multiValue": [Function],
                                    "multiValueLabel": [Function],
                                    "multiValueRemove": [Function],
                                    "placeholder": [Function],
                                    "singleValue": [Function],
                                    "valueContainer": [Function],
                                  },
                                  "tabIndex": "0",
                                  "tabSelectsValue": true,
                                  "theme": [Function],
                                  "value": Array [
                                    Object {
                                      "label": "10",
                                      "value": "10",
                                    },
                                  ],
                                  "valueKey": "value",
                                }
                              }
                              setValue={[Function]}
                              theme={
                                Object {
                                  "borderRadius": 4,
                                  "colors": Object {
                                    "danger": "#00427f",
                                    "dangerLight": "#bdc8e4",
                                    "neutral0": "#fff",
                                    "neutral10": "#eff2f8",
                                    "neutral20": "#a6a6a6",
                                    "neutral30": "#b4b4b4",
                                    "neutral40": "#9b9b9b",
                                    "neutral5": "#dddddd",
                                    "neutral50": "#838383",
                                    "neutral60": "#6a6a6a",
                                    "neutral70": "#515151",
                                    "neutral80": "#383838",
                                    "neutral90": "#1f1f1f",
                                    "primary": "#7894ce",
                                    "primary25": "#f3f3f3",
                                    "primary50": "#d0d0d0",
                                    "primary75": "#a6a6a6",
                                  },
                                  "spacing": Object {
                                    "baseUnit": 4,
                                    "controlHeight": 38,
                                    "menuGutter": 8,
                                  },
                                }
                              }
                            >
                              <div
                                className="css-1pcexqc-container c6"
                                onKeyDown={[Function]}
                              >
                                <Control
                                  clearValue={[Function]}
                                  cx={[Function]}
                                  getStyles={[Function]}
                                  getValue={[Function]}
                                  hasValue={true}
                                  innerProps={
                                    Object {
                                      "onMouseDown": [Function],
                                      "onTouchEnd": [Function],
                                    }
                                  }
                                  innerRef={[Function]}
                                  isDisabled={false}
                                  isFocused={false}
                                  isMulti={false}
                                  isRtl={false}
                                  menuIsOpen={false}
                                  options={
                                    Array [
                                      Object {
                                        "label": "10",
                                        "value": "10",
                                      },
                                      Object {
                                        "label": "25",
                                        "value": "25",
                                      },
                                      Object {
                                        "label": "50",
                                        "value": "50",
                                      },
                                      Object {
                                        "label": "100",
                                        "value": "100",
                                      },
                                    ]
                                  }
                                  selectOption={[Function]}
                                  selectProps={
                                    Object {
                                      "addLabelText": undefined,
                                      "allowCreate": false,
                                      "autoFocus": false,
                                      "backspaceRemovesValue": true,
                                      "blurInputOnSelect": true,
                                      "captureMenuScroll": false,
                                      "className": "ContentPacksList__StyledSizeSelect-dqllb7-1 c6",
                                      "closeMenuOnScroll": false,
                                      "closeMenuOnSelect": true,
                                      "components": Object {
                                        "DropdownIndicator": [Function],
                                        "IndicatorSeparator": [Function],
                                        "MultiValueRemove": [Function],
                                      },
                                      "controlShouldRenderValue": true,
                                      "delimiter": ",",
                                      "displayKey": "label",
                                      "escapeClearsValue": false,
                                      "filterOption": [Function],
                                      "formatGroupLabel": [Function],
                                      "getOptionLabel": [Function],
                                      "getOptionValue": [Function],
                                      "ignoreAccents": true,
                                      "inputValue": "",
                                      "isClearable": false,
                                      "isDisabled": false,
                                      "isLoading": false,
                                      "isMulti": false,
                                      "isOptionDisabled": [Function],
                                      "isRtl": false,
                                      "isSearchable": true,
                                      "loadingMessage": [Function],
                                      "maxMenuHeight": 300,
                                      "menuIsOpen": false,
                                      "menuPlacement": "bottom",
                                      "menuPosition": "absolute",
                                      "menuShouldBlockScroll": false,
                                      "menuShouldScrollIntoView": true,
                                      "minMenuHeight": 140,
                                      "noOptionsMessage": [Function],
                                      "onChange": [Function],
                                      "onInputChange": [Function],
                                      "onMenuClose": [Function],
                                      "onMenuOpen": [Function],
                                      "onReactSelectChange": undefined,
                                      "openMenuOnClick": true,
                                      "openMenuOnFocus": false,
                                      "options": Array [
                                        Object {
                                          "label": "10",
                                          "value": "10",
                                        },
                                        Object {
                                          "label": "25",
                                          "value": "25",
                                        },
                                        Object {
                                          "label": "50",
                                          "value": "50",
                                        },
                                        Object {
                                          "label": "100",
                                          "value": "100",
                                        },
                                      ],
                                      "pageSize": 5,
                                      "placeholder": "Select...",
                                      "screenReaderStatus": [Function],
                                      "size": "normal",
                                      "styles": Object {
                                        "clearIndicator": [Function],
                                        "control": [Function],
                                        "dropdownIndicator": [Function],
                                        "menu": [Function],
                                        "multiValue": [Function],
                                        "multiValueLabel": [Function],
                                        "multiValueRemove": [Function],
                                        "placeholder": [Function],
                                        "singleValue": [Function],
                                        "valueContainer": [Function],
                                      },
                                      "tabIndex": "0",
                                      "tabSelectsValue": true,
                                      "theme": [Function],
                                      "value": Array [
                                        Object {
                                          "label": "10",
                                          "value": "10",
                                        },
                                      ],
                                      "valueKey": "value",
                                    }
                                  }
                                  setValue={[Function]}
                                  theme={
                                    Object {
                                      "borderRadius": 4,
                                      "colors": Object {
                                        "danger": "#00427f",
                                        "dangerLight": "#bdc8e4",
                                        "neutral0": "#fff",
                                        "neutral10": "#eff2f8",
                                        "neutral20": "#a6a6a6",
                                        "neutral30": "#b4b4b4",
                                        "neutral40": "#9b9b9b",
                                        "neutral5": "#dddddd",
                                        "neutral50": "#838383",
                                        "neutral60": "#6a6a6a",
                                        "neutral70": "#515151",
                                        "neutral80": "#383838",
                                        "neutral90": "#1f1f1f",
                                        "primary": "#7894ce",
                                        "primary25": "#f3f3f3",
                                        "primary50": "#d0d0d0",
                                        "primary75": "#a6a6a6",
                                      },
                                      "spacing": Object {
                                        "baseUnit": 4,
                                        "controlHeight": 38,
                                        "menuGutter": 8,
                                      },
                                    }
                                  }
                                >
                                  <div
                                    className="css-ghr2vn-control"
                                    onMouseDown={[Function]}
                                    onTouchEnd={[Function]}
                                  >
                                    <ValueContainer
                                      clearValue={[Function]}
                                      cx={[Function]}
                                      getStyles={[Function]}
                                      getValue={[Function]}
                                      hasValue={true}
                                      isDisabled={false}
                                      isMulti={false}
                                      isRtl={false}
                                      options={
                                        Array [
                                          Object {
                                            "label": "10",
                                            "value": "10",
                                          },
                                          Object {
                                            "label": "25",
                                            "value": "25",
                                          },
                                          Object {
                                            "label": "50",
                                            "value": "50",
                                          },
                                          Object {
                                            "label": "100",
                                            "value": "100",
                                          },
                                        ]
                                      }
                                      selectOption={[Function]}
                                      selectProps={
                                        Object {
                                          "addLabelText": undefined,
                                          "allowCreate": false,
                                          "autoFocus": false,
                                          "backspaceRemovesValue": true,
                                          "blurInputOnSelect": true,
                                          "captureMenuScroll": false,
                                          "className": "ContentPacksList__StyledSizeSelect-dqllb7-1 c6",
                                          "closeMenuOnScroll": false,
                                          "closeMenuOnSelect": true,
                                          "components": Object {
                                            "DropdownIndicator": [Function],
                                            "IndicatorSeparator": [Function],
                                            "MultiValueRemove": [Function],
                                          },
                                          "controlShouldRenderValue": true,
                                          "delimiter": ",",
                                          "displayKey": "label",
                                          "escapeClearsValue": false,
                                          "filterOption": [Function],
                                          "formatGroupLabel": [Function],
                                          "getOptionLabel": [Function],
                                          "getOptionValue": [Function],
                                          "ignoreAccents": true,
                                          "inputValue": "",
                                          "isClearable": false,
                                          "isDisabled": false,
                                          "isLoading": false,
                                          "isMulti": false,
                                          "isOptionDisabled": [Function],
                                          "isRtl": false,
                                          "isSearchable": true,
                                          "loadingMessage": [Function],
                                          "maxMenuHeight": 300,
                                          "menuIsOpen": false,
                                          "menuPlacement": "bottom",
                                          "menuPosition": "absolute",
                                          "menuShouldBlockScroll": false,
                                          "menuShouldScrollIntoView": true,
                                          "minMenuHeight": 140,
                                          "noOptionsMessage": [Function],
                                          "onChange": [Function],
                                          "onInputChange": [Function],
                                          "onMenuClose": [Function],
                                          "onMenuOpen": [Function],
                                          "onReactSelectChange": undefined,
                                          "openMenuOnClick": true,
                                          "openMenuOnFocus": false,
                                          "options": Array [
                                            Object {
                                              "label": "10",
                                              "value": "10",
                                            },
                                            Object {
                                              "label": "25",
                                              "value": "25",
                                            },
                                            Object {
                                              "label": "50",
                                              "value": "50",
                                            },
                                            Object {
                                              "label": "100",
                                              "value": "100",
                                            },
                                          ],
                                          "pageSize": 5,
                                          "placeholder": "Select...",
                                          "screenReaderStatus": [Function],
                                          "size": "normal",
                                          "styles": Object {
                                            "clearIndicator": [Function],
                                            "control": [Function],
                                            "dropdownIndicator": [Function],
                                            "menu": [Function],
                                            "multiValue": [Function],
                                            "multiValueLabel": [Function],
                                            "multiValueRemove": [Function],
                                            "placeholder": [Function],
                                            "singleValue": [Function],
                                            "valueContainer": [Function],
                                          },
                                          "tabIndex": "0",
                                          "tabSelectsValue": true,
                                          "theme": [Function],
                                          "value": Array [
                                            Object {
                                              "label": "10",
                                              "value": "10",
                                            },
                                          ],
                                          "valueKey": "value",
                                        }
                                      }
                                      setValue={[Function]}
                                      theme={
                                        Object {
                                          "borderRadius": 4,
                                          "colors": Object {
                                            "danger": "#00427f",
                                            "dangerLight": "#bdc8e4",
                                            "neutral0": "#fff",
                                            "neutral10": "#eff2f8",
                                            "neutral20": "#a6a6a6",
                                            "neutral30": "#b4b4b4",
                                            "neutral40": "#9b9b9b",
                                            "neutral5": "#dddddd",
                                            "neutral50": "#838383",
                                            "neutral60": "#6a6a6a",
                                            "neutral70": "#515151",
                                            "neutral80": "#383838",
                                            "neutral90": "#1f1f1f",
                                            "primary": "#7894ce",
                                            "primary25": "#f3f3f3",
                                            "primary50": "#d0d0d0",
                                            "primary75": "#a6a6a6",
                                          },
                                          "spacing": Object {
                                            "baseUnit": 4,
                                            "controlHeight": 38,
                                            "menuGutter": 8,
                                          },
                                        }
                                      }
                                    >
                                      <div
                                        className="css-1hio1c"
                                      >
                                        <SingleValue
                                          clearValue={[Function]}
                                          cx={[Function]}
                                          data={
                                            Object {
                                              "label": "10",
                                              "value": "10",
                                            }
                                          }
                                          getStyles={[Function]}
                                          getValue={[Function]}
                                          hasValue={true}
                                          isDisabled={false}
                                          isMulti={false}
                                          isRtl={false}
                                          options={
                                            Array [
                                              Object {
                                                "label": "10",
                                                "value": "10",
                                              },
                                              Object {
                                                "label": "25",
                                                "value": "25",
                                              },
                                              Object {
                                                "label": "50",
                                                "value": "50",
                                              },
                                              Object {
                                                "label": "100",
                                                "value": "100",
                                              },
                                            ]
                                          }
                                          selectOption={[Function]}
                                          selectProps={
                                            Object {
                                              "addLabelText": undefined,
                                              "allowCreate": false,
                                              "autoFocus": false,
                                              "backspaceRemovesValue": true,
                                              "blurInputOnSelect": true,
                                              "captureMenuScroll": false,
                                              "className": "ContentPacksList__StyledSizeSelect-dqllb7-1 c6",
                                              "closeMenuOnScroll": false,
                                              "closeMenuOnSelect": true,
                                              "components": Object {
                                                "DropdownIndicator": [Function],
                                                "IndicatorSeparator": [Function],
                                                "MultiValueRemove": [Function],
                                              },
                                              "controlShouldRenderValue": true,
                                              "delimiter": ",",
                                              "displayKey": "label",
                                              "escapeClearsValue": false,
                                              "filterOption": [Function],
                                              "formatGroupLabel": [Function],
                                              "getOptionLabel": [Function],
                                              "getOptionValue": [Function],
                                              "ignoreAccents": true,
                                              "inputValue": "",
                                              "isClearable": false,
                                              "isDisabled": false,
                                              "isLoading": false,
                                              "isMulti": false,
                                              "isOptionDisabled": [Function],
                                              "isRtl": false,
                                              "isSearchable": true,
                                              "loadingMessage": [Function],
                                              "maxMenuHeight": 300,
                                              "menuIsOpen": false,
                                              "menuPlacement": "bottom",
                                              "menuPosition": "absolute",
                                              "menuShouldBlockScroll": false,
                                              "menuShouldScrollIntoView": true,
                                              "minMenuHeight": 140,
                                              "noOptionsMessage": [Function],
                                              "onChange": [Function],
                                              "onInputChange": [Function],
                                              "onMenuClose": [Function],
                                              "onMenuOpen": [Function],
                                              "onReactSelectChange": undefined,
                                              "openMenuOnClick": true,
                                              "openMenuOnFocus": false,
                                              "options": Array [
                                                Object {
                                                  "label": "10",
                                                  "value": "10",
                                                },
                                                Object {
                                                  "label": "25",
                                                  "value": "25",
                                                },
                                                Object {
                                                  "label": "50",
                                                  "value": "50",
                                                },
                                                Object {
                                                  "label": "100",
                                                  "value": "100",
                                                },
                                              ],
                                              "pageSize": 5,
                                              "placeholder": "Select...",
                                              "screenReaderStatus": [Function],
                                              "size": "normal",
                                              "styles": Object {
                                                "clearIndicator": [Function],
                                                "control": [Function],
                                                "dropdownIndicator": [Function],
                                                "menu": [Function],
                                                "multiValue": [Function],
                                                "multiValueLabel": [Function],
                                                "multiValueRemove": [Function],
                                                "placeholder": [Function],
                                                "singleValue": [Function],
                                                "valueContainer": [Function],
                                              },
                                              "tabIndex": "0",
                                              "tabSelectsValue": true,
                                              "theme": [Function],
                                              "value": Array [
                                                Object {
                                                  "label": "10",
                                                  "value": "10",
                                                },
                                              ],
                                              "valueKey": "value",
                                            }
                                          }
                                          setValue={[Function]}
                                          theme={
                                            Object {
                                              "borderRadius": 4,
                                              "colors": Object {
                                                "danger": "#00427f",
                                                "dangerLight": "#bdc8e4",
                                                "neutral0": "#fff",
                                                "neutral10": "#eff2f8",
                                                "neutral20": "#a6a6a6",
                                                "neutral30": "#b4b4b4",
                                                "neutral40": "#9b9b9b",
                                                "neutral5": "#dddddd",
                                                "neutral50": "#838383",
                                                "neutral60": "#6a6a6a",
                                                "neutral70": "#515151",
                                                "neutral80": "#383838",
                                                "neutral90": "#1f1f1f",
                                                "primary": "#7894ce",
                                                "primary25": "#f3f3f3",
                                                "primary50": "#d0d0d0",
                                                "primary75": "#a6a6a6",
                                              },
                                              "spacing": Object {
                                                "baseUnit": 4,
                                                "controlHeight": 38,
                                                "menuGutter": 8,
                                              },
                                            }
                                          }
                                        >
                                          <div
                                            className="css-1yjw8f2-singleValue"
                                          >
                                            10
                                          </div>
                                        </SingleValue>
                                        <Input
                                          aria-autocomplete="list"
                                          autoCapitalize="none"
                                          autoComplete="off"
                                          autoCorrect="off"
                                          cx={[Function]}
                                          getStyles={[Function]}
                                          id="react-select-4-input"
                                          innerRef={[Function]}
                                          isDisabled={false}
                                          isHidden={false}
                                          onBlur={[Function]}
                                          onChange={[Function]}
                                          onFocus={[Function]}
                                          selectProps={
                                            Object {
                                              "addLabelText": undefined,
                                              "allowCreate": false,
                                              "autoFocus": false,
                                              "backspaceRemovesValue": true,
                                              "blurInputOnSelect": true,
                                              "captureMenuScroll": false,
                                              "className": "ContentPacksList__StyledSizeSelect-dqllb7-1 c6",
                                              "closeMenuOnScroll": false,
                                              "closeMenuOnSelect": true,
                                              "components": Object {
                                                "DropdownIndicator": [Function],
                                                "IndicatorSeparator": [Function],
                                                "MultiValueRemove": [Function],
                                              },
                                              "controlShouldRenderValue": true,
                                              "delimiter": ",",
                                              "displayKey": "label",
                                              "escapeClearsValue": false,
                                              "filterOption": [Function],
                                              "formatGroupLabel": [Function],
                                              "getOptionLabel": [Function],
                                              "getOptionValue": [Function],
                                              "ignoreAccents": true,
                                              "inputValue": "",
                                              "isClearable": false,
                                              "isDisabled": false,
                                              "isLoading": false,
                                              "isMulti": false,
                                              "isOptionDisabled": [Function],
                                              "isRtl": false,
                                              "isSearchable": true,
                                              "loadingMessage": [Function],
                                              "maxMenuHeight": 300,
                                              "menuIsOpen": false,
                                              "menuPlacement": "bottom",
                                              "menuPosition": "absolute",
                                              "menuShouldBlockScroll": false,
                                              "menuShouldScrollIntoView": true,
                                              "minMenuHeight": 140,
                                              "noOptionsMessage": [Function],
                                              "onChange": [Function],
                                              "onInputChange": [Function],
                                              "onMenuClose": [Function],
                                              "onMenuOpen": [Function],
                                              "onReactSelectChange": undefined,
                                              "openMenuOnClick": true,
                                              "openMenuOnFocus": false,
                                              "options": Array [
                                                Object {
                                                  "label": "10",
                                                  "value": "10",
                                                },
                                                Object {
                                                  "label": "25",
                                                  "value": "25",
                                                },
                                                Object {
                                                  "label": "50",
                                                  "value": "50",
                                                },
                                                Object {
                                                  "label": "100",
                                                  "value": "100",
                                                },
                                              ],
                                              "pageSize": 5,
                                              "placeholder": "Select...",
                                              "screenReaderStatus": [Function],
                                              "size": "normal",
                                              "styles": Object {
                                                "clearIndicator": [Function],
                                                "control": [Function],
                                                "dropdownIndicator": [Function],
                                                "menu": [Function],
                                                "multiValue": [Function],
                                                "multiValueLabel": [Function],
                                                "multiValueRemove": [Function],
                                                "placeholder": [Function],
                                                "singleValue": [Function],
                                                "valueContainer": [Function],
                                              },
                                              "tabIndex": "0",
                                              "tabSelectsValue": true,
                                              "theme": [Function],
                                              "value": Array [
                                                Object {
                                                  "label": "10",
                                                  "value": "10",
                                                },
                                              ],
                                              "valueKey": "value",
                                            }
                                          }
                                          spellCheck="false"
                                          tabIndex="0"
                                          theme={
                                            Object {
                                              "borderRadius": 4,
                                              "colors": Object {
                                                "danger": "#00427f",
                                                "dangerLight": "#bdc8e4",
                                                "neutral0": "#fff",
                                                "neutral10": "#eff2f8",
                                                "neutral20": "#a6a6a6",
                                                "neutral30": "#b4b4b4",
                                                "neutral40": "#9b9b9b",
                                                "neutral5": "#dddddd",
                                                "neutral50": "#838383",
                                                "neutral60": "#6a6a6a",
                                                "neutral70": "#515151",
                                                "neutral80": "#383838",
                                                "neutral90": "#1f1f1f",
                                                "primary": "#7894ce",
                                                "primary25": "#f3f3f3",
                                                "primary50": "#d0d0d0",
                                                "primary75": "#a6a6a6",
                                              },
                                              "spacing": Object {
                                                "baseUnit": 4,
                                                "controlHeight": 38,
                                                "menuGutter": 8,
                                              },
                                            }
                                          }
                                          type="text"
                                          value=""
                                        >
                                          <div
                                            className="css-dg7tyz"
                                          >
                                            <AutosizeInput
                                              aria-autocomplete="list"
                                              autoCapitalize="none"
                                              autoComplete="off"
                                              autoCorrect="off"
                                              className=""
                                              disabled={false}
                                              id="react-select-4-input"
                                              injectStyles={true}
                                              inputRef={[Function]}
                                              inputStyle={
                                                Object {
                                                  "background": 0,
                                                  "border": 0,
                                                  "color": "inherit",
                                                  "fontSize": "inherit",
                                                  "label": "input",
                                                  "opacity": 1,
                                                  "outline": 0,
                                                  "padding": 0,
                                                }
                                              }
                                              minWidth={1}
                                              onBlur={[Function]}
                                              onChange={[Function]}
                                              onFocus={[Function]}
                                              spellCheck="false"
                                              tabIndex="0"
                                              type="text"
                                              value=""
                                            >
                                              <div
                                                className=""
                                                style={
                                                  Object {
                                                    "display": "inline-block",
                                                  }
                                                }
                                              >
                                                <input
                                                  aria-autocomplete="list"
                                                  autoCapitalize="none"
                                                  autoComplete="off"
                                                  autoCorrect="off"
                                                  disabled={false}
                                                  id="react-select-4-input"
                                                  onBlur={[Function]}
                                                  onChange={[Function]}
                                                  onFocus={[Function]}
                                                  spellCheck="false"
                                                  style={
                                                    Object {
                                                      "background": 0,
                                                      "border": 0,
                                                      "boxSizing": "content-box",
                                                      "color": "inherit",
                                                      "fontSize": "inherit",
                                                      "label": "input",
                                                      "opacity": 1,
                                                      "outline": 0,
                                                      "padding": 0,
                                                      "width": "2px",
                                                    }
                                                  }
                                                  tabIndex="0"
                                                  type="text"
                                                  value=""
                                                />
                                                <div
                                                  style={
                                                    Object {
                                                      "height": 0,
                                                      "left": 0,
                                                      "overflow": "scroll",
                                                      "position": "absolute",
                                                      "top": 0,
                                                      "visibility": "hidden",
                                                      "whiteSpace": "pre",
                                                    }
                                                  }
                                                />
                                              </div>
                                            </AutosizeInput>
                                          </div>
                                        </Input>
                                      </div>
                                    </ValueContainer>
                                    <IndicatorsContainer
                                      clearValue={[Function]}
                                      cx={[Function]}
                                      getStyles={[Function]}
                                      getValue={[Function]}
                                      hasValue={true}
                                      isDisabled={false}
                                      isMulti={false}
                                      isRtl={false}
                                      options={
                                        Array [
                                          Object {
                                            "label": "10",
                                            "value": "10",
                                          },
                                          Object {
                                            "label": "25",
                                            "value": "25",
                                          },
                                          Object {
                                            "label": "50",
                                            "value": "50",
                                          },
                                          Object {
                                            "label": "100",
                                            "value": "100",
                                          },
                                        ]
                                      }
                                      selectOption={[Function]}
                                      selectProps={
                                        Object {
                                          "addLabelText": undefined,
                                          "allowCreate": false,
                                          "autoFocus": false,
                                          "backspaceRemovesValue": true,
                                          "blurInputOnSelect": true,
                                          "captureMenuScroll": false,
                                          "className": "ContentPacksList__StyledSizeSelect-dqllb7-1 c6",
                                          "closeMenuOnScroll": false,
                                          "closeMenuOnSelect": true,
                                          "components": Object {
                                            "DropdownIndicator": [Function],
                                            "IndicatorSeparator": [Function],
                                            "MultiValueRemove": [Function],
                                          },
                                          "controlShouldRenderValue": true,
                                          "delimiter": ",",
                                          "displayKey": "label",
                                          "escapeClearsValue": false,
                                          "filterOption": [Function],
                                          "formatGroupLabel": [Function],
                                          "getOptionLabel": [Function],
                                          "getOptionValue": [Function],
                                          "ignoreAccents": true,
                                          "inputValue": "",
                                          "isClearable": false,
                                          "isDisabled": false,
                                          "isLoading": false,
                                          "isMulti": false,
                                          "isOptionDisabled": [Function],
                                          "isRtl": false,
                                          "isSearchable": true,
                                          "loadingMessage": [Function],
                                          "maxMenuHeight": 300,
                                          "menuIsOpen": false,
                                          "menuPlacement": "bottom",
                                          "menuPosition": "absolute",
                                          "menuShouldBlockScroll": false,
                                          "menuShouldScrollIntoView": true,
                                          "minMenuHeight": 140,
                                          "noOptionsMessage": [Function],
                                          "onChange": [Function],
                                          "onInputChange": [Function],
                                          "onMenuClose": [Function],
                                          "onMenuOpen": [Function],
                                          "onReactSelectChange": undefined,
                                          "openMenuOnClick": true,
                                          "openMenuOnFocus": false,
                                          "options": Array [
                                            Object {
                                              "label": "10",
                                              "value": "10",
                                            },
                                            Object {
                                              "label": "25",
                                              "value": "25",
                                            },
                                            Object {
                                              "label": "50",
                                              "value": "50",
                                            },
                                            Object {
                                              "label": "100",
                                              "value": "100",
                                            },
                                          ],
                                          "pageSize": 5,
                                          "placeholder": "Select...",
                                          "screenReaderStatus": [Function],
                                          "size": "normal",
                                          "styles": Object {
                                            "clearIndicator": [Function],
                                            "control": [Function],
                                            "dropdownIndicator": [Function],
                                            "menu": [Function],
                                            "multiValue": [Function],
                                            "multiValueLabel": [Function],
                                            "multiValueRemove": [Function],
                                            "placeholder": [Function],
                                            "singleValue": [Function],
                                            "valueContainer": [Function],
                                          },
                                          "tabIndex": "0",
                                          "tabSelectsValue": true,
                                          "theme": [Function],
                                          "value": Array [
                                            Object {
                                              "label": "10",
                                              "value": "10",
                                            },
                                          ],
                                          "valueKey": "value",
                                        }
                                      }
                                      setValue={[Function]}
                                      theme={
                                        Object {
                                          "borderRadius": 4,
                                          "colors": Object {
                                            "danger": "#00427f",
                                            "dangerLight": "#bdc8e4",
                                            "neutral0": "#fff",
                                            "neutral10": "#eff2f8",
                                            "neutral20": "#a6a6a6",
                                            "neutral30": "#b4b4b4",
                                            "neutral40": "#9b9b9b",
                                            "neutral5": "#dddddd",
                                            "neutral50": "#838383",
                                            "neutral60": "#6a6a6a",
                                            "neutral70": "#515151",
                                            "neutral80": "#383838",
                                            "neutral90": "#1f1f1f",
                                            "primary": "#7894ce",
                                            "primary25": "#f3f3f3",
                                            "primary50": "#d0d0d0",
                                            "primary75": "#a6a6a6",
                                          },
                                          "spacing": Object {
                                            "baseUnit": 4,
                                            "controlHeight": 38,
                                            "menuGutter": 8,
                                          },
                                        }
                                      }
                                    >
                                      <div
                                        className="css-1wy0on6"
                                      >
                                        <IndicatorSeparator
                                          clearValue={[Function]}
                                          cx={[Function]}
                                          getStyles={[Function]}
                                          getValue={[Function]}
                                          hasValue={true}
                                          isDisabled={false}
                                          isFocused={false}
                                          isMulti={false}
                                          isRtl={false}
                                          options={
                                            Array [
                                              Object {
                                                "label": "10",
                                                "value": "10",
                                              },
                                              Object {
                                                "label": "25",
                                                "value": "25",
                                              },
                                              Object {
                                                "label": "50",
                                                "value": "50",
                                              },
                                              Object {
                                                "label": "100",
                                                "value": "100",
                                              },
                                            ]
                                          }
                                          selectOption={[Function]}
                                          selectProps={
                                            Object {
                                              "addLabelText": undefined,
                                              "allowCreate": false,
                                              "autoFocus": false,
                                              "backspaceRemovesValue": true,
                                              "blurInputOnSelect": true,
                                              "captureMenuScroll": false,
                                              "className": "ContentPacksList__StyledSizeSelect-dqllb7-1 c6",
                                              "closeMenuOnScroll": false,
                                              "closeMenuOnSelect": true,
                                              "components": Object {
                                                "DropdownIndicator": [Function],
                                                "IndicatorSeparator": [Function],
                                                "MultiValueRemove": [Function],
                                              },
                                              "controlShouldRenderValue": true,
                                              "delimiter": ",",
                                              "displayKey": "label",
                                              "escapeClearsValue": false,
                                              "filterOption": [Function],
                                              "formatGroupLabel": [Function],
                                              "getOptionLabel": [Function],
                                              "getOptionValue": [Function],
                                              "ignoreAccents": true,
                                              "inputValue": "",
                                              "isClearable": false,
                                              "isDisabled": false,
                                              "isLoading": false,
                                              "isMulti": false,
                                              "isOptionDisabled": [Function],
                                              "isRtl": false,
                                              "isSearchable": true,
                                              "loadingMessage": [Function],
                                              "maxMenuHeight": 300,
                                              "menuIsOpen": false,
                                              "menuPlacement": "bottom",
                                              "menuPosition": "absolute",
                                              "menuShouldBlockScroll": false,
                                              "menuShouldScrollIntoView": true,
                                              "minMenuHeight": 140,
                                              "noOptionsMessage": [Function],
                                              "onChange": [Function],
                                              "onInputChange": [Function],
                                              "onMenuClose": [Function],
                                              "onMenuOpen": [Function],
                                              "onReactSelectChange": undefined,
                                              "openMenuOnClick": true,
                                              "openMenuOnFocus": false,
                                              "options": Array [
                                                Object {
                                                  "label": "10",
                                                  "value": "10",
                                                },
                                                Object {
                                                  "label": "25",
                                                  "value": "25",
                                                },
                                                Object {
                                                  "label": "50",
                                                  "value": "50",
                                                },
                                                Object {
                                                  "label": "100",
                                                  "value": "100",
                                                },
                                              ],
                                              "pageSize": 5,
                                              "placeholder": "Select...",
                                              "screenReaderStatus": [Function],
                                              "size": "normal",
                                              "styles": Object {
                                                "clearIndicator": [Function],
                                                "control": [Function],
                                                "dropdownIndicator": [Function],
                                                "menu": [Function],
                                                "multiValue": [Function],
                                                "multiValueLabel": [Function],
                                                "multiValueRemove": [Function],
                                                "placeholder": [Function],
                                                "singleValue": [Function],
                                                "valueContainer": [Function],
                                              },
                                              "tabIndex": "0",
                                              "tabSelectsValue": true,
                                              "theme": [Function],
                                              "value": Array [
                                                Object {
                                                  "label": "10",
                                                  "value": "10",
                                                },
                                              ],
                                              "valueKey": "value",
                                            }
                                          }
                                          setValue={[Function]}
                                          theme={
                                            Object {
                                              "borderRadius": 4,
                                              "colors": Object {
                                                "danger": "#00427f",
                                                "dangerLight": "#bdc8e4",
                                                "neutral0": "#fff",
                                                "neutral10": "#eff2f8",
                                                "neutral20": "#a6a6a6",
                                                "neutral30": "#b4b4b4",
                                                "neutral40": "#9b9b9b",
                                                "neutral5": "#dddddd",
                                                "neutral50": "#838383",
                                                "neutral60": "#6a6a6a",
                                                "neutral70": "#515151",
                                                "neutral80": "#383838",
                                                "neutral90": "#1f1f1f",
                                                "primary": "#7894ce",
                                                "primary25": "#f3f3f3",
                                                "primary50": "#d0d0d0",
                                                "primary75": "#a6a6a6",
                                              },
                                              "spacing": Object {
                                                "baseUnit": 4,
                                                "controlHeight": 38,
                                                "menuGutter": 8,
                                              },
                                            }
                                          }
                                        />
                                        <DropdownIndicator
                                          clearValue={[Function]}
                                          cx={[Function]}
                                          getStyles={[Function]}
                                          getValue={[Function]}
                                          hasValue={true}
                                          innerProps={
                                            Object {
                                              "aria-hidden": "true",
                                              "onMouseDown": [Function],
                                              "onTouchEnd": [Function],
                                            }
                                          }
                                          isDisabled={false}
                                          isFocused={false}
                                          isMulti={false}
                                          isRtl={false}
                                          options={
                                            Array [
                                              Object {
                                                "label": "10",
                                                "value": "10",
                                              },
                                              Object {
                                                "label": "25",
                                                "value": "25",
                                              },
                                              Object {
                                                "label": "50",
                                                "value": "50",
                                              },
                                              Object {
                                                "label": "100",
                                                "value": "100",
                                              },
                                            ]
                                          }
                                          selectOption={[Function]}
                                          selectProps={
                                            Object {
                                              "addLabelText": undefined,
                                              "allowCreate": false,
                                              "autoFocus": false,
                                              "backspaceRemovesValue": true,
                                              "blurInputOnSelect": true,
                                              "captureMenuScroll": false,
                                              "className": "ContentPacksList__StyledSizeSelect-dqllb7-1 c6",
                                              "closeMenuOnScroll": false,
                                              "closeMenuOnSelect": true,
                                              "components": Object {
                                                "DropdownIndicator": [Function],
                                                "IndicatorSeparator": [Function],
                                                "MultiValueRemove": [Function],
                                              },
                                              "controlShouldRenderValue": true,
                                              "delimiter": ",",
                                              "displayKey": "label",
                                              "escapeClearsValue": false,
                                              "filterOption": [Function],
                                              "formatGroupLabel": [Function],
                                              "getOptionLabel": [Function],
                                              "getOptionValue": [Function],
                                              "ignoreAccents": true,
                                              "inputValue": "",
                                              "isClearable": false,
                                              "isDisabled": false,
                                              "isLoading": false,
                                              "isMulti": false,
                                              "isOptionDisabled": [Function],
                                              "isRtl": false,
                                              "isSearchable": true,
                                              "loadingMessage": [Function],
                                              "maxMenuHeight": 300,
                                              "menuIsOpen": false,
                                              "menuPlacement": "bottom",
                                              "menuPosition": "absolute",
                                              "menuShouldBlockScroll": false,
                                              "menuShouldScrollIntoView": true,
                                              "minMenuHeight": 140,
                                              "noOptionsMessage": [Function],
                                              "onChange": [Function],
                                              "onInputChange": [Function],
                                              "onMenuClose": [Function],
                                              "onMenuOpen": [Function],
                                              "onReactSelectChange": undefined,
                                              "openMenuOnClick": true,
                                              "openMenuOnFocus": false,
                                              "options": Array [
                                                Object {
                                                  "label": "10",
                                                  "value": "10",
                                                },
                                                Object {
                                                  "label": "25",
                                                  "value": "25",
                                                },
                                                Object {
                                                  "label": "50",
                                                  "value": "50",
                                                },
                                                Object {
                                                  "label": "100",
                                                  "value": "100",
                                                },
                                              ],
                                              "pageSize": 5,
                                              "placeholder": "Select...",
                                              "screenReaderStatus": [Function],
                                              "size": "normal",
                                              "styles": Object {
                                                "clearIndicator": [Function],
                                                "control": [Function],
                                                "dropdownIndicator": [Function],
                                                "menu": [Function],
                                                "multiValue": [Function],
                                                "multiValueLabel": [Function],
                                                "multiValueRemove": [Function],
                                                "placeholder": [Function],
                                                "singleValue": [Function],
                                                "valueContainer": [Function],
                                              },
                                              "tabIndex": "0",
                                              "tabSelectsValue": true,
                                              "theme": [Function],
                                              "value": Array [
                                                Object {
                                                  "label": "10",
                                                  "value": "10",
                                                },
                                              ],
                                              "valueKey": "value",
                                            }
                                          }
                                          setValue={[Function]}
                                          theme={
                                            Object {
                                              "borderRadius": 4,
                                              "colors": Object {
                                                "danger": "#00427f",
                                                "dangerLight": "#bdc8e4",
                                                "neutral0": "#fff",
                                                "neutral10": "#eff2f8",
                                                "neutral20": "#a6a6a6",
                                                "neutral30": "#b4b4b4",
                                                "neutral40": "#9b9b9b",
                                                "neutral5": "#dddddd",
                                                "neutral50": "#838383",
                                                "neutral60": "#6a6a6a",
                                                "neutral70": "#515151",
                                                "neutral80": "#383838",
                                                "neutral90": "#1f1f1f",
                                                "primary": "#7894ce",
                                                "primary25": "#f3f3f3",
                                                "primary50": "#d0d0d0",
                                                "primary75": "#a6a6a6",
                                              },
                                              "spacing": Object {
                                                "baseUnit": 4,
                                                "controlHeight": 38,
                                                "menuGutter": 8,
                                              },
                                            }
                                          }
                                        >
                                          <div
                                            aria-hidden="true"
                                            onMouseDown={[Function]}
                                            onTouchEnd={[Function]}
                                            style={
                                              Object {
                                                ":hover": Object {
                                                  "color": "#9b9b9b",
                                                },
                                                "boxSizing": "border-box",
                                                "color": "#a6a6a6",
                                                "display": "flex",
                                                "fontSize": "150%",
                                                "label": "indicatorContainer",
                                                "marginRight": "1rem",
                                                "padding": "0px",
                                                "transform": false,
                                                "transition": "color 150ms",
                                              }
                                            }
                                          >
                                            <Icon
                                              name="caret-down"
                                              type="solid"
                                            >
                                              <FontAwesomeIcon
                                                icon={
                                                  Object {
                                                    "iconName": "caret-down",
                                                    "prefix": "fas",
                                                  }
                                                }
                                              >
                                                <svg
                                                  className="svg-inline--fa fa-caret-down"
                                                />
                                              </FontAwesomeIcon>
                                            </Icon>
                                          </div>
                                        </DropdownIndicator>
                                      </div>
                                    </IndicatorsContainer>
                                  </div>
                                </Control>
                              </div>
                            </SelectContainer>
                          </Select>
                        </StateManager>
                      </Select>
                    </WithTheme(Select)>
                  </ContentPacksList__StyledSizeSelect>
                </span>
              </ContentPacksList__PageSizeSelector>
            </div>
          </Col>
        </div>
      </Row>
    </Row>
    <ControlledTableList>
      <div>
        <ListGroup>
          <ListGroup
            bsClass="list-group"
          >
            <div
              className="list-group"
            >
              <ControlledTableListHeader>
                <ControlledTableListHeader__StyledListGroupItem>
                  <ForwardRef
                    className="c7"
                  >
                    <ListGroupItem__StyledListGroupItem
                      className="c7"
                    >
                      <ListGroupItem
                        bsClass="list-group-item"
                        className="c8 c7"
                        listItem={false}
                      >
                        <span
                          className="c8 c7 list-group-item"
                        >
                          <ControlledTableListHeader__HeaderWrapper>
                            <div
                              className="c9"
                            />
                          </ControlledTableListHeader__HeaderWrapper>
                        </span>
                      </ListGroupItem>
                    </ListGroupItem__StyledListGroupItem>
                  </ForwardRef>
                </ControlledTableListHeader__StyledListGroupItem>
              </ControlledTableListHeader>
              <ControlledTableListItem
                key="1"
              >
                <ForwardRef>
                  <ListGroupItem__StyledListGroupItem>
                    <ListGroupItem
                      bsClass="list-group-item"
                      className="c8"
                      listItem={false}
                    >
                      <span
                        className="c8 list-group-item"
                      >
                        <Row
                          className="row-sm"
                        >
                          <Row
                            bsClass="row"
                            className="c0 row-sm"
                            componentClass="div"
                          >
                            <div
                              className="c0 row-sm row"
                            >
                              <Col
                                bsClass="col"
                                componentClass="div"
                                md={9}
                              >
                                <div
                                  className="col-md-9"
                                >
                                  <h3>
                                    <Link
                                      onlyActiveOnIndex={false}
                                      style={Object {}}
                                      to="/system/contentpacks/1"
                                    >
                                      <a
                                        onClick={[Function]}
                                        style={Object {}}
                                      />
                                    </Link>
                                     
                                    <small>
                                      Latest Version: 
                                      1
                                       
                                      <ContentPackStatus
                                        contentPackId="1"
                                        states={
                                          Array [
                                            "installed",
                                          ]
                                        }
                                      >
                                        <span>
                                          <Link
                                            key="installed"
                                            onlyActiveOnIndex={false}
                                            style={Object {}}
                                            to="/system/contentpacks/1"
                                          >
                                            <a
                                              onClick={[Function]}
                                              style={Object {}}
                                            >
                                              <ContentPackStatus__StatusBadge
                                                status="installed"
                                              >
                                                <Badge
                                                  bsClass="badge"
                                                  className="Badge__StyledBadge-sc-4gzqz0-0 c10"
                                                  pullRight={false}
                                                  status="installed"
                                                >
                                                  <span
                                                    className="Badge__StyledBadge-sc-4gzqz0-0 c10 badge"
                                                    status="installed"
                                                  >
                                                    installed
                                                  </span>
                                                </Badge>
                                              </ContentPackStatus__StatusBadge>
                                            </a>
                                          </Link>
                                        </span>
                                      </ContentPackStatus>
                                       
                                    </small>
                                  </h3>
                                </div>
                              </Col>
                              <Col
                                bsClass="col"
                                className="text-right"
                                componentClass="div"
                                md={3}
                              >
                                <div
                                  className="text-right col-md-3"
                                >
                                   
                                  <Button
                                    bsSize="small"
                                    bsStyle="info"
                                    onClick={[Function]}
                                  >
                                    <Button
                                      active={false}
                                      block={false}
                                      bsClass="btn"
                                      bsSize="small"
                                      bsStyle="info"
                                      className="c3"
                                      disabled={false}
                                      onClick={[Function]}
                                    >
                                      <button
                                        className="c3 btn btn-sm btn-info"
                                        disabled={false}
                                        onClick={[Function]}
                                        type="button"
                                      >
                                        Install
                                      </button>
                                    </Button>
                                  </Button>
                                  <BootstrapModalWrapper
                                    backdrop="static"
                                    bsSize="large"
                                    onClose={[Function]}
                                    onHide={[Function]}
                                    onOpen={[Function]}
                                    showModal={false}
                                  >
                                    <Modal
                                      backdrop="static"
                                      bsSize="large"
                                      onHide={[Function]}
                                      show={false}
                                    >
                                      <Modal
                                        animation={true}
                                        autoFocus={true}
                                        backdrop="static"
                                        bsClass="modal"
                                        bsSize="large"
                                        className="c11"
                                        dialogComponentClass={[Function]}
                                        enforceFocus={true}
                                        keyboard={true}
                                        manager={
                                          ModalManager {
                                            "add": [Function],
                                            "containers": Array [],
                                            "data": Array [],
                                            "handleContainerOverflow": true,
                                            "hideSiblingNodes": true,
                                            "isTopModal": [Function],
                                            "modals": Array [],
                                            "remove": [Function],
                                          }
                                        }
                                        onHide={[Function]}
                                        renderBackdrop={[Function]}
                                        restoreFocus={true}
                                        show={false}
                                      >
                                        <Modal
                                          autoFocus={true}
                                          backdrop="static"
                                          backdropClassName="modal-backdrop"
                                          backdropTransition={[Function]}
                                          containerClassName="modal-open"
                                          enforceFocus={true}
                                          keyboard={true}
                                          manager={
                                            ModalManager {
                                              "add": [Function],
                                              "containers": Array [],
                                              "data": Array [],
                                              "handleContainerOverflow": true,
                                              "hideSiblingNodes": true,
                                              "isTopModal": [Function],
                                              "modals": Array [],
                                              "remove": [Function],
                                            }
                                          }
                                          onEntering={[Function]}
                                          onExited={[Function]}
                                          onHide={[Function]}
                                          onMouseUp={[Function]}
                                          renderBackdrop={[Function]}
                                          restoreFocus={true}
                                          show={false}
                                          transition={[Function]}
                                        />
                                      </Modal>
                                    </Modal>
                                  </BootstrapModalWrapper>
                                   
                                  <DropdownButton
                                    bsSize="small"
                                    id="more-actions-1"
                                    pullRight={true}
                                    title="More Actions"
                                  >
                                    <DropdownButton
                                      bsSize="small"
                                      className="c12"
                                      id="more-actions-1"
                                      pullRight={true}
                                      title="More Actions"
                                    >
                                      <ForwardRef
                                        bsSize="small"
                                        id="more-actions-1"
                                        pullRight={true}
                                      >
                                        <Uncontrolled(Dropdown)
                                          bsSize="small"
                                          id="more-actions-1"
                                          innerRef={null}
                                          pullRight={true}
                                        >
                                          <Dropdown
                                            bsClass="dropdown"
                                            bsSize="small"
                                            componentClass={[Function]}
                                            id="more-actions-1"
                                            onToggle={[Function]}
                                            pullRight={true}
                                          >
                                            <ButtonGroup
                                              block={false}
                                              bsClass="btn-group"
                                              bsSize="small"
                                              className="dropdown"
                                              justified={false}
                                              vertical={false}
                                            >
                                              <div
                                                className="dropdown btn-group btn-group-sm"
                                              >
                                                <DropdownToggle
                                                  bsClass="dropdown-toggle"
                                                  bsRole="toggle"
                                                  bsSize="small"
                                                  className="c12"
                                                  id="more-actions-1"
                                                  key=".0"
                                                  onClick={[Function]}
                                                  onKeyDown={[Function]}
                                                  open={false}
                                                  useAnchor={false}
                                                >
                                                  <Button
                                                    active={false}
                                                    aria-expanded={false}
                                                    aria-haspopup={true}
                                                    block={false}
                                                    bsClass="btn"
                                                    bsSize="small"
                                                    bsStyle="default"
                                                    className="c12 dropdown-toggle"
                                                    disabled={false}
                                                    id="more-actions-1"
                                                    onClick={[Function]}
                                                    onKeyDown={[Function]}
                                                    role="button"
                                                  >
                                                    <button
                                                      aria-expanded={false}
                                                      aria-haspopup={true}
                                                      className="c12 dropdown-toggle btn btn-sm btn-default"
                                                      disabled={false}
                                                      id="more-actions-1"
                                                      onClick={[Function]}
                                                      onKeyDown={[Function]}
                                                      role="button"
                                                      type="button"
                                                    >
                                                      More Actions
                                                       
                                                      <span
                                                        className="caret"
                                                      />
                                                    </button>
                                                  </Button>
                                                </DropdownToggle>
                                                <DropdownMenu
                                                  bsClass="dropdown-menu"
                                                  bsRole="menu"
                                                  key=".1"
                                                  labelledBy="more-actions-1"
                                                  onClose={[Function]}
                                                  onSelect={[Function]}
                                                  pullRight={true}
                                                >
                                                  <RootCloseWrapper
                                                    disabled={true}
                                                    event="click"
                                                    onRootClose={[Function]}
                                                  >
                                                    <ul
                                                      aria-labelledby="more-actions-1"
                                                      className="dropdown-menu dropdown-menu-right"
                                                      role="menu"
                                                    >
                                                      <LinkContainer
                                                        action="push"
                                                        key=".0"
                                                        onKeyDown={[Function]}
                                                        onSelect={[Function]}
                                                        onlyActiveOnIndex={false}
                                                        to="/system/contentpacks/1"
                                                      >
                                                        <MenuItem
                                                          action="push"
                                                          bsClass="dropdown"
                                                          disabled={false}
                                                          divider={false}
                                                          header={false}
                                                          onClick={[Function]}
                                                          onKeyDown={[Function]}
                                                          onSelect={[Function]}
                                                        >
                                                          <li
                                                            className=""
                                                            role="presentation"
                                                          >
                                                            <SafeAnchor
                                                              action="push"
                                                              componentClass="a"
                                                              onClick={[Function]}
                                                              onKeyDown={[Function]}
                                                              role="menuitem"
                                                              tabIndex="-1"
                                                            >
                                                              <a
                                                                action="push"
                                                                href="#"
                                                                onClick={[Function]}
                                                                onKeyDown={[Function]}
                                                                role="menuitem"
                                                                tabIndex="-1"
                                                              >
                                                                Show
                                                              </a>
                                                            </SafeAnchor>
                                                          </li>
                                                        </MenuItem>
                                                      </LinkContainer>
                                                      <LinkContainer
                                                        action="push"
                                                        key=".1"
                                                        onKeyDown={[Function]}
                                                        onSelect={[Function]}
                                                        onlyActiveOnIndex={false}
                                                        to="/system/contentpacks/1/1/edit"
                                                      >
                                                        <MenuItem
                                                          action="push"
                                                          bsClass="dropdown"
                                                          disabled={false}
                                                          divider={false}
                                                          header={false}
                                                          onClick={[Function]}
                                                          onKeyDown={[Function]}
                                                          onSelect={[Function]}
                                                        >
                                                          <li
                                                            className=""
                                                            role="presentation"
                                                          >
                                                            <SafeAnchor
                                                              action="push"
                                                              componentClass="a"
                                                              onClick={[Function]}
                                                              onKeyDown={[Function]}
                                                              role="menuitem"
                                                              tabIndex="-1"
                                                            >
                                                              <a
                                                                action="push"
                                                                href="#"
                                                                onClick={[Function]}
                                                                onKeyDown={[Function]}
                                                                role="menuitem"
                                                                tabIndex="-1"
                                                              >
                                                                Create New Version
                                                              </a>
                                                            </SafeAnchor>
                                                          </li>
                                                        </MenuItem>
                                                      </LinkContainer>
                                                      <MenuItem
                                                        bsClass="dropdown"
                                                        disabled={false}
                                                        divider={false}
                                                        header={false}
                                                        key=".2"
                                                        onKeyDown={[Function]}
                                                        onSelect={[Function]}
                                                      >
                                                        <li
                                                          className=""
                                                          role="presentation"
                                                        >
                                                          <SafeAnchor
                                                            componentClass="a"
                                                            onClick={[Function]}
                                                            onKeyDown={[Function]}
                                                            role="menuitem"
                                                            tabIndex="-1"
                                                          >
                                                            <a
                                                              href="#"
                                                              onClick={[Function]}
                                                              onKeyDown={[Function]}
                                                              role="menuitem"
                                                              tabIndex="-1"
                                                            >
                                                              Download
                                                            </a>
                                                          </SafeAnchor>
                                                        </li>
                                                      </MenuItem>
                                                      <MenuItem
                                                        bsClass="dropdown"
                                                        disabled={false}
                                                        divider={true}
                                                        header={false}
                                                        key=".3"
                                                        onKeyDown={[Function]}
                                                        onSelect={[Function]}
                                                      >
                                                        <li
                                                          className="divider"
                                                          onKeyDown={[Function]}
                                                          role="separator"
                                                        />
                                                      </MenuItem>
                                                      <MenuItem
                                                        bsClass="dropdown"
                                                        disabled={false}
                                                        divider={false}
                                                        header={false}
                                                        key=".4"
                                                        onKeyDown={[Function]}
                                                        onSelect={[Function]}
                                                      >
                                                        <li
                                                          className=""
                                                          role="presentation"
                                                        >
                                                          <SafeAnchor
                                                            componentClass="a"
                                                            onClick={[Function]}
                                                            onKeyDown={[Function]}
                                                            role="menuitem"
                                                            tabIndex="-1"
                                                          >
                                                            <a
                                                              href="#"
                                                              onClick={[Function]}
                                                              onKeyDown={[Function]}
                                                              role="menuitem"
                                                              tabIndex="-1"
                                                            >
                                                              Delete All Versions
                                                            </a>
                                                          </SafeAnchor>
                                                        </li>
                                                      </MenuItem>
                                                    </ul>
                                                  </RootCloseWrapper>
                                                </DropdownMenu>
                                              </div>
                                            </ButtonGroup>
                                          </Dropdown>
                                        </Uncontrolled(Dropdown)>
                                      </ForwardRef>
                                    </DropdownButton>
                                  </DropdownButton>
                                  <ContentPackDownloadControl
                                    contentPackId="1"
                                    revision={1}
                                  >
                                    <BootstrapModalWrapper
                                      backdrop="static"
                                      bsSize="large"
                                      onClose={[Function]}
                                      onHide={[Function]}
                                      onOpen={[Function]}
                                      showModal={false}
                                    >
                                      <Modal
                                        backdrop="static"
                                        bsSize="large"
                                        onHide={[Function]}
                                        show={false}
                                      >
                                        <Modal
                                          animation={true}
                                          autoFocus={true}
                                          backdrop="static"
                                          bsClass="modal"
                                          bsSize="large"
                                          className="c11"
                                          dialogComponentClass={[Function]}
                                          enforceFocus={true}
                                          keyboard={true}
                                          manager={
                                            ModalManager {
                                              "add": [Function],
                                              "containers": Array [],
                                              "data": Array [],
                                              "handleContainerOverflow": true,
                                              "hideSiblingNodes": true,
                                              "isTopModal": [Function],
                                              "modals": Array [],
                                              "remove": [Function],
                                            }
                                          }
                                          onHide={[Function]}
                                          renderBackdrop={[Function]}
                                          restoreFocus={true}
                                          show={false}
                                        >
                                          <Modal
                                            autoFocus={true}
                                            backdrop="static"
                                            backdropClassName="modal-backdrop"
                                            backdropTransition={[Function]}
                                            containerClassName="modal-open"
                                            enforceFocus={true}
                                            keyboard={true}
                                            manager={
                                              ModalManager {
                                                "add": [Function],
                                                "containers": Array [],
                                                "data": Array [],
                                                "handleContainerOverflow": true,
                                                "hideSiblingNodes": true,
                                                "isTopModal": [Function],
                                                "modals": Array [],
                                                "remove": [Function],
                                              }
                                            }
                                            onEntering={[Function]}
                                            onExited={[Function]}
                                            onHide={[Function]}
                                            onMouseUp={[Function]}
                                            renderBackdrop={[Function]}
                                            restoreFocus={true}
                                            show={false}
                                            transition={[Function]}
                                          />
                                        </Modal>
                                      </Modal>
                                    </BootstrapModalWrapper>
                                  </ContentPackDownloadControl>
                                </div>
                              </Col>
                            </div>
                          </Row>
                        </Row>
                        <Row
                          className="row-sm content-packs-summary"
                        >
                          <Row
                            bsClass="row"
                            className="c0 row-sm content-packs-summary"
                            componentClass="div"
                          >
                            <div
                              className="c0 row-sm content-packs-summary row"
                            >
                              <Col
                                bsClass="col"
                                componentClass="div"
                                md={12}
                              >
                                <div
                                  className="col-md-12"
                                >
                                  Grok Patterns to extract informations from UFW logfiles
                                   
                                </div>
                              </Col>
                            </div>
                          </Row>
                        </Row>
                      </span>
                    </ListGroupItem>
                  </ListGroupItem__StyledListGroupItem>
                </ForwardRef>
              </ControlledTableListItem>
              <ControlledTableListItem
                key="2"
              >
                <ForwardRef>
                  <ListGroupItem__StyledListGroupItem>
                    <ListGroupItem
                      bsClass="list-group-item"
                      className="c8"
                      listItem={false}
                    >
                      <span
                        className="c8 list-group-item"
                      >
                        <Row
                          className="row-sm"
                        >
                          <Row
                            bsClass="row"
                            className="c0 row-sm"
                            componentClass="div"
                          >
                            <div
                              className="c0 row-sm row"
                            >
                              <Col
                                bsClass="col"
                                componentClass="div"
                                md={9}
                              >
                                <div
                                  className="col-md-9"
                                >
                                  <h3>
                                    <Link
                                      onlyActiveOnIndex={false}
                                      style={Object {}}
                                      to="/system/contentpacks/2"
                                    >
                                      <a
                                        onClick={[Function]}
                                        style={Object {}}
                                      />
                                    </Link>
                                     
                                    <small>
                                      Latest Version: 
                                      1
                                       
                                      <ContentPackStatus
                                        contentPackId="2"
                                        states={
                                          Array [
                                            "installed",
                                          ]
                                        }
                                      >
                                        <span>
                                          <Link
                                            key="installed"
                                            onlyActiveOnIndex={false}
                                            style={Object {}}
                                            to="/system/contentpacks/2"
                                          >
                                            <a
                                              onClick={[Function]}
                                              style={Object {}}
                                            >
                                              <ContentPackStatus__StatusBadge
                                                status="installed"
                                              >
                                                <Badge
                                                  bsClass="badge"
                                                  className="Badge__StyledBadge-sc-4gzqz0-0 c10"
                                                  pullRight={false}
                                                  status="installed"
                                                >
                                                  <span
                                                    className="Badge__StyledBadge-sc-4gzqz0-0 c10 badge"
                                                    status="installed"
                                                  >
                                                    installed
                                                  </span>
                                                </Badge>
                                              </ContentPackStatus__StatusBadge>
                                            </a>
                                          </Link>
                                        </span>
                                      </ContentPackStatus>
                                       
                                    </small>
                                  </h3>
                                </div>
                              </Col>
                              <Col
                                bsClass="col"
                                className="text-right"
                                componentClass="div"
                                md={3}
                              >
                                <div
                                  className="text-right col-md-3"
                                >
                                   
                                  <Button
                                    bsSize="small"
                                    bsStyle="info"
                                    onClick={[Function]}
                                  >
                                    <Button
                                      active={false}
                                      block={false}
                                      bsClass="btn"
                                      bsSize="small"
                                      bsStyle="info"
                                      className="c3"
                                      disabled={false}
                                      onClick={[Function]}
                                    >
                                      <button
                                        className="c3 btn btn-sm btn-info"
                                        disabled={false}
                                        onClick={[Function]}
                                        type="button"
                                      >
                                        Install
                                      </button>
                                    </Button>
                                  </Button>
                                  <BootstrapModalWrapper
                                    backdrop="static"
                                    bsSize="large"
                                    onClose={[Function]}
                                    onHide={[Function]}
                                    onOpen={[Function]}
                                    showModal={false}
                                  >
                                    <Modal
                                      backdrop="static"
                                      bsSize="large"
                                      onHide={[Function]}
                                      show={false}
                                    >
                                      <Modal
                                        animation={true}
                                        autoFocus={true}
                                        backdrop="static"
                                        bsClass="modal"
                                        bsSize="large"
                                        className="c11"
                                        dialogComponentClass={[Function]}
                                        enforceFocus={true}
                                        keyboard={true}
                                        manager={
                                          ModalManager {
                                            "add": [Function],
                                            "containers": Array [],
                                            "data": Array [],
                                            "handleContainerOverflow": true,
                                            "hideSiblingNodes": true,
                                            "isTopModal": [Function],
                                            "modals": Array [],
                                            "remove": [Function],
                                          }
                                        }
                                        onHide={[Function]}
                                        renderBackdrop={[Function]}
                                        restoreFocus={true}
                                        show={false}
                                      >
                                        <Modal
                                          autoFocus={true}
                                          backdrop="static"
                                          backdropClassName="modal-backdrop"
                                          backdropTransition={[Function]}
                                          containerClassName="modal-open"
                                          enforceFocus={true}
                                          keyboard={true}
                                          manager={
                                            ModalManager {
                                              "add": [Function],
                                              "containers": Array [],
                                              "data": Array [],
                                              "handleContainerOverflow": true,
                                              "hideSiblingNodes": true,
                                              "isTopModal": [Function],
                                              "modals": Array [],
                                              "remove": [Function],
                                            }
                                          }
                                          onEntering={[Function]}
                                          onExited={[Function]}
                                          onHide={[Function]}
                                          onMouseUp={[Function]}
                                          renderBackdrop={[Function]}
                                          restoreFocus={true}
                                          show={false}
                                          transition={[Function]}
                                        />
                                      </Modal>
                                    </Modal>
                                  </BootstrapModalWrapper>
                                   
                                  <DropdownButton
                                    bsSize="small"
                                    id="more-actions-2"
                                    pullRight={true}
                                    title="More Actions"
                                  >
                                    <DropdownButton
                                      bsSize="small"
                                      className="c12"
                                      id="more-actions-2"
                                      pullRight={true}
                                      title="More Actions"
                                    >
                                      <ForwardRef
                                        bsSize="small"
                                        id="more-actions-2"
                                        pullRight={true}
                                      >
                                        <Uncontrolled(Dropdown)
                                          bsSize="small"
                                          id="more-actions-2"
                                          innerRef={null}
                                          pullRight={true}
                                        >
                                          <Dropdown
                                            bsClass="dropdown"
                                            bsSize="small"
                                            componentClass={[Function]}
                                            id="more-actions-2"
                                            onToggle={[Function]}
                                            pullRight={true}
                                          >
                                            <ButtonGroup
                                              block={false}
                                              bsClass="btn-group"
                                              bsSize="small"
                                              className="dropdown"
                                              justified={false}
                                              vertical={false}
                                            >
                                              <div
                                                className="dropdown btn-group btn-group-sm"
                                              >
                                                <DropdownToggle
                                                  bsClass="dropdown-toggle"
                                                  bsRole="toggle"
                                                  bsSize="small"
                                                  className="c12"
                                                  id="more-actions-2"
                                                  key=".0"
                                                  onClick={[Function]}
                                                  onKeyDown={[Function]}
                                                  open={false}
                                                  useAnchor={false}
                                                >
                                                  <Button
                                                    active={false}
                                                    aria-expanded={false}
                                                    aria-haspopup={true}
                                                    block={false}
                                                    bsClass="btn"
                                                    bsSize="small"
                                                    bsStyle="default"
                                                    className="c12 dropdown-toggle"
                                                    disabled={false}
                                                    id="more-actions-2"
                                                    onClick={[Function]}
                                                    onKeyDown={[Function]}
                                                    role="button"
                                                  >
                                                    <button
                                                      aria-expanded={false}
                                                      aria-haspopup={true}
                                                      className="c12 dropdown-toggle btn btn-sm btn-default"
                                                      disabled={false}
                                                      id="more-actions-2"
                                                      onClick={[Function]}
                                                      onKeyDown={[Function]}
                                                      role="button"
                                                      type="button"
                                                    >
                                                      More Actions
                                                       
                                                      <span
                                                        className="caret"
                                                      />
                                                    </button>
                                                  </Button>
                                                </DropdownToggle>
                                                <DropdownMenu
                                                  bsClass="dropdown-menu"
                                                  bsRole="menu"
                                                  key=".1"
                                                  labelledBy="more-actions-2"
                                                  onClose={[Function]}
                                                  onSelect={[Function]}
                                                  pullRight={true}
                                                >
                                                  <RootCloseWrapper
                                                    disabled={true}
                                                    event="click"
                                                    onRootClose={[Function]}
                                                  >
                                                    <ul
                                                      aria-labelledby="more-actions-2"
                                                      className="dropdown-menu dropdown-menu-right"
                                                      role="menu"
                                                    >
                                                      <LinkContainer
                                                        action="push"
                                                        key=".0"
                                                        onKeyDown={[Function]}
                                                        onSelect={[Function]}
                                                        onlyActiveOnIndex={false}
                                                        to="/system/contentpacks/2"
                                                      >
                                                        <MenuItem
                                                          action="push"
                                                          bsClass="dropdown"
                                                          disabled={false}
                                                          divider={false}
                                                          header={false}
                                                          onClick={[Function]}
                                                          onKeyDown={[Function]}
                                                          onSelect={[Function]}
                                                        >
                                                          <li
                                                            className=""
                                                            role="presentation"
                                                          >
                                                            <SafeAnchor
                                                              action="push"
                                                              componentClass="a"
                                                              onClick={[Function]}
                                                              onKeyDown={[Function]}
                                                              role="menuitem"
                                                              tabIndex="-1"
                                                            >
                                                              <a
                                                                action="push"
                                                                href="#"
                                                                onClick={[Function]}
                                                                onKeyDown={[Function]}
                                                                role="menuitem"
                                                                tabIndex="-1"
                                                              >
                                                                Show
                                                              </a>
                                                            </SafeAnchor>
                                                          </li>
                                                        </MenuItem>
                                                      </LinkContainer>
                                                      <LinkContainer
                                                        action="push"
                                                        key=".1"
                                                        onKeyDown={[Function]}
                                                        onSelect={[Function]}
                                                        onlyActiveOnIndex={false}
                                                        to="/system/contentpacks/2/1/edit"
                                                      >
                                                        <MenuItem
                                                          action="push"
                                                          bsClass="dropdown"
                                                          disabled={false}
                                                          divider={false}
                                                          header={false}
                                                          onClick={[Function]}
                                                          onKeyDown={[Function]}
                                                          onSelect={[Function]}
                                                        >
                                                          <li
                                                            className=""
                                                            role="presentation"
                                                          >
                                                            <SafeAnchor
                                                              action="push"
                                                              componentClass="a"
                                                              onClick={[Function]}
                                                              onKeyDown={[Function]}
                                                              role="menuitem"
                                                              tabIndex="-1"
                                                            >
                                                              <a
                                                                action="push"
                                                                href="#"
                                                                onClick={[Function]}
                                                                onKeyDown={[Function]}
                                                                role="menuitem"
                                                                tabIndex="-1"
                                                              >
                                                                Create New Version
                                                              </a>
                                                            </SafeAnchor>
                                                          </li>
                                                        </MenuItem>
                                                      </LinkContainer>
                                                      <MenuItem
                                                        bsClass="dropdown"
                                                        disabled={false}
                                                        divider={false}
                                                        header={false}
                                                        key=".2"
                                                        onKeyDown={[Function]}
                                                        onSelect={[Function]}
                                                      >
                                                        <li
                                                          className=""
                                                          role="presentation"
                                                        >
                                                          <SafeAnchor
                                                            componentClass="a"
                                                            onClick={[Function]}
                                                            onKeyDown={[Function]}
                                                            role="menuitem"
                                                            tabIndex="-1"
                                                          >
                                                            <a
                                                              href="#"
                                                              onClick={[Function]}
                                                              onKeyDown={[Function]}
                                                              role="menuitem"
                                                              tabIndex="-1"
                                                            >
                                                              Download
                                                            </a>
                                                          </SafeAnchor>
                                                        </li>
                                                      </MenuItem>
                                                      <MenuItem
                                                        bsClass="dropdown"
                                                        disabled={false}
                                                        divider={true}
                                                        header={false}
                                                        key=".3"
                                                        onKeyDown={[Function]}
                                                        onSelect={[Function]}
                                                      >
                                                        <li
                                                          className="divider"
                                                          onKeyDown={[Function]}
                                                          role="separator"
                                                        />
                                                      </MenuItem>
                                                      <MenuItem
                                                        bsClass="dropdown"
                                                        disabled={false}
                                                        divider={false}
                                                        header={false}
                                                        key=".4"
                                                        onKeyDown={[Function]}
                                                        onSelect={[Function]}
                                                      >
                                                        <li
                                                          className=""
                                                          role="presentation"
                                                        >
                                                          <SafeAnchor
                                                            componentClass="a"
                                                            onClick={[Function]}
                                                            onKeyDown={[Function]}
                                                            role="menuitem"
                                                            tabIndex="-1"
                                                          >
                                                            <a
                                                              href="#"
                                                              onClick={[Function]}
                                                              onKeyDown={[Function]}
                                                              role="menuitem"
                                                              tabIndex="-1"
                                                            >
                                                              Delete All Versions
                                                            </a>
                                                          </SafeAnchor>
                                                        </li>
                                                      </MenuItem>
                                                    </ul>
                                                  </RootCloseWrapper>
                                                </DropdownMenu>
                                              </div>
                                            </ButtonGroup>
                                          </Dropdown>
                                        </Uncontrolled(Dropdown)>
                                      </ForwardRef>
                                    </DropdownButton>
                                  </DropdownButton>
                                  <ContentPackDownloadControl
                                    contentPackId="2"
                                    revision={1}
                                  >
                                    <BootstrapModalWrapper
                                      backdrop="static"
                                      bsSize="large"
                                      onClose={[Function]}
                                      onHide={[Function]}
                                      onOpen={[Function]}
                                      showModal={false}
                                    >
                                      <Modal
                                        backdrop="static"
                                        bsSize="large"
                                        onHide={[Function]}
                                        show={false}
                                      >
                                        <Modal
                                          animation={true}
                                          autoFocus={true}
                                          backdrop="static"
                                          bsClass="modal"
                                          bsSize="large"
                                          className="c11"
                                          dialogComponentClass={[Function]}
                                          enforceFocus={true}
                                          keyboard={true}
                                          manager={
                                            ModalManager {
                                              "add": [Function],
                                              "containers": Array [],
                                              "data": Array [],
                                              "handleContainerOverflow": true,
                                              "hideSiblingNodes": true,
                                              "isTopModal": [Function],
                                              "modals": Array [],
                                              "remove": [Function],
                                            }
                                          }
                                          onHide={[Function]}
                                          renderBackdrop={[Function]}
                                          restoreFocus={true}
                                          show={false}
                                        >
                                          <Modal
                                            autoFocus={true}
                                            backdrop="static"
                                            backdropClassName="modal-backdrop"
                                            backdropTransition={[Function]}
                                            containerClassName="modal-open"
                                            enforceFocus={true}
                                            keyboard={true}
                                            manager={
                                              ModalManager {
                                                "add": [Function],
                                                "containers": Array [],
                                                "data": Array [],
                                                "handleContainerOverflow": true,
                                                "hideSiblingNodes": true,
                                                "isTopModal": [Function],
                                                "modals": Array [],
                                                "remove": [Function],
                                              }
                                            }
                                            onEntering={[Function]}
                                            onExited={[Function]}
                                            onHide={[Function]}
                                            onMouseUp={[Function]}
                                            renderBackdrop={[Function]}
                                            restoreFocus={true}
                                            show={false}
                                            transition={[Function]}
                                          />
                                        </Modal>
                                      </Modal>
                                    </BootstrapModalWrapper>
                                  </ContentPackDownloadControl>
                                </div>
                              </Col>
                            </div>
                          </Row>
                        </Row>
                        <Row
                          className="row-sm content-packs-summary"
                        >
                          <Row
                            bsClass="row"
                            className="c0 row-sm content-packs-summary"
                            componentClass="div"
                          >
                            <div
                              className="c0 row-sm content-packs-summary row"
                            >
                              <Col
                                bsClass="col"
                                componentClass="div"
                                md={12}
                              >
                                <div
                                  className="col-md-12"
                                >
                                  Patterns to retreive rails production logs
                                   
                                </div>
                              </Col>
                            </div>
                          </Row>
                        </Row>
                      </span>
                    </ListGroupItem>
                  </ListGroupItem__StyledListGroupItem>
                </ForwardRef>
              </ControlledTableListItem>
              <ControlledTableListItem
                key="3"
              >
                <ForwardRef>
                  <ListGroupItem__StyledListGroupItem>
                    <ListGroupItem
                      bsClass="list-group-item"
                      className="c8"
                      listItem={false}
                    >
                      <span
                        className="c8 list-group-item"
                      >
                        <Row
                          className="row-sm"
                        >
                          <Row
                            bsClass="row"
                            className="c0 row-sm"
                            componentClass="div"
                          >
                            <div
                              className="c0 row-sm row"
                            >
                              <Col
                                bsClass="col"
                                componentClass="div"
                                md={9}
                              >
                                <div
                                  className="col-md-9"
                                >
                                  <h3>
                                    <Link
                                      onlyActiveOnIndex={false}
                                      style={Object {}}
                                      to="/system/contentpacks/3"
                                    >
                                      <a
                                        onClick={[Function]}
                                        style={Object {}}
                                      />
                                    </Link>
                                     
                                    <small>
                                      Latest Version: 
                                      1
                                       
                                      <ContentPackStatus
                                        contentPackId="3"
                                        states={Array []}
                                      >
                                        <span />
                                      </ContentPackStatus>
                                       
                                    </small>
                                  </h3>
                                </div>
                              </Col>
                              <Col
                                bsClass="col"
                                className="text-right"
                                componentClass="div"
                                md={3}
                              >
                                <div
                                  className="text-right col-md-3"
                                >
                                   
                                  <Button
                                    bsSize="small"
                                    bsStyle="info"
                                    onClick={[Function]}
                                  >
                                    <Button
                                      active={false}
                                      block={false}
                                      bsClass="btn"
                                      bsSize="small"
                                      bsStyle="info"
                                      className="c3"
                                      disabled={false}
                                      onClick={[Function]}
                                    >
                                      <button
                                        className="c3 btn btn-sm btn-info"
                                        disabled={false}
                                        onClick={[Function]}
                                        type="button"
                                      >
                                        Install
                                      </button>
                                    </Button>
                                  </Button>
                                  <BootstrapModalWrapper
                                    backdrop="static"
                                    bsSize="large"
                                    onClose={[Function]}
                                    onHide={[Function]}
                                    onOpen={[Function]}
                                    showModal={false}
                                  >
                                    <Modal
                                      backdrop="static"
                                      bsSize="large"
                                      onHide={[Function]}
                                      show={false}
                                    >
                                      <Modal
                                        animation={true}
                                        autoFocus={true}
                                        backdrop="static"
                                        bsClass="modal"
                                        bsSize="large"
                                        className="c11"
                                        dialogComponentClass={[Function]}
                                        enforceFocus={true}
                                        keyboard={true}
                                        manager={
                                          ModalManager {
                                            "add": [Function],
                                            "containers": Array [],
                                            "data": Array [],
                                            "handleContainerOverflow": true,
                                            "hideSiblingNodes": true,
                                            "isTopModal": [Function],
                                            "modals": Array [],
                                            "remove": [Function],
                                          }
                                        }
                                        onHide={[Function]}
                                        renderBackdrop={[Function]}
                                        restoreFocus={true}
                                        show={false}
                                      >
                                        <Modal
                                          autoFocus={true}
                                          backdrop="static"
                                          backdropClassName="modal-backdrop"
                                          backdropTransition={[Function]}
                                          containerClassName="modal-open"
                                          enforceFocus={true}
                                          keyboard={true}
                                          manager={
                                            ModalManager {
                                              "add": [Function],
                                              "containers": Array [],
                                              "data": Array [],
                                              "handleContainerOverflow": true,
                                              "hideSiblingNodes": true,
                                              "isTopModal": [Function],
                                              "modals": Array [],
                                              "remove": [Function],
                                            }
                                          }
                                          onEntering={[Function]}
                                          onExited={[Function]}
                                          onHide={[Function]}
                                          onMouseUp={[Function]}
                                          renderBackdrop={[Function]}
                                          restoreFocus={true}
                                          show={false}
                                          transition={[Function]}
                                        />
                                      </Modal>
                                    </Modal>
                                  </BootstrapModalWrapper>
                                   
                                  <DropdownButton
                                    bsSize="small"
                                    id="more-actions-3"
                                    pullRight={true}
                                    title="More Actions"
                                  >
                                    <DropdownButton
                                      bsSize="small"
                                      className="c12"
                                      id="more-actions-3"
                                      pullRight={true}
                                      title="More Actions"
                                    >
                                      <ForwardRef
                                        bsSize="small"
                                        id="more-actions-3"
                                        pullRight={true}
                                      >
                                        <Uncontrolled(Dropdown)
                                          bsSize="small"
                                          id="more-actions-3"
                                          innerRef={null}
                                          pullRight={true}
                                        >
                                          <Dropdown
                                            bsClass="dropdown"
                                            bsSize="small"
                                            componentClass={[Function]}
                                            id="more-actions-3"
                                            onToggle={[Function]}
                                            pullRight={true}
                                          >
                                            <ButtonGroup
                                              block={false}
                                              bsClass="btn-group"
                                              bsSize="small"
                                              className="dropdown"
                                              justified={false}
                                              vertical={false}
                                            >
                                              <div
                                                className="dropdown btn-group btn-group-sm"
                                              >
                                                <DropdownToggle
                                                  bsClass="dropdown-toggle"
                                                  bsRole="toggle"
                                                  bsSize="small"
                                                  className="c12"
                                                  id="more-actions-3"
                                                  key=".0"
                                                  onClick={[Function]}
                                                  onKeyDown={[Function]}
                                                  open={false}
                                                  useAnchor={false}
                                                >
                                                  <Button
                                                    active={false}
                                                    aria-expanded={false}
                                                    aria-haspopup={true}
                                                    block={false}
                                                    bsClass="btn"
                                                    bsSize="small"
                                                    bsStyle="default"
                                                    className="c12 dropdown-toggle"
                                                    disabled={false}
                                                    id="more-actions-3"
                                                    onClick={[Function]}
                                                    onKeyDown={[Function]}
                                                    role="button"
                                                  >
                                                    <button
                                                      aria-expanded={false}
                                                      aria-haspopup={true}
                                                      className="c12 dropdown-toggle btn btn-sm btn-default"
                                                      disabled={false}
                                                      id="more-actions-3"
                                                      onClick={[Function]}
                                                      onKeyDown={[Function]}
                                                      role="button"
                                                      type="button"
                                                    >
                                                      More Actions
                                                       
                                                      <span
                                                        className="caret"
                                                      />
                                                    </button>
                                                  </Button>
                                                </DropdownToggle>
                                                <DropdownMenu
                                                  bsClass="dropdown-menu"
                                                  bsRole="menu"
                                                  key=".1"
                                                  labelledBy="more-actions-3"
                                                  onClose={[Function]}
                                                  onSelect={[Function]}
                                                  pullRight={true}
                                                >
                                                  <RootCloseWrapper
                                                    disabled={true}
                                                    event="click"
                                                    onRootClose={[Function]}
                                                  >
                                                    <ul
                                                      aria-labelledby="more-actions-3"
                                                      className="dropdown-menu dropdown-menu-right"
                                                      role="menu"
                                                    >
                                                      <LinkContainer
                                                        action="push"
                                                        key=".0"
                                                        onKeyDown={[Function]}
                                                        onSelect={[Function]}
                                                        onlyActiveOnIndex={false}
                                                        to="/system/contentpacks/3"
                                                      >
                                                        <MenuItem
                                                          action="push"
                                                          bsClass="dropdown"
                                                          disabled={false}
                                                          divider={false}
                                                          header={false}
                                                          onClick={[Function]}
                                                          onKeyDown={[Function]}
                                                          onSelect={[Function]}
                                                        >
                                                          <li
                                                            className=""
                                                            role="presentation"
                                                          >
                                                            <SafeAnchor
                                                              action="push"
                                                              componentClass="a"
                                                              onClick={[Function]}
                                                              onKeyDown={[Function]}
                                                              role="menuitem"
                                                              tabIndex="-1"
                                                            >
                                                              <a
                                                                action="push"
                                                                href="#"
                                                                onClick={[Function]}
                                                                onKeyDown={[Function]}
                                                                role="menuitem"
                                                                tabIndex="-1"
                                                              >
                                                                Show
                                                              </a>
                                                            </SafeAnchor>
                                                          </li>
                                                        </MenuItem>
                                                      </LinkContainer>
                                                      <LinkContainer
                                                        action="push"
                                                        key=".1"
                                                        onKeyDown={[Function]}
                                                        onSelect={[Function]}
                                                        onlyActiveOnIndex={false}
                                                        to="/system/contentpacks/3/1/edit"
                                                      >
                                                        <MenuItem
                                                          action="push"
                                                          bsClass="dropdown"
                                                          disabled={false}
                                                          divider={false}
                                                          header={false}
                                                          onClick={[Function]}
                                                          onKeyDown={[Function]}
                                                          onSelect={[Function]}
                                                        >
                                                          <li
                                                            className=""
                                                            role="presentation"
                                                          >
                                                            <SafeAnchor
                                                              action="push"
                                                              componentClass="a"
                                                              onClick={[Function]}
                                                              onKeyDown={[Function]}
                                                              role="menuitem"
                                                              tabIndex="-1"
                                                            >
                                                              <a
                                                                action="push"
                                                                href="#"
                                                                onClick={[Function]}
                                                                onKeyDown={[Function]}
                                                                role="menuitem"
                                                                tabIndex="-1"
                                                              >
                                                                Create New Version
                                                              </a>
                                                            </SafeAnchor>
                                                          </li>
                                                        </MenuItem>
                                                      </LinkContainer>
                                                      <MenuItem
                                                        bsClass="dropdown"
                                                        disabled={false}
                                                        divider={false}
                                                        header={false}
                                                        key=".2"
                                                        onKeyDown={[Function]}
                                                        onSelect={[Function]}
                                                      >
                                                        <li
                                                          className=""
                                                          role="presentation"
                                                        >
                                                          <SafeAnchor
                                                            componentClass="a"
                                                            onClick={[Function]}
                                                            onKeyDown={[Function]}
                                                            role="menuitem"
                                                            tabIndex="-1"
                                                          >
                                                            <a
                                                              href="#"
                                                              onClick={[Function]}
                                                              onKeyDown={[Function]}
                                                              role="menuitem"
                                                              tabIndex="-1"
                                                            >
                                                              Download
                                                            </a>
                                                          </SafeAnchor>
                                                        </li>
                                                      </MenuItem>
                                                      <MenuItem
                                                        bsClass="dropdown"
                                                        disabled={false}
                                                        divider={true}
                                                        header={false}
                                                        key=".3"
                                                        onKeyDown={[Function]}
                                                        onSelect={[Function]}
                                                      >
                                                        <li
                                                          className="divider"
                                                          onKeyDown={[Function]}
                                                          role="separator"
                                                        />
                                                      </MenuItem>
                                                      <MenuItem
                                                        bsClass="dropdown"
                                                        disabled={false}
                                                        divider={false}
                                                        header={false}
                                                        key=".4"
                                                        onKeyDown={[Function]}
                                                        onSelect={[Function]}
                                                      >
                                                        <li
                                                          className=""
                                                          role="presentation"
                                                        >
                                                          <SafeAnchor
                                                            componentClass="a"
                                                            onClick={[Function]}
                                                            onKeyDown={[Function]}
                                                            role="menuitem"
                                                            tabIndex="-1"
                                                          >
                                                            <a
                                                              href="#"
                                                              onClick={[Function]}
                                                              onKeyDown={[Function]}
                                                              role="menuitem"
                                                              tabIndex="-1"
                                                            >
                                                              Delete All Versions
                                                            </a>
                                                          </SafeAnchor>
                                                        </li>
                                                      </MenuItem>
                                                    </ul>
                                                  </RootCloseWrapper>
                                                </DropdownMenu>
                                              </div>
                                            </ButtonGroup>
                                          </Dropdown>
                                        </Uncontrolled(Dropdown)>
                                      </ForwardRef>
                                    </DropdownButton>
                                  </DropdownButton>
                                  <ContentPackDownloadControl
                                    contentPackId="3"
                                    revision={1}
                                  >
                                    <BootstrapModalWrapper
                                      backdrop="static"
                                      bsSize="large"
                                      onClose={[Function]}
                                      onHide={[Function]}
                                      onOpen={[Function]}
                                      showModal={false}
                                    >
                                      <Modal
                                        backdrop="static"
                                        bsSize="large"
                                        onHide={[Function]}
                                        show={false}
                                      >
                                        <Modal
                                          animation={true}
                                          autoFocus={true}
                                          backdrop="static"
                                          bsClass="modal"
                                          bsSize="large"
                                          className="c11"
                                          dialogComponentClass={[Function]}
                                          enforceFocus={true}
                                          keyboard={true}
                                          manager={
                                            ModalManager {
                                              "add": [Function],
                                              "containers": Array [],
                                              "data": Array [],
                                              "handleContainerOverflow": true,
                                              "hideSiblingNodes": true,
                                              "isTopModal": [Function],
                                              "modals": Array [],
                                              "remove": [Function],
                                            }
                                          }
                                          onHide={[Function]}
                                          renderBackdrop={[Function]}
                                          restoreFocus={true}
                                          show={false}
                                        >
                                          <Modal
                                            autoFocus={true}
                                            backdrop="static"
                                            backdropClassName="modal-backdrop"
                                            backdropTransition={[Function]}
                                            containerClassName="modal-open"
                                            enforceFocus={true}
                                            keyboard={true}
                                            manager={
                                              ModalManager {
                                                "add": [Function],
                                                "containers": Array [],
                                                "data": Array [],
                                                "handleContainerOverflow": true,
                                                "hideSiblingNodes": true,
                                                "isTopModal": [Function],
                                                "modals": Array [],
                                                "remove": [Function],
                                              }
                                            }
                                            onEntering={[Function]}
                                            onExited={[Function]}
                                            onHide={[Function]}
                                            onMouseUp={[Function]}
                                            renderBackdrop={[Function]}
                                            restoreFocus={true}
                                            show={false}
                                            transition={[Function]}
                                          />
                                        </Modal>
                                      </Modal>
                                    </BootstrapModalWrapper>
                                  </ContentPackDownloadControl>
                                </div>
                              </Col>
                            </div>
                          </Row>
                        </Row>
                        <Row
                          className="row-sm content-packs-summary"
                        >
                          <Row
                            bsClass="row"
                            className="c0 row-sm content-packs-summary"
                            componentClass="div"
                          >
                            <div
                              className="c0 row-sm content-packs-summary row"
                            >
                              <Col
                                bsClass="col"
                                componentClass="div"
                                md={12}
                              >
                                <div
                                  className="col-md-12"
                                >
                                   
                                </div>
                              </Col>
                            </div>
                          </Row>
                        </Row>
                      </span>
                    </ListGroupItem>
                  </ListGroupItem__StyledListGroupItem>
                </ForwardRef>
              </ControlledTableListItem>
              <ControlledTableListItem
                key="4"
              >
                <ForwardRef>
                  <ListGroupItem__StyledListGroupItem>
                    <ListGroupItem
                      bsClass="list-group-item"
                      className="c8"
                      listItem={false}
                    >
                      <span
                        className="c8 list-group-item"
                      >
                        <Row
                          className="row-sm"
                        >
                          <Row
                            bsClass="row"
                            className="c0 row-sm"
                            componentClass="div"
                          >
                            <div
                              className="c0 row-sm row"
                            >
                              <Col
                                bsClass="col"
                                componentClass="div"
                                md={9}
                              >
                                <div
                                  className="col-md-9"
                                >
                                  <h3>
                                    <Link
                                      onlyActiveOnIndex={false}
                                      style={Object {}}
                                      to="/system/contentpacks/4"
                                    >
                                      <a
                                        onClick={[Function]}
                                        style={Object {}}
                                      />
                                    </Link>
                                     
                                    <small>
                                      Latest Version: 
                                      1
                                       
                                      <ContentPackStatus
                                        contentPackId="4"
                                        states={Array []}
                                      >
                                        <span />
                                      </ContentPackStatus>
                                       
                                    </small>
                                  </h3>
                                </div>
                              </Col>
                              <Col
                                bsClass="col"
                                className="text-right"
                                componentClass="div"
                                md={3}
                              >
                                <div
                                  className="text-right col-md-3"
                                >
                                   
                                  <Button
                                    bsSize="small"
                                    bsStyle="info"
                                    onClick={[Function]}
                                  >
                                    <Button
                                      active={false}
                                      block={false}
                                      bsClass="btn"
                                      bsSize="small"
                                      bsStyle="info"
                                      className="c3"
                                      disabled={false}
                                      onClick={[Function]}
                                    >
                                      <button
                                        className="c3 btn btn-sm btn-info"
                                        disabled={false}
                                        onClick={[Function]}
                                        type="button"
                                      >
                                        Install
                                      </button>
                                    </Button>
                                  </Button>
                                  <BootstrapModalWrapper
                                    backdrop="static"
                                    bsSize="large"
                                    onClose={[Function]}
                                    onHide={[Function]}
                                    onOpen={[Function]}
                                    showModal={false}
                                  >
                                    <Modal
                                      backdrop="static"
                                      bsSize="large"
                                      onHide={[Function]}
                                      show={false}
                                    >
                                      <Modal
                                        animation={true}
                                        autoFocus={true}
                                        backdrop="static"
                                        bsClass="modal"
                                        bsSize="large"
                                        className="c11"
                                        dialogComponentClass={[Function]}
                                        enforceFocus={true}
                                        keyboard={true}
                                        manager={
                                          ModalManager {
                                            "add": [Function],
                                            "containers": Array [],
                                            "data": Array [],
                                            "handleContainerOverflow": true,
                                            "hideSiblingNodes": true,
                                            "isTopModal": [Function],
                                            "modals": Array [],
                                            "remove": [Function],
                                          }
                                        }
                                        onHide={[Function]}
                                        renderBackdrop={[Function]}
                                        restoreFocus={true}
                                        show={false}
                                      >
                                        <Modal
                                          autoFocus={true}
                                          backdrop="static"
                                          backdropClassName="modal-backdrop"
                                          backdropTransition={[Function]}
                                          containerClassName="modal-open"
                                          enforceFocus={true}
                                          keyboard={true}
                                          manager={
                                            ModalManager {
                                              "add": [Function],
                                              "containers": Array [],
                                              "data": Array [],
                                              "handleContainerOverflow": true,
                                              "hideSiblingNodes": true,
                                              "isTopModal": [Function],
                                              "modals": Array [],
                                              "remove": [Function],
                                            }
                                          }
                                          onEntering={[Function]}
                                          onExited={[Function]}
                                          onHide={[Function]}
                                          onMouseUp={[Function]}
                                          renderBackdrop={[Function]}
                                          restoreFocus={true}
                                          show={false}
                                          transition={[Function]}
                                        />
                                      </Modal>
                                    </Modal>
                                  </BootstrapModalWrapper>
                                   
                                  <DropdownButton
                                    bsSize="small"
                                    id="more-actions-4"
                                    pullRight={true}
                                    title="More Actions"
                                  >
                                    <DropdownButton
                                      bsSize="small"
                                      className="c12"
                                      id="more-actions-4"
                                      pullRight={true}
                                      title="More Actions"
                                    >
                                      <ForwardRef
                                        bsSize="small"
                                        id="more-actions-4"
                                        pullRight={true}
                                      >
                                        <Uncontrolled(Dropdown)
                                          bsSize="small"
                                          id="more-actions-4"
                                          innerRef={null}
                                          pullRight={true}
                                        >
                                          <Dropdown
                                            bsClass="dropdown"
                                            bsSize="small"
                                            componentClass={[Function]}
                                            id="more-actions-4"
                                            onToggle={[Function]}
                                            pullRight={true}
                                          >
                                            <ButtonGroup
                                              block={false}
                                              bsClass="btn-group"
                                              bsSize="small"
                                              className="dropdown"
                                              justified={false}
                                              vertical={false}
                                            >
                                              <div
                                                className="dropdown btn-group btn-group-sm"
                                              >
                                                <DropdownToggle
                                                  bsClass="dropdown-toggle"
                                                  bsRole="toggle"
                                                  bsSize="small"
                                                  className="c12"
                                                  id="more-actions-4"
                                                  key=".0"
                                                  onClick={[Function]}
                                                  onKeyDown={[Function]}
                                                  open={false}
                                                  useAnchor={false}
                                                >
                                                  <Button
                                                    active={false}
                                                    aria-expanded={false}
                                                    aria-haspopup={true}
                                                    block={false}
                                                    bsClass="btn"
                                                    bsSize="small"
                                                    bsStyle="default"
                                                    className="c12 dropdown-toggle"
                                                    disabled={false}
                                                    id="more-actions-4"
                                                    onClick={[Function]}
                                                    onKeyDown={[Function]}
                                                    role="button"
                                                  >
                                                    <button
                                                      aria-expanded={false}
                                                      aria-haspopup={true}
                                                      className="c12 dropdown-toggle btn btn-sm btn-default"
                                                      disabled={false}
                                                      id="more-actions-4"
                                                      onClick={[Function]}
                                                      onKeyDown={[Function]}
                                                      role="button"
                                                      type="button"
                                                    >
                                                      More Actions
                                                       
                                                      <span
                                                        className="caret"
                                                      />
                                                    </button>
                                                  </Button>
                                                </DropdownToggle>
                                                <DropdownMenu
                                                  bsClass="dropdown-menu"
                                                  bsRole="menu"
                                                  key=".1"
                                                  labelledBy="more-actions-4"
                                                  onClose={[Function]}
                                                  onSelect={[Function]}
                                                  pullRight={true}
                                                >
                                                  <RootCloseWrapper
                                                    disabled={true}
                                                    event="click"
                                                    onRootClose={[Function]}
                                                  >
                                                    <ul
                                                      aria-labelledby="more-actions-4"
                                                      className="dropdown-menu dropdown-menu-right"
                                                      role="menu"
                                                    >
                                                      <LinkContainer
                                                        action="push"
                                                        key=".0"
                                                        onKeyDown={[Function]}
                                                        onSelect={[Function]}
                                                        onlyActiveOnIndex={false}
                                                        to="/system/contentpacks/4"
                                                      >
                                                        <MenuItem
                                                          action="push"
                                                          bsClass="dropdown"
                                                          disabled={false}
                                                          divider={false}
                                                          header={false}
                                                          onClick={[Function]}
                                                          onKeyDown={[Function]}
                                                          onSelect={[Function]}
                                                        >
                                                          <li
                                                            className=""
                                                            role="presentation"
                                                          >
                                                            <SafeAnchor
                                                              action="push"
                                                              componentClass="a"
                                                              onClick={[Function]}
                                                              onKeyDown={[Function]}
                                                              role="menuitem"
                                                              tabIndex="-1"
                                                            >
                                                              <a
                                                                action="push"
                                                                href="#"
                                                                onClick={[Function]}
                                                                onKeyDown={[Function]}
                                                                role="menuitem"
                                                                tabIndex="-1"
                                                              >
                                                                Show
                                                              </a>
                                                            </SafeAnchor>
                                                          </li>
                                                        </MenuItem>
                                                      </LinkContainer>
                                                      <LinkContainer
                                                        action="push"
                                                        key=".1"
                                                        onKeyDown={[Function]}
                                                        onSelect={[Function]}
                                                        onlyActiveOnIndex={false}
                                                        to="/system/contentpacks/4/1/edit"
                                                      >
                                                        <MenuItem
                                                          action="push"
                                                          bsClass="dropdown"
                                                          disabled={false}
                                                          divider={false}
                                                          header={false}
                                                          onClick={[Function]}
                                                          onKeyDown={[Function]}
                                                          onSelect={[Function]}
                                                        >
                                                          <li
                                                            className=""
                                                            role="presentation"
                                                          >
                                                            <SafeAnchor
                                                              action="push"
                                                              componentClass="a"
                                                              onClick={[Function]}
                                                              onKeyDown={[Function]}
                                                              role="menuitem"
                                                              tabIndex="-1"
                                                            >
                                                              <a
                                                                action="push"
                                                                href="#"
                                                                onClick={[Function]}
                                                                onKeyDown={[Function]}
                                                                role="menuitem"
                                                                tabIndex="-1"
                                                              >
                                                                Create New Version
                                                              </a>
                                                            </SafeAnchor>
                                                          </li>
                                                        </MenuItem>
                                                      </LinkContainer>
                                                      <MenuItem
                                                        bsClass="dropdown"
                                                        disabled={false}
                                                        divider={false}
                                                        header={false}
                                                        key=".2"
                                                        onKeyDown={[Function]}
                                                        onSelect={[Function]}
                                                      >
                                                        <li
                                                          className=""
                                                          role="presentation"
                                                        >
                                                          <SafeAnchor
                                                            componentClass="a"
                                                            onClick={[Function]}
                                                            onKeyDown={[Function]}
                                                            role="menuitem"
                                                            tabIndex="-1"
                                                          >
                                                            <a
                                                              href="#"
                                                              onClick={[Function]}
                                                              onKeyDown={[Function]}
                                                              role="menuitem"
                                                              tabIndex="-1"
                                                            >
                                                              Download
                                                            </a>
                                                          </SafeAnchor>
                                                        </li>
                                                      </MenuItem>
                                                      <MenuItem
                                                        bsClass="dropdown"
                                                        disabled={false}
                                                        divider={true}
                                                        header={false}
                                                        key=".3"
                                                        onKeyDown={[Function]}
                                                        onSelect={[Function]}
                                                      >
                                                        <li
                                                          className="divider"
                                                          onKeyDown={[Function]}
                                                          role="separator"
                                                        />
                                                      </MenuItem>
                                                      <MenuItem
                                                        bsClass="dropdown"
                                                        disabled={false}
                                                        divider={false}
                                                        header={false}
                                                        key=".4"
                                                        onKeyDown={[Function]}
                                                        onSelect={[Function]}
                                                      >
                                                        <li
                                                          className=""
                                                          role="presentation"
                                                        >
                                                          <SafeAnchor
                                                            componentClass="a"
                                                            onClick={[Function]}
                                                            onKeyDown={[Function]}
                                                            role="menuitem"
                                                            tabIndex="-1"
                                                          >
                                                            <a
                                                              href="#"
                                                              onClick={[Function]}
                                                              onKeyDown={[Function]}
                                                              role="menuitem"
                                                              tabIndex="-1"
                                                            >
                                                              Delete All Versions
                                                            </a>
                                                          </SafeAnchor>
                                                        </li>
                                                      </MenuItem>
                                                    </ul>
                                                  </RootCloseWrapper>
                                                </DropdownMenu>
                                              </div>
                                            </ButtonGroup>
                                          </Dropdown>
                                        </Uncontrolled(Dropdown)>
                                      </ForwardRef>
                                    </DropdownButton>
                                  </DropdownButton>
                                  <ContentPackDownloadControl
                                    contentPackId="4"
                                    revision={1}
                                  >
                                    <BootstrapModalWrapper
                                      backdrop="static"
                                      bsSize="large"
                                      onClose={[Function]}
                                      onHide={[Function]}
                                      onOpen={[Function]}
                                      showModal={false}
                                    >
                                      <Modal
                                        backdrop="static"
                                        bsSize="large"
                                        onHide={[Function]}
                                        show={false}
                                      >
                                        <Modal
                                          animation={true}
                                          autoFocus={true}
                                          backdrop="static"
                                          bsClass="modal"
                                          bsSize="large"
                                          className="c11"
                                          dialogComponentClass={[Function]}
                                          enforceFocus={true}
                                          keyboard={true}
                                          manager={
                                            ModalManager {
                                              "add": [Function],
                                              "containers": Array [],
                                              "data": Array [],
                                              "handleContainerOverflow": true,
                                              "hideSiblingNodes": true,
                                              "isTopModal": [Function],
                                              "modals": Array [],
                                              "remove": [Function],
                                            }
                                          }
                                          onHide={[Function]}
                                          renderBackdrop={[Function]}
                                          restoreFocus={true}
                                          show={false}
                                        >
                                          <Modal
                                            autoFocus={true}
                                            backdrop="static"
                                            backdropClassName="modal-backdrop"
                                            backdropTransition={[Function]}
                                            containerClassName="modal-open"
                                            enforceFocus={true}
                                            keyboard={true}
                                            manager={
                                              ModalManager {
                                                "add": [Function],
                                                "containers": Array [],
                                                "data": Array [],
                                                "handleContainerOverflow": true,
                                                "hideSiblingNodes": true,
                                                "isTopModal": [Function],
                                                "modals": Array [],
                                                "remove": [Function],
                                              }
                                            }
                                            onEntering={[Function]}
                                            onExited={[Function]}
                                            onHide={[Function]}
                                            onMouseUp={[Function]}
                                            renderBackdrop={[Function]}
                                            restoreFocus={true}
                                            show={false}
                                            transition={[Function]}
                                          />
                                        </Modal>
                                      </Modal>
                                    </BootstrapModalWrapper>
                                  </ContentPackDownloadControl>
                                </div>
                              </Col>
                            </div>
                          </Row>
                        </Row>
                        <Row
                          className="row-sm content-packs-summary"
                        >
                          <Row
                            bsClass="row"
                            className="c0 row-sm content-packs-summary"
                            componentClass="div"
                          >
                            <div
                              className="c0 row-sm content-packs-summary row"
                            >
                              <Col
                                bsClass="col"
                                componentClass="div"
                                md={12}
                              >
                                <div
                                  className="col-md-12"
                                >
                                  A crypted backup over ssh.
                                   
                                </div>
                              </Col>
                            </div>
                          </Row>
                        </Row>
                      </span>
                    </ListGroupItem>
                  </ListGroupItem__StyledListGroupItem>
                </ForwardRef>
              </ControlledTableListItem>
              <ControlledTableListItem
                key="5"
              >
                <ForwardRef>
                  <ListGroupItem__StyledListGroupItem>
                    <ListGroupItem
                      bsClass="list-group-item"
                      className="c8"
                      listItem={false}
                    >
                      <span
                        className="c8 list-group-item"
                      >
                        <Row
                          className="row-sm"
                        >
                          <Row
                            bsClass="row"
                            className="c0 row-sm"
                            componentClass="div"
                          >
                            <div
                              className="c0 row-sm row"
                            >
                              <Col
                                bsClass="col"
                                componentClass="div"
                                md={9}
                              >
                                <div
                                  className="col-md-9"
                                >
                                  <h3>
                                    <Link
                                      onlyActiveOnIndex={false}
                                      style={Object {}}
                                      to="/system/contentpacks/5"
                                    >
                                      <a
                                        onClick={[Function]}
                                        style={Object {}}
                                      />
                                    </Link>
                                     
                                    <small>
                                      Latest Version: 
                                      1
                                       
                                      <ContentPackStatus
                                        contentPackId="5"
                                        states={Array []}
                                      >
                                        <span />
                                      </ContentPackStatus>
                                       
                                    </small>
                                  </h3>
                                </div>
                              </Col>
                              <Col
                                bsClass="col"
                                className="text-right"
                                componentClass="div"
                                md={3}
                              >
                                <div
                                  className="text-right col-md-3"
                                >
                                   
                                  <Button
                                    bsSize="small"
                                    bsStyle="info"
                                    onClick={[Function]}
                                  >
                                    <Button
                                      active={false}
                                      block={false}
                                      bsClass="btn"
                                      bsSize="small"
                                      bsStyle="info"
                                      className="c3"
                                      disabled={false}
                                      onClick={[Function]}
                                    >
                                      <button
                                        className="c3 btn btn-sm btn-info"
                                        disabled={false}
                                        onClick={[Function]}
                                        type="button"
                                      >
                                        Install
                                      </button>
                                    </Button>
                                  </Button>
                                  <BootstrapModalWrapper
                                    backdrop="static"
                                    bsSize="large"
                                    onClose={[Function]}
                                    onHide={[Function]}
                                    onOpen={[Function]}
                                    showModal={false}
                                  >
                                    <Modal
                                      backdrop="static"
                                      bsSize="large"
                                      onHide={[Function]}
                                      show={false}
                                    >
                                      <Modal
                                        animation={true}
                                        autoFocus={true}
                                        backdrop="static"
                                        bsClass="modal"
                                        bsSize="large"
                                        className="c11"
                                        dialogComponentClass={[Function]}
                                        enforceFocus={true}
                                        keyboard={true}
                                        manager={
                                          ModalManager {
                                            "add": [Function],
                                            "containers": Array [],
                                            "data": Array [],
                                            "handleContainerOverflow": true,
                                            "hideSiblingNodes": true,
                                            "isTopModal": [Function],
                                            "modals": Array [],
                                            "remove": [Function],
                                          }
                                        }
                                        onHide={[Function]}
                                        renderBackdrop={[Function]}
                                        restoreFocus={true}
                                        show={false}
                                      >
                                        <Modal
                                          autoFocus={true}
                                          backdrop="static"
                                          backdropClassName="modal-backdrop"
                                          backdropTransition={[Function]}
                                          containerClassName="modal-open"
                                          enforceFocus={true}
                                          keyboard={true}
                                          manager={
                                            ModalManager {
                                              "add": [Function],
                                              "containers": Array [],
                                              "data": Array [],
                                              "handleContainerOverflow": true,
                                              "hideSiblingNodes": true,
                                              "isTopModal": [Function],
                                              "modals": Array [],
                                              "remove": [Function],
                                            }
                                          }
                                          onEntering={[Function]}
                                          onExited={[Function]}
                                          onHide={[Function]}
                                          onMouseUp={[Function]}
                                          renderBackdrop={[Function]}
                                          restoreFocus={true}
                                          show={false}
                                          transition={[Function]}
                                        />
                                      </Modal>
                                    </Modal>
                                  </BootstrapModalWrapper>
                                   
                                  <DropdownButton
                                    bsSize="small"
                                    id="more-actions-5"
                                    pullRight={true}
                                    title="More Actions"
                                  >
                                    <DropdownButton
                                      bsSize="small"
                                      className="c12"
                                      id="more-actions-5"
                                      pullRight={true}
                                      title="More Actions"
                                    >
                                      <ForwardRef
                                        bsSize="small"
                                        id="more-actions-5"
                                        pullRight={true}
                                      >
                                        <Uncontrolled(Dropdown)
                                          bsSize="small"
                                          id="more-actions-5"
                                          innerRef={null}
                                          pullRight={true}
                                        >
                                          <Dropdown
                                            bsClass="dropdown"
                                            bsSize="small"
                                            componentClass={[Function]}
                                            id="more-actions-5"
                                            onToggle={[Function]}
                                            pullRight={true}
                                          >
                                            <ButtonGroup
                                              block={false}
                                              bsClass="btn-group"
                                              bsSize="small"
                                              className="dropdown"
                                              justified={false}
                                              vertical={false}
                                            >
                                              <div
                                                className="dropdown btn-group btn-group-sm"
                                              >
                                                <DropdownToggle
                                                  bsClass="dropdown-toggle"
                                                  bsRole="toggle"
                                                  bsSize="small"
                                                  className="c12"
                                                  id="more-actions-5"
                                                  key=".0"
                                                  onClick={[Function]}
                                                  onKeyDown={[Function]}
                                                  open={false}
                                                  useAnchor={false}
                                                >
                                                  <Button
                                                    active={false}
                                                    aria-expanded={false}
                                                    aria-haspopup={true}
                                                    block={false}
                                                    bsClass="btn"
                                                    bsSize="small"
                                                    bsStyle="default"
                                                    className="c12 dropdown-toggle"
                                                    disabled={false}
                                                    id="more-actions-5"
                                                    onClick={[Function]}
                                                    onKeyDown={[Function]}
                                                    role="button"
                                                  >
                                                    <button
                                                      aria-expanded={false}
                                                      aria-haspopup={true}
                                                      className="c12 dropdown-toggle btn btn-sm btn-default"
                                                      disabled={false}
                                                      id="more-actions-5"
                                                      onClick={[Function]}
                                                      onKeyDown={[Function]}
                                                      role="button"
                                                      type="button"
                                                    >
                                                      More Actions
                                                       
                                                      <span
                                                        className="caret"
                                                      />
                                                    </button>
                                                  </Button>
                                                </DropdownToggle>
                                                <DropdownMenu
                                                  bsClass="dropdown-menu"
                                                  bsRole="menu"
                                                  key=".1"
                                                  labelledBy="more-actions-5"
                                                  onClose={[Function]}
                                                  onSelect={[Function]}
                                                  pullRight={true}
                                                >
                                                  <RootCloseWrapper
                                                    disabled={true}
                                                    event="click"
                                                    onRootClose={[Function]}
                                                  >
                                                    <ul
                                                      aria-labelledby="more-actions-5"
                                                      className="dropdown-menu dropdown-menu-right"
                                                      role="menu"
                                                    >
                                                      <LinkContainer
                                                        action="push"
                                                        key=".0"
                                                        onKeyDown={[Function]}
                                                        onSelect={[Function]}
                                                        onlyActiveOnIndex={false}
                                                        to="/system/contentpacks/5"
                                                      >
                                                        <MenuItem
                                                          action="push"
                                                          bsClass="dropdown"
                                                          disabled={false}
                                                          divider={false}
                                                          header={false}
                                                          onClick={[Function]}
                                                          onKeyDown={[Function]}
                                                          onSelect={[Function]}
                                                        >
                                                          <li
                                                            className=""
                                                            role="presentation"
                                                          >
                                                            <SafeAnchor
                                                              action="push"
                                                              componentClass="a"
                                                              onClick={[Function]}
                                                              onKeyDown={[Function]}
                                                              role="menuitem"
                                                              tabIndex="-1"
                                                            >
                                                              <a
                                                                action="push"
                                                                href="#"
                                                                onClick={[Function]}
                                                                onKeyDown={[Function]}
                                                                role="menuitem"
                                                                tabIndex="-1"
                                                              >
                                                                Show
                                                              </a>
                                                            </SafeAnchor>
                                                          </li>
                                                        </MenuItem>
                                                      </LinkContainer>
                                                      <LinkContainer
                                                        action="push"
                                                        key=".1"
                                                        onKeyDown={[Function]}
                                                        onSelect={[Function]}
                                                        onlyActiveOnIndex={false}
                                                        to="/system/contentpacks/5/1/edit"
                                                      >
                                                        <MenuItem
                                                          action="push"
                                                          bsClass="dropdown"
                                                          disabled={false}
                                                          divider={false}
                                                          header={false}
                                                          onClick={[Function]}
                                                          onKeyDown={[Function]}
                                                          onSelect={[Function]}
                                                        >
                                                          <li
                                                            className=""
                                                            role="presentation"
                                                          >
                                                            <SafeAnchor
                                                              action="push"
                                                              componentClass="a"
                                                              onClick={[Function]}
                                                              onKeyDown={[Function]}
                                                              role="menuitem"
                                                              tabIndex="-1"
                                                            >
                                                              <a
                                                                action="push"
                                                                href="#"
                                                                onClick={[Function]}
                                                                onKeyDown={[Function]}
                                                                role="menuitem"
                                                                tabIndex="-1"
                                                              >
                                                                Create New Version
                                                              </a>
                                                            </SafeAnchor>
                                                          </li>
                                                        </MenuItem>
                                                      </LinkContainer>
                                                      <MenuItem
                                                        bsClass="dropdown"
                                                        disabled={false}
                                                        divider={false}
                                                        header={false}
                                                        key=".2"
                                                        onKeyDown={[Function]}
                                                        onSelect={[Function]}
                                                      >
                                                        <li
                                                          className=""
                                                          role="presentation"
                                                        >
                                                          <SafeAnchor
                                                            componentClass="a"
                                                            onClick={[Function]}
                                                            onKeyDown={[Function]}
                                                            role="menuitem"
                                                            tabIndex="-1"
                                                          >
                                                            <a
                                                              href="#"
                                                              onClick={[Function]}
                                                              onKeyDown={[Function]}
                                                              role="menuitem"
                                                              tabIndex="-1"
                                                            >
                                                              Download
                                                            </a>
                                                          </SafeAnchor>
                                                        </li>
                                                      </MenuItem>
                                                      <MenuItem
                                                        bsClass="dropdown"
                                                        disabled={false}
                                                        divider={true}
                                                        header={false}
                                                        key=".3"
                                                        onKeyDown={[Function]}
                                                        onSelect={[Function]}
                                                      >
                                                        <li
                                                          className="divider"
                                                          onKeyDown={[Function]}
                                                          role="separator"
                                                        />
                                                      </MenuItem>
                                                      <MenuItem
                                                        bsClass="dropdown"
                                                        disabled={false}
                                                        divider={false}
                                                        header={false}
                                                        key=".4"
                                                        onKeyDown={[Function]}
                                                        onSelect={[Function]}
                                                      >
                                                        <li
                                                          className=""
                                                          role="presentation"
                                                        >
                                                          <SafeAnchor
                                                            componentClass="a"
                                                            onClick={[Function]}
                                                            onKeyDown={[Function]}
                                                            role="menuitem"
                                                            tabIndex="-1"
                                                          >
                                                            <a
                                                              href="#"
                                                              onClick={[Function]}
                                                              onKeyDown={[Function]}
                                                              role="menuitem"
                                                              tabIndex="-1"
                                                            >
                                                              Delete All Versions
                                                            </a>
                                                          </SafeAnchor>
                                                        </li>
                                                      </MenuItem>
                                                    </ul>
                                                  </RootCloseWrapper>
                                                </DropdownMenu>
                                              </div>
                                            </ButtonGroup>
                                          </Dropdown>
                                        </Uncontrolled(Dropdown)>
                                      </ForwardRef>
                                    </DropdownButton>
                                  </DropdownButton>
                                  <ContentPackDownloadControl
                                    contentPackId="5"
                                    revision={1}
                                  >
                                    <BootstrapModalWrapper
                                      backdrop="static"
                                      bsSize="large"
                                      onClose={[Function]}
                                      onHide={[Function]}
                                      onOpen={[Function]}
                                      showModal={false}
                                    >
                                      <Modal
                                        backdrop="static"
                                        bsSize="large"
                                        onHide={[Function]}
                                        show={false}
                                      >
                                        <Modal
                                          animation={true}
                                          autoFocus={true}
                                          backdrop="static"
                                          bsClass="modal"
                                          bsSize="large"
                                          className="c11"
                                          dialogComponentClass={[Function]}
                                          enforceFocus={true}
                                          keyboard={true}
                                          manager={
                                            ModalManager {
                                              "add": [Function],
                                              "containers": Array [],
                                              "data": Array [],
                                              "handleContainerOverflow": true,
                                              "hideSiblingNodes": true,
                                              "isTopModal": [Function],
                                              "modals": Array [],
                                              "remove": [Function],
                                            }
                                          }
                                          onHide={[Function]}
                                          renderBackdrop={[Function]}
                                          restoreFocus={true}
                                          show={false}
                                        >
                                          <Modal
                                            autoFocus={true}
                                            backdrop="static"
                                            backdropClassName="modal-backdrop"
                                            backdropTransition={[Function]}
                                            containerClassName="modal-open"
                                            enforceFocus={true}
                                            keyboard={true}
                                            manager={
                                              ModalManager {
                                                "add": [Function],
                                                "containers": Array [],
                                                "data": Array [],
                                                "handleContainerOverflow": true,
                                                "hideSiblingNodes": true,
                                                "isTopModal": [Function],
                                                "modals": Array [],
                                                "remove": [Function],
                                              }
                                            }
                                            onEntering={[Function]}
                                            onExited={[Function]}
                                            onHide={[Function]}
                                            onMouseUp={[Function]}
                                            renderBackdrop={[Function]}
                                            restoreFocus={true}
                                            show={false}
                                            transition={[Function]}
                                          />
                                        </Modal>
                                      </Modal>
                                    </BootstrapModalWrapper>
                                  </ContentPackDownloadControl>
                                </div>
                              </Col>
                            </div>
                          </Row>
                        </Row>
                        <Row
                          className="row-sm content-packs-summary"
                        >
                          <Row
                            bsClass="row"
                            className="c0 row-sm content-packs-summary"
                            componentClass="div"
                          >
                            <div
                              className="c0 row-sm content-packs-summary row"
                            >
                              <Col
                                bsClass="col"
                                componentClass="div"
                                md={12}
                              >
                                <div
                                  className="col-md-12"
                                >
                                  Fast but insecure backup
                                   
                                </div>
                              </Col>
                            </div>
                          </Row>
                        </Row>
                      </span>
                    </ListGroupItem>
                  </ListGroupItem__StyledListGroupItem>
                </ForwardRef>
              </ControlledTableListItem>
              <ControlledTableListItem
                key="6"
              >
                <ForwardRef>
                  <ListGroupItem__StyledListGroupItem>
                    <ListGroupItem
                      bsClass="list-group-item"
                      className="c8"
                      listItem={false}
                    >
                      <span
                        className="c8 list-group-item"
                      >
                        <Row
                          className="row-sm"
                        >
                          <Row
                            bsClass="row"
                            className="c0 row-sm"
                            componentClass="div"
                          >
                            <div
                              className="c0 row-sm row"
                            >
                              <Col
                                bsClass="col"
                                componentClass="div"
                                md={9}
                              >
                                <div
                                  className="col-md-9"
                                >
                                  <h3>
                                    <Link
                                      onlyActiveOnIndex={false}
                                      style={Object {}}
                                      to="/system/contentpacks/6"
                                    >
                                      <a
                                        onClick={[Function]}
                                        style={Object {}}
                                      />
                                    </Link>
                                     
                                    <small>
                                      Latest Version: 
                                      1
                                       
                                      <ContentPackStatus
                                        contentPackId="6"
                                        states={Array []}
                                      >
                                        <span />
                                      </ContentPackStatus>
                                       
                                    </small>
                                  </h3>
                                </div>
                              </Col>
                              <Col
                                bsClass="col"
                                className="text-right"
                                componentClass="div"
                                md={3}
                              >
                                <div
                                  className="text-right col-md-3"
                                >
                                   
                                  <Button
                                    bsSize="small"
                                    bsStyle="info"
                                    onClick={[Function]}
                                  >
                                    <Button
                                      active={false}
                                      block={false}
                                      bsClass="btn"
                                      bsSize="small"
                                      bsStyle="info"
                                      className="c3"
                                      disabled={false}
                                      onClick={[Function]}
                                    >
                                      <button
                                        className="c3 btn btn-sm btn-info"
                                        disabled={false}
                                        onClick={[Function]}
                                        type="button"
                                      >
                                        Install
                                      </button>
                                    </Button>
                                  </Button>
                                  <BootstrapModalWrapper
                                    backdrop="static"
                                    bsSize="large"
                                    onClose={[Function]}
                                    onHide={[Function]}
                                    onOpen={[Function]}
                                    showModal={false}
                                  >
                                    <Modal
                                      backdrop="static"
                                      bsSize="large"
                                      onHide={[Function]}
                                      show={false}
                                    >
                                      <Modal
                                        animation={true}
                                        autoFocus={true}
                                        backdrop="static"
                                        bsClass="modal"
                                        bsSize="large"
                                        className="c11"
                                        dialogComponentClass={[Function]}
                                        enforceFocus={true}
                                        keyboard={true}
                                        manager={
                                          ModalManager {
                                            "add": [Function],
                                            "containers": Array [],
                                            "data": Array [],
                                            "handleContainerOverflow": true,
                                            "hideSiblingNodes": true,
                                            "isTopModal": [Function],
                                            "modals": Array [],
                                            "remove": [Function],
                                          }
                                        }
                                        onHide={[Function]}
                                        renderBackdrop={[Function]}
                                        restoreFocus={true}
                                        show={false}
                                      >
                                        <Modal
                                          autoFocus={true}
                                          backdrop="static"
                                          backdropClassName="modal-backdrop"
                                          backdropTransition={[Function]}
                                          containerClassName="modal-open"
                                          enforceFocus={true}
                                          keyboard={true}
                                          manager={
                                            ModalManager {
                                              "add": [Function],
                                              "containers": Array [],
                                              "data": Array [],
                                              "handleContainerOverflow": true,
                                              "hideSiblingNodes": true,
                                              "isTopModal": [Function],
                                              "modals": Array [],
                                              "remove": [Function],
                                            }
                                          }
                                          onEntering={[Function]}
                                          onExited={[Function]}
                                          onHide={[Function]}
                                          onMouseUp={[Function]}
                                          renderBackdrop={[Function]}
                                          restoreFocus={true}
                                          show={false}
                                          transition={[Function]}
                                        />
                                      </Modal>
                                    </Modal>
                                  </BootstrapModalWrapper>
                                   
                                  <DropdownButton
                                    bsSize="small"
                                    id="more-actions-6"
                                    pullRight={true}
                                    title="More Actions"
                                  >
                                    <DropdownButton
                                      bsSize="small"
                                      className="c12"
                                      id="more-actions-6"
                                      pullRight={true}
                                      title="More Actions"
                                    >
                                      <ForwardRef
                                        bsSize="small"
                                        id="more-actions-6"
                                        pullRight={true}
                                      >
                                        <Uncontrolled(Dropdown)
                                          bsSize="small"
                                          id="more-actions-6"
                                          innerRef={null}
                                          pullRight={true}
                                        >
                                          <Dropdown
                                            bsClass="dropdown"
                                            bsSize="small"
                                            componentClass={[Function]}
                                            id="more-actions-6"
                                            onToggle={[Function]}
                                            pullRight={true}
                                          >
                                            <ButtonGroup
                                              block={false}
                                              bsClass="btn-group"
                                              bsSize="small"
                                              className="dropdown"
                                              justified={false}
                                              vertical={false}
                                            >
                                              <div
                                                className="dropdown btn-group btn-group-sm"
                                              >
                                                <DropdownToggle
                                                  bsClass="dropdown-toggle"
                                                  bsRole="toggle"
                                                  bsSize="small"
                                                  className="c12"
                                                  id="more-actions-6"
                                                  key=".0"
                                                  onClick={[Function]}
                                                  onKeyDown={[Function]}
                                                  open={false}
                                                  useAnchor={false}
                                                >
                                                  <Button
                                                    active={false}
                                                    aria-expanded={false}
                                                    aria-haspopup={true}
                                                    block={false}
                                                    bsClass="btn"
                                                    bsSize="small"
                                                    bsStyle="default"
                                                    className="c12 dropdown-toggle"
                                                    disabled={false}
                                                    id="more-actions-6"
                                                    onClick={[Function]}
                                                    onKeyDown={[Function]}
                                                    role="button"
                                                  >
                                                    <button
                                                      aria-expanded={false}
                                                      aria-haspopup={true}
                                                      className="c12 dropdown-toggle btn btn-sm btn-default"
                                                      disabled={false}
                                                      id="more-actions-6"
                                                      onClick={[Function]}
                                                      onKeyDown={[Function]}
                                                      role="button"
                                                      type="button"
                                                    >
                                                      More Actions
                                                       
                                                      <span
                                                        className="caret"
                                                      />
                                                    </button>
                                                  </Button>
                                                </DropdownToggle>
                                                <DropdownMenu
                                                  bsClass="dropdown-menu"
                                                  bsRole="menu"
                                                  key=".1"
                                                  labelledBy="more-actions-6"
                                                  onClose={[Function]}
                                                  onSelect={[Function]}
                                                  pullRight={true}
                                                >
                                                  <RootCloseWrapper
                                                    disabled={true}
                                                    event="click"
                                                    onRootClose={[Function]}
                                                  >
                                                    <ul
                                                      aria-labelledby="more-actions-6"
                                                      className="dropdown-menu dropdown-menu-right"
                                                      role="menu"
                                                    >
                                                      <LinkContainer
                                                        action="push"
                                                        key=".0"
                                                        onKeyDown={[Function]}
                                                        onSelect={[Function]}
                                                        onlyActiveOnIndex={false}
                                                        to="/system/contentpacks/6"
                                                      >
                                                        <MenuItem
                                                          action="push"
                                                          bsClass="dropdown"
                                                          disabled={false}
                                                          divider={false}
                                                          header={false}
                                                          onClick={[Function]}
                                                          onKeyDown={[Function]}
                                                          onSelect={[Function]}
                                                        >
                                                          <li
                                                            className=""
                                                            role="presentation"
                                                          >
                                                            <SafeAnchor
                                                              action="push"
                                                              componentClass="a"
                                                              onClick={[Function]}
                                                              onKeyDown={[Function]}
                                                              role="menuitem"
                                                              tabIndex="-1"
                                                            >
                                                              <a
                                                                action="push"
                                                                href="#"
                                                                onClick={[Function]}
                                                                onKeyDown={[Function]}
                                                                role="menuitem"
                                                                tabIndex="-1"
                                                              >
                                                                Show
                                                              </a>
                                                            </SafeAnchor>
                                                          </li>
                                                        </MenuItem>
                                                      </LinkContainer>
                                                      <LinkContainer
                                                        action="push"
                                                        key=".1"
                                                        onKeyDown={[Function]}
                                                        onSelect={[Function]}
                                                        onlyActiveOnIndex={false}
                                                        to="/system/contentpacks/6/1/edit"
                                                      >
                                                        <MenuItem
                                                          action="push"
                                                          bsClass="dropdown"
                                                          disabled={false}
                                                          divider={false}
                                                          header={false}
                                                          onClick={[Function]}
                                                          onKeyDown={[Function]}
                                                          onSelect={[Function]}
                                                        >
                                                          <li
                                                            className=""
                                                            role="presentation"
                                                          >
                                                            <SafeAnchor
                                                              action="push"
                                                              componentClass="a"
                                                              onClick={[Function]}
                                                              onKeyDown={[Function]}
                                                              role="menuitem"
                                                              tabIndex="-1"
                                                            >
                                                              <a
                                                                action="push"
                                                                href="#"
                                                                onClick={[Function]}
                                                                onKeyDown={[Function]}
                                                                role="menuitem"
                                                                tabIndex="-1"
                                                              >
                                                                Create New Version
                                                              </a>
                                                            </SafeAnchor>
                                                          </li>
                                                        </MenuItem>
                                                      </LinkContainer>
                                                      <MenuItem
                                                        bsClass="dropdown"
                                                        disabled={false}
                                                        divider={false}
                                                        header={false}
                                                        key=".2"
                                                        onKeyDown={[Function]}
                                                        onSelect={[Function]}
                                                      >
                                                        <li
                                                          className=""
                                                          role="presentation"
                                                        >
                                                          <SafeAnchor
                                                            componentClass="a"
                                                            onClick={[Function]}
                                                            onKeyDown={[Function]}
                                                            role="menuitem"
                                                            tabIndex="-1"
                                                          >
                                                            <a
                                                              href="#"
                                                              onClick={[Function]}
                                                              onKeyDown={[Function]}
                                                              role="menuitem"
                                                              tabIndex="-1"
                                                            >
                                                              Download
                                                            </a>
                                                          </SafeAnchor>
                                                        </li>
                                                      </MenuItem>
                                                      <MenuItem
                                                        bsClass="dropdown"
                                                        disabled={false}
                                                        divider={true}
                                                        header={false}
                                                        key=".3"
                                                        onKeyDown={[Function]}
                                                        onSelect={[Function]}
                                                      >
                                                        <li
                                                          className="divider"
                                                          onKeyDown={[Function]}
                                                          role="separator"
                                                        />
                                                      </MenuItem>
                                                      <MenuItem
                                                        bsClass="dropdown"
                                                        disabled={false}
                                                        divider={false}
                                                        header={false}
                                                        key=".4"
                                                        onKeyDown={[Function]}
                                                        onSelect={[Function]}
                                                      >
                                                        <li
                                                          className=""
                                                          role="presentation"
                                                        >
                                                          <SafeAnchor
                                                            componentClass="a"
                                                            onClick={[Function]}
                                                            onKeyDown={[Function]}
                                                            role="menuitem"
                                                            tabIndex="-1"
                                                          >
                                                            <a
                                                              href="#"
                                                              onClick={[Function]}
                                                              onKeyDown={[Function]}
                                                              role="menuitem"
                                                              tabIndex="-1"
                                                            >
                                                              Delete All Versions
                                                            </a>
                                                          </SafeAnchor>
                                                        </li>
                                                      </MenuItem>
                                                    </ul>
                                                  </RootCloseWrapper>
                                                </DropdownMenu>
                                              </div>
                                            </ButtonGroup>
                                          </Dropdown>
                                        </Uncontrolled(Dropdown)>
                                      </ForwardRef>
                                    </DropdownButton>
                                  </DropdownButton>
                                  <ContentPackDownloadControl
                                    contentPackId="6"
                                    revision={1}
                                  >
                                    <BootstrapModalWrapper
                                      backdrop="static"
                                      bsSize="large"
                                      onClose={[Function]}
                                      onHide={[Function]}
                                      onOpen={[Function]}
                                      showModal={false}
                                    >
                                      <Modal
                                        backdrop="static"
                                        bsSize="large"
                                        onHide={[Function]}
                                        show={false}
                                      >
                                        <Modal
                                          animation={true}
                                          autoFocus={true}
                                          backdrop="static"
                                          bsClass="modal"
                                          bsSize="large"
                                          className="c11"
                                          dialogComponentClass={[Function]}
                                          enforceFocus={true}
                                          keyboard={true}
                                          manager={
                                            ModalManager {
                                              "add": [Function],
                                              "containers": Array [],
                                              "data": Array [],
                                              "handleContainerOverflow": true,
                                              "hideSiblingNodes": true,
                                              "isTopModal": [Function],
                                              "modals": Array [],
                                              "remove": [Function],
                                            }
                                          }
                                          onHide={[Function]}
                                          renderBackdrop={[Function]}
                                          restoreFocus={true}
                                          show={false}
                                        >
                                          <Modal
                                            autoFocus={true}
                                            backdrop="static"
                                            backdropClassName="modal-backdrop"
                                            backdropTransition={[Function]}
                                            containerClassName="modal-open"
                                            enforceFocus={true}
                                            keyboard={true}
                                            manager={
                                              ModalManager {
                                                "add": [Function],
                                                "containers": Array [],
                                                "data": Array [],
                                                "handleContainerOverflow": true,
                                                "hideSiblingNodes": true,
                                                "isTopModal": [Function],
                                                "modals": Array [],
                                                "remove": [Function],
                                              }
                                            }
                                            onEntering={[Function]}
                                            onExited={[Function]}
                                            onHide={[Function]}
                                            onMouseUp={[Function]}
                                            renderBackdrop={[Function]}
                                            restoreFocus={true}
                                            show={false}
                                            transition={[Function]}
                                          />
                                        </Modal>
                                      </Modal>
                                    </BootstrapModalWrapper>
                                  </ContentPackDownloadControl>
                                </div>
                              </Col>
                            </div>
                          </Row>
                        </Row>
                        <Row
                          className="row-sm content-packs-summary"
                        >
                          <Row
                            bsClass="row"
                            className="c0 row-sm content-packs-summary"
                            componentClass="div"
                          >
                            <div
                              className="c0 row-sm content-packs-summary row"
                            >
                              <Col
                                bsClass="col"
                                componentClass="div"
                                md={12}
                              >
                                <div
                                  className="col-md-12"
                                >
                                  Grok Patterns to extract informations from UFW logfiles
                                   
                                </div>
                              </Col>
                            </div>
                          </Row>
                        </Row>
                      </span>
                    </ListGroupItem>
                  </ListGroupItem__StyledListGroupItem>
                </ForwardRef>
              </ControlledTableListItem>
              <ControlledTableListItem
                key="7"
              >
                <ForwardRef>
                  <ListGroupItem__StyledListGroupItem>
                    <ListGroupItem
                      bsClass="list-group-item"
                      className="c8"
                      listItem={false}
                    >
                      <span
                        className="c8 list-group-item"
                      >
                        <Row
                          className="row-sm"
                        >
                          <Row
                            bsClass="row"
                            className="c0 row-sm"
                            componentClass="div"
                          >
                            <div
                              className="c0 row-sm row"
                            >
                              <Col
                                bsClass="col"
                                componentClass="div"
                                md={9}
                              >
                                <div
                                  className="col-md-9"
                                >
                                  <h3>
                                    <Link
                                      onlyActiveOnIndex={false}
                                      style={Object {}}
                                      to="/system/contentpacks/7"
                                    >
                                      <a
                                        onClick={[Function]}
                                        style={Object {}}
                                      />
                                    </Link>
                                     
                                    <small>
                                      Latest Version: 
                                      1
                                       
                                      <ContentPackStatus
                                        contentPackId="7"
                                        states={Array []}
                                      >
                                        <span />
                                      </ContentPackStatus>
                                       
                                    </small>
                                  </h3>
                                </div>
                              </Col>
                              <Col
                                bsClass="col"
                                className="text-right"
                                componentClass="div"
                                md={3}
                              >
                                <div
                                  className="text-right col-md-3"
                                >
                                   
                                  <Button
                                    bsSize="small"
                                    bsStyle="info"
                                    onClick={[Function]}
                                  >
                                    <Button
                                      active={false}
                                      block={false}
                                      bsClass="btn"
                                      bsSize="small"
                                      bsStyle="info"
                                      className="c3"
                                      disabled={false}
                                      onClick={[Function]}
                                    >
                                      <button
                                        className="c3 btn btn-sm btn-info"
                                        disabled={false}
                                        onClick={[Function]}
                                        type="button"
                                      >
                                        Install
                                      </button>
                                    </Button>
                                  </Button>
                                  <BootstrapModalWrapper
                                    backdrop="static"
                                    bsSize="large"
                                    onClose={[Function]}
                                    onHide={[Function]}
                                    onOpen={[Function]}
                                    showModal={false}
                                  >
                                    <Modal
                                      backdrop="static"
                                      bsSize="large"
                                      onHide={[Function]}
                                      show={false}
                                    >
                                      <Modal
                                        animation={true}
                                        autoFocus={true}
                                        backdrop="static"
                                        bsClass="modal"
                                        bsSize="large"
                                        className="c11"
                                        dialogComponentClass={[Function]}
                                        enforceFocus={true}
                                        keyboard={true}
                                        manager={
                                          ModalManager {
                                            "add": [Function],
                                            "containers": Array [],
                                            "data": Array [],
                                            "handleContainerOverflow": true,
                                            "hideSiblingNodes": true,
                                            "isTopModal": [Function],
                                            "modals": Array [],
                                            "remove": [Function],
                                          }
                                        }
                                        onHide={[Function]}
                                        renderBackdrop={[Function]}
                                        restoreFocus={true}
                                        show={false}
                                      >
                                        <Modal
                                          autoFocus={true}
                                          backdrop="static"
                                          backdropClassName="modal-backdrop"
                                          backdropTransition={[Function]}
                                          containerClassName="modal-open"
                                          enforceFocus={true}
                                          keyboard={true}
                                          manager={
                                            ModalManager {
                                              "add": [Function],
                                              "containers": Array [],
                                              "data": Array [],
                                              "handleContainerOverflow": true,
                                              "hideSiblingNodes": true,
                                              "isTopModal": [Function],
                                              "modals": Array [],
                                              "remove": [Function],
                                            }
                                          }
                                          onEntering={[Function]}
                                          onExited={[Function]}
                                          onHide={[Function]}
                                          onMouseUp={[Function]}
                                          renderBackdrop={[Function]}
                                          restoreFocus={true}
                                          show={false}
                                          transition={[Function]}
                                        />
                                      </Modal>
                                    </Modal>
                                  </BootstrapModalWrapper>
                                   
                                  <DropdownButton
                                    bsSize="small"
                                    id="more-actions-7"
                                    pullRight={true}
                                    title="More Actions"
                                  >
                                    <DropdownButton
                                      bsSize="small"
                                      className="c12"
                                      id="more-actions-7"
                                      pullRight={true}
                                      title="More Actions"
                                    >
                                      <ForwardRef
                                        bsSize="small"
                                        id="more-actions-7"
                                        pullRight={true}
                                      >
                                        <Uncontrolled(Dropdown)
                                          bsSize="small"
                                          id="more-actions-7"
                                          innerRef={null}
                                          pullRight={true}
                                        >
                                          <Dropdown
                                            bsClass="dropdown"
                                            bsSize="small"
                                            componentClass={[Function]}
                                            id="more-actions-7"
                                            onToggle={[Function]}
                                            pullRight={true}
                                          >
                                            <ButtonGroup
                                              block={false}
                                              bsClass="btn-group"
                                              bsSize="small"
                                              className="dropdown"
                                              justified={false}
                                              vertical={false}
                                            >
                                              <div
                                                className="dropdown btn-group btn-group-sm"
                                              >
                                                <DropdownToggle
                                                  bsClass="dropdown-toggle"
                                                  bsRole="toggle"
                                                  bsSize="small"
                                                  className="c12"
                                                  id="more-actions-7"
                                                  key=".0"
                                                  onClick={[Function]}
                                                  onKeyDown={[Function]}
                                                  open={false}
                                                  useAnchor={false}
                                                >
                                                  <Button
                                                    active={false}
                                                    aria-expanded={false}
                                                    aria-haspopup={true}
                                                    block={false}
                                                    bsClass="btn"
                                                    bsSize="small"
                                                    bsStyle="default"
                                                    className="c12 dropdown-toggle"
                                                    disabled={false}
                                                    id="more-actions-7"
                                                    onClick={[Function]}
                                                    onKeyDown={[Function]}
                                                    role="button"
                                                  >
                                                    <button
                                                      aria-expanded={false}
                                                      aria-haspopup={true}
                                                      className="c12 dropdown-toggle btn btn-sm btn-default"
                                                      disabled={false}
                                                      id="more-actions-7"
                                                      onClick={[Function]}
                                                      onKeyDown={[Function]}
                                                      role="button"
                                                      type="button"
                                                    >
                                                      More Actions
                                                       
                                                      <span
                                                        className="caret"
                                                      />
                                                    </button>
                                                  </Button>
                                                </DropdownToggle>
                                                <DropdownMenu
                                                  bsClass="dropdown-menu"
                                                  bsRole="menu"
                                                  key=".1"
                                                  labelledBy="more-actions-7"
                                                  onClose={[Function]}
                                                  onSelect={[Function]}
                                                  pullRight={true}
                                                >
                                                  <RootCloseWrapper
                                                    disabled={true}
                                                    event="click"
                                                    onRootClose={[Function]}
                                                  >
                                                    <ul
                                                      aria-labelledby="more-actions-7"
                                                      className="dropdown-menu dropdown-menu-right"
                                                      role="menu"
                                                    >
                                                      <LinkContainer
                                                        action="push"
                                                        key=".0"
                                                        onKeyDown={[Function]}
                                                        onSelect={[Function]}
                                                        onlyActiveOnIndex={false}
                                                        to="/system/contentpacks/7"
                                                      >
                                                        <MenuItem
                                                          action="push"
                                                          bsClass="dropdown"
                                                          disabled={false}
                                                          divider={false}
                                                          header={false}
                                                          onClick={[Function]}
                                                          onKeyDown={[Function]}
                                                          onSelect={[Function]}
                                                        >
                                                          <li
                                                            className=""
                                                            role="presentation"
                                                          >
                                                            <SafeAnchor
                                                              action="push"
                                                              componentClass="a"
                                                              onClick={[Function]}
                                                              onKeyDown={[Function]}
                                                              role="menuitem"
                                                              tabIndex="-1"
                                                            >
                                                              <a
                                                                action="push"
                                                                href="#"
                                                                onClick={[Function]}
                                                                onKeyDown={[Function]}
                                                                role="menuitem"
                                                                tabIndex="-1"
                                                              >
                                                                Show
                                                              </a>
                                                            </SafeAnchor>
                                                          </li>
                                                        </MenuItem>
                                                      </LinkContainer>
                                                      <LinkContainer
                                                        action="push"
                                                        key=".1"
                                                        onKeyDown={[Function]}
                                                        onSelect={[Function]}
                                                        onlyActiveOnIndex={false}
                                                        to="/system/contentpacks/7/1/edit"
                                                      >
                                                        <MenuItem
                                                          action="push"
                                                          bsClass="dropdown"
                                                          disabled={false}
                                                          divider={false}
                                                          header={false}
                                                          onClick={[Function]}
                                                          onKeyDown={[Function]}
                                                          onSelect={[Function]}
                                                        >
                                                          <li
                                                            className=""
                                                            role="presentation"
                                                          >
                                                            <SafeAnchor
                                                              action="push"
                                                              componentClass="a"
                                                              onClick={[Function]}
                                                              onKeyDown={[Function]}
                                                              role="menuitem"
                                                              tabIndex="-1"
                                                            >
                                                              <a
                                                                action="push"
                                                                href="#"
                                                                onClick={[Function]}
                                                                onKeyDown={[Function]}
                                                                role="menuitem"
                                                                tabIndex="-1"
                                                              >
                                                                Create New Version
                                                              </a>
                                                            </SafeAnchor>
                                                          </li>
                                                        </MenuItem>
                                                      </LinkContainer>
                                                      <MenuItem
                                                        bsClass="dropdown"
                                                        disabled={false}
                                                        divider={false}
                                                        header={false}
                                                        key=".2"
                                                        onKeyDown={[Function]}
                                                        onSelect={[Function]}
                                                      >
                                                        <li
                                                          className=""
                                                          role="presentation"
                                                        >
                                                          <SafeAnchor
                                                            componentClass="a"
                                                            onClick={[Function]}
                                                            onKeyDown={[Function]}
                                                            role="menuitem"
                                                            tabIndex="-1"
                                                          >
                                                            <a
                                                              href="#"
                                                              onClick={[Function]}
                                                              onKeyDown={[Function]}
                                                              role="menuitem"
                                                              tabIndex="-1"
                                                            >
                                                              Download
                                                            </a>
                                                          </SafeAnchor>
                                                        </li>
                                                      </MenuItem>
                                                      <MenuItem
                                                        bsClass="dropdown"
                                                        disabled={false}
                                                        divider={true}
                                                        header={false}
                                                        key=".3"
                                                        onKeyDown={[Function]}
                                                        onSelect={[Function]}
                                                      >
                                                        <li
                                                          className="divider"
                                                          onKeyDown={[Function]}
                                                          role="separator"
                                                        />
                                                      </MenuItem>
                                                      <MenuItem
                                                        bsClass="dropdown"
                                                        disabled={false}
                                                        divider={false}
                                                        header={false}
                                                        key=".4"
                                                        onKeyDown={[Function]}
                                                        onSelect={[Function]}
                                                      >
                                                        <li
                                                          className=""
                                                          role="presentation"
                                                        >
                                                          <SafeAnchor
                                                            componentClass="a"
                                                            onClick={[Function]}
                                                            onKeyDown={[Function]}
                                                            role="menuitem"
                                                            tabIndex="-1"
                                                          >
                                                            <a
                                                              href="#"
                                                              onClick={[Function]}
                                                              onKeyDown={[Function]}
                                                              role="menuitem"
                                                              tabIndex="-1"
                                                            >
                                                              Delete All Versions
                                                            </a>
                                                          </SafeAnchor>
                                                        </li>
                                                      </MenuItem>
                                                    </ul>
                                                  </RootCloseWrapper>
                                                </DropdownMenu>
                                              </div>
                                            </ButtonGroup>
                                          </Dropdown>
                                        </Uncontrolled(Dropdown)>
                                      </ForwardRef>
                                    </DropdownButton>
                                  </DropdownButton>
                                  <ContentPackDownloadControl
                                    contentPackId="7"
                                    revision={1}
                                  >
                                    <BootstrapModalWrapper
                                      backdrop="static"
                                      bsSize="large"
                                      onClose={[Function]}
                                      onHide={[Function]}
                                      onOpen={[Function]}
                                      showModal={false}
                                    >
                                      <Modal
                                        backdrop="static"
                                        bsSize="large"
                                        onHide={[Function]}
                                        show={false}
                                      >
                                        <Modal
                                          animation={true}
                                          autoFocus={true}
                                          backdrop="static"
                                          bsClass="modal"
                                          bsSize="large"
                                          className="c11"
                                          dialogComponentClass={[Function]}
                                          enforceFocus={true}
                                          keyboard={true}
                                          manager={
                                            ModalManager {
                                              "add": [Function],
                                              "containers": Array [],
                                              "data": Array [],
                                              "handleContainerOverflow": true,
                                              "hideSiblingNodes": true,
                                              "isTopModal": [Function],
                                              "modals": Array [],
                                              "remove": [Function],
                                            }
                                          }
                                          onHide={[Function]}
                                          renderBackdrop={[Function]}
                                          restoreFocus={true}
                                          show={false}
                                        >
                                          <Modal
                                            autoFocus={true}
                                            backdrop="static"
                                            backdropClassName="modal-backdrop"
                                            backdropTransition={[Function]}
                                            containerClassName="modal-open"
                                            enforceFocus={true}
                                            keyboard={true}
                                            manager={
                                              ModalManager {
                                                "add": [Function],
                                                "containers": Array [],
                                                "data": Array [],
                                                "handleContainerOverflow": true,
                                                "hideSiblingNodes": true,
                                                "isTopModal": [Function],
                                                "modals": Array [],
                                                "remove": [Function],
                                              }
                                            }
                                            onEntering={[Function]}
                                            onExited={[Function]}
                                            onHide={[Function]}
                                            onMouseUp={[Function]}
                                            renderBackdrop={[Function]}
                                            restoreFocus={true}
                                            show={false}
                                            transition={[Function]}
                                          />
                                        </Modal>
                                      </Modal>
                                    </BootstrapModalWrapper>
                                  </ContentPackDownloadControl>
                                </div>
                              </Col>
                            </div>
                          </Row>
                        </Row>
                        <Row
                          className="row-sm content-packs-summary"
                        >
                          <Row
                            bsClass="row"
                            className="c0 row-sm content-packs-summary"
                            componentClass="div"
                          >
                            <div
                              className="c0 row-sm content-packs-summary row"
                            >
                              <Col
                                bsClass="col"
                                componentClass="div"
                                md={12}
                              >
                                <div
                                  className="col-md-12"
                                >
                                  Patterns to retreive rails production logs
                                   
                                </div>
                              </Col>
                            </div>
                          </Row>
                        </Row>
                      </span>
                    </ListGroupItem>
                  </ListGroupItem__StyledListGroupItem>
                </ForwardRef>
              </ControlledTableListItem>
              <ControlledTableListItem
                key="8"
              >
                <ForwardRef>
                  <ListGroupItem__StyledListGroupItem>
                    <ListGroupItem
                      bsClass="list-group-item"
                      className="c8"
                      listItem={false}
                    >
                      <span
                        className="c8 list-group-item"
                      >
                        <Row
                          className="row-sm"
                        >
                          <Row
                            bsClass="row"
                            className="c0 row-sm"
                            componentClass="div"
                          >
                            <div
                              className="c0 row-sm row"
                            >
                              <Col
                                bsClass="col"
                                componentClass="div"
                                md={9}
                              >
                                <div
                                  className="col-md-9"
                                >
                                  <h3>
                                    <Link
                                      onlyActiveOnIndex={false}
                                      style={Object {}}
                                      to="/system/contentpacks/8"
                                    >
                                      <a
                                        onClick={[Function]}
                                        style={Object {}}
                                      />
                                    </Link>
                                     
                                    <small>
                                      Latest Version: 
                                      1
                                       
                                      <ContentPackStatus
                                        contentPackId="8"
                                        states={Array []}
                                      >
                                        <span />
                                      </ContentPackStatus>
                                       
                                    </small>
                                  </h3>
                                </div>
                              </Col>
                              <Col
                                bsClass="col"
                                className="text-right"
                                componentClass="div"
                                md={3}
                              >
                                <div
                                  className="text-right col-md-3"
                                >
                                   
                                  <Button
                                    bsSize="small"
                                    bsStyle="info"
                                    onClick={[Function]}
                                  >
                                    <Button
                                      active={false}
                                      block={false}
                                      bsClass="btn"
                                      bsSize="small"
                                      bsStyle="info"
                                      className="c3"
                                      disabled={false}
                                      onClick={[Function]}
                                    >
                                      <button
                                        className="c3 btn btn-sm btn-info"
                                        disabled={false}
                                        onClick={[Function]}
                                        type="button"
                                      >
                                        Install
                                      </button>
                                    </Button>
                                  </Button>
                                  <BootstrapModalWrapper
                                    backdrop="static"
                                    bsSize="large"
                                    onClose={[Function]}
                                    onHide={[Function]}
                                    onOpen={[Function]}
                                    showModal={false}
                                  >
                                    <Modal
                                      backdrop="static"
                                      bsSize="large"
                                      onHide={[Function]}
                                      show={false}
                                    >
                                      <Modal
                                        animation={true}
                                        autoFocus={true}
                                        backdrop="static"
                                        bsClass="modal"
                                        bsSize="large"
                                        className="c11"
                                        dialogComponentClass={[Function]}
                                        enforceFocus={true}
                                        keyboard={true}
                                        manager={
                                          ModalManager {
                                            "add": [Function],
                                            "containers": Array [],
                                            "data": Array [],
                                            "handleContainerOverflow": true,
                                            "hideSiblingNodes": true,
                                            "isTopModal": [Function],
                                            "modals": Array [],
                                            "remove": [Function],
                                          }
                                        }
                                        onHide={[Function]}
                                        renderBackdrop={[Function]}
                                        restoreFocus={true}
                                        show={false}
                                      >
                                        <Modal
                                          autoFocus={true}
                                          backdrop="static"
                                          backdropClassName="modal-backdrop"
                                          backdropTransition={[Function]}
                                          containerClassName="modal-open"
                                          enforceFocus={true}
                                          keyboard={true}
                                          manager={
                                            ModalManager {
                                              "add": [Function],
                                              "containers": Array [],
                                              "data": Array [],
                                              "handleContainerOverflow": true,
                                              "hideSiblingNodes": true,
                                              "isTopModal": [Function],
                                              "modals": Array [],
                                              "remove": [Function],
                                            }
                                          }
                                          onEntering={[Function]}
                                          onExited={[Function]}
                                          onHide={[Function]}
                                          onMouseUp={[Function]}
                                          renderBackdrop={[Function]}
                                          restoreFocus={true}
                                          show={false}
                                          transition={[Function]}
                                        />
                                      </Modal>
                                    </Modal>
                                  </BootstrapModalWrapper>
                                   
                                  <DropdownButton
                                    bsSize="small"
                                    id="more-actions-8"
                                    pullRight={true}
                                    title="More Actions"
                                  >
                                    <DropdownButton
                                      bsSize="small"
                                      className="c12"
                                      id="more-actions-8"
                                      pullRight={true}
                                      title="More Actions"
                                    >
                                      <ForwardRef
                                        bsSize="small"
                                        id="more-actions-8"
                                        pullRight={true}
                                      >
                                        <Uncontrolled(Dropdown)
                                          bsSize="small"
                                          id="more-actions-8"
                                          innerRef={null}
                                          pullRight={true}
                                        >
                                          <Dropdown
                                            bsClass="dropdown"
                                            bsSize="small"
                                            componentClass={[Function]}
                                            id="more-actions-8"
                                            onToggle={[Function]}
                                            pullRight={true}
                                          >
                                            <ButtonGroup
                                              block={false}
                                              bsClass="btn-group"
                                              bsSize="small"
                                              className="dropdown"
                                              justified={false}
                                              vertical={false}
                                            >
                                              <div
                                                className="dropdown btn-group btn-group-sm"
                                              >
                                                <DropdownToggle
                                                  bsClass="dropdown-toggle"
                                                  bsRole="toggle"
                                                  bsSize="small"
                                                  className="c12"
                                                  id="more-actions-8"
                                                  key=".0"
                                                  onClick={[Function]}
                                                  onKeyDown={[Function]}
                                                  open={false}
                                                  useAnchor={false}
                                                >
                                                  <Button
                                                    active={false}
                                                    aria-expanded={false}
                                                    aria-haspopup={true}
                                                    block={false}
                                                    bsClass="btn"
                                                    bsSize="small"
                                                    bsStyle="default"
                                                    className="c12 dropdown-toggle"
                                                    disabled={false}
                                                    id="more-actions-8"
                                                    onClick={[Function]}
                                                    onKeyDown={[Function]}
                                                    role="button"
                                                  >
                                                    <button
                                                      aria-expanded={false}
                                                      aria-haspopup={true}
                                                      className="c12 dropdown-toggle btn btn-sm btn-default"
                                                      disabled={false}
                                                      id="more-actions-8"
                                                      onClick={[Function]}
                                                      onKeyDown={[Function]}
                                                      role="button"
                                                      type="button"
                                                    >
                                                      More Actions
                                                       
                                                      <span
                                                        className="caret"
                                                      />
                                                    </button>
                                                  </Button>
                                                </DropdownToggle>
                                                <DropdownMenu
                                                  bsClass="dropdown-menu"
                                                  bsRole="menu"
                                                  key=".1"
                                                  labelledBy="more-actions-8"
                                                  onClose={[Function]}
                                                  onSelect={[Function]}
                                                  pullRight={true}
                                                >
                                                  <RootCloseWrapper
                                                    disabled={true}
                                                    event="click"
                                                    onRootClose={[Function]}
                                                  >
                                                    <ul
                                                      aria-labelledby="more-actions-8"
                                                      className="dropdown-menu dropdown-menu-right"
                                                      role="menu"
                                                    >
                                                      <LinkContainer
                                                        action="push"
                                                        key=".0"
                                                        onKeyDown={[Function]}
                                                        onSelect={[Function]}
                                                        onlyActiveOnIndex={false}
                                                        to="/system/contentpacks/8"
                                                      >
                                                        <MenuItem
                                                          action="push"
                                                          bsClass="dropdown"
                                                          disabled={false}
                                                          divider={false}
                                                          header={false}
                                                          onClick={[Function]}
                                                          onKeyDown={[Function]}
                                                          onSelect={[Function]}
                                                        >
                                                          <li
                                                            className=""
                                                            role="presentation"
                                                          >
                                                            <SafeAnchor
                                                              action="push"
                                                              componentClass="a"
                                                              onClick={[Function]}
                                                              onKeyDown={[Function]}
                                                              role="menuitem"
                                                              tabIndex="-1"
                                                            >
                                                              <a
                                                                action="push"
                                                                href="#"
                                                                onClick={[Function]}
                                                                onKeyDown={[Function]}
                                                                role="menuitem"
                                                                tabIndex="-1"
                                                              >
                                                                Show
                                                              </a>
                                                            </SafeAnchor>
                                                          </li>
                                                        </MenuItem>
                                                      </LinkContainer>
                                                      <LinkContainer
                                                        action="push"
                                                        key=".1"
                                                        onKeyDown={[Function]}
                                                        onSelect={[Function]}
                                                        onlyActiveOnIndex={false}
                                                        to="/system/contentpacks/8/1/edit"
                                                      >
                                                        <MenuItem
                                                          action="push"
                                                          bsClass="dropdown"
                                                          disabled={false}
                                                          divider={false}
                                                          header={false}
                                                          onClick={[Function]}
                                                          onKeyDown={[Function]}
                                                          onSelect={[Function]}
                                                        >
                                                          <li
                                                            className=""
                                                            role="presentation"
                                                          >
                                                            <SafeAnchor
                                                              action="push"
                                                              componentClass="a"
                                                              onClick={[Function]}
                                                              onKeyDown={[Function]}
                                                              role="menuitem"
                                                              tabIndex="-1"
                                                            >
                                                              <a
                                                                action="push"
                                                                href="#"
                                                                onClick={[Function]}
                                                                onKeyDown={[Function]}
                                                                role="menuitem"
                                                                tabIndex="-1"
                                                              >
                                                                Create New Version
                                                              </a>
                                                            </SafeAnchor>
                                                          </li>
                                                        </MenuItem>
                                                      </LinkContainer>
                                                      <MenuItem
                                                        bsClass="dropdown"
                                                        disabled={false}
                                                        divider={false}
                                                        header={false}
                                                        key=".2"
                                                        onKeyDown={[Function]}
                                                        onSelect={[Function]}
                                                      >
                                                        <li
                                                          className=""
                                                          role="presentation"
                                                        >
                                                          <SafeAnchor
                                                            componentClass="a"
                                                            onClick={[Function]}
                                                            onKeyDown={[Function]}
                                                            role="menuitem"
                                                            tabIndex="-1"
                                                          >
                                                            <a
                                                              href="#"
                                                              onClick={[Function]}
                                                              onKeyDown={[Function]}
                                                              role="menuitem"
                                                              tabIndex="-1"
                                                            >
                                                              Download
                                                            </a>
                                                          </SafeAnchor>
                                                        </li>
                                                      </MenuItem>
                                                      <MenuItem
                                                        bsClass="dropdown"
                                                        disabled={false}
                                                        divider={true}
                                                        header={false}
                                                        key=".3"
                                                        onKeyDown={[Function]}
                                                        onSelect={[Function]}
                                                      >
                                                        <li
                                                          className="divider"
                                                          onKeyDown={[Function]}
                                                          role="separator"
                                                        />
                                                      </MenuItem>
                                                      <MenuItem
                                                        bsClass="dropdown"
                                                        disabled={false}
                                                        divider={false}
                                                        header={false}
                                                        key=".4"
                                                        onKeyDown={[Function]}
                                                        onSelect={[Function]}
                                                      >
                                                        <li
                                                          className=""
                                                          role="presentation"
                                                        >
                                                          <SafeAnchor
                                                            componentClass="a"
                                                            onClick={[Function]}
                                                            onKeyDown={[Function]}
                                                            role="menuitem"
                                                            tabIndex="-1"
                                                          >
                                                            <a
                                                              href="#"
                                                              onClick={[Function]}
                                                              onKeyDown={[Function]}
                                                              role="menuitem"
                                                              tabIndex="-1"
                                                            >
                                                              Delete All Versions
                                                            </a>
                                                          </SafeAnchor>
                                                        </li>
                                                      </MenuItem>
                                                    </ul>
                                                  </RootCloseWrapper>
                                                </DropdownMenu>
                                              </div>
                                            </ButtonGroup>
                                          </Dropdown>
                                        </Uncontrolled(Dropdown)>
                                      </ForwardRef>
                                    </DropdownButton>
                                  </DropdownButton>
                                  <ContentPackDownloadControl
                                    contentPackId="8"
                                    revision={1}
                                  >
                                    <BootstrapModalWrapper
                                      backdrop="static"
                                      bsSize="large"
                                      onClose={[Function]}
                                      onHide={[Function]}
                                      onOpen={[Function]}
                                      showModal={false}
                                    >
                                      <Modal
                                        backdrop="static"
                                        bsSize="large"
                                        onHide={[Function]}
                                        show={false}
                                      >
                                        <Modal
                                          animation={true}
                                          autoFocus={true}
                                          backdrop="static"
                                          bsClass="modal"
                                          bsSize="large"
                                          className="c11"
                                          dialogComponentClass={[Function]}
                                          enforceFocus={true}
                                          keyboard={true}
                                          manager={
                                            ModalManager {
                                              "add": [Function],
                                              "containers": Array [],
                                              "data": Array [],
                                              "handleContainerOverflow": true,
                                              "hideSiblingNodes": true,
                                              "isTopModal": [Function],
                                              "modals": Array [],
                                              "remove": [Function],
                                            }
                                          }
                                          onHide={[Function]}
                                          renderBackdrop={[Function]}
                                          restoreFocus={true}
                                          show={false}
                                        >
                                          <Modal
                                            autoFocus={true}
                                            backdrop="static"
                                            backdropClassName="modal-backdrop"
                                            backdropTransition={[Function]}
                                            containerClassName="modal-open"
                                            enforceFocus={true}
                                            keyboard={true}
                                            manager={
                                              ModalManager {
                                                "add": [Function],
                                                "containers": Array [],
                                                "data": Array [],
                                                "handleContainerOverflow": true,
                                                "hideSiblingNodes": true,
                                                "isTopModal": [Function],
                                                "modals": Array [],
                                                "remove": [Function],
                                              }
                                            }
                                            onEntering={[Function]}
                                            onExited={[Function]}
                                            onHide={[Function]}
                                            onMouseUp={[Function]}
                                            renderBackdrop={[Function]}
                                            restoreFocus={true}
                                            show={false}
                                            transition={[Function]}
                                          />
                                        </Modal>
                                      </Modal>
                                    </BootstrapModalWrapper>
                                  </ContentPackDownloadControl>
                                </div>
                              </Col>
                            </div>
                          </Row>
                        </Row>
                        <Row
                          className="row-sm content-packs-summary"
                        >
                          <Row
                            bsClass="row"
                            className="c0 row-sm content-packs-summary"
                            componentClass="div"
                          >
                            <div
                              className="c0 row-sm content-packs-summary row"
                            >
                              <Col
                                bsClass="col"
                                componentClass="div"
                                md={12}
                              >
                                <div
                                  className="col-md-12"
                                >
                                   
                                </div>
                              </Col>
                            </div>
                          </Row>
                        </Row>
                      </span>
                    </ListGroupItem>
                  </ListGroupItem__StyledListGroupItem>
                </ForwardRef>
              </ControlledTableListItem>
              <ControlledTableListItem
                key="9"
              >
                <ForwardRef>
                  <ListGroupItem__StyledListGroupItem>
                    <ListGroupItem
                      bsClass="list-group-item"
                      className="c8"
                      listItem={false}
                    >
                      <span
                        className="c8 list-group-item"
                      >
                        <Row
                          className="row-sm"
                        >
                          <Row
                            bsClass="row"
                            className="c0 row-sm"
                            componentClass="div"
                          >
                            <div
                              className="c0 row-sm row"
                            >
                              <Col
                                bsClass="col"
                                componentClass="div"
                                md={9}
                              >
                                <div
                                  className="col-md-9"
                                >
                                  <h3>
                                    <Link
                                      onlyActiveOnIndex={false}
                                      style={Object {}}
                                      to="/system/contentpacks/9"
                                    >
                                      <a
                                        onClick={[Function]}
                                        style={Object {}}
                                      />
                                    </Link>
                                     
                                    <small>
                                      Latest Version: 
                                      1
                                       
                                      <ContentPackStatus
                                        contentPackId="9"
                                        states={Array []}
                                      >
                                        <span />
                                      </ContentPackStatus>
                                       
                                    </small>
                                  </h3>
                                </div>
                              </Col>
                              <Col
                                bsClass="col"
                                className="text-right"
                                componentClass="div"
                                md={3}
                              >
                                <div
                                  className="text-right col-md-3"
                                >
                                   
                                  <Button
                                    bsSize="small"
                                    bsStyle="info"
                                    onClick={[Function]}
                                  >
                                    <Button
                                      active={false}
                                      block={false}
                                      bsClass="btn"
                                      bsSize="small"
                                      bsStyle="info"
                                      className="c3"
                                      disabled={false}
                                      onClick={[Function]}
                                    >
                                      <button
                                        className="c3 btn btn-sm btn-info"
                                        disabled={false}
                                        onClick={[Function]}
                                        type="button"
                                      >
                                        Install
                                      </button>
                                    </Button>
                                  </Button>
                                  <BootstrapModalWrapper
                                    backdrop="static"
                                    bsSize="large"
                                    onClose={[Function]}
                                    onHide={[Function]}
                                    onOpen={[Function]}
                                    showModal={false}
                                  >
                                    <Modal
                                      backdrop="static"
                                      bsSize="large"
                                      onHide={[Function]}
                                      show={false}
                                    >
                                      <Modal
                                        animation={true}
                                        autoFocus={true}
                                        backdrop="static"
                                        bsClass="modal"
                                        bsSize="large"
                                        className="c11"
                                        dialogComponentClass={[Function]}
                                        enforceFocus={true}
                                        keyboard={true}
                                        manager={
                                          ModalManager {
                                            "add": [Function],
                                            "containers": Array [],
                                            "data": Array [],
                                            "handleContainerOverflow": true,
                                            "hideSiblingNodes": true,
                                            "isTopModal": [Function],
                                            "modals": Array [],
                                            "remove": [Function],
                                          }
                                        }
                                        onHide={[Function]}
                                        renderBackdrop={[Function]}
                                        restoreFocus={true}
                                        show={false}
                                      >
                                        <Modal
                                          autoFocus={true}
                                          backdrop="static"
                                          backdropClassName="modal-backdrop"
                                          backdropTransition={[Function]}
                                          containerClassName="modal-open"
                                          enforceFocus={true}
                                          keyboard={true}
                                          manager={
                                            ModalManager {
                                              "add": [Function],
                                              "containers": Array [],
                                              "data": Array [],
                                              "handleContainerOverflow": true,
                                              "hideSiblingNodes": true,
                                              "isTopModal": [Function],
                                              "modals": Array [],
                                              "remove": [Function],
                                            }
                                          }
                                          onEntering={[Function]}
                                          onExited={[Function]}
                                          onHide={[Function]}
                                          onMouseUp={[Function]}
                                          renderBackdrop={[Function]}
                                          restoreFocus={true}
                                          show={false}
                                          transition={[Function]}
                                        />
                                      </Modal>
                                    </Modal>
                                  </BootstrapModalWrapper>
                                   
                                  <DropdownButton
                                    bsSize="small"
                                    id="more-actions-9"
                                    pullRight={true}
                                    title="More Actions"
                                  >
                                    <DropdownButton
                                      bsSize="small"
                                      className="c12"
                                      id="more-actions-9"
                                      pullRight={true}
                                      title="More Actions"
                                    >
                                      <ForwardRef
                                        bsSize="small"
                                        id="more-actions-9"
                                        pullRight={true}
                                      >
                                        <Uncontrolled(Dropdown)
                                          bsSize="small"
                                          id="more-actions-9"
                                          innerRef={null}
                                          pullRight={true}
                                        >
                                          <Dropdown
                                            bsClass="dropdown"
                                            bsSize="small"
                                            componentClass={[Function]}
                                            id="more-actions-9"
                                            onToggle={[Function]}
                                            pullRight={true}
                                          >
                                            <ButtonGroup
                                              block={false}
                                              bsClass="btn-group"
                                              bsSize="small"
                                              className="dropdown"
                                              justified={false}
                                              vertical={false}
                                            >
                                              <div
                                                className="dropdown btn-group btn-group-sm"
                                              >
                                                <DropdownToggle
                                                  bsClass="dropdown-toggle"
                                                  bsRole="toggle"
                                                  bsSize="small"
                                                  className="c12"
                                                  id="more-actions-9"
                                                  key=".0"
                                                  onClick={[Function]}
                                                  onKeyDown={[Function]}
                                                  open={false}
                                                  useAnchor={false}
                                                >
                                                  <Button
                                                    active={false}
                                                    aria-expanded={false}
                                                    aria-haspopup={true}
                                                    block={false}
                                                    bsClass="btn"
                                                    bsSize="small"
                                                    bsStyle="default"
                                                    className="c12 dropdown-toggle"
                                                    disabled={false}
                                                    id="more-actions-9"
                                                    onClick={[Function]}
                                                    onKeyDown={[Function]}
                                                    role="button"
                                                  >
                                                    <button
                                                      aria-expanded={false}
                                                      aria-haspopup={true}
                                                      className="c12 dropdown-toggle btn btn-sm btn-default"
                                                      disabled={false}
                                                      id="more-actions-9"
                                                      onClick={[Function]}
                                                      onKeyDown={[Function]}
                                                      role="button"
                                                      type="button"
                                                    >
                                                      More Actions
                                                       
                                                      <span
                                                        className="caret"
                                                      />
                                                    </button>
                                                  </Button>
                                                </DropdownToggle>
                                                <DropdownMenu
                                                  bsClass="dropdown-menu"
                                                  bsRole="menu"
                                                  key=".1"
                                                  labelledBy="more-actions-9"
                                                  onClose={[Function]}
                                                  onSelect={[Function]}
                                                  pullRight={true}
                                                >
                                                  <RootCloseWrapper
                                                    disabled={true}
                                                    event="click"
                                                    onRootClose={[Function]}
                                                  >
                                                    <ul
                                                      aria-labelledby="more-actions-9"
                                                      className="dropdown-menu dropdown-menu-right"
                                                      role="menu"
                                                    >
                                                      <LinkContainer
                                                        action="push"
                                                        key=".0"
                                                        onKeyDown={[Function]}
                                                        onSelect={[Function]}
                                                        onlyActiveOnIndex={false}
                                                        to="/system/contentpacks/9"
                                                      >
                                                        <MenuItem
                                                          action="push"
                                                          bsClass="dropdown"
                                                          disabled={false}
                                                          divider={false}
                                                          header={false}
                                                          onClick={[Function]}
                                                          onKeyDown={[Function]}
                                                          onSelect={[Function]}
                                                        >
                                                          <li
                                                            className=""
                                                            role="presentation"
                                                          >
                                                            <SafeAnchor
                                                              action="push"
                                                              componentClass="a"
                                                              onClick={[Function]}
                                                              onKeyDown={[Function]}
                                                              role="menuitem"
                                                              tabIndex="-1"
                                                            >
                                                              <a
                                                                action="push"
                                                                href="#"
                                                                onClick={[Function]}
                                                                onKeyDown={[Function]}
                                                                role="menuitem"
                                                                tabIndex="-1"
                                                              >
                                                                Show
                                                              </a>
                                                            </SafeAnchor>
                                                          </li>
                                                        </MenuItem>
                                                      </LinkContainer>
                                                      <LinkContainer
                                                        action="push"
                                                        key=".1"
                                                        onKeyDown={[Function]}
                                                        onSelect={[Function]}
                                                        onlyActiveOnIndex={false}
                                                        to="/system/contentpacks/9/1/edit"
                                                      >
                                                        <MenuItem
                                                          action="push"
                                                          bsClass="dropdown"
                                                          disabled={false}
                                                          divider={false}
                                                          header={false}
                                                          onClick={[Function]}
                                                          onKeyDown={[Function]}
                                                          onSelect={[Function]}
                                                        >
                                                          <li
                                                            className=""
                                                            role="presentation"
                                                          >
                                                            <SafeAnchor
                                                              action="push"
                                                              componentClass="a"
                                                              onClick={[Function]}
                                                              onKeyDown={[Function]}
                                                              role="menuitem"
                                                              tabIndex="-1"
                                                            >
                                                              <a
                                                                action="push"
                                                                href="#"
                                                                onClick={[Function]}
                                                                onKeyDown={[Function]}
                                                                role="menuitem"
                                                                tabIndex="-1"
                                                              >
                                                                Create New Version
                                                              </a>
                                                            </SafeAnchor>
                                                          </li>
                                                        </MenuItem>
                                                      </LinkContainer>
                                                      <MenuItem
                                                        bsClass="dropdown"
                                                        disabled={false}
                                                        divider={false}
                                                        header={false}
                                                        key=".2"
                                                        onKeyDown={[Function]}
                                                        onSelect={[Function]}
                                                      >
                                                        <li
                                                          className=""
                                                          role="presentation"
                                                        >
                                                          <SafeAnchor
                                                            componentClass="a"
                                                            onClick={[Function]}
                                                            onKeyDown={[Function]}
                                                            role="menuitem"
                                                            tabIndex="-1"
                                                          >
                                                            <a
                                                              href="#"
                                                              onClick={[Function]}
                                                              onKeyDown={[Function]}
                                                              role="menuitem"
                                                              tabIndex="-1"
                                                            >
                                                              Download
                                                            </a>
                                                          </SafeAnchor>
                                                        </li>
                                                      </MenuItem>
                                                      <MenuItem
                                                        bsClass="dropdown"
                                                        disabled={false}
                                                        divider={true}
                                                        header={false}
                                                        key=".3"
                                                        onKeyDown={[Function]}
                                                        onSelect={[Function]}
                                                      >
                                                        <li
                                                          className="divider"
                                                          onKeyDown={[Function]}
                                                          role="separator"
                                                        />
                                                      </MenuItem>
                                                      <MenuItem
                                                        bsClass="dropdown"
                                                        disabled={false}
                                                        divider={false}
                                                        header={false}
                                                        key=".4"
                                                        onKeyDown={[Function]}
                                                        onSelect={[Function]}
                                                      >
                                                        <li
                                                          className=""
                                                          role="presentation"
                                                        >
                                                          <SafeAnchor
                                                            componentClass="a"
                                                            onClick={[Function]}
                                                            onKeyDown={[Function]}
                                                            role="menuitem"
                                                            tabIndex="-1"
                                                          >
                                                            <a
                                                              href="#"
                                                              onClick={[Function]}
                                                              onKeyDown={[Function]}
                                                              role="menuitem"
                                                              tabIndex="-1"
                                                            >
                                                              Delete All Versions
                                                            </a>
                                                          </SafeAnchor>
                                                        </li>
                                                      </MenuItem>
                                                    </ul>
                                                  </RootCloseWrapper>
                                                </DropdownMenu>
                                              </div>
                                            </ButtonGroup>
                                          </Dropdown>
                                        </Uncontrolled(Dropdown)>
                                      </ForwardRef>
                                    </DropdownButton>
                                  </DropdownButton>
                                  <ContentPackDownloadControl
                                    contentPackId="9"
                                    revision={1}
                                  >
                                    <BootstrapModalWrapper
                                      backdrop="static"
                                      bsSize="large"
                                      onClose={[Function]}
                                      onHide={[Function]}
                                      onOpen={[Function]}
                                      showModal={false}
                                    >
                                      <Modal
                                        backdrop="static"
                                        bsSize="large"
                                        onHide={[Function]}
                                        show={false}
                                      >
                                        <Modal
                                          animation={true}
                                          autoFocus={true}
                                          backdrop="static"
                                          bsClass="modal"
                                          bsSize="large"
                                          className="c11"
                                          dialogComponentClass={[Function]}
                                          enforceFocus={true}
                                          keyboard={true}
                                          manager={
                                            ModalManager {
                                              "add": [Function],
                                              "containers": Array [],
                                              "data": Array [],
                                              "handleContainerOverflow": true,
                                              "hideSiblingNodes": true,
                                              "isTopModal": [Function],
                                              "modals": Array [],
                                              "remove": [Function],
                                            }
                                          }
                                          onHide={[Function]}
                                          renderBackdrop={[Function]}
                                          restoreFocus={true}
                                          show={false}
                                        >
                                          <Modal
                                            autoFocus={true}
                                            backdrop="static"
                                            backdropClassName="modal-backdrop"
                                            backdropTransition={[Function]}
                                            containerClassName="modal-open"
                                            enforceFocus={true}
                                            keyboard={true}
                                            manager={
                                              ModalManager {
                                                "add": [Function],
                                                "containers": Array [],
                                                "data": Array [],
                                                "handleContainerOverflow": true,
                                                "hideSiblingNodes": true,
                                                "isTopModal": [Function],
                                                "modals": Array [],
                                                "remove": [Function],
                                              }
                                            }
                                            onEntering={[Function]}
                                            onExited={[Function]}
                                            onHide={[Function]}
                                            onMouseUp={[Function]}
                                            renderBackdrop={[Function]}
                                            restoreFocus={true}
                                            show={false}
                                            transition={[Function]}
                                          />
                                        </Modal>
                                      </Modal>
                                    </BootstrapModalWrapper>
                                  </ContentPackDownloadControl>
                                </div>
                              </Col>
                            </div>
                          </Row>
                        </Row>
                        <Row
                          className="row-sm content-packs-summary"
                        >
                          <Row
                            bsClass="row"
                            className="c0 row-sm content-packs-summary"
                            componentClass="div"
                          >
                            <div
                              className="c0 row-sm content-packs-summary row"
                            >
                              <Col
                                bsClass="col"
                                componentClass="div"
                                md={12}
                              >
                                <div
                                  className="col-md-12"
                                >
                                  A crypted backup over ssh.
                                   
                                </div>
                              </Col>
                            </div>
                          </Row>
                        </Row>
                      </span>
                    </ListGroupItem>
                  </ListGroupItem__StyledListGroupItem>
                </ForwardRef>
              </ControlledTableListItem>
              <ControlledTableListItem
                key="10"
              >
                <ForwardRef>
                  <ListGroupItem__StyledListGroupItem>
                    <ListGroupItem
                      bsClass="list-group-item"
                      className="c8"
                      listItem={false}
                    >
                      <span
                        className="c8 list-group-item"
                      >
                        <Row
                          className="row-sm"
                        >
                          <Row
                            bsClass="row"
                            className="c0 row-sm"
                            componentClass="div"
                          >
                            <div
                              className="c0 row-sm row"
                            >
                              <Col
                                bsClass="col"
                                componentClass="div"
                                md={9}
                              >
                                <div
                                  className="col-md-9"
                                >
                                  <h3>
                                    <Link
                                      onlyActiveOnIndex={false}
                                      style={Object {}}
                                      to="/system/contentpacks/10"
                                    >
                                      <a
                                        onClick={[Function]}
                                        style={Object {}}
                                      />
                                    </Link>
                                     
                                    <small>
                                      Latest Version: 
                                      1
                                       
                                      <ContentPackStatus
                                        contentPackId="10"
                                        states={Array []}
                                      >
                                        <span />
                                      </ContentPackStatus>
                                       
                                    </small>
                                  </h3>
                                </div>
                              </Col>
                              <Col
                                bsClass="col"
                                className="text-right"
                                componentClass="div"
                                md={3}
                              >
                                <div
                                  className="text-right col-md-3"
                                >
                                   
                                  <Button
                                    bsSize="small"
                                    bsStyle="info"
                                    onClick={[Function]}
                                  >
                                    <Button
                                      active={false}
                                      block={false}
                                      bsClass="btn"
                                      bsSize="small"
                                      bsStyle="info"
                                      className="c3"
                                      disabled={false}
                                      onClick={[Function]}
                                    >
                                      <button
                                        className="c3 btn btn-sm btn-info"
                                        disabled={false}
                                        onClick={[Function]}
                                        type="button"
                                      >
                                        Install
                                      </button>
                                    </Button>
                                  </Button>
                                  <BootstrapModalWrapper
                                    backdrop="static"
                                    bsSize="large"
                                    onClose={[Function]}
                                    onHide={[Function]}
                                    onOpen={[Function]}
                                    showModal={false}
                                  >
                                    <Modal
                                      backdrop="static"
                                      bsSize="large"
                                      onHide={[Function]}
                                      show={false}
                                    >
                                      <Modal
                                        animation={true}
                                        autoFocus={true}
                                        backdrop="static"
                                        bsClass="modal"
                                        bsSize="large"
                                        className="c11"
                                        dialogComponentClass={[Function]}
                                        enforceFocus={true}
                                        keyboard={true}
                                        manager={
                                          ModalManager {
                                            "add": [Function],
                                            "containers": Array [],
                                            "data": Array [],
                                            "handleContainerOverflow": true,
                                            "hideSiblingNodes": true,
                                            "isTopModal": [Function],
                                            "modals": Array [],
                                            "remove": [Function],
                                          }
                                        }
                                        onHide={[Function]}
                                        renderBackdrop={[Function]}
                                        restoreFocus={true}
                                        show={false}
                                      >
                                        <Modal
                                          autoFocus={true}
                                          backdrop="static"
                                          backdropClassName="modal-backdrop"
                                          backdropTransition={[Function]}
                                          containerClassName="modal-open"
                                          enforceFocus={true}
                                          keyboard={true}
                                          manager={
                                            ModalManager {
                                              "add": [Function],
                                              "containers": Array [],
                                              "data": Array [],
                                              "handleContainerOverflow": true,
                                              "hideSiblingNodes": true,
                                              "isTopModal": [Function],
                                              "modals": Array [],
                                              "remove": [Function],
                                            }
                                          }
                                          onEntering={[Function]}
                                          onExited={[Function]}
                                          onHide={[Function]}
                                          onMouseUp={[Function]}
                                          renderBackdrop={[Function]}
                                          restoreFocus={true}
                                          show={false}
                                          transition={[Function]}
                                        />
                                      </Modal>
                                    </Modal>
                                  </BootstrapModalWrapper>
                                   
                                  <DropdownButton
                                    bsSize="small"
                                    id="more-actions-10"
                                    pullRight={true}
                                    title="More Actions"
                                  >
                                    <DropdownButton
                                      bsSize="small"
                                      className="c12"
                                      id="more-actions-10"
                                      pullRight={true}
                                      title="More Actions"
                                    >
                                      <ForwardRef
                                        bsSize="small"
                                        id="more-actions-10"
                                        pullRight={true}
                                      >
                                        <Uncontrolled(Dropdown)
                                          bsSize="small"
                                          id="more-actions-10"
                                          innerRef={null}
                                          pullRight={true}
                                        >
                                          <Dropdown
                                            bsClass="dropdown"
                                            bsSize="small"
                                            componentClass={[Function]}
                                            id="more-actions-10"
                                            onToggle={[Function]}
                                            pullRight={true}
                                          >
                                            <ButtonGroup
                                              block={false}
                                              bsClass="btn-group"
                                              bsSize="small"
                                              className="dropdown"
                                              justified={false}
                                              vertical={false}
                                            >
                                              <div
                                                className="dropdown btn-group btn-group-sm"
                                              >
                                                <DropdownToggle
                                                  bsClass="dropdown-toggle"
                                                  bsRole="toggle"
                                                  bsSize="small"
                                                  className="c12"
                                                  id="more-actions-10"
                                                  key=".0"
                                                  onClick={[Function]}
                                                  onKeyDown={[Function]}
                                                  open={false}
                                                  useAnchor={false}
                                                >
                                                  <Button
                                                    active={false}
                                                    aria-expanded={false}
                                                    aria-haspopup={true}
                                                    block={false}
                                                    bsClass="btn"
                                                    bsSize="small"
                                                    bsStyle="default"
                                                    className="c12 dropdown-toggle"
                                                    disabled={false}
                                                    id="more-actions-10"
                                                    onClick={[Function]}
                                                    onKeyDown={[Function]}
                                                    role="button"
                                                  >
                                                    <button
                                                      aria-expanded={false}
                                                      aria-haspopup={true}
                                                      className="c12 dropdown-toggle btn btn-sm btn-default"
                                                      disabled={false}
                                                      id="more-actions-10"
                                                      onClick={[Function]}
                                                      onKeyDown={[Function]}
                                                      role="button"
                                                      type="button"
                                                    >
                                                      More Actions
                                                       
                                                      <span
                                                        className="caret"
                                                      />
                                                    </button>
                                                  </Button>
                                                </DropdownToggle>
                                                <DropdownMenu
                                                  bsClass="dropdown-menu"
                                                  bsRole="menu"
                                                  key=".1"
                                                  labelledBy="more-actions-10"
                                                  onClose={[Function]}
                                                  onSelect={[Function]}
                                                  pullRight={true}
                                                >
                                                  <RootCloseWrapper
                                                    disabled={true}
                                                    event="click"
                                                    onRootClose={[Function]}
                                                  >
                                                    <ul
                                                      aria-labelledby="more-actions-10"
                                                      className="dropdown-menu dropdown-menu-right"
                                                      role="menu"
                                                    >
                                                      <LinkContainer
                                                        action="push"
                                                        key=".0"
                                                        onKeyDown={[Function]}
                                                        onSelect={[Function]}
                                                        onlyActiveOnIndex={false}
                                                        to="/system/contentpacks/10"
                                                      >
                                                        <MenuItem
                                                          action="push"
                                                          bsClass="dropdown"
                                                          disabled={false}
                                                          divider={false}
                                                          header={false}
                                                          onClick={[Function]}
                                                          onKeyDown={[Function]}
                                                          onSelect={[Function]}
                                                        >
                                                          <li
                                                            className=""
                                                            role="presentation"
                                                          >
                                                            <SafeAnchor
                                                              action="push"
                                                              componentClass="a"
                                                              onClick={[Function]}
                                                              onKeyDown={[Function]}
                                                              role="menuitem"
                                                              tabIndex="-1"
                                                            >
                                                              <a
                                                                action="push"
                                                                href="#"
                                                                onClick={[Function]}
                                                                onKeyDown={[Function]}
                                                                role="menuitem"
                                                                tabIndex="-1"
                                                              >
                                                                Show
                                                              </a>
                                                            </SafeAnchor>
                                                          </li>
                                                        </MenuItem>
                                                      </LinkContainer>
                                                      <LinkContainer
                                                        action="push"
                                                        key=".1"
                                                        onKeyDown={[Function]}
                                                        onSelect={[Function]}
                                                        onlyActiveOnIndex={false}
                                                        to="/system/contentpacks/10/1/edit"
                                                      >
                                                        <MenuItem
                                                          action="push"
                                                          bsClass="dropdown"
                                                          disabled={false}
                                                          divider={false}
                                                          header={false}
                                                          onClick={[Function]}
                                                          onKeyDown={[Function]}
                                                          onSelect={[Function]}
                                                        >
                                                          <li
                                                            className=""
                                                            role="presentation"
                                                          >
                                                            <SafeAnchor
                                                              action="push"
                                                              componentClass="a"
                                                              onClick={[Function]}
                                                              onKeyDown={[Function]}
                                                              role="menuitem"
                                                              tabIndex="-1"
                                                            >
                                                              <a
                                                                action="push"
                                                                href="#"
                                                                onClick={[Function]}
                                                                onKeyDown={[Function]}
                                                                role="menuitem"
                                                                tabIndex="-1"
                                                              >
                                                                Create New Version
                                                              </a>
                                                            </SafeAnchor>
                                                          </li>
                                                        </MenuItem>
                                                      </LinkContainer>
                                                      <MenuItem
                                                        bsClass="dropdown"
                                                        disabled={false}
                                                        divider={false}
                                                        header={false}
                                                        key=".2"
                                                        onKeyDown={[Function]}
                                                        onSelect={[Function]}
                                                      >
                                                        <li
                                                          className=""
                                                          role="presentation"
                                                        >
                                                          <SafeAnchor
                                                            componentClass="a"
                                                            onClick={[Function]}
                                                            onKeyDown={[Function]}
                                                            role="menuitem"
                                                            tabIndex="-1"
                                                          >
                                                            <a
                                                              href="#"
                                                              onClick={[Function]}
                                                              onKeyDown={[Function]}
                                                              role="menuitem"
                                                              tabIndex="-1"
                                                            >
                                                              Download
                                                            </a>
                                                          </SafeAnchor>
                                                        </li>
                                                      </MenuItem>
                                                      <MenuItem
                                                        bsClass="dropdown"
                                                        disabled={false}
                                                        divider={true}
                                                        header={false}
                                                        key=".3"
                                                        onKeyDown={[Function]}
                                                        onSelect={[Function]}
                                                      >
                                                        <li
                                                          className="divider"
                                                          onKeyDown={[Function]}
                                                          role="separator"
                                                        />
                                                      </MenuItem>
                                                      <MenuItem
                                                        bsClass="dropdown"
                                                        disabled={false}
                                                        divider={false}
                                                        header={false}
                                                        key=".4"
                                                        onKeyDown={[Function]}
                                                        onSelect={[Function]}
                                                      >
                                                        <li
                                                          className=""
                                                          role="presentation"
                                                        >
                                                          <SafeAnchor
                                                            componentClass="a"
                                                            onClick={[Function]}
                                                            onKeyDown={[Function]}
                                                            role="menuitem"
                                                            tabIndex="-1"
                                                          >
                                                            <a
                                                              href="#"
                                                              onClick={[Function]}
                                                              onKeyDown={[Function]}
                                                              role="menuitem"
                                                              tabIndex="-1"
                                                            >
                                                              Delete All Versions
                                                            </a>
                                                          </SafeAnchor>
                                                        </li>
                                                      </MenuItem>
                                                    </ul>
                                                  </RootCloseWrapper>
                                                </DropdownMenu>
                                              </div>
                                            </ButtonGroup>
                                          </Dropdown>
                                        </Uncontrolled(Dropdown)>
                                      </ForwardRef>
                                    </DropdownButton>
                                  </DropdownButton>
                                  <ContentPackDownloadControl
                                    contentPackId="10"
                                    revision={1}
                                  >
                                    <BootstrapModalWrapper
                                      backdrop="static"
                                      bsSize="large"
                                      onClose={[Function]}
                                      onHide={[Function]}
                                      onOpen={[Function]}
                                      showModal={false}
                                    >
                                      <Modal
                                        backdrop="static"
                                        bsSize="large"
                                        onHide={[Function]}
                                        show={false}
                                      >
                                        <Modal
                                          animation={true}
                                          autoFocus={true}
                                          backdrop="static"
                                          bsClass="modal"
                                          bsSize="large"
                                          className="c11"
                                          dialogComponentClass={[Function]}
                                          enforceFocus={true}
                                          keyboard={true}
                                          manager={
                                            ModalManager {
                                              "add": [Function],
                                              "containers": Array [],
                                              "data": Array [],
                                              "handleContainerOverflow": true,
                                              "hideSiblingNodes": true,
                                              "isTopModal": [Function],
                                              "modals": Array [],
                                              "remove": [Function],
                                            }
                                          }
                                          onHide={[Function]}
                                          renderBackdrop={[Function]}
                                          restoreFocus={true}
                                          show={false}
                                        >
                                          <Modal
                                            autoFocus={true}
                                            backdrop="static"
                                            backdropClassName="modal-backdrop"
                                            backdropTransition={[Function]}
                                            containerClassName="modal-open"
                                            enforceFocus={true}
                                            keyboard={true}
                                            manager={
                                              ModalManager {
                                                "add": [Function],
                                                "containers": Array [],
                                                "data": Array [],
                                                "handleContainerOverflow": true,
                                                "hideSiblingNodes": true,
                                                "isTopModal": [Function],
                                                "modals": Array [],
                                                "remove": [Function],
                                              }
                                            }
                                            onEntering={[Function]}
                                            onExited={[Function]}
                                            onHide={[Function]}
                                            onMouseUp={[Function]}
                                            renderBackdrop={[Function]}
                                            restoreFocus={true}
                                            show={false}
                                            transition={[Function]}
                                          />
                                        </Modal>
                                      </Modal>
                                    </BootstrapModalWrapper>
                                  </ContentPackDownloadControl>
                                </div>
                              </Col>
                            </div>
                          </Row>
                        </Row>
                        <Row
                          className="row-sm content-packs-summary"
                        >
                          <Row
                            bsClass="row"
                            className="c0 row-sm content-packs-summary"
                            componentClass="div"
                          >
                            <div
                              className="c0 row-sm content-packs-summary row"
                            >
                              <Col
                                bsClass="col"
                                componentClass="div"
                                md={12}
                              >
                                <div
                                  className="col-md-12"
                                >
                                  Fast but insecure backup
                                   
                                </div>
                              </Col>
                            </div>
                          </Row>
                        </Row>
                      </span>
                    </ListGroupItem>
                  </ListGroupItem__StyledListGroupItem>
                </ForwardRef>
              </ControlledTableListItem>
            </div>
          </ListGroup>
        </ListGroup>
      </div>
    </ControlledTableList>
    <Row
      className="row-sm"
    >
      <Row
        bsClass="row"
        className="c0 row-sm"
        componentClass="div"
      >
        <div
          className="c0 row-sm row"
        >
          <Col
            bsClass="col"
            componentClass="div"
            md={5}
          >
            <div
              className="col-md-5"
            />
          </Col>
          <Col
            bsClass="col"
            componentClass="div"
            md={5}
          >
            <div
              className="col-md-5"
            >
              <Pagination
                boundaryPagesRange={1}
                currentPage={1}
                disabled={false}
                hideEllipsis={false}
                hideFirstAndLastPageLinks={false}
                hidePreviousAndNextPageLinks={false}
                onChange={[Function]}
                siblingPagesRange={1}
                totalPages={2}
              >
                <UltimatePaginationComponent
                  boundaryPagesRange={1}
                  currentPage={1}
                  data-testid="graylog-pagination"
                  disabled={false}
                  hideEllipsis={false}
                  hideFirstAndLastPageLinks={false}
                  hidePreviousAndNextPageLinks={false}
                  onChange={[Function]}
                  siblingPagesRange={1}
                  totalPages={2}
                >
                  <Pagination__StyledBootstrapPagination
                    data-testid="graylog-pagination"
                  >
                    <Pagination
                      bsClass="pagination"
                      className="c4"
                      data-testid="graylog-pagination"
                    >
                      <ul
                        className="c4 pagination"
                        data-testid="graylog-pagination"
                      >
                        <Component
                          isActive={true}
                          isDisabled={false}
                          key="-3"
                          onClick={[Function]}
                          type="FIRST_PAGE_LINK"
                          value={1}
                        >
                          <First
                            disabled={true}
                            onClick={[Function]}
                          >
                            <li
                              aria-label="First"
                              className="disabled"
                              onClick={[Function]}
                            >
                              <span>
                                <Icon
                                  name="angle-double-left"
                                  type="solid"
                                >
                                  <FontAwesomeIcon
                                    icon={
                                      Object {
                                        "iconName": "angle-double-left",
                                        "prefix": "fas",
                                      }
                                    }
                                  >
                                    <svg
                                      className="svg-inline--fa fa-angle-double-left"
                                    />
                                  </FontAwesomeIcon>
                                </Icon>
                              </span>
                            </li>
                          </First>
                        </Component>
                        <Component
                          isActive={true}
                          isDisabled={false}
                          key="-4"
                          onClick={[Function]}
                          type="PREVIOUS_PAGE_LINK"
                          value={1}
                        >
                          <Prev
                            disabled={true}
                            onClick={[Function]}
                          >
                            <li
                              aria-label="Prev"
                              className="disabled"
                              onClick={[Function]}
                            >
                              <span>
                                <Icon
                                  name="angle-left"
                                  type="solid"
                                >
                                  <FontAwesomeIcon
                                    icon={
                                      Object {
                                        "iconName": "angle-left",
                                        "prefix": "fas",
                                      }
                                    }
                                  >
                                    <svg
                                      className="svg-inline--fa fa-angle-left"
                                    />
                                  </FontAwesomeIcon>
                                </Icon>
                              </span>
                            </li>
                          </Prev>
                        </Component>
                        <Component
                          isActive={true}
                          isDisabled={false}
                          key="1"
                          onClick={[Function]}
                          type="PAGE"
                          value={1}
                        >
                          <PaginationItem
                            active={true}
                            activeLabel="(current)"
                            disabled={false}
                            onClick={[Function]}
                          >
                            <li
                              className="active"
                            >
                              <span
                                disabled={false}
                                onClick={[Function]}
                              >
                                1
                                <span
                                  className="sr-only"
                                >
                                  (current)
                                </span>
                              </span>
                            </li>
                          </PaginationItem>
                        </Component>
                        <Component
                          isActive={false}
                          isDisabled={false}
                          key="2"
                          onClick={[Function]}
                          type="PAGE"
                          value={2}
                        >
                          <PaginationItem
                            active={false}
                            activeLabel="(current)"
                            disabled={false}
                            onClick={[Function]}
                          >
                            <li
                              className=""
                            >
                              <SafeAnchor
                                componentClass="a"
                                disabled={false}
                                onClick={[Function]}
                              >
                                <a
                                  href="#"
                                  onClick={[Function]}
                                  onKeyDown={[Function]}
                                  role="button"
                                >
                                  2
                                </a>
                              </SafeAnchor>
                            </li>
                          </PaginationItem>
                        </Component>
                        <Component
                          isActive={false}
                          isDisabled={false}
                          key="-5"
                          onClick={[Function]}
                          type="NEXT_PAGE_LINK"
                          value={2}
                        >
                          <Next
                            disabled={false}
                            onClick={[Function]}
                          >
                            <li
                              aria-label="Next"
                              className=""
                              onClick={[Function]}
                            >
                              <SafeAnchor
                                componentClass="a"
                              >
                                <a
                                  href="#"
                                  onClick={[Function]}
                                  onKeyDown={[Function]}
                                  role="button"
                                >
                                  <Icon
                                    name="angle-right"
                                    type="solid"
                                  >
                                    <FontAwesomeIcon
                                      icon={
                                        Object {
                                          "iconName": "angle-right",
                                          "prefix": "fas",
                                        }
                                      }
                                    >
                                      <svg
                                        className="svg-inline--fa fa-angle-right"
                                      />
                                    </FontAwesomeIcon>
                                  </Icon>
                                </a>
                              </SafeAnchor>
                            </li>
                          </Next>
                        </Component>
                        <Component
                          isActive={false}
                          isDisabled={false}
                          key="-6"
                          onClick={[Function]}
                          type="LAST_PAGE_LINK"
                          value={2}
                        >
                          <Last
                            disabled={false}
                            onClick={[Function]}
                          >
                            <li
                              aria-label="Last"
                              className=""
                              onClick={[Function]}
                            >
                              <SafeAnchor
                                componentClass="a"
                              >
                                <a
                                  href="#"
                                  onClick={[Function]}
                                  onKeyDown={[Function]}
                                  role="button"
                                >
                                  <Icon
                                    name="angle-double-right"
                                    type="solid"
                                  >
                                    <FontAwesomeIcon
                                      icon={
                                        Object {
                                          "iconName": "angle-double-right",
                                          "prefix": "fas",
                                        }
                                      }
                                    >
                                      <svg
                                        className="svg-inline--fa fa-angle-double-right"
                                      />
                                    </FontAwesomeIcon>
                                  </Icon>
                                </a>
                              </SafeAnchor>
                            </li>
                          </Last>
                        </Component>
                      </ul>
                    </Pagination>
                  </Pagination__StyledBootstrapPagination>
                </UltimatePaginationComponent>
              </Pagination>
            </div>
          </Col>
          <Col
            bsClass="col"
            className="text-right"
            componentClass="div"
            md={2}
          >
            <div
              className="text-right col-md-2"
            >
              <ContentPacksList__PageSizeSelector>
                <span
                  className="c5"
                >
                  <span>
                    Show:
                  </span>
                  <ContentPacksList__StyledSizeSelect
                    clearable={false}
                    onChange={[Function]}
                    options={
                      Array [
                        Object {
                          "label": "10",
                          "value": "10",
                        },
                        Object {
                          "label": "25",
                          "value": "25",
                        },
                        Object {
                          "label": "50",
                          "value": "50",
                        },
                        Object {
                          "label": "100",
                          "value": "100",
                        },
                      ]
                    }
                    value="10"
                  >
                    <WithTheme(Select)
                      className="c6"
                      clearable={false}
                      onChange={[Function]}
                      options={
                        Array [
                          Object {
                            "label": "10",
                            "value": "10",
                          },
                          Object {
                            "label": "25",
                            "value": "25",
                          },
                          Object {
                            "label": "50",
                            "value": "50",
                          },
                          Object {
                            "label": "100",
                            "value": "100",
                          },
                        ]
                      }
                      value="10"
                    >
                      <Select
                        allowCreate={false}
                        autoFocus={false}
                        className="c6"
                        clearable={false}
                        components={null}
                        delimiter=","
                        disabled={false}
                        displayKey="label"
                        ignoreAccents={true}
                        matchProp="any"
                        multi={false}
                        onChange={[Function]}
                        options={
                          Array [
                            Object {
                              "label": "10",
                              "value": "10",
                            },
                            Object {
                              "label": "25",
                              "value": "25",
                            },
                            Object {
                              "label": "50",
                              "value": "50",
                            },
                            Object {
                              "label": "100",
                              "value": "100",
                            },
                          ]
                        }
                        size="normal"
                        theme={
                          Object {
                            "breakpoints": Object {
                              "max": Object {
                                "lg": "1199px",
                                "md": "991px",
                                "sm": "767px",
                                "xs": "479px",
                              },
                              "min": Object {
                                "lg": "1200px",
                                "md": "992px",
                                "sm": "768px",
                                "xs": "480px",
                              },
                            },
                            "changeMode": [Function],
                            "colors": Object {
                              "brand": Object {
                                "primary": "#ff3633",
                                "secondary": "#fff",
                                "tertiary": "#1f1f1f",
                              },
                              "global": Object {
                                "background": "#e8e8e8",
                                "contentBackground": "#fff",
                                "link": "#702785",
                                "linkHover": "#410057",
                                "navigationBackground": "#fff",
                                "navigationBoxShadow": "rgba(115,115,115,0.25)",
                                "textAlt": "#fff",
                                "textDefault": "#1f1f1f",
                              },
                              "gray": Object {
                                "10": "#1f1f1f",
                                "100": "#ffffff",
                                "20": "#383838",
                                "30": "#515151",
                                "40": "#6a6a6a",
                                "50": "#838383",
                                "60": "#9b9b9b",
                                "70": "#b4b4b4",
                                "80": "#cdcdcd",
                                "90": "#e6e6e6",
                              },
                              "input": Object {
                                "background": "#fff",
                                "backgroundDisabled": "#dddddd",
                                "border": "#a6a6a6",
                                "borderFocus": "#7894ce",
                                "boxShadow": "inset 0 1px 1px rgba(0, 0, 0, 0.075), 0 0 8px rgba(120,148,206,0.4)",
                                "color": "#1f1f1f",
                                "colorDisabled": "#9b9b9b",
                                "placeholder": "#9b9b9b",
                              },
                              "table": Object {
                                "background": "#fafafa",
                                "backgroundAlt": "#f0f0f0",
                                "backgroundHover": "#f5f5f5",
                                "variant": Object {
                                  "active": "#e6e6e6",
                                  "danger": "#eddddd",
                                  "info": "#dde2f0",
                                  "primary": "#e4dee7",
                                  "success": "#ddeddf",
                                  "warning": "#fff5dd",
                                },
                                "variantHover": Object {
                                  "active": "#d0d0d0",
                                  "danger": "#debdbd",
                                  "info": "#bdc8e4",
                                  "primary": "#cbbfd1",
                                  "success": "#bddec2",
                                  "warning": "#ffecbd",
                                },
                              },
                              "variant": Object {
                                "danger": "#ad0707",
                                "dark": Object {
                                  "danger": "#990606",
                                  "default": "#737373",
                                  "info": "#0057a8",
                                  "primary": "#632275",
                                  "success": "#009a3a",
                                  "warning": "#e1b900",
                                },
                                "darker": Object {
                                  "danger": "#740505",
                                  "default": "#575757",
                                  "info": "#00427f",
                                  "primary": "#4b1a59",
                                  "success": "#00752c",
                                  "warning": "#ab8d00",
                                },
                                "darkest": Object {
                                  "danger": "#3c0202",
                                  "default": "#2d2d2d",
                                  "info": "#002242",
                                  "primary": "#270e2e",
                                  "success": "#003c17",
                                  "warning": "#584900",
                                },
                                "default": "#828282",
                                "info": "#0063be",
                                "light": Object {
                                  "danger": "#c27878",
                                  "default": "#a6a6a6",
                                  "info": "#7894ce",
                                  "primary": "#9b7ca8",
                                  "success": "#78c385",
                                  "warning": "#ffdd78",
                                },
                                "lighter": Object {
                                  "danger": "#debdbd",
                                  "default": "#d0d0d0",
                                  "info": "#bdc8e4",
                                  "primary": "#cbbfd1",
                                  "success": "#bddec2",
                                  "warning": "#ffecbd",
                                },
                                "lightest": Object {
                                  "danger": "#f7efef",
                                  "default": "#f3f3f3",
                                  "info": "#eff2f8",
                                  "primary": "#f2f0f4",
                                  "success": "#eff7f0",
                                  "warning": "#fffaef",
                                },
                                "primary": "#702785",
                                "success": "#00ae42",
                                "warning": "#ffd200",
                              },
                            },
                            "components": Object {
                              "aceEditor": Array [
                                ".ace_editor{border:1px solid ",
                                "#cdcdcd",
                                ";border-radius:5px;}.ace-graylog{background-color:",
                                "#fff",
                                ";color:",
                                "#2d2d2d",
                                ";&.ace_multiselect .ace_selection.ace_start{box-shadow:0 0 3px 0 ",
                                "#fff",
                                ";}.ace_gutter{background:",
                                "#f3f3f3",
                                ";color:",
                                "#2d2d2d",
                                ";}.ace_print-margin{width:1px;background:",
                                "#f3f3f3",
                                ";}.ace_cursor{color:",
                                "#a6a6a6",
                                ";}.ace_marker-layer{.ace_selection{background:",
                                "#b4b4b4",
                                ";}.ace_step{background:rgb(255,255,0);}.ace_bracket{margin:-1px 0 0 -1px;border:1px solid ",
                                "#b4b4b4",
                                ";}.ace_selected-word{border:1px solid ",
                                "#9b9b9b",
                                ";}.ace_active-line{background:",
                                "#e6e6e6",
                                ";}}.ace_gutter-active-line{background-color:",
                                "#cdcdcd",
                                ";}.ace_invisible{color:",
                                "#b4b4b4",
                                ";}.ace_keyword,.ace_meta,.ace_storage,.ace_storage.ace_type,.ace_support.ace_type{color:",
                                "#702785",
                                ";}.ace_keyword.ace_operator{color:",
                                "#00427f",
                                ";}.ace_constant.ace_character,.ace_constant.ace_language,.ace_constant.ace_numeric,.ace_keyword.ace_other.ace_unit,.ace_support.ace_constant,.ace_variable.ace_parameter{color:",
                                "#4b1a59",
                                ";}.ace_constant.ace_other{color:",
                                "#575757",
                                ";}.ace_invalid{color:",
                                "#fff",
                                ";background-color:",
                                "#c27878",
                                ";}.ace_invalid.ace_deprecated{color:",
                                "#fff",
                                ";background-color:",
                                "#702785",
                                ";}.ace_fold{background-color:",
                                "#0063be",
                                ";border-color:",
                                "#2d2d2d",
                                ";}.ace_entity.ace_name.ace_function,.ace_support.ace_function,.ace_variable{color:",
                                "#0063be",
                                ";}.ace_support.ace_class,.ace_support.ace_type{color:",
                                "#ab8d00",
                                ";}.ace_heading,.ace_markup.ace_heading,.ace_string{color:",
                                "#00752c",
                                ";}.ace_entity.ace_name.ace_tag,.ace_entity.ace_other.ace_attribute-name,.ace_meta.ace_tag,.ace_string.ace_regexp,.ace_variable{color:",
                                "#c27878",
                                ";}.ace_comment{color:",
                                "#737373",
                                ";}}",
                              ],
                              "button": Array [
                                Array [
                                  "&.btn-",
                                  "danger",
                                  "{background-color:",
                                  "#ad0707",
                                  ";border-color:",
                                  "#b23939",
                                  ";color:",
                                  "rgb(252,249,249)",
                                  ";transition:background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;:hover{background-color:",
                                  "#a00e0e",
                                  ";border-color:",
                                  "#a53636",
                                  ";color:",
                                  "#e9e6e6",
                                  ";}&.active{background-color:",
                                  "#b75151",
                                  ";border-color:",
                                  "#bc6363",
                                  ";color:",
                                  "rgb(252,249,249)",
                                  ";:hover{background-color:",
                                  "#a94c4c",
                                  ";border-color:",
                                  "#ad5c5c",
                                  ";color:",
                                  "#e9e6e6",
                                  ";}}&[disabled],&.disabled{background-color:",
                                  "#c07272",
                                  ";border-color:",
                                  "#bc6363",
                                  ";color:",
                                  "rgb(252,250,250)",
                                  ";:hover{background-color:",
                                  "#c07272",
                                  ";border-color:",
                                  "#bc6363",
                                  ";color:",
                                  "rgb(252,250,250)",
                                  ";}}}",
                                ],
                                Array [
                                  "&.btn-",
                                  "default",
                                  "{background-color:",
                                  "#e6e6e6",
                                  ";border-color:",
                                  "#e0e0e0",
                                  ";color:",
                                  "rgb(73,73,73)",
                                  ";transition:background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;:hover{background-color:",
                                  "#d4d4d4",
                                  ";border-color:",
                                  "#cfcfcf",
                                  ";color:",
                                  "#444444",
                                  ";}&.active{background-color:",
                                  "#dadada",
                                  ";border-color:",
                                  "#d4d4d4",
                                  ";color:",
                                  "rgb(49,49,49)",
                                  ";:hover{background-color:",
                                  "#cacaca",
                                  ";border-color:",
                                  "#c4c4c4",
                                  ";color:",
                                  "#2f2f2f",
                                  ";}}&[disabled],&.disabled{background-color:",
                                  "#cecece",
                                  ";border-color:",
                                  "#d4d4d4",
                                  ";color:",
                                  "rgb(80,80,80)",
                                  ";:hover{background-color:",
                                  "#cecece",
                                  ";border-color:",
                                  "#d4d4d4",
                                  ";color:",
                                  "rgb(80,80,80)",
                                  ";}}}",
                                ],
                                Array [
                                  "&.btn-",
                                  "info",
                                  "{background-color:",
                                  "#0063be",
                                  ";border-color:",
                                  "#3970c2",
                                  ";color:",
                                  "rgb(249,250,252)",
                                  ";transition:background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;:hover{background-color:",
                                  "#0c5cb0",
                                  ";border-color:",
                                  "#3668b3",
                                  ";color:",
                                  "#e6e7e9",
                                  ";}&.active{background-color:",
                                  "#517cc5",
                                  ";border-color:",
                                  "#6386c9",
                                  ";color:",
                                  "rgb(249,250,252)",
                                  ";:hover{background-color:",
                                  "#4b73b6",
                                  ";border-color:",
                                  "#5c7dba",
                                  ";color:",
                                  "#e6e7e9",
                                  ";}}&[disabled],&.disabled{background-color:",
                                  "#7290cd",
                                  ";border-color:",
                                  "#6386c9",
                                  ";color:",
                                  "rgb(250,251,253)",
                                  ";:hover{background-color:",
                                  "#7290cd",
                                  ";border-color:",
                                  "#6386c9",
                                  ";color:",
                                  "rgb(250,251,253)",
                                  ";}}}",
                                ],
                                Array [
                                  "&.btn-",
                                  "link",
                                  "{background-color:",
                                  "rgba(255, 255, 255, 0)",
                                  ";border-color:",
                                  "rgba(255, 255, 255, 0)",
                                  ";color:",
                                  "#702785",
                                  ";transition:background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;:hover{background-color:",
                                  "#ebebeb26",
                                  ";border-color:",
                                  "#ebebeb26",
                                  ";color:",
                                  "#68267b",
                                  ";}&.active{background-color:",
                                  "rgba(255, 255, 255, 0)",
                                  ";border-color:",
                                  "rgba(255, 255, 255, 0)",
                                  ";color:",
                                  "#410057",
                                  ";:hover{background-color:",
                                  "rgba(255, 255, 255, 0)",
                                  ";border-color:",
                                  "#ebebeb26",
                                  ";color:",
                                  "#3d0c51",
                                  ";}}&[disabled],&.disabled{background-color:",
                                  "rgba(255, 255, 255, 0)",
                                  ";border-color:",
                                  "rgba(255, 255, 255, 0)",
                                  ";color:",
                                  "#702785",
                                  ";:hover{background-color:",
                                  "rgba(255, 255, 255, 0)",
                                  ";border-color:",
                                  "rgba(255, 255, 255, 0)",
                                  ";color:",
                                  "#702785",
                                  ";}}}",
                                ],
                                Array [
                                  "&.btn-",
                                  "primary",
                                  "{background-color:",
                                  "#702785",
                                  ";border-color:",
                                  "#7b458e",
                                  ";color:",
                                  "rgb(234,229,236)",
                                  ";transition:background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;:hover{background-color:",
                                  "#68267b",
                                  ";border-color:",
                                  "#724083",
                                  ";color:",
                                  "#d8d3da",
                                  ";}&.active{background-color:",
                                  "#855996",
                                  ";border-color:",
                                  "#8f699d",
                                  ";color:",
                                  "rgb(250,249,251)",
                                  ";:hover{background-color:",
                                  "#7c538b",
                                  ";border-color:",
                                  "#846292",
                                  ";color:",
                                  "#e7e6e8",
                                  ";}}&[disabled],&.disabled{background-color:",
                                  "#9877a5",
                                  ";border-color:",
                                  "#8f699d",
                                  ";color:",
                                  "rgb(251,250,251)",
                                  ";:hover{background-color:",
                                  "#9877a5",
                                  ";border-color:",
                                  "#8f699d",
                                  ";color:",
                                  "rgb(251,250,251)",
                                  ";}}}",
                                ],
                                Array [
                                  "&.btn-",
                                  "success",
                                  "{background-color:",
                                  "#00ae42",
                                  ";border-color:",
                                  "#39b356",
                                  ";color:",
                                  "rgb(249,252,249)",
                                  ";transition:background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;:hover{background-color:",
                                  "#0ca13e",
                                  ";border-color:",
                                  "#36a550",
                                  ";color:",
                                  "#e6e9e6",
                                  ";}&.active{background-color:",
                                  "#51b866",
                                  ";border-color:",
                                  "#63bc74",
                                  ";color:",
                                  "rgb(249,252,250)",
                                  ";:hover{background-color:",
                                  "#4baa5f",
                                  ";border-color:",
                                  "#5cae6c",
                                  ";color:",
                                  "#e6e9e7",
                                  ";}}&[disabled],&.disabled{background-color:",
                                  "#72c180",
                                  ";border-color:",
                                  "#63bc74",
                                  ";color:",
                                  "rgb(250,252,250)",
                                  ";:hover{background-color:",
                                  "#72c180",
                                  ";border-color:",
                                  "#63bc74",
                                  ";color:",
                                  "rgb(250,252,250)",
                                  ";}}}",
                                ],
                                Array [
                                  "&.btn-",
                                  "warning",
                                  "{background-color:",
                                  "#ffd200",
                                  ";border-color:",
                                  "#f9cd07",
                                  ";color:",
                                  "rgb(57,47,0)",
                                  ";transition:background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;:hover{background-color:",
                                  "#ebc20c",
                                  ";border-color:",
                                  "#e6bd0e",
                                  ";color:",
                                  "#362d0c",
                                  ";}&.active{background-color:",
                                  "#f2c70a",
                                  ";border-color:",
                                  "#ebc20c",
                                  ";color:",
                                  "rgb(54,45,2)",
                                  ";:hover{background-color:",
                                  "#e0b80f",
                                  ";border-color:",
                                  "#d9b310",
                                  ";color:",
                                  "#332b0c",
                                  ";}}&[disabled],&.disabled{background-color:",
                                  "#e4bc0e",
                                  ";border-color:",
                                  "#ebc20c",
                                  ";color:",
                                  "rgb(88,73,5)",
                                  ";:hover{background-color:",
                                  "#e4bc0e",
                                  ";border-color:",
                                  "#ebc20c",
                                  ";color:",
                                  "rgb(88,73,5)",
                                  ";}}}",
                                ],
                              ],
                            },
                            "fonts": Object {
                              "family": Object {
                                "body": "\\"Open Sans\\", \\"Helvetica Neue\\", Helvetica, Arial, sans-serif",
                                "monospace": "\\"Roboto Mono\\", Menlo, Monaco, Consolas, \\"Courier New\\", monospace",
                              },
                              "size": Object {
                                "body": "1rem",
                                "h1": "1.802rem",
                                "h2": "1.602rem",
                                "h3": "1.424rem",
                                "h4": "1.266rem",
                                "h5": "1.125rem",
                                "h6": "1rem",
                                "huge": "2.027rem",
                                "large": "1.125rem",
                                "root": "87.5%",
                                "small": "0.889rem",
                                "tiny": "0.79rem",
                              },
                            },
                            "mode": "teint",
                            "utils": Object {
                              "colorLevel": [Function],
                              "contrastingColor": [Function],
                              "opacify": [Function],
                              "readableColor": [Function],
                            },
                          }
                        }
                        value="10"
                        valueKey="value"
                      >
                        <StateManager
                          allowCreate={false}
                          autoFocus={false}
                          className="c6"
                          components={
                            Object {
                              "DropdownIndicator": [Function],
                              "IndicatorSeparator": [Function],
                              "MultiValueRemove": [Function],
                            }
                          }
                          defaultInputValue=""
                          defaultMenuIsOpen={false}
                          defaultValue={null}
                          delimiter=","
                          displayKey="label"
                          filterOption={[Function]}
                          getOptionLabel={[Function]}
                          getOptionValue={[Function]}
                          ignoreAccents={true}
                          isClearable={false}
                          isDisabled={false}
                          isMulti={false}
                          isOptionDisabled={[Function]}
                          onChange={[Function]}
                          options={
                            Array [
                              Object {
                                "label": "10",
                                "value": "10",
                              },
                              Object {
                                "label": "25",
                                "value": "25",
                              },
                              Object {
                                "label": "50",
                                "value": "50",
                              },
                              Object {
                                "label": "100",
                                "value": "100",
                              },
                            ]
                          }
                          size="normal"
                          styles={
                            Object {
                              "clearIndicator": [Function],
                              "control": [Function],
                              "dropdownIndicator": [Function],
                              "menu": [Function],
                              "multiValue": [Function],
                              "multiValueLabel": [Function],
                              "multiValueRemove": [Function],
                              "placeholder": [Function],
                              "singleValue": [Function],
                              "valueContainer": [Function],
                            }
                          }
                          theme={[Function]}
                          value={
                            Array [
                              Object {
                                "label": "10",
                                "value": "10",
                              },
                            ]
                          }
                          valueKey="value"
                        >
                          <Select
                            allowCreate={false}
                            autoFocus={false}
                            backspaceRemovesValue={true}
                            blurInputOnSelect={true}
                            captureMenuScroll={false}
                            className="c6"
                            closeMenuOnScroll={false}
                            closeMenuOnSelect={true}
                            components={
                              Object {
                                "DropdownIndicator": [Function],
                                "IndicatorSeparator": [Function],
                                "MultiValueRemove": [Function],
                              }
                            }
                            controlShouldRenderValue={true}
                            delimiter=","
                            displayKey="label"
                            escapeClearsValue={false}
                            filterOption={[Function]}
                            formatGroupLabel={[Function]}
                            getOptionLabel={[Function]}
                            getOptionValue={[Function]}
                            ignoreAccents={true}
                            inputValue=""
                            isClearable={false}
                            isDisabled={false}
                            isLoading={false}
                            isMulti={false}
                            isOptionDisabled={[Function]}
                            isRtl={false}
                            isSearchable={true}
                            loadingMessage={[Function]}
                            maxMenuHeight={300}
                            menuIsOpen={false}
                            menuPlacement="bottom"
                            menuPosition="absolute"
                            menuShouldBlockScroll={false}
                            menuShouldScrollIntoView={true}
                            minMenuHeight={140}
                            noOptionsMessage={[Function]}
                            onChange={[Function]}
                            onInputChange={[Function]}
                            onMenuClose={[Function]}
                            onMenuOpen={[Function]}
                            openMenuOnClick={true}
                            openMenuOnFocus={false}
                            options={
                              Array [
                                Object {
                                  "label": "10",
                                  "value": "10",
                                },
                                Object {
                                  "label": "25",
                                  "value": "25",
                                },
                                Object {
                                  "label": "50",
                                  "value": "50",
                                },
                                Object {
                                  "label": "100",
                                  "value": "100",
                                },
                              ]
                            }
                            pageSize={5}
                            placeholder="Select..."
                            screenReaderStatus={[Function]}
                            size="normal"
                            styles={
                              Object {
                                "clearIndicator": [Function],
                                "control": [Function],
                                "dropdownIndicator": [Function],
                                "menu": [Function],
                                "multiValue": [Function],
                                "multiValueLabel": [Function],
                                "multiValueRemove": [Function],
                                "placeholder": [Function],
                                "singleValue": [Function],
                                "valueContainer": [Function],
                              }
                            }
                            tabIndex="0"
                            tabSelectsValue={true}
                            theme={[Function]}
                            value={
                              Array [
                                Object {
                                  "label": "10",
                                  "value": "10",
                                },
                              ]
                            }
                            valueKey="value"
                          >
                            <SelectContainer
                              className="c6"
                              clearValue={[Function]}
                              cx={[Function]}
                              getStyles={[Function]}
                              getValue={[Function]}
                              hasValue={true}
                              innerProps={
                                Object {
                                  "id": undefined,
                                  "onKeyDown": [Function],
                                }
                              }
                              isDisabled={false}
                              isFocused={false}
                              isMulti={false}
                              isRtl={false}
                              options={
                                Array [
                                  Object {
                                    "label": "10",
                                    "value": "10",
                                  },
                                  Object {
                                    "label": "25",
                                    "value": "25",
                                  },
                                  Object {
                                    "label": "50",
                                    "value": "50",
                                  },
                                  Object {
                                    "label": "100",
                                    "value": "100",
                                  },
                                ]
                              }
                              selectOption={[Function]}
                              selectProps={
                                Object {
                                  "addLabelText": undefined,
                                  "allowCreate": false,
                                  "autoFocus": false,
                                  "backspaceRemovesValue": true,
                                  "blurInputOnSelect": true,
                                  "captureMenuScroll": false,
                                  "className": "ContentPacksList__StyledSizeSelect-dqllb7-1 c6",
                                  "closeMenuOnScroll": false,
                                  "closeMenuOnSelect": true,
                                  "components": Object {
                                    "DropdownIndicator": [Function],
                                    "IndicatorSeparator": [Function],
                                    "MultiValueRemove": [Function],
                                  },
                                  "controlShouldRenderValue": true,
                                  "delimiter": ",",
                                  "displayKey": "label",
                                  "escapeClearsValue": false,
                                  "filterOption": [Function],
                                  "formatGroupLabel": [Function],
                                  "getOptionLabel": [Function],
                                  "getOptionValue": [Function],
                                  "ignoreAccents": true,
                                  "inputValue": "",
                                  "isClearable": false,
                                  "isDisabled": false,
                                  "isLoading": false,
                                  "isMulti": false,
                                  "isOptionDisabled": [Function],
                                  "isRtl": false,
                                  "isSearchable": true,
                                  "loadingMessage": [Function],
                                  "maxMenuHeight": 300,
                                  "menuIsOpen": false,
                                  "menuPlacement": "bottom",
                                  "menuPosition": "absolute",
                                  "menuShouldBlockScroll": false,
                                  "menuShouldScrollIntoView": true,
                                  "minMenuHeight": 140,
                                  "noOptionsMessage": [Function],
                                  "onChange": [Function],
                                  "onInputChange": [Function],
                                  "onMenuClose": [Function],
                                  "onMenuOpen": [Function],
                                  "onReactSelectChange": undefined,
                                  "openMenuOnClick": true,
                                  "openMenuOnFocus": false,
                                  "options": Array [
                                    Object {
                                      "label": "10",
                                      "value": "10",
                                    },
                                    Object {
                                      "label": "25",
                                      "value": "25",
                                    },
                                    Object {
                                      "label": "50",
                                      "value": "50",
                                    },
                                    Object {
                                      "label": "100",
                                      "value": "100",
                                    },
                                  ],
                                  "pageSize": 5,
                                  "placeholder": "Select...",
                                  "screenReaderStatus": [Function],
                                  "size": "normal",
                                  "styles": Object {
                                    "clearIndicator": [Function],
                                    "control": [Function],
                                    "dropdownIndicator": [Function],
                                    "menu": [Function],
                                    "multiValue": [Function],
                                    "multiValueLabel": [Function],
                                    "multiValueRemove": [Function],
                                    "placeholder": [Function],
                                    "singleValue": [Function],
                                    "valueContainer": [Function],
                                  },
                                  "tabIndex": "0",
                                  "tabSelectsValue": true,
                                  "theme": [Function],
                                  "value": Array [
                                    Object {
                                      "label": "10",
                                      "value": "10",
                                    },
                                  ],
                                  "valueKey": "value",
                                }
                              }
                              setValue={[Function]}
                              theme={
                                Object {
                                  "borderRadius": 4,
                                  "colors": Object {
                                    "danger": "#00427f",
                                    "dangerLight": "#bdc8e4",
                                    "neutral0": "#fff",
                                    "neutral10": "#eff2f8",
                                    "neutral20": "#a6a6a6",
                                    "neutral30": "#b4b4b4",
                                    "neutral40": "#9b9b9b",
                                    "neutral5": "#dddddd",
                                    "neutral50": "#838383",
                                    "neutral60": "#6a6a6a",
                                    "neutral70": "#515151",
                                    "neutral80": "#383838",
                                    "neutral90": "#1f1f1f",
                                    "primary": "#7894ce",
                                    "primary25": "#f3f3f3",
                                    "primary50": "#d0d0d0",
                                    "primary75": "#a6a6a6",
                                  },
                                  "spacing": Object {
                                    "baseUnit": 4,
                                    "controlHeight": 38,
                                    "menuGutter": 8,
                                  },
                                }
                              }
                            >
                              <div
                                className="css-1pcexqc-container c6"
                                onKeyDown={[Function]}
                              >
                                <Control
                                  clearValue={[Function]}
                                  cx={[Function]}
                                  getStyles={[Function]}
                                  getValue={[Function]}
                                  hasValue={true}
                                  innerProps={
                                    Object {
                                      "onMouseDown": [Function],
                                      "onTouchEnd": [Function],
                                    }
                                  }
                                  innerRef={[Function]}
                                  isDisabled={false}
                                  isFocused={false}
                                  isMulti={false}
                                  isRtl={false}
                                  menuIsOpen={false}
                                  options={
                                    Array [
                                      Object {
                                        "label": "10",
                                        "value": "10",
                                      },
                                      Object {
                                        "label": "25",
                                        "value": "25",
                                      },
                                      Object {
                                        "label": "50",
                                        "value": "50",
                                      },
                                      Object {
                                        "label": "100",
                                        "value": "100",
                                      },
                                    ]
                                  }
                                  selectOption={[Function]}
                                  selectProps={
                                    Object {
                                      "addLabelText": undefined,
                                      "allowCreate": false,
                                      "autoFocus": false,
                                      "backspaceRemovesValue": true,
                                      "blurInputOnSelect": true,
                                      "captureMenuScroll": false,
                                      "className": "ContentPacksList__StyledSizeSelect-dqllb7-1 c6",
                                      "closeMenuOnScroll": false,
                                      "closeMenuOnSelect": true,
                                      "components": Object {
                                        "DropdownIndicator": [Function],
                                        "IndicatorSeparator": [Function],
                                        "MultiValueRemove": [Function],
                                      },
                                      "controlShouldRenderValue": true,
                                      "delimiter": ",",
                                      "displayKey": "label",
                                      "escapeClearsValue": false,
                                      "filterOption": [Function],
                                      "formatGroupLabel": [Function],
                                      "getOptionLabel": [Function],
                                      "getOptionValue": [Function],
                                      "ignoreAccents": true,
                                      "inputValue": "",
                                      "isClearable": false,
                                      "isDisabled": false,
                                      "isLoading": false,
                                      "isMulti": false,
                                      "isOptionDisabled": [Function],
                                      "isRtl": false,
                                      "isSearchable": true,
                                      "loadingMessage": [Function],
                                      "maxMenuHeight": 300,
                                      "menuIsOpen": false,
                                      "menuPlacement": "bottom",
                                      "menuPosition": "absolute",
                                      "menuShouldBlockScroll": false,
                                      "menuShouldScrollIntoView": true,
                                      "minMenuHeight": 140,
                                      "noOptionsMessage": [Function],
                                      "onChange": [Function],
                                      "onInputChange": [Function],
                                      "onMenuClose": [Function],
                                      "onMenuOpen": [Function],
                                      "onReactSelectChange": undefined,
                                      "openMenuOnClick": true,
                                      "openMenuOnFocus": false,
                                      "options": Array [
                                        Object {
                                          "label": "10",
                                          "value": "10",
                                        },
                                        Object {
                                          "label": "25",
                                          "value": "25",
                                        },
                                        Object {
                                          "label": "50",
                                          "value": "50",
                                        },
                                        Object {
                                          "label": "100",
                                          "value": "100",
                                        },
                                      ],
                                      "pageSize": 5,
                                      "placeholder": "Select...",
                                      "screenReaderStatus": [Function],
                                      "size": "normal",
                                      "styles": Object {
                                        "clearIndicator": [Function],
                                        "control": [Function],
                                        "dropdownIndicator": [Function],
                                        "menu": [Function],
                                        "multiValue": [Function],
                                        "multiValueLabel": [Function],
                                        "multiValueRemove": [Function],
                                        "placeholder": [Function],
                                        "singleValue": [Function],
                                        "valueContainer": [Function],
                                      },
                                      "tabIndex": "0",
                                      "tabSelectsValue": true,
                                      "theme": [Function],
                                      "value": Array [
                                        Object {
                                          "label": "10",
                                          "value": "10",
                                        },
                                      ],
                                      "valueKey": "value",
                                    }
                                  }
                                  setValue={[Function]}
                                  theme={
                                    Object {
                                      "borderRadius": 4,
                                      "colors": Object {
                                        "danger": "#00427f",
                                        "dangerLight": "#bdc8e4",
                                        "neutral0": "#fff",
                                        "neutral10": "#eff2f8",
                                        "neutral20": "#a6a6a6",
                                        "neutral30": "#b4b4b4",
                                        "neutral40": "#9b9b9b",
                                        "neutral5": "#dddddd",
                                        "neutral50": "#838383",
                                        "neutral60": "#6a6a6a",
                                        "neutral70": "#515151",
                                        "neutral80": "#383838",
                                        "neutral90": "#1f1f1f",
                                        "primary": "#7894ce",
                                        "primary25": "#f3f3f3",
                                        "primary50": "#d0d0d0",
                                        "primary75": "#a6a6a6",
                                      },
                                      "spacing": Object {
                                        "baseUnit": 4,
                                        "controlHeight": 38,
                                        "menuGutter": 8,
                                      },
                                    }
                                  }
                                >
                                  <div
                                    className="css-ghr2vn-control"
                                    onMouseDown={[Function]}
                                    onTouchEnd={[Function]}
                                  >
                                    <ValueContainer
                                      clearValue={[Function]}
                                      cx={[Function]}
                                      getStyles={[Function]}
                                      getValue={[Function]}
                                      hasValue={true}
                                      isDisabled={false}
                                      isMulti={false}
                                      isRtl={false}
                                      options={
                                        Array [
                                          Object {
                                            "label": "10",
                                            "value": "10",
                                          },
                                          Object {
                                            "label": "25",
                                            "value": "25",
                                          },
                                          Object {
                                            "label": "50",
                                            "value": "50",
                                          },
                                          Object {
                                            "label": "100",
                                            "value": "100",
                                          },
                                        ]
                                      }
                                      selectOption={[Function]}
                                      selectProps={
                                        Object {
                                          "addLabelText": undefined,
                                          "allowCreate": false,
                                          "autoFocus": false,
                                          "backspaceRemovesValue": true,
                                          "blurInputOnSelect": true,
                                          "captureMenuScroll": false,
                                          "className": "ContentPacksList__StyledSizeSelect-dqllb7-1 c6",
                                          "closeMenuOnScroll": false,
                                          "closeMenuOnSelect": true,
                                          "components": Object {
                                            "DropdownIndicator": [Function],
                                            "IndicatorSeparator": [Function],
                                            "MultiValueRemove": [Function],
                                          },
                                          "controlShouldRenderValue": true,
                                          "delimiter": ",",
                                          "displayKey": "label",
                                          "escapeClearsValue": false,
                                          "filterOption": [Function],
                                          "formatGroupLabel": [Function],
                                          "getOptionLabel": [Function],
                                          "getOptionValue": [Function],
                                          "ignoreAccents": true,
                                          "inputValue": "",
                                          "isClearable": false,
                                          "isDisabled": false,
                                          "isLoading": false,
                                          "isMulti": false,
                                          "isOptionDisabled": [Function],
                                          "isRtl": false,
                                          "isSearchable": true,
                                          "loadingMessage": [Function],
                                          "maxMenuHeight": 300,
                                          "menuIsOpen": false,
                                          "menuPlacement": "bottom",
                                          "menuPosition": "absolute",
                                          "menuShouldBlockScroll": false,
                                          "menuShouldScrollIntoView": true,
                                          "minMenuHeight": 140,
                                          "noOptionsMessage": [Function],
                                          "onChange": [Function],
                                          "onInputChange": [Function],
                                          "onMenuClose": [Function],
                                          "onMenuOpen": [Function],
                                          "onReactSelectChange": undefined,
                                          "openMenuOnClick": true,
                                          "openMenuOnFocus": false,
                                          "options": Array [
                                            Object {
                                              "label": "10",
                                              "value": "10",
                                            },
                                            Object {
                                              "label": "25",
                                              "value": "25",
                                            },
                                            Object {
                                              "label": "50",
                                              "value": "50",
                                            },
                                            Object {
                                              "label": "100",
                                              "value": "100",
                                            },
                                          ],
                                          "pageSize": 5,
                                          "placeholder": "Select...",
                                          "screenReaderStatus": [Function],
                                          "size": "normal",
                                          "styles": Object {
                                            "clearIndicator": [Function],
                                            "control": [Function],
                                            "dropdownIndicator": [Function],
                                            "menu": [Function],
                                            "multiValue": [Function],
                                            "multiValueLabel": [Function],
                                            "multiValueRemove": [Function],
                                            "placeholder": [Function],
                                            "singleValue": [Function],
                                            "valueContainer": [Function],
                                          },
                                          "tabIndex": "0",
                                          "tabSelectsValue": true,
                                          "theme": [Function],
                                          "value": Array [
                                            Object {
                                              "label": "10",
                                              "value": "10",
                                            },
                                          ],
                                          "valueKey": "value",
                                        }
                                      }
                                      setValue={[Function]}
                                      theme={
                                        Object {
                                          "borderRadius": 4,
                                          "colors": Object {
                                            "danger": "#00427f",
                                            "dangerLight": "#bdc8e4",
                                            "neutral0": "#fff",
                                            "neutral10": "#eff2f8",
                                            "neutral20": "#a6a6a6",
                                            "neutral30": "#b4b4b4",
                                            "neutral40": "#9b9b9b",
                                            "neutral5": "#dddddd",
                                            "neutral50": "#838383",
                                            "neutral60": "#6a6a6a",
                                            "neutral70": "#515151",
                                            "neutral80": "#383838",
                                            "neutral90": "#1f1f1f",
                                            "primary": "#7894ce",
                                            "primary25": "#f3f3f3",
                                            "primary50": "#d0d0d0",
                                            "primary75": "#a6a6a6",
                                          },
                                          "spacing": Object {
                                            "baseUnit": 4,
                                            "controlHeight": 38,
                                            "menuGutter": 8,
                                          },
                                        }
                                      }
                                    >
                                      <div
                                        className="css-1hio1c"
                                      >
                                        <SingleValue
                                          clearValue={[Function]}
                                          cx={[Function]}
                                          data={
                                            Object {
                                              "label": "10",
                                              "value": "10",
                                            }
                                          }
                                          getStyles={[Function]}
                                          getValue={[Function]}
                                          hasValue={true}
                                          isDisabled={false}
                                          isMulti={false}
                                          isRtl={false}
                                          options={
                                            Array [
                                              Object {
                                                "label": "10",
                                                "value": "10",
                                              },
                                              Object {
                                                "label": "25",
                                                "value": "25",
                                              },
                                              Object {
                                                "label": "50",
                                                "value": "50",
                                              },
                                              Object {
                                                "label": "100",
                                                "value": "100",
                                              },
                                            ]
                                          }
                                          selectOption={[Function]}
                                          selectProps={
                                            Object {
                                              "addLabelText": undefined,
                                              "allowCreate": false,
                                              "autoFocus": false,
                                              "backspaceRemovesValue": true,
                                              "blurInputOnSelect": true,
                                              "captureMenuScroll": false,
                                              "className": "ContentPacksList__StyledSizeSelect-dqllb7-1 c6",
                                              "closeMenuOnScroll": false,
                                              "closeMenuOnSelect": true,
                                              "components": Object {
                                                "DropdownIndicator": [Function],
                                                "IndicatorSeparator": [Function],
                                                "MultiValueRemove": [Function],
                                              },
                                              "controlShouldRenderValue": true,
                                              "delimiter": ",",
                                              "displayKey": "label",
                                              "escapeClearsValue": false,
                                              "filterOption": [Function],
                                              "formatGroupLabel": [Function],
                                              "getOptionLabel": [Function],
                                              "getOptionValue": [Function],
                                              "ignoreAccents": true,
                                              "inputValue": "",
                                              "isClearable": false,
                                              "isDisabled": false,
                                              "isLoading": false,
                                              "isMulti": false,
                                              "isOptionDisabled": [Function],
                                              "isRtl": false,
                                              "isSearchable": true,
                                              "loadingMessage": [Function],
                                              "maxMenuHeight": 300,
                                              "menuIsOpen": false,
                                              "menuPlacement": "bottom",
                                              "menuPosition": "absolute",
                                              "menuShouldBlockScroll": false,
                                              "menuShouldScrollIntoView": true,
                                              "minMenuHeight": 140,
                                              "noOptionsMessage": [Function],
                                              "onChange": [Function],
                                              "onInputChange": [Function],
                                              "onMenuClose": [Function],
                                              "onMenuOpen": [Function],
                                              "onReactSelectChange": undefined,
                                              "openMenuOnClick": true,
                                              "openMenuOnFocus": false,
                                              "options": Array [
                                                Object {
                                                  "label": "10",
                                                  "value": "10",
                                                },
                                                Object {
                                                  "label": "25",
                                                  "value": "25",
                                                },
                                                Object {
                                                  "label": "50",
                                                  "value": "50",
                                                },
                                                Object {
                                                  "label": "100",
                                                  "value": "100",
                                                },
                                              ],
                                              "pageSize": 5,
                                              "placeholder": "Select...",
                                              "screenReaderStatus": [Function],
                                              "size": "normal",
                                              "styles": Object {
                                                "clearIndicator": [Function],
                                                "control": [Function],
                                                "dropdownIndicator": [Function],
                                                "menu": [Function],
                                                "multiValue": [Function],
                                                "multiValueLabel": [Function],
                                                "multiValueRemove": [Function],
                                                "placeholder": [Function],
                                                "singleValue": [Function],
                                                "valueContainer": [Function],
                                              },
                                              "tabIndex": "0",
                                              "tabSelectsValue": true,
                                              "theme": [Function],
                                              "value": Array [
                                                Object {
                                                  "label": "10",
                                                  "value": "10",
                                                },
                                              ],
                                              "valueKey": "value",
                                            }
                                          }
                                          setValue={[Function]}
                                          theme={
                                            Object {
                                              "borderRadius": 4,
                                              "colors": Object {
                                                "danger": "#00427f",
                                                "dangerLight": "#bdc8e4",
                                                "neutral0": "#fff",
                                                "neutral10": "#eff2f8",
                                                "neutral20": "#a6a6a6",
                                                "neutral30": "#b4b4b4",
                                                "neutral40": "#9b9b9b",
                                                "neutral5": "#dddddd",
                                                "neutral50": "#838383",
                                                "neutral60": "#6a6a6a",
                                                "neutral70": "#515151",
                                                "neutral80": "#383838",
                                                "neutral90": "#1f1f1f",
                                                "primary": "#7894ce",
                                                "primary25": "#f3f3f3",
                                                "primary50": "#d0d0d0",
                                                "primary75": "#a6a6a6",
                                              },
                                              "spacing": Object {
                                                "baseUnit": 4,
                                                "controlHeight": 38,
                                                "menuGutter": 8,
                                              },
                                            }
                                          }
                                        >
                                          <div
                                            className="css-1yjw8f2-singleValue"
                                          >
                                            10
                                          </div>
                                        </SingleValue>
                                        <Input
                                          aria-autocomplete="list"
                                          autoCapitalize="none"
                                          autoComplete="off"
                                          autoCorrect="off"
                                          cx={[Function]}
                                          getStyles={[Function]}
                                          id="react-select-5-input"
                                          innerRef={[Function]}
                                          isDisabled={false}
                                          isHidden={false}
                                          onBlur={[Function]}
                                          onChange={[Function]}
                                          onFocus={[Function]}
                                          selectProps={
                                            Object {
                                              "addLabelText": undefined,
                                              "allowCreate": false,
                                              "autoFocus": false,
                                              "backspaceRemovesValue": true,
                                              "blurInputOnSelect": true,
                                              "captureMenuScroll": false,
                                              "className": "ContentPacksList__StyledSizeSelect-dqllb7-1 c6",
                                              "closeMenuOnScroll": false,
                                              "closeMenuOnSelect": true,
                                              "components": Object {
                                                "DropdownIndicator": [Function],
                                                "IndicatorSeparator": [Function],
                                                "MultiValueRemove": [Function],
                                              },
                                              "controlShouldRenderValue": true,
                                              "delimiter": ",",
                                              "displayKey": "label",
                                              "escapeClearsValue": false,
                                              "filterOption": [Function],
                                              "formatGroupLabel": [Function],
                                              "getOptionLabel": [Function],
                                              "getOptionValue": [Function],
                                              "ignoreAccents": true,
                                              "inputValue": "",
                                              "isClearable": false,
                                              "isDisabled": false,
                                              "isLoading": false,
                                              "isMulti": false,
                                              "isOptionDisabled": [Function],
                                              "isRtl": false,
                                              "isSearchable": true,
                                              "loadingMessage": [Function],
                                              "maxMenuHeight": 300,
                                              "menuIsOpen": false,
                                              "menuPlacement": "bottom",
                                              "menuPosition": "absolute",
                                              "menuShouldBlockScroll": false,
                                              "menuShouldScrollIntoView": true,
                                              "minMenuHeight": 140,
                                              "noOptionsMessage": [Function],
                                              "onChange": [Function],
                                              "onInputChange": [Function],
                                              "onMenuClose": [Function],
                                              "onMenuOpen": [Function],
                                              "onReactSelectChange": undefined,
                                              "openMenuOnClick": true,
                                              "openMenuOnFocus": false,
                                              "options": Array [
                                                Object {
                                                  "label": "10",
                                                  "value": "10",
                                                },
                                                Object {
                                                  "label": "25",
                                                  "value": "25",
                                                },
                                                Object {
                                                  "label": "50",
                                                  "value": "50",
                                                },
                                                Object {
                                                  "label": "100",
                                                  "value": "100",
                                                },
                                              ],
                                              "pageSize": 5,
                                              "placeholder": "Select...",
                                              "screenReaderStatus": [Function],
                                              "size": "normal",
                                              "styles": Object {
                                                "clearIndicator": [Function],
                                                "control": [Function],
                                                "dropdownIndicator": [Function],
                                                "menu": [Function],
                                                "multiValue": [Function],
                                                "multiValueLabel": [Function],
                                                "multiValueRemove": [Function],
                                                "placeholder": [Function],
                                                "singleValue": [Function],
                                                "valueContainer": [Function],
                                              },
                                              "tabIndex": "0",
                                              "tabSelectsValue": true,
                                              "theme": [Function],
                                              "value": Array [
                                                Object {
                                                  "label": "10",
                                                  "value": "10",
                                                },
                                              ],
                                              "valueKey": "value",
                                            }
                                          }
                                          spellCheck="false"
                                          tabIndex="0"
                                          theme={
                                            Object {
                                              "borderRadius": 4,
                                              "colors": Object {
                                                "danger": "#00427f",
                                                "dangerLight": "#bdc8e4",
                                                "neutral0": "#fff",
                                                "neutral10": "#eff2f8",
                                                "neutral20": "#a6a6a6",
                                                "neutral30": "#b4b4b4",
                                                "neutral40": "#9b9b9b",
                                                "neutral5": "#dddddd",
                                                "neutral50": "#838383",
                                                "neutral60": "#6a6a6a",
                                                "neutral70": "#515151",
                                                "neutral80": "#383838",
                                                "neutral90": "#1f1f1f",
                                                "primary": "#7894ce",
                                                "primary25": "#f3f3f3",
                                                "primary50": "#d0d0d0",
                                                "primary75": "#a6a6a6",
                                              },
                                              "spacing": Object {
                                                "baseUnit": 4,
                                                "controlHeight": 38,
                                                "menuGutter": 8,
                                              },
                                            }
                                          }
                                          type="text"
                                          value=""
                                        >
                                          <div
                                            className="css-dg7tyz"
                                          >
                                            <AutosizeInput
                                              aria-autocomplete="list"
                                              autoCapitalize="none"
                                              autoComplete="off"
                                              autoCorrect="off"
                                              className=""
                                              disabled={false}
                                              id="react-select-5-input"
                                              injectStyles={true}
                                              inputRef={[Function]}
                                              inputStyle={
                                                Object {
                                                  "background": 0,
                                                  "border": 0,
                                                  "color": "inherit",
                                                  "fontSize": "inherit",
                                                  "label": "input",
                                                  "opacity": 1,
                                                  "outline": 0,
                                                  "padding": 0,
                                                }
                                              }
                                              minWidth={1}
                                              onBlur={[Function]}
                                              onChange={[Function]}
                                              onFocus={[Function]}
                                              spellCheck="false"
                                              tabIndex="0"
                                              type="text"
                                              value=""
                                            >
                                              <div
                                                className=""
                                                style={
                                                  Object {
                                                    "display": "inline-block",
                                                  }
                                                }
                                              >
                                                <input
                                                  aria-autocomplete="list"
                                                  autoCapitalize="none"
                                                  autoComplete="off"
                                                  autoCorrect="off"
                                                  disabled={false}
                                                  id="react-select-5-input"
                                                  onBlur={[Function]}
                                                  onChange={[Function]}
                                                  onFocus={[Function]}
                                                  spellCheck="false"
                                                  style={
                                                    Object {
                                                      "background": 0,
                                                      "border": 0,
                                                      "boxSizing": "content-box",
                                                      "color": "inherit",
                                                      "fontSize": "inherit",
                                                      "label": "input",
                                                      "opacity": 1,
                                                      "outline": 0,
                                                      "padding": 0,
                                                      "width": "2px",
                                                    }
                                                  }
                                                  tabIndex="0"
                                                  type="text"
                                                  value=""
                                                />
                                                <div
                                                  style={
                                                    Object {
                                                      "height": 0,
                                                      "left": 0,
                                                      "overflow": "scroll",
                                                      "position": "absolute",
                                                      "top": 0,
                                                      "visibility": "hidden",
                                                      "whiteSpace": "pre",
                                                    }
                                                  }
                                                />
                                              </div>
                                            </AutosizeInput>
                                          </div>
                                        </Input>
                                      </div>
                                    </ValueContainer>
                                    <IndicatorsContainer
                                      clearValue={[Function]}
                                      cx={[Function]}
                                      getStyles={[Function]}
                                      getValue={[Function]}
                                      hasValue={true}
                                      isDisabled={false}
                                      isMulti={false}
                                      isRtl={false}
                                      options={
                                        Array [
                                          Object {
                                            "label": "10",
                                            "value": "10",
                                          },
                                          Object {
                                            "label": "25",
                                            "value": "25",
                                          },
                                          Object {
                                            "label": "50",
                                            "value": "50",
                                          },
                                          Object {
                                            "label": "100",
                                            "value": "100",
                                          },
                                        ]
                                      }
                                      selectOption={[Function]}
                                      selectProps={
                                        Object {
                                          "addLabelText": undefined,
                                          "allowCreate": false,
                                          "autoFocus": false,
                                          "backspaceRemovesValue": true,
                                          "blurInputOnSelect": true,
                                          "captureMenuScroll": false,
                                          "className": "ContentPacksList__StyledSizeSelect-dqllb7-1 c6",
                                          "closeMenuOnScroll": false,
                                          "closeMenuOnSelect": true,
                                          "components": Object {
                                            "DropdownIndicator": [Function],
                                            "IndicatorSeparator": [Function],
                                            "MultiValueRemove": [Function],
                                          },
                                          "controlShouldRenderValue": true,
                                          "delimiter": ",",
                                          "displayKey": "label",
                                          "escapeClearsValue": false,
                                          "filterOption": [Function],
                                          "formatGroupLabel": [Function],
                                          "getOptionLabel": [Function],
                                          "getOptionValue": [Function],
                                          "ignoreAccents": true,
                                          "inputValue": "",
                                          "isClearable": false,
                                          "isDisabled": false,
                                          "isLoading": false,
                                          "isMulti": false,
                                          "isOptionDisabled": [Function],
                                          "isRtl": false,
                                          "isSearchable": true,
                                          "loadingMessage": [Function],
                                          "maxMenuHeight": 300,
                                          "menuIsOpen": false,
                                          "menuPlacement": "bottom",
                                          "menuPosition": "absolute",
                                          "menuShouldBlockScroll": false,
                                          "menuShouldScrollIntoView": true,
                                          "minMenuHeight": 140,
                                          "noOptionsMessage": [Function],
                                          "onChange": [Function],
                                          "onInputChange": [Function],
                                          "onMenuClose": [Function],
                                          "onMenuOpen": [Function],
                                          "onReactSelectChange": undefined,
                                          "openMenuOnClick": true,
                                          "openMenuOnFocus": false,
                                          "options": Array [
                                            Object {
                                              "label": "10",
                                              "value": "10",
                                            },
                                            Object {
                                              "label": "25",
                                              "value": "25",
                                            },
                                            Object {
                                              "label": "50",
                                              "value": "50",
                                            },
                                            Object {
                                              "label": "100",
                                              "value": "100",
                                            },
                                          ],
                                          "pageSize": 5,
                                          "placeholder": "Select...",
                                          "screenReaderStatus": [Function],
                                          "size": "normal",
                                          "styles": Object {
                                            "clearIndicator": [Function],
                                            "control": [Function],
                                            "dropdownIndicator": [Function],
                                            "menu": [Function],
                                            "multiValue": [Function],
                                            "multiValueLabel": [Function],
                                            "multiValueRemove": [Function],
                                            "placeholder": [Function],
                                            "singleValue": [Function],
                                            "valueContainer": [Function],
                                          },
                                          "tabIndex": "0",
                                          "tabSelectsValue": true,
                                          "theme": [Function],
                                          "value": Array [
                                            Object {
                                              "label": "10",
                                              "value": "10",
                                            },
                                          ],
                                          "valueKey": "value",
                                        }
                                      }
                                      setValue={[Function]}
                                      theme={
                                        Object {
                                          "borderRadius": 4,
                                          "colors": Object {
                                            "danger": "#00427f",
                                            "dangerLight": "#bdc8e4",
                                            "neutral0": "#fff",
                                            "neutral10": "#eff2f8",
                                            "neutral20": "#a6a6a6",
                                            "neutral30": "#b4b4b4",
                                            "neutral40": "#9b9b9b",
                                            "neutral5": "#dddddd",
                                            "neutral50": "#838383",
                                            "neutral60": "#6a6a6a",
                                            "neutral70": "#515151",
                                            "neutral80": "#383838",
                                            "neutral90": "#1f1f1f",
                                            "primary": "#7894ce",
                                            "primary25": "#f3f3f3",
                                            "primary50": "#d0d0d0",
                                            "primary75": "#a6a6a6",
                                          },
                                          "spacing": Object {
                                            "baseUnit": 4,
                                            "controlHeight": 38,
                                            "menuGutter": 8,
                                          },
                                        }
                                      }
                                    >
                                      <div
                                        className="css-1wy0on6"
                                      >
                                        <IndicatorSeparator
                                          clearValue={[Function]}
                                          cx={[Function]}
                                          getStyles={[Function]}
                                          getValue={[Function]}
                                          hasValue={true}
                                          isDisabled={false}
                                          isFocused={false}
                                          isMulti={false}
                                          isRtl={false}
                                          options={
                                            Array [
                                              Object {
                                                "label": "10",
                                                "value": "10",
                                              },
                                              Object {
                                                "label": "25",
                                                "value": "25",
                                              },
                                              Object {
                                                "label": "50",
                                                "value": "50",
                                              },
                                              Object {
                                                "label": "100",
                                                "value": "100",
                                              },
                                            ]
                                          }
                                          selectOption={[Function]}
                                          selectProps={
                                            Object {
                                              "addLabelText": undefined,
                                              "allowCreate": false,
                                              "autoFocus": false,
                                              "backspaceRemovesValue": true,
                                              "blurInputOnSelect": true,
                                              "captureMenuScroll": false,
                                              "className": "ContentPacksList__StyledSizeSelect-dqllb7-1 c6",
                                              "closeMenuOnScroll": false,
                                              "closeMenuOnSelect": true,
                                              "components": Object {
                                                "DropdownIndicator": [Function],
                                                "IndicatorSeparator": [Function],
                                                "MultiValueRemove": [Function],
                                              },
                                              "controlShouldRenderValue": true,
                                              "delimiter": ",",
                                              "displayKey": "label",
                                              "escapeClearsValue": false,
                                              "filterOption": [Function],
                                              "formatGroupLabel": [Function],
                                              "getOptionLabel": [Function],
                                              "getOptionValue": [Function],
                                              "ignoreAccents": true,
                                              "inputValue": "",
                                              "isClearable": false,
                                              "isDisabled": false,
                                              "isLoading": false,
                                              "isMulti": false,
                                              "isOptionDisabled": [Function],
                                              "isRtl": false,
                                              "isSearchable": true,
                                              "loadingMessage": [Function],
                                              "maxMenuHeight": 300,
                                              "menuIsOpen": false,
                                              "menuPlacement": "bottom",
                                              "menuPosition": "absolute",
                                              "menuShouldBlockScroll": false,
                                              "menuShouldScrollIntoView": true,
                                              "minMenuHeight": 140,
                                              "noOptionsMessage": [Function],
                                              "onChange": [Function],
                                              "onInputChange": [Function],
                                              "onMenuClose": [Function],
                                              "onMenuOpen": [Function],
                                              "onReactSelectChange": undefined,
                                              "openMenuOnClick": true,
                                              "openMenuOnFocus": false,
                                              "options": Array [
                                                Object {
                                                  "label": "10",
                                                  "value": "10",
                                                },
                                                Object {
                                                  "label": "25",
                                                  "value": "25",
                                                },
                                                Object {
                                                  "label": "50",
                                                  "value": "50",
                                                },
                                                Object {
                                                  "label": "100",
                                                  "value": "100",
                                                },
                                              ],
                                              "pageSize": 5,
                                              "placeholder": "Select...",
                                              "screenReaderStatus": [Function],
                                              "size": "normal",
                                              "styles": Object {
                                                "clearIndicator": [Function],
                                                "control": [Function],
                                                "dropdownIndicator": [Function],
                                                "menu": [Function],
                                                "multiValue": [Function],
                                                "multiValueLabel": [Function],
                                                "multiValueRemove": [Function],
                                                "placeholder": [Function],
                                                "singleValue": [Function],
                                                "valueContainer": [Function],
                                              },
                                              "tabIndex": "0",
                                              "tabSelectsValue": true,
                                              "theme": [Function],
                                              "value": Array [
                                                Object {
                                                  "label": "10",
                                                  "value": "10",
                                                },
                                              ],
                                              "valueKey": "value",
                                            }
                                          }
                                          setValue={[Function]}
                                          theme={
                                            Object {
                                              "borderRadius": 4,
                                              "colors": Object {
                                                "danger": "#00427f",
                                                "dangerLight": "#bdc8e4",
                                                "neutral0": "#fff",
                                                "neutral10": "#eff2f8",
                                                "neutral20": "#a6a6a6",
                                                "neutral30": "#b4b4b4",
                                                "neutral40": "#9b9b9b",
                                                "neutral5": "#dddddd",
                                                "neutral50": "#838383",
                                                "neutral60": "#6a6a6a",
                                                "neutral70": "#515151",
                                                "neutral80": "#383838",
                                                "neutral90": "#1f1f1f",
                                                "primary": "#7894ce",
                                                "primary25": "#f3f3f3",
                                                "primary50": "#d0d0d0",
                                                "primary75": "#a6a6a6",
                                              },
                                              "spacing": Object {
                                                "baseUnit": 4,
                                                "controlHeight": 38,
                                                "menuGutter": 8,
                                              },
                                            }
                                          }
                                        />
                                        <DropdownIndicator
                                          clearValue={[Function]}
                                          cx={[Function]}
                                          getStyles={[Function]}
                                          getValue={[Function]}
                                          hasValue={true}
                                          innerProps={
                                            Object {
                                              "aria-hidden": "true",
                                              "onMouseDown": [Function],
                                              "onTouchEnd": [Function],
                                            }
                                          }
                                          isDisabled={false}
                                          isFocused={false}
                                          isMulti={false}
                                          isRtl={false}
                                          options={
                                            Array [
                                              Object {
                                                "label": "10",
                                                "value": "10",
                                              },
                                              Object {
                                                "label": "25",
                                                "value": "25",
                                              },
                                              Object {
                                                "label": "50",
                                                "value": "50",
                                              },
                                              Object {
                                                "label": "100",
                                                "value": "100",
                                              },
                                            ]
                                          }
                                          selectOption={[Function]}
                                          selectProps={
                                            Object {
                                              "addLabelText": undefined,
                                              "allowCreate": false,
                                              "autoFocus": false,
                                              "backspaceRemovesValue": true,
                                              "blurInputOnSelect": true,
                                              "captureMenuScroll": false,
                                              "className": "ContentPacksList__StyledSizeSelect-dqllb7-1 c6",
                                              "closeMenuOnScroll": false,
                                              "closeMenuOnSelect": true,
                                              "components": Object {
                                                "DropdownIndicator": [Function],
                                                "IndicatorSeparator": [Function],
                                                "MultiValueRemove": [Function],
                                              },
                                              "controlShouldRenderValue": true,
                                              "delimiter": ",",
                                              "displayKey": "label",
                                              "escapeClearsValue": false,
                                              "filterOption": [Function],
                                              "formatGroupLabel": [Function],
                                              "getOptionLabel": [Function],
                                              "getOptionValue": [Function],
                                              "ignoreAccents": true,
                                              "inputValue": "",
                                              "isClearable": false,
                                              "isDisabled": false,
                                              "isLoading": false,
                                              "isMulti": false,
                                              "isOptionDisabled": [Function],
                                              "isRtl": false,
                                              "isSearchable": true,
                                              "loadingMessage": [Function],
                                              "maxMenuHeight": 300,
                                              "menuIsOpen": false,
                                              "menuPlacement": "bottom",
                                              "menuPosition": "absolute",
                                              "menuShouldBlockScroll": false,
                                              "menuShouldScrollIntoView": true,
                                              "minMenuHeight": 140,
                                              "noOptionsMessage": [Function],
                                              "onChange": [Function],
                                              "onInputChange": [Function],
                                              "onMenuClose": [Function],
                                              "onMenuOpen": [Function],
                                              "onReactSelectChange": undefined,
                                              "openMenuOnClick": true,
                                              "openMenuOnFocus": false,
                                              "options": Array [
                                                Object {
                                                  "label": "10",
                                                  "value": "10",
                                                },
                                                Object {
                                                  "label": "25",
                                                  "value": "25",
                                                },
                                                Object {
                                                  "label": "50",
                                                  "value": "50",
                                                },
                                                Object {
                                                  "label": "100",
                                                  "value": "100",
                                                },
                                              ],
                                              "pageSize": 5,
                                              "placeholder": "Select...",
                                              "screenReaderStatus": [Function],
                                              "size": "normal",
                                              "styles": Object {
                                                "clearIndicator": [Function],
                                                "control": [Function],
                                                "dropdownIndicator": [Function],
                                                "menu": [Function],
                                                "multiValue": [Function],
                                                "multiValueLabel": [Function],
                                                "multiValueRemove": [Function],
                                                "placeholder": [Function],
                                                "singleValue": [Function],
                                                "valueContainer": [Function],
                                              },
                                              "tabIndex": "0",
                                              "tabSelectsValue": true,
                                              "theme": [Function],
                                              "value": Array [
                                                Object {
                                                  "label": "10",
                                                  "value": "10",
                                                },
                                              ],
                                              "valueKey": "value",
                                            }
                                          }
                                          setValue={[Function]}
                                          theme={
                                            Object {
                                              "borderRadius": 4,
                                              "colors": Object {
                                                "danger": "#00427f",
                                                "dangerLight": "#bdc8e4",
                                                "neutral0": "#fff",
                                                "neutral10": "#eff2f8",
                                                "neutral20": "#a6a6a6",
                                                "neutral30": "#b4b4b4",
                                                "neutral40": "#9b9b9b",
                                                "neutral5": "#dddddd",
                                                "neutral50": "#838383",
                                                "neutral60": "#6a6a6a",
                                                "neutral70": "#515151",
                                                "neutral80": "#383838",
                                                "neutral90": "#1f1f1f",
                                                "primary": "#7894ce",
                                                "primary25": "#f3f3f3",
                                                "primary50": "#d0d0d0",
                                                "primary75": "#a6a6a6",
                                              },
                                              "spacing": Object {
                                                "baseUnit": 4,
                                                "controlHeight": 38,
                                                "menuGutter": 8,
                                              },
                                            }
                                          }
                                        >
                                          <div
                                            aria-hidden="true"
                                            onMouseDown={[Function]}
                                            onTouchEnd={[Function]}
                                            style={
                                              Object {
                                                ":hover": Object {
                                                  "color": "#9b9b9b",
                                                },
                                                "boxSizing": "border-box",
                                                "color": "#a6a6a6",
                                                "display": "flex",
                                                "fontSize": "150%",
                                                "label": "indicatorContainer",
                                                "marginRight": "1rem",
                                                "padding": "0px",
                                                "transform": false,
                                                "transition": "color 150ms",
                                              }
                                            }
                                          >
                                            <Icon
                                              name="caret-down"
                                              type="solid"
                                            >
                                              <FontAwesomeIcon
                                                icon={
                                                  Object {
                                                    "iconName": "caret-down",
                                                    "prefix": "fas",
                                                  }
                                                }
                                              >
                                                <svg
                                                  className="svg-inline--fa fa-caret-down"
                                                />
                                              </FontAwesomeIcon>
                                            </Icon>
                                          </div>
                                        </DropdownIndicator>
                                      </div>
                                    </IndicatorsContainer>
                                  </div>
                                </Control>
                              </div>
                            </SelectContainer>
                          </Select>
                        </StateManager>
                      </Select>
                    </WithTheme(Select)>
                  </ContentPacksList__StyledSizeSelect>
                </span>
              </ContentPacksList__PageSizeSelector>
            </div>
          </Col>
        </div>
      </Row>
    </Row>
  </div>
</ContentPacksList>
`;

exports[`<ContentPacksList /> should render with empty content packs 1`] = `
.c3.btn-danger {
  background-color: #ad0707;
  border-color: #b23939;
  color: rgb(252,249,249);
  -webkit-transition: background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;
  transition: background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;
}

.c3.btn-danger:hover {
  background-color: #a00e0e;
  border-color: #a53636;
  color: #e9e6e6;
}

.c3.btn-danger.active {
  background-color: #b75151;
  border-color: #bc6363;
  color: rgb(252,249,249);
}

.c3.btn-danger.active:hover {
  background-color: #a94c4c;
  border-color: #ad5c5c;
  color: #e9e6e6;
}

.c3.btn-danger[disabled],
.c3.btn-danger.disabled {
  background-color: #c07272;
  border-color: #bc6363;
  color: rgb(252,250,250);
}

.c3.btn-danger[disabled]:hover,
.c3.btn-danger.disabled:hover {
  background-color: #c07272;
  border-color: #bc6363;
  color: rgb(252,250,250);
}

.c3.btn-default {
  background-color: #e6e6e6;
  border-color: #e0e0e0;
  color: rgb(73,73,73);
  -webkit-transition: background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;
  transition: background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;
}

.c3.btn-default:hover {
  background-color: #d4d4d4;
  border-color: #cfcfcf;
  color: #444444;
}

.c3.btn-default.active {
  background-color: #dadada;
  border-color: #d4d4d4;
  color: rgb(49,49,49);
}

.c3.btn-default.active:hover {
  background-color: #cacaca;
  border-color: #c4c4c4;
  color: #2f2f2f;
}

.c3.btn-default[disabled],
.c3.btn-default.disabled {
  background-color: #cecece;
  border-color: #d4d4d4;
  color: rgb(80,80,80);
}

.c3.btn-default[disabled]:hover,
.c3.btn-default.disabled:hover {
  background-color: #cecece;
  border-color: #d4d4d4;
  color: rgb(80,80,80);
}

.c3.btn-info {
  background-color: #0063be;
  border-color: #3970c2;
  color: rgb(249,250,252);
  -webkit-transition: background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;
  transition: background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;
}

.c3.btn-info:hover {
  background-color: #0c5cb0;
  border-color: #3668b3;
  color: #e6e7e9;
}

.c3.btn-info.active {
  background-color: #517cc5;
  border-color: #6386c9;
  color: rgb(249,250,252);
}

.c3.btn-info.active:hover {
  background-color: #4b73b6;
  border-color: #5c7dba;
  color: #e6e7e9;
}

.c3.btn-info[disabled],
.c3.btn-info.disabled {
  background-color: #7290cd;
  border-color: #6386c9;
  color: rgb(250,251,253);
}

.c3.btn-info[disabled]:hover,
.c3.btn-info.disabled:hover {
  background-color: #7290cd;
  border-color: #6386c9;
  color: rgb(250,251,253);
}

.c3.btn-link {
  background-color: rgba(255,255,255,0);
  border-color: rgba(255,255,255,0);
  color: #702785;
  -webkit-transition: background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;
  transition: background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;
}

.c3.btn-link:hover {
  background-color: #ebebeb26;
  border-color: #ebebeb26;
  color: #68267b;
}

.c3.btn-link.active {
  background-color: rgba(255,255,255,0);
  border-color: rgba(255,255,255,0);
  color: #410057;
}

.c3.btn-link.active:hover {
  background-color: rgba(255,255,255,0);
  border-color: #ebebeb26;
  color: #3d0c51;
}

.c3.btn-link[disabled],
.c3.btn-link.disabled {
  background-color: rgba(255,255,255,0);
  border-color: rgba(255,255,255,0);
  color: #702785;
}

.c3.btn-link[disabled]:hover,
.c3.btn-link.disabled:hover {
  background-color: rgba(255,255,255,0);
  border-color: rgba(255,255,255,0);
  color: #702785;
}

.c3.btn-primary {
  background-color: #702785;
  border-color: #7b458e;
  color: rgb(234,229,236);
  -webkit-transition: background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;
  transition: background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;
}

.c3.btn-primary:hover {
  background-color: #68267b;
  border-color: #724083;
  color: #d8d3da;
}

.c3.btn-primary.active {
  background-color: #855996;
  border-color: #8f699d;
  color: rgb(250,249,251);
}

.c3.btn-primary.active:hover {
  background-color: #7c538b;
  border-color: #846292;
  color: #e7e6e8;
}

.c3.btn-primary[disabled],
.c3.btn-primary.disabled {
  background-color: #9877a5;
  border-color: #8f699d;
  color: rgb(251,250,251);
}

.c3.btn-primary[disabled]:hover,
.c3.btn-primary.disabled:hover {
  background-color: #9877a5;
  border-color: #8f699d;
  color: rgb(251,250,251);
}

.c3.btn-success {
  background-color: #00ae42;
  border-color: #39b356;
  color: rgb(249,252,249);
  -webkit-transition: background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;
  transition: background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;
}

.c3.btn-success:hover {
  background-color: #0ca13e;
  border-color: #36a550;
  color: #e6e9e6;
}

.c3.btn-success.active {
  background-color: #51b866;
  border-color: #63bc74;
  color: rgb(249,252,250);
}

.c3.btn-success.active:hover {
  background-color: #4baa5f;
  border-color: #5cae6c;
  color: #e6e9e7;
}

.c3.btn-success[disabled],
.c3.btn-success.disabled {
  background-color: #72c180;
  border-color: #63bc74;
  color: rgb(250,252,250);
}

.c3.btn-success[disabled]:hover,
.c3.btn-success.disabled:hover {
  background-color: #72c180;
  border-color: #63bc74;
  color: rgb(250,252,250);
}

.c3.btn-warning {
  background-color: #ffd200;
  border-color: #f9cd07;
  color: rgb(57,47,0);
  -webkit-transition: background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;
  transition: background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;
}

.c3.btn-warning:hover {
  background-color: #ebc20c;
  border-color: #e6bd0e;
  color: #362d0c;
}

.c3.btn-warning.active {
  background-color: #f2c70a;
  border-color: #ebc20c;
  color: rgb(54,45,2);
}

.c3.btn-warning.active:hover {
  background-color: #e0b80f;
  border-color: #d9b310;
  color: #332b0c;
}

.c3.btn-warning[disabled],
.c3.btn-warning.disabled {
  background-color: #e4bc0e;
  border-color: #ebc20c;
  color: rgb(88,73,5);
}

.c3.btn-warning[disabled]:hover,
.c3.btn-warning.disabled:hover {
  background-color: #e4bc0e;
  border-color: #ebc20c;
  color: rgb(88,73,5);
}

.c1 {
  color: #1f1f1f;
  font-weight: bold;
  margin-bottom: 5px;
  display: inline-block;
}

.c2.form-control {
  color: #1f1f1f;
  background-color: #fff;
  border-color: #a6a6a6;
}

.c2.form-control::-webkit-input-placeholder {
  color: #9b9b9b;
}

.c2.form-control::-moz-placeholder {
  color: #9b9b9b;
}

.c2.form-control:-ms-input-placeholder {
  color: #9b9b9b;
}

.c2.form-control::placeholder {
  color: #9b9b9b;
}

.c2.form-control:focus {
  border-color: #7894ce;
  box-shadow: inset 0 1px 1px rgba(0,0,0,0.075),0 0 8px rgba(120,148,206,0.4);
}

.c2.form-control[disabled],
.c2.form-control[readonly],
fieldset[disabled] .c2.form-control {
  background-color: #dddddd;
  color: #9b9b9b;
}

.c2.form-control ~ .form-control-feedback.glyphicon {
  display: none;
}

.c0.content {
  background-color: #fff;
  border: 1px solid #d0d0d0;
  margin-bottom: 9px;
  border-radius: 4px;
}

.c4 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: end;
  -webkit-justify-content: flex-end;
  -ms-flex-pack: end;
  justify-content: flex-end;
}

.c4 span {
  margin-right: 3px;
}

.c5 {
  width: 75px;
}

<ContentPacksList
  contentPackMetadata={Object {}}
  contentPacks={Array []}
  onDeletePack={[Function]}
  onInstall={[Function]}
>
  <div>
    <Row
      className="row-sm"
    >
      <Row
        bsClass="row"
        className="c0 row-sm"
        componentClass="div"
      >
        <div
          className="c0 row-sm row"
        >
          <Col
            bsClass="col"
            componentClass="div"
            md={5}
          >
            <div
              className="col-md-5"
            >
              <TypeAheadDataFilter
                data={Array []}
                displayKey="name"
                filterBy=""
                filterSuggestionAccessor=""
                filterSuggestions={Array []}
                id="content-packs-filter"
                label="Filter"
                onDataFiltered={[Function]}
                searchInKeys={
                  Array [
                    "name",
                    "summary",
                  ]
                }
              >
                <div
                  className="filter"
                >
                  <form
                    className="form-inline"
                    onSubmit={[Function]}
                    style={
                      Object {
                        "display": "inline",
                      }
                    }
                  >
                    <TypeAheadInput
                      displayKey="name"
                      id="content-packs-filter"
                      label="Filter"
                      onSuggestionSelected={[Function]}
                      suggestionText="Filter by : "
                      suggestions={Array []}
                    >
                      <Input
                        addonAfter={null}
                        bsStyle={null}
                        buttonAfter={null}
                        help=""
                        id="content-packs-filter"
                        label="Filter"
                        placeholder=""
                        type="text"
                        wrapperClassName="typeahead-wrapper"
                      >
                        <Component
                          controlId="content-packs-filter"
                          validationState={null}
                        >
                          <FormGroup__StyledFormGroup
                            controlId="content-packs-filter"
                            validationState={null}
                          >
                            <FormGroup
                              bsClass="form-group"
                              className=""
                              controlId="content-packs-filter"
                              validationState={null}
                            >
                              <div
                                className="form-group"
                              >
                                <ControlLabel>
                                  <ControlLabel
                                    bsClass="control-label"
                                    className="c1"
                                    srOnly={false}
                                  >
                                    <label
                                      className="c1 control-label"
                                      htmlFor="content-packs-filter"
                                    >
                                      Filter
                                    </label>
                                  </ControlLabel>
                                </ControlLabel>
                                <InputWrapper
                                  className="typeahead-wrapper"
                                >
                                  <div
                                    className="typeahead-wrapper"
                                  >
                                    <FormControl
                                      componentClass="input"
                                      inputRef={[Function]}
                                      label="Filter"
                                      name="content-packs-filter"
                                      placeholder=""
                                      type="text"
                                    >
                                      <FormControl
                                        bsClass="form-control"
                                        className="c2"
                                        componentClass="input"
                                        inputRef={[Function]}
                                        label="Filter"
                                        name="content-packs-filter"
                                        placeholder=""
                                        type="text"
                                      >
                                        <input
                                          className="c2 form-control"
                                          id="content-packs-filter"
                                          label="Filter"
                                          name="content-packs-filter"
                                          placeholder=""
                                          type="text"
                                        />
                                      </FormControl>
                                    </FormControl>
                                  </div>
                                </InputWrapper>
                              </div>
                            </FormGroup>
                          </FormGroup__StyledFormGroup>
                        </Component>
                      </Input>
                    </TypeAheadInput>
                    <Button
                      style={
                        Object {
                          "marginLeft": 5,
                        }
                      }
                      type="submit"
                    >
                      <Button
                        active={false}
                        block={false}
                        bsClass="btn"
                        bsStyle="default"
                        className="c3"
                        disabled={false}
                        style={
                          Object {
                            "marginLeft": 5,
                          }
                        }
                        type="submit"
                      >
                        <button
                          className="c3 btn btn-default"
                          disabled={false}
                          style={
                            Object {
                              "marginLeft": 5,
                            }
                          }
                          type="submit"
                        >
                          Filter
                        </button>
                      </Button>
                    </Button>
                    <Button
                      disabled={true}
                      onClick={[Function]}
                      style={
                        Object {
                          "marginLeft": 5,
                        }
                      }
                      type="button"
                    >
                      <Button
                        active={false}
                        block={false}
                        bsClass="btn"
                        bsStyle="default"
                        className="c3"
                        disabled={true}
                        onClick={[Function]}
                        style={
                          Object {
                            "marginLeft": 5,
                          }
                        }
                        type="button"
                      >
                        <button
                          className="c3 btn btn-default"
                          disabled={true}
                          onClick={[Function]}
                          style={
                            Object {
                              "marginLeft": 5,
                            }
                          }
                          type="button"
                        >
                          Reset
                        </button>
                      </Button>
                    </Button>
                  </form>
                  <ul
                    className="pill-list"
                  >
                    <Component />
                  </ul>
                </div>
              </TypeAheadDataFilter>
            </div>
          </Col>
          <Col
            bsClass="col"
            componentClass="div"
            md={5}
          >
            <div
              className="col-md-5"
            >
              <Pagination
                boundaryPagesRange={1}
                currentPage={1}
                disabled={false}
                hideEllipsis={false}
                hideFirstAndLastPageLinks={false}
                hidePreviousAndNextPageLinks={false}
                onChange={[Function]}
                siblingPagesRange={1}
                totalPages={0}
              />
            </div>
          </Col>
          <Col
            bsClass="col"
            className="text-right"
            componentClass="div"
            md={2}
          >
            <div
              className="text-right col-md-2"
            >
              <ContentPacksList__PageSizeSelector>
                <span
                  className="c4"
                >
                  <span>
                    Show:
                  </span>
                  <ContentPacksList__StyledSizeSelect
                    clearable={false}
                    onChange={[Function]}
                    options={
                      Array [
                        Object {
                          "label": "10",
                          "value": "10",
                        },
                        Object {
                          "label": "25",
                          "value": "25",
                        },
                        Object {
                          "label": "50",
                          "value": "50",
                        },
                        Object {
                          "label": "100",
                          "value": "100",
                        },
                      ]
                    }
                    value="10"
                  >
                    <WithTheme(Select)
                      className="c5"
                      clearable={false}
                      onChange={[Function]}
                      options={
                        Array [
                          Object {
                            "label": "10",
                            "value": "10",
                          },
                          Object {
                            "label": "25",
                            "value": "25",
                          },
                          Object {
                            "label": "50",
                            "value": "50",
                          },
                          Object {
                            "label": "100",
                            "value": "100",
                          },
                        ]
                      }
                      value="10"
                    >
                      <Select
                        allowCreate={false}
                        autoFocus={false}
                        className="c5"
                        clearable={false}
                        components={null}
                        delimiter=","
                        disabled={false}
                        displayKey="label"
                        ignoreAccents={true}
                        matchProp="any"
                        multi={false}
                        onChange={[Function]}
                        options={
                          Array [
                            Object {
                              "label": "10",
                              "value": "10",
                            },
                            Object {
                              "label": "25",
                              "value": "25",
                            },
                            Object {
                              "label": "50",
                              "value": "50",
                            },
                            Object {
                              "label": "100",
                              "value": "100",
                            },
                          ]
                        }
                        size="normal"
                        theme={
                          Object {
                            "breakpoints": Object {
                              "max": Object {
                                "lg": "1199px",
                                "md": "991px",
                                "sm": "767px",
                                "xs": "479px",
                              },
                              "min": Object {
                                "lg": "1200px",
                                "md": "992px",
                                "sm": "768px",
                                "xs": "480px",
                              },
                            },
                            "changeMode": [Function],
                            "colors": Object {
                              "brand": Object {
                                "primary": "#ff3633",
                                "secondary": "#fff",
                                "tertiary": "#1f1f1f",
                              },
                              "global": Object {
                                "background": "#e8e8e8",
                                "contentBackground": "#fff",
                                "link": "#702785",
                                "linkHover": "#410057",
                                "navigationBackground": "#fff",
                                "navigationBoxShadow": "rgba(115,115,115,0.25)",
                                "textAlt": "#fff",
                                "textDefault": "#1f1f1f",
                              },
                              "gray": Object {
                                "10": "#1f1f1f",
                                "100": "#ffffff",
                                "20": "#383838",
                                "30": "#515151",
                                "40": "#6a6a6a",
                                "50": "#838383",
                                "60": "#9b9b9b",
                                "70": "#b4b4b4",
                                "80": "#cdcdcd",
                                "90": "#e6e6e6",
                              },
                              "input": Object {
                                "background": "#fff",
                                "backgroundDisabled": "#dddddd",
                                "border": "#a6a6a6",
                                "borderFocus": "#7894ce",
                                "boxShadow": "inset 0 1px 1px rgba(0, 0, 0, 0.075), 0 0 8px rgba(120,148,206,0.4)",
                                "color": "#1f1f1f",
                                "colorDisabled": "#9b9b9b",
                                "placeholder": "#9b9b9b",
                              },
                              "table": Object {
                                "background": "#fafafa",
                                "backgroundAlt": "#f0f0f0",
                                "backgroundHover": "#f5f5f5",
                                "variant": Object {
                                  "active": "#e6e6e6",
                                  "danger": "#eddddd",
                                  "info": "#dde2f0",
                                  "primary": "#e4dee7",
                                  "success": "#ddeddf",
                                  "warning": "#fff5dd",
                                },
                                "variantHover": Object {
                                  "active": "#d0d0d0",
                                  "danger": "#debdbd",
                                  "info": "#bdc8e4",
                                  "primary": "#cbbfd1",
                                  "success": "#bddec2",
                                  "warning": "#ffecbd",
                                },
                              },
                              "variant": Object {
                                "danger": "#ad0707",
                                "dark": Object {
                                  "danger": "#990606",
                                  "default": "#737373",
                                  "info": "#0057a8",
                                  "primary": "#632275",
                                  "success": "#009a3a",
                                  "warning": "#e1b900",
                                },
                                "darker": Object {
                                  "danger": "#740505",
                                  "default": "#575757",
                                  "info": "#00427f",
                                  "primary": "#4b1a59",
                                  "success": "#00752c",
                                  "warning": "#ab8d00",
                                },
                                "darkest": Object {
                                  "danger": "#3c0202",
                                  "default": "#2d2d2d",
                                  "info": "#002242",
                                  "primary": "#270e2e",
                                  "success": "#003c17",
                                  "warning": "#584900",
                                },
                                "default": "#828282",
                                "info": "#0063be",
                                "light": Object {
                                  "danger": "#c27878",
                                  "default": "#a6a6a6",
                                  "info": "#7894ce",
                                  "primary": "#9b7ca8",
                                  "success": "#78c385",
                                  "warning": "#ffdd78",
                                },
                                "lighter": Object {
                                  "danger": "#debdbd",
                                  "default": "#d0d0d0",
                                  "info": "#bdc8e4",
                                  "primary": "#cbbfd1",
                                  "success": "#bddec2",
                                  "warning": "#ffecbd",
                                },
                                "lightest": Object {
                                  "danger": "#f7efef",
                                  "default": "#f3f3f3",
                                  "info": "#eff2f8",
                                  "primary": "#f2f0f4",
                                  "success": "#eff7f0",
                                  "warning": "#fffaef",
                                },
                                "primary": "#702785",
                                "success": "#00ae42",
                                "warning": "#ffd200",
                              },
                            },
                            "components": Object {
                              "aceEditor": Array [
                                ".ace_editor{border:1px solid ",
                                "#cdcdcd",
                                ";border-radius:5px;}.ace-graylog{background-color:",
                                "#fff",
                                ";color:",
                                "#2d2d2d",
                                ";&.ace_multiselect .ace_selection.ace_start{box-shadow:0 0 3px 0 ",
                                "#fff",
                                ";}.ace_gutter{background:",
                                "#f3f3f3",
                                ";color:",
                                "#2d2d2d",
                                ";}.ace_print-margin{width:1px;background:",
                                "#f3f3f3",
                                ";}.ace_cursor{color:",
                                "#a6a6a6",
                                ";}.ace_marker-layer{.ace_selection{background:",
                                "#b4b4b4",
                                ";}.ace_step{background:rgb(255,255,0);}.ace_bracket{margin:-1px 0 0 -1px;border:1px solid ",
                                "#b4b4b4",
                                ";}.ace_selected-word{border:1px solid ",
                                "#9b9b9b",
                                ";}.ace_active-line{background:",
                                "#e6e6e6",
                                ";}}.ace_gutter-active-line{background-color:",
                                "#cdcdcd",
                                ";}.ace_invisible{color:",
                                "#b4b4b4",
                                ";}.ace_keyword,.ace_meta,.ace_storage,.ace_storage.ace_type,.ace_support.ace_type{color:",
                                "#702785",
                                ";}.ace_keyword.ace_operator{color:",
                                "#00427f",
                                ";}.ace_constant.ace_character,.ace_constant.ace_language,.ace_constant.ace_numeric,.ace_keyword.ace_other.ace_unit,.ace_support.ace_constant,.ace_variable.ace_parameter{color:",
                                "#4b1a59",
                                ";}.ace_constant.ace_other{color:",
                                "#575757",
                                ";}.ace_invalid{color:",
                                "#fff",
                                ";background-color:",
                                "#c27878",
                                ";}.ace_invalid.ace_deprecated{color:",
                                "#fff",
                                ";background-color:",
                                "#702785",
                                ";}.ace_fold{background-color:",
                                "#0063be",
                                ";border-color:",
                                "#2d2d2d",
                                ";}.ace_entity.ace_name.ace_function,.ace_support.ace_function,.ace_variable{color:",
                                "#0063be",
                                ";}.ace_support.ace_class,.ace_support.ace_type{color:",
                                "#ab8d00",
                                ";}.ace_heading,.ace_markup.ace_heading,.ace_string{color:",
                                "#00752c",
                                ";}.ace_entity.ace_name.ace_tag,.ace_entity.ace_other.ace_attribute-name,.ace_meta.ace_tag,.ace_string.ace_regexp,.ace_variable{color:",
                                "#c27878",
                                ";}.ace_comment{color:",
                                "#737373",
                                ";}}",
                              ],
                              "button": Array [
                                Array [
                                  "&.btn-",
                                  "danger",
                                  "{background-color:",
                                  "#ad0707",
                                  ";border-color:",
                                  "#b23939",
                                  ";color:",
                                  "rgb(252,249,249)",
                                  ";transition:background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;:hover{background-color:",
                                  "#a00e0e",
                                  ";border-color:",
                                  "#a53636",
                                  ";color:",
                                  "#e9e6e6",
                                  ";}&.active{background-color:",
                                  "#b75151",
                                  ";border-color:",
                                  "#bc6363",
                                  ";color:",
                                  "rgb(252,249,249)",
                                  ";:hover{background-color:",
                                  "#a94c4c",
                                  ";border-color:",
                                  "#ad5c5c",
                                  ";color:",
                                  "#e9e6e6",
                                  ";}}&[disabled],&.disabled{background-color:",
                                  "#c07272",
                                  ";border-color:",
                                  "#bc6363",
                                  ";color:",
                                  "rgb(252,250,250)",
                                  ";:hover{background-color:",
                                  "#c07272",
                                  ";border-color:",
                                  "#bc6363",
                                  ";color:",
                                  "rgb(252,250,250)",
                                  ";}}}",
                                ],
                                Array [
                                  "&.btn-",
                                  "default",
                                  "{background-color:",
                                  "#e6e6e6",
                                  ";border-color:",
                                  "#e0e0e0",
                                  ";color:",
                                  "rgb(73,73,73)",
                                  ";transition:background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;:hover{background-color:",
                                  "#d4d4d4",
                                  ";border-color:",
                                  "#cfcfcf",
                                  ";color:",
                                  "#444444",
                                  ";}&.active{background-color:",
                                  "#dadada",
                                  ";border-color:",
                                  "#d4d4d4",
                                  ";color:",
                                  "rgb(49,49,49)",
                                  ";:hover{background-color:",
                                  "#cacaca",
                                  ";border-color:",
                                  "#c4c4c4",
                                  ";color:",
                                  "#2f2f2f",
                                  ";}}&[disabled],&.disabled{background-color:",
                                  "#cecece",
                                  ";border-color:",
                                  "#d4d4d4",
                                  ";color:",
                                  "rgb(80,80,80)",
                                  ";:hover{background-color:",
                                  "#cecece",
                                  ";border-color:",
                                  "#d4d4d4",
                                  ";color:",
                                  "rgb(80,80,80)",
                                  ";}}}",
                                ],
                                Array [
                                  "&.btn-",
                                  "info",
                                  "{background-color:",
                                  "#0063be",
                                  ";border-color:",
                                  "#3970c2",
                                  ";color:",
                                  "rgb(249,250,252)",
                                  ";transition:background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;:hover{background-color:",
                                  "#0c5cb0",
                                  ";border-color:",
                                  "#3668b3",
                                  ";color:",
                                  "#e6e7e9",
                                  ";}&.active{background-color:",
                                  "#517cc5",
                                  ";border-color:",
                                  "#6386c9",
                                  ";color:",
                                  "rgb(249,250,252)",
                                  ";:hover{background-color:",
                                  "#4b73b6",
                                  ";border-color:",
                                  "#5c7dba",
                                  ";color:",
                                  "#e6e7e9",
                                  ";}}&[disabled],&.disabled{background-color:",
                                  "#7290cd",
                                  ";border-color:",
                                  "#6386c9",
                                  ";color:",
                                  "rgb(250,251,253)",
                                  ";:hover{background-color:",
                                  "#7290cd",
                                  ";border-color:",
                                  "#6386c9",
                                  ";color:",
                                  "rgb(250,251,253)",
                                  ";}}}",
                                ],
                                Array [
                                  "&.btn-",
                                  "link",
                                  "{background-color:",
                                  "rgba(255, 255, 255, 0)",
                                  ";border-color:",
                                  "rgba(255, 255, 255, 0)",
                                  ";color:",
                                  "#702785",
                                  ";transition:background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;:hover{background-color:",
                                  "#ebebeb26",
                                  ";border-color:",
                                  "#ebebeb26",
                                  ";color:",
                                  "#68267b",
                                  ";}&.active{background-color:",
                                  "rgba(255, 255, 255, 0)",
                                  ";border-color:",
                                  "rgba(255, 255, 255, 0)",
                                  ";color:",
                                  "#410057",
                                  ";:hover{background-color:",
                                  "rgba(255, 255, 255, 0)",
                                  ";border-color:",
                                  "#ebebeb26",
                                  ";color:",
                                  "#3d0c51",
                                  ";}}&[disabled],&.disabled{background-color:",
                                  "rgba(255, 255, 255, 0)",
                                  ";border-color:",
                                  "rgba(255, 255, 255, 0)",
                                  ";color:",
                                  "#702785",
                                  ";:hover{background-color:",
                                  "rgba(255, 255, 255, 0)",
                                  ";border-color:",
                                  "rgba(255, 255, 255, 0)",
                                  ";color:",
                                  "#702785",
                                  ";}}}",
                                ],
                                Array [
                                  "&.btn-",
                                  "primary",
                                  "{background-color:",
                                  "#702785",
                                  ";border-color:",
                                  "#7b458e",
                                  ";color:",
                                  "rgb(234,229,236)",
                                  ";transition:background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;:hover{background-color:",
                                  "#68267b",
                                  ";border-color:",
                                  "#724083",
                                  ";color:",
                                  "#d8d3da",
                                  ";}&.active{background-color:",
                                  "#855996",
                                  ";border-color:",
                                  "#8f699d",
                                  ";color:",
                                  "rgb(250,249,251)",
                                  ";:hover{background-color:",
                                  "#7c538b",
                                  ";border-color:",
                                  "#846292",
                                  ";color:",
                                  "#e7e6e8",
                                  ";}}&[disabled],&.disabled{background-color:",
                                  "#9877a5",
                                  ";border-color:",
                                  "#8f699d",
                                  ";color:",
                                  "rgb(251,250,251)",
                                  ";:hover{background-color:",
                                  "#9877a5",
                                  ";border-color:",
                                  "#8f699d",
                                  ";color:",
                                  "rgb(251,250,251)",
                                  ";}}}",
                                ],
                                Array [
                                  "&.btn-",
                                  "success",
                                  "{background-color:",
                                  "#00ae42",
                                  ";border-color:",
                                  "#39b356",
                                  ";color:",
                                  "rgb(249,252,249)",
                                  ";transition:background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;:hover{background-color:",
                                  "#0ca13e",
                                  ";border-color:",
                                  "#36a550",
                                  ";color:",
                                  "#e6e9e6",
                                  ";}&.active{background-color:",
                                  "#51b866",
                                  ";border-color:",
                                  "#63bc74",
                                  ";color:",
                                  "rgb(249,252,250)",
                                  ";:hover{background-color:",
                                  "#4baa5f",
                                  ";border-color:",
                                  "#5cae6c",
                                  ";color:",
                                  "#e6e9e7",
                                  ";}}&[disabled],&.disabled{background-color:",
                                  "#72c180",
                                  ";border-color:",
                                  "#63bc74",
                                  ";color:",
                                  "rgb(250,252,250)",
                                  ";:hover{background-color:",
                                  "#72c180",
                                  ";border-color:",
                                  "#63bc74",
                                  ";color:",
                                  "rgb(250,252,250)",
                                  ";}}}",
                                ],
                                Array [
                                  "&.btn-",
                                  "warning",
                                  "{background-color:",
                                  "#ffd200",
                                  ";border-color:",
                                  "#f9cd07",
                                  ";color:",
                                  "rgb(57,47,0)",
                                  ";transition:background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;:hover{background-color:",
                                  "#ebc20c",
                                  ";border-color:",
                                  "#e6bd0e",
                                  ";color:",
                                  "#362d0c",
                                  ";}&.active{background-color:",
                                  "#f2c70a",
                                  ";border-color:",
                                  "#ebc20c",
                                  ";color:",
                                  "rgb(54,45,2)",
                                  ";:hover{background-color:",
                                  "#e0b80f",
                                  ";border-color:",
                                  "#d9b310",
                                  ";color:",
                                  "#332b0c",
                                  ";}}&[disabled],&.disabled{background-color:",
                                  "#e4bc0e",
                                  ";border-color:",
                                  "#ebc20c",
                                  ";color:",
                                  "rgb(88,73,5)",
                                  ";:hover{background-color:",
                                  "#e4bc0e",
                                  ";border-color:",
                                  "#ebc20c",
                                  ";color:",
                                  "rgb(88,73,5)",
                                  ";}}}",
                                ],
                              ],
                            },
                            "fonts": Object {
                              "family": Object {
                                "body": "\\"Open Sans\\", \\"Helvetica Neue\\", Helvetica, Arial, sans-serif",
                                "monospace": "\\"Roboto Mono\\", Menlo, Monaco, Consolas, \\"Courier New\\", monospace",
                              },
                              "size": Object {
                                "body": "1rem",
                                "h1": "1.802rem",
                                "h2": "1.602rem",
                                "h3": "1.424rem",
                                "h4": "1.266rem",
                                "h5": "1.125rem",
                                "h6": "1rem",
                                "huge": "2.027rem",
                                "large": "1.125rem",
                                "root": "87.5%",
                                "small": "0.889rem",
                                "tiny": "0.79rem",
                              },
                            },
                            "mode": "teint",
                            "utils": Object {
                              "colorLevel": [Function],
                              "contrastingColor": [Function],
                              "opacify": [Function],
                              "readableColor": [Function],
                            },
                          }
                        }
                        value="10"
                        valueKey="value"
                      >
                        <StateManager
                          allowCreate={false}
                          autoFocus={false}
                          className="c5"
                          components={
                            Object {
                              "DropdownIndicator": [Function],
                              "IndicatorSeparator": [Function],
                              "MultiValueRemove": [Function],
                            }
                          }
                          defaultInputValue=""
                          defaultMenuIsOpen={false}
                          defaultValue={null}
                          delimiter=","
                          displayKey="label"
                          filterOption={[Function]}
                          getOptionLabel={[Function]}
                          getOptionValue={[Function]}
                          ignoreAccents={true}
                          isClearable={false}
                          isDisabled={false}
                          isMulti={false}
                          isOptionDisabled={[Function]}
                          onChange={[Function]}
                          options={
                            Array [
                              Object {
                                "label": "10",
                                "value": "10",
                              },
                              Object {
                                "label": "25",
                                "value": "25",
                              },
                              Object {
                                "label": "50",
                                "value": "50",
                              },
                              Object {
                                "label": "100",
                                "value": "100",
                              },
                            ]
                          }
                          size="normal"
                          styles={
                            Object {
                              "clearIndicator": [Function],
                              "control": [Function],
                              "dropdownIndicator": [Function],
                              "menu": [Function],
                              "multiValue": [Function],
                              "multiValueLabel": [Function],
                              "multiValueRemove": [Function],
                              "placeholder": [Function],
                              "singleValue": [Function],
                              "valueContainer": [Function],
                            }
                          }
                          theme={[Function]}
                          value={
                            Array [
                              Object {
                                "label": "10",
                                "value": "10",
                              },
                            ]
                          }
                          valueKey="value"
                        >
                          <Select
                            allowCreate={false}
                            autoFocus={false}
                            backspaceRemovesValue={true}
                            blurInputOnSelect={true}
                            captureMenuScroll={false}
                            className="c5"
                            closeMenuOnScroll={false}
                            closeMenuOnSelect={true}
                            components={
                              Object {
                                "DropdownIndicator": [Function],
                                "IndicatorSeparator": [Function],
                                "MultiValueRemove": [Function],
                              }
                            }
                            controlShouldRenderValue={true}
                            delimiter=","
                            displayKey="label"
                            escapeClearsValue={false}
                            filterOption={[Function]}
                            formatGroupLabel={[Function]}
                            getOptionLabel={[Function]}
                            getOptionValue={[Function]}
                            ignoreAccents={true}
                            inputValue=""
                            isClearable={false}
                            isDisabled={false}
                            isLoading={false}
                            isMulti={false}
                            isOptionDisabled={[Function]}
                            isRtl={false}
                            isSearchable={true}
                            loadingMessage={[Function]}
                            maxMenuHeight={300}
                            menuIsOpen={false}
                            menuPlacement="bottom"
                            menuPosition="absolute"
                            menuShouldBlockScroll={false}
                            menuShouldScrollIntoView={true}
                            minMenuHeight={140}
                            noOptionsMessage={[Function]}
                            onChange={[Function]}
                            onInputChange={[Function]}
                            onMenuClose={[Function]}
                            onMenuOpen={[Function]}
                            openMenuOnClick={true}
                            openMenuOnFocus={false}
                            options={
                              Array [
                                Object {
                                  "label": "10",
                                  "value": "10",
                                },
                                Object {
                                  "label": "25",
                                  "value": "25",
                                },
                                Object {
                                  "label": "50",
                                  "value": "50",
                                },
                                Object {
                                  "label": "100",
                                  "value": "100",
                                },
                              ]
                            }
                            pageSize={5}
                            placeholder="Select..."
                            screenReaderStatus={[Function]}
                            size="normal"
                            styles={
                              Object {
                                "clearIndicator": [Function],
                                "control": [Function],
                                "dropdownIndicator": [Function],
                                "menu": [Function],
                                "multiValue": [Function],
                                "multiValueLabel": [Function],
                                "multiValueRemove": [Function],
                                "placeholder": [Function],
                                "singleValue": [Function],
                                "valueContainer": [Function],
                              }
                            }
                            tabIndex="0"
                            tabSelectsValue={true}
                            theme={[Function]}
                            value={
                              Array [
                                Object {
                                  "label": "10",
                                  "value": "10",
                                },
                              ]
                            }
                            valueKey="value"
                          >
                            <SelectContainer
                              className="c5"
                              clearValue={[Function]}
                              cx={[Function]}
                              getStyles={[Function]}
                              getValue={[Function]}
                              hasValue={true}
                              innerProps={
                                Object {
                                  "id": undefined,
                                  "onKeyDown": [Function],
                                }
                              }
                              isDisabled={false}
                              isFocused={false}
                              isMulti={false}
                              isRtl={false}
                              options={
                                Array [
                                  Object {
                                    "label": "10",
                                    "value": "10",
                                  },
                                  Object {
                                    "label": "25",
                                    "value": "25",
                                  },
                                  Object {
                                    "label": "50",
                                    "value": "50",
                                  },
                                  Object {
                                    "label": "100",
                                    "value": "100",
                                  },
                                ]
                              }
                              selectOption={[Function]}
                              selectProps={
                                Object {
                                  "addLabelText": undefined,
                                  "allowCreate": false,
                                  "autoFocus": false,
                                  "backspaceRemovesValue": true,
                                  "blurInputOnSelect": true,
                                  "captureMenuScroll": false,
                                  "className": "ContentPacksList__StyledSizeSelect-dqllb7-1 c5",
                                  "closeMenuOnScroll": false,
                                  "closeMenuOnSelect": true,
                                  "components": Object {
                                    "DropdownIndicator": [Function],
                                    "IndicatorSeparator": [Function],
                                    "MultiValueRemove": [Function],
                                  },
                                  "controlShouldRenderValue": true,
                                  "delimiter": ",",
                                  "displayKey": "label",
                                  "escapeClearsValue": false,
                                  "filterOption": [Function],
                                  "formatGroupLabel": [Function],
                                  "getOptionLabel": [Function],
                                  "getOptionValue": [Function],
                                  "ignoreAccents": true,
                                  "inputValue": "",
                                  "isClearable": false,
                                  "isDisabled": false,
                                  "isLoading": false,
                                  "isMulti": false,
                                  "isOptionDisabled": [Function],
                                  "isRtl": false,
                                  "isSearchable": true,
                                  "loadingMessage": [Function],
                                  "maxMenuHeight": 300,
                                  "menuIsOpen": false,
                                  "menuPlacement": "bottom",
                                  "menuPosition": "absolute",
                                  "menuShouldBlockScroll": false,
                                  "menuShouldScrollIntoView": true,
                                  "minMenuHeight": 140,
                                  "noOptionsMessage": [Function],
                                  "onChange": [Function],
                                  "onInputChange": [Function],
                                  "onMenuClose": [Function],
                                  "onMenuOpen": [Function],
                                  "onReactSelectChange": undefined,
                                  "openMenuOnClick": true,
                                  "openMenuOnFocus": false,
                                  "options": Array [
                                    Object {
                                      "label": "10",
                                      "value": "10",
                                    },
                                    Object {
                                      "label": "25",
                                      "value": "25",
                                    },
                                    Object {
                                      "label": "50",
                                      "value": "50",
                                    },
                                    Object {
                                      "label": "100",
                                      "value": "100",
                                    },
                                  ],
                                  "pageSize": 5,
                                  "placeholder": "Select...",
                                  "screenReaderStatus": [Function],
                                  "size": "normal",
                                  "styles": Object {
                                    "clearIndicator": [Function],
                                    "control": [Function],
                                    "dropdownIndicator": [Function],
                                    "menu": [Function],
                                    "multiValue": [Function],
                                    "multiValueLabel": [Function],
                                    "multiValueRemove": [Function],
                                    "placeholder": [Function],
                                    "singleValue": [Function],
                                    "valueContainer": [Function],
                                  },
                                  "tabIndex": "0",
                                  "tabSelectsValue": true,
                                  "theme": [Function],
                                  "value": Array [
                                    Object {
                                      "label": "10",
                                      "value": "10",
                                    },
                                  ],
                                  "valueKey": "value",
                                }
                              }
                              setValue={[Function]}
                              theme={
                                Object {
                                  "borderRadius": 4,
                                  "colors": Object {
                                    "danger": "#00427f",
                                    "dangerLight": "#bdc8e4",
                                    "neutral0": "#fff",
                                    "neutral10": "#eff2f8",
                                    "neutral20": "#a6a6a6",
                                    "neutral30": "#b4b4b4",
                                    "neutral40": "#9b9b9b",
                                    "neutral5": "#dddddd",
                                    "neutral50": "#838383",
                                    "neutral60": "#6a6a6a",
                                    "neutral70": "#515151",
                                    "neutral80": "#383838",
                                    "neutral90": "#1f1f1f",
                                    "primary": "#7894ce",
                                    "primary25": "#f3f3f3",
                                    "primary50": "#d0d0d0",
                                    "primary75": "#a6a6a6",
                                  },
                                  "spacing": Object {
                                    "baseUnit": 4,
                                    "controlHeight": 38,
                                    "menuGutter": 8,
                                  },
                                }
                              }
                            >
                              <div
                                className="css-1pcexqc-container c5"
                                onKeyDown={[Function]}
                              >
                                <Control
                                  clearValue={[Function]}
                                  cx={[Function]}
                                  getStyles={[Function]}
                                  getValue={[Function]}
                                  hasValue={true}
                                  innerProps={
                                    Object {
                                      "onMouseDown": [Function],
                                      "onTouchEnd": [Function],
                                    }
                                  }
                                  innerRef={[Function]}
                                  isDisabled={false}
                                  isFocused={false}
                                  isMulti={false}
                                  isRtl={false}
                                  menuIsOpen={false}
                                  options={
                                    Array [
                                      Object {
                                        "label": "10",
                                        "value": "10",
                                      },
                                      Object {
                                        "label": "25",
                                        "value": "25",
                                      },
                                      Object {
                                        "label": "50",
                                        "value": "50",
                                      },
                                      Object {
                                        "label": "100",
                                        "value": "100",
                                      },
                                    ]
                                  }
                                  selectOption={[Function]}
                                  selectProps={
                                    Object {
                                      "addLabelText": undefined,
                                      "allowCreate": false,
                                      "autoFocus": false,
                                      "backspaceRemovesValue": true,
                                      "blurInputOnSelect": true,
                                      "captureMenuScroll": false,
                                      "className": "ContentPacksList__StyledSizeSelect-dqllb7-1 c5",
                                      "closeMenuOnScroll": false,
                                      "closeMenuOnSelect": true,
                                      "components": Object {
                                        "DropdownIndicator": [Function],
                                        "IndicatorSeparator": [Function],
                                        "MultiValueRemove": [Function],
                                      },
                                      "controlShouldRenderValue": true,
                                      "delimiter": ",",
                                      "displayKey": "label",
                                      "escapeClearsValue": false,
                                      "filterOption": [Function],
                                      "formatGroupLabel": [Function],
                                      "getOptionLabel": [Function],
                                      "getOptionValue": [Function],
                                      "ignoreAccents": true,
                                      "inputValue": "",
                                      "isClearable": false,
                                      "isDisabled": false,
                                      "isLoading": false,
                                      "isMulti": false,
                                      "isOptionDisabled": [Function],
                                      "isRtl": false,
                                      "isSearchable": true,
                                      "loadingMessage": [Function],
                                      "maxMenuHeight": 300,
                                      "menuIsOpen": false,
                                      "menuPlacement": "bottom",
                                      "menuPosition": "absolute",
                                      "menuShouldBlockScroll": false,
                                      "menuShouldScrollIntoView": true,
                                      "minMenuHeight": 140,
                                      "noOptionsMessage": [Function],
                                      "onChange": [Function],
                                      "onInputChange": [Function],
                                      "onMenuClose": [Function],
                                      "onMenuOpen": [Function],
                                      "onReactSelectChange": undefined,
                                      "openMenuOnClick": true,
                                      "openMenuOnFocus": false,
                                      "options": Array [
                                        Object {
                                          "label": "10",
                                          "value": "10",
                                        },
                                        Object {
                                          "label": "25",
                                          "value": "25",
                                        },
                                        Object {
                                          "label": "50",
                                          "value": "50",
                                        },
                                        Object {
                                          "label": "100",
                                          "value": "100",
                                        },
                                      ],
                                      "pageSize": 5,
                                      "placeholder": "Select...",
                                      "screenReaderStatus": [Function],
                                      "size": "normal",
                                      "styles": Object {
                                        "clearIndicator": [Function],
                                        "control": [Function],
                                        "dropdownIndicator": [Function],
                                        "menu": [Function],
                                        "multiValue": [Function],
                                        "multiValueLabel": [Function],
                                        "multiValueRemove": [Function],
                                        "placeholder": [Function],
                                        "singleValue": [Function],
                                        "valueContainer": [Function],
                                      },
                                      "tabIndex": "0",
                                      "tabSelectsValue": true,
                                      "theme": [Function],
                                      "value": Array [
                                        Object {
                                          "label": "10",
                                          "value": "10",
                                        },
                                      ],
                                      "valueKey": "value",
                                    }
                                  }
                                  setValue={[Function]}
                                  theme={
                                    Object {
                                      "borderRadius": 4,
                                      "colors": Object {
                                        "danger": "#00427f",
                                        "dangerLight": "#bdc8e4",
                                        "neutral0": "#fff",
                                        "neutral10": "#eff2f8",
                                        "neutral20": "#a6a6a6",
                                        "neutral30": "#b4b4b4",
                                        "neutral40": "#9b9b9b",
                                        "neutral5": "#dddddd",
                                        "neutral50": "#838383",
                                        "neutral60": "#6a6a6a",
                                        "neutral70": "#515151",
                                        "neutral80": "#383838",
                                        "neutral90": "#1f1f1f",
                                        "primary": "#7894ce",
                                        "primary25": "#f3f3f3",
                                        "primary50": "#d0d0d0",
                                        "primary75": "#a6a6a6",
                                      },
                                      "spacing": Object {
                                        "baseUnit": 4,
                                        "controlHeight": 38,
                                        "menuGutter": 8,
                                      },
                                    }
                                  }
                                >
                                  <div
                                    className="css-ghr2vn-control"
                                    onMouseDown={[Function]}
                                    onTouchEnd={[Function]}
                                  >
                                    <ValueContainer
                                      clearValue={[Function]}
                                      cx={[Function]}
                                      getStyles={[Function]}
                                      getValue={[Function]}
                                      hasValue={true}
                                      isDisabled={false}
                                      isMulti={false}
                                      isRtl={false}
                                      options={
                                        Array [
                                          Object {
                                            "label": "10",
                                            "value": "10",
                                          },
                                          Object {
                                            "label": "25",
                                            "value": "25",
                                          },
                                          Object {
                                            "label": "50",
                                            "value": "50",
                                          },
                                          Object {
                                            "label": "100",
                                            "value": "100",
                                          },
                                        ]
                                      }
                                      selectOption={[Function]}
                                      selectProps={
                                        Object {
                                          "addLabelText": undefined,
                                          "allowCreate": false,
                                          "autoFocus": false,
                                          "backspaceRemovesValue": true,
                                          "blurInputOnSelect": true,
                                          "captureMenuScroll": false,
                                          "className": "ContentPacksList__StyledSizeSelect-dqllb7-1 c5",
                                          "closeMenuOnScroll": false,
                                          "closeMenuOnSelect": true,
                                          "components": Object {
                                            "DropdownIndicator": [Function],
                                            "IndicatorSeparator": [Function],
                                            "MultiValueRemove": [Function],
                                          },
                                          "controlShouldRenderValue": true,
                                          "delimiter": ",",
                                          "displayKey": "label",
                                          "escapeClearsValue": false,
                                          "filterOption": [Function],
                                          "formatGroupLabel": [Function],
                                          "getOptionLabel": [Function],
                                          "getOptionValue": [Function],
                                          "ignoreAccents": true,
                                          "inputValue": "",
                                          "isClearable": false,
                                          "isDisabled": false,
                                          "isLoading": false,
                                          "isMulti": false,
                                          "isOptionDisabled": [Function],
                                          "isRtl": false,
                                          "isSearchable": true,
                                          "loadingMessage": [Function],
                                          "maxMenuHeight": 300,
                                          "menuIsOpen": false,
                                          "menuPlacement": "bottom",
                                          "menuPosition": "absolute",
                                          "menuShouldBlockScroll": false,
                                          "menuShouldScrollIntoView": true,
                                          "minMenuHeight": 140,
                                          "noOptionsMessage": [Function],
                                          "onChange": [Function],
                                          "onInputChange": [Function],
                                          "onMenuClose": [Function],
                                          "onMenuOpen": [Function],
                                          "onReactSelectChange": undefined,
                                          "openMenuOnClick": true,
                                          "openMenuOnFocus": false,
                                          "options": Array [
                                            Object {
                                              "label": "10",
                                              "value": "10",
                                            },
                                            Object {
                                              "label": "25",
                                              "value": "25",
                                            },
                                            Object {
                                              "label": "50",
                                              "value": "50",
                                            },
                                            Object {
                                              "label": "100",
                                              "value": "100",
                                            },
                                          ],
                                          "pageSize": 5,
                                          "placeholder": "Select...",
                                          "screenReaderStatus": [Function],
                                          "size": "normal",
                                          "styles": Object {
                                            "clearIndicator": [Function],
                                            "control": [Function],
                                            "dropdownIndicator": [Function],
                                            "menu": [Function],
                                            "multiValue": [Function],
                                            "multiValueLabel": [Function],
                                            "multiValueRemove": [Function],
                                            "placeholder": [Function],
                                            "singleValue": [Function],
                                            "valueContainer": [Function],
                                          },
                                          "tabIndex": "0",
                                          "tabSelectsValue": true,
                                          "theme": [Function],
                                          "value": Array [
                                            Object {
                                              "label": "10",
                                              "value": "10",
                                            },
                                          ],
                                          "valueKey": "value",
                                        }
                                      }
                                      setValue={[Function]}
                                      theme={
                                        Object {
                                          "borderRadius": 4,
                                          "colors": Object {
                                            "danger": "#00427f",
                                            "dangerLight": "#bdc8e4",
                                            "neutral0": "#fff",
                                            "neutral10": "#eff2f8",
                                            "neutral20": "#a6a6a6",
                                            "neutral30": "#b4b4b4",
                                            "neutral40": "#9b9b9b",
                                            "neutral5": "#dddddd",
                                            "neutral50": "#838383",
                                            "neutral60": "#6a6a6a",
                                            "neutral70": "#515151",
                                            "neutral80": "#383838",
                                            "neutral90": "#1f1f1f",
                                            "primary": "#7894ce",
                                            "primary25": "#f3f3f3",
                                            "primary50": "#d0d0d0",
                                            "primary75": "#a6a6a6",
                                          },
                                          "spacing": Object {
                                            "baseUnit": 4,
                                            "controlHeight": 38,
                                            "menuGutter": 8,
                                          },
                                        }
                                      }
                                    >
                                      <div
                                        className="css-1hio1c"
                                      >
                                        <SingleValue
                                          clearValue={[Function]}
                                          cx={[Function]}
                                          data={
                                            Object {
                                              "label": "10",
                                              "value": "10",
                                            }
                                          }
                                          getStyles={[Function]}
                                          getValue={[Function]}
                                          hasValue={true}
                                          isDisabled={false}
                                          isMulti={false}
                                          isRtl={false}
                                          options={
                                            Array [
                                              Object {
                                                "label": "10",
                                                "value": "10",
                                              },
                                              Object {
                                                "label": "25",
                                                "value": "25",
                                              },
                                              Object {
                                                "label": "50",
                                                "value": "50",
                                              },
                                              Object {
                                                "label": "100",
                                                "value": "100",
                                              },
                                            ]
                                          }
                                          selectOption={[Function]}
                                          selectProps={
                                            Object {
                                              "addLabelText": undefined,
                                              "allowCreate": false,
                                              "autoFocus": false,
                                              "backspaceRemovesValue": true,
                                              "blurInputOnSelect": true,
                                              "captureMenuScroll": false,
                                              "className": "ContentPacksList__StyledSizeSelect-dqllb7-1 c5",
                                              "closeMenuOnScroll": false,
                                              "closeMenuOnSelect": true,
                                              "components": Object {
                                                "DropdownIndicator": [Function],
                                                "IndicatorSeparator": [Function],
                                                "MultiValueRemove": [Function],
                                              },
                                              "controlShouldRenderValue": true,
                                              "delimiter": ",",
                                              "displayKey": "label",
                                              "escapeClearsValue": false,
                                              "filterOption": [Function],
                                              "formatGroupLabel": [Function],
                                              "getOptionLabel": [Function],
                                              "getOptionValue": [Function],
                                              "ignoreAccents": true,
                                              "inputValue": "",
                                              "isClearable": false,
                                              "isDisabled": false,
                                              "isLoading": false,
                                              "isMulti": false,
                                              "isOptionDisabled": [Function],
                                              "isRtl": false,
                                              "isSearchable": true,
                                              "loadingMessage": [Function],
                                              "maxMenuHeight": 300,
                                              "menuIsOpen": false,
                                              "menuPlacement": "bottom",
                                              "menuPosition": "absolute",
                                              "menuShouldBlockScroll": false,
                                              "menuShouldScrollIntoView": true,
                                              "minMenuHeight": 140,
                                              "noOptionsMessage": [Function],
                                              "onChange": [Function],
                                              "onInputChange": [Function],
                                              "onMenuClose": [Function],
                                              "onMenuOpen": [Function],
                                              "onReactSelectChange": undefined,
                                              "openMenuOnClick": true,
                                              "openMenuOnFocus": false,
                                              "options": Array [
                                                Object {
                                                  "label": "10",
                                                  "value": "10",
                                                },
                                                Object {
                                                  "label": "25",
                                                  "value": "25",
                                                },
                                                Object {
                                                  "label": "50",
                                                  "value": "50",
                                                },
                                                Object {
                                                  "label": "100",
                                                  "value": "100",
                                                },
                                              ],
                                              "pageSize": 5,
                                              "placeholder": "Select...",
                                              "screenReaderStatus": [Function],
                                              "size": "normal",
                                              "styles": Object {
                                                "clearIndicator": [Function],
                                                "control": [Function],
                                                "dropdownIndicator": [Function],
                                                "menu": [Function],
                                                "multiValue": [Function],
                                                "multiValueLabel": [Function],
                                                "multiValueRemove": [Function],
                                                "placeholder": [Function],
                                                "singleValue": [Function],
                                                "valueContainer": [Function],
                                              },
                                              "tabIndex": "0",
                                              "tabSelectsValue": true,
                                              "theme": [Function],
                                              "value": Array [
                                                Object {
                                                  "label": "10",
                                                  "value": "10",
                                                },
                                              ],
                                              "valueKey": "value",
                                            }
                                          }
                                          setValue={[Function]}
                                          theme={
                                            Object {
                                              "borderRadius": 4,
                                              "colors": Object {
                                                "danger": "#00427f",
                                                "dangerLight": "#bdc8e4",
                                                "neutral0": "#fff",
                                                "neutral10": "#eff2f8",
                                                "neutral20": "#a6a6a6",
                                                "neutral30": "#b4b4b4",
                                                "neutral40": "#9b9b9b",
                                                "neutral5": "#dddddd",
                                                "neutral50": "#838383",
                                                "neutral60": "#6a6a6a",
                                                "neutral70": "#515151",
                                                "neutral80": "#383838",
                                                "neutral90": "#1f1f1f",
                                                "primary": "#7894ce",
                                                "primary25": "#f3f3f3",
                                                "primary50": "#d0d0d0",
                                                "primary75": "#a6a6a6",
                                              },
                                              "spacing": Object {
                                                "baseUnit": 4,
                                                "controlHeight": 38,
                                                "menuGutter": 8,
                                              },
                                            }
                                          }
                                        >
                                          <div
                                            className="css-1yjw8f2-singleValue"
                                          >
                                            10
                                          </div>
                                        </SingleValue>
                                        <Input
                                          aria-autocomplete="list"
                                          autoCapitalize="none"
                                          autoComplete="off"
                                          autoCorrect="off"
                                          cx={[Function]}
                                          getStyles={[Function]}
                                          id="react-select-2-input"
                                          innerRef={[Function]}
                                          isDisabled={false}
                                          isHidden={false}
                                          onBlur={[Function]}
                                          onChange={[Function]}
                                          onFocus={[Function]}
                                          selectProps={
                                            Object {
                                              "addLabelText": undefined,
                                              "allowCreate": false,
                                              "autoFocus": false,
                                              "backspaceRemovesValue": true,
                                              "blurInputOnSelect": true,
                                              "captureMenuScroll": false,
                                              "className": "ContentPacksList__StyledSizeSelect-dqllb7-1 c5",
                                              "closeMenuOnScroll": false,
                                              "closeMenuOnSelect": true,
                                              "components": Object {
                                                "DropdownIndicator": [Function],
                                                "IndicatorSeparator": [Function],
                                                "MultiValueRemove": [Function],
                                              },
                                              "controlShouldRenderValue": true,
                                              "delimiter": ",",
                                              "displayKey": "label",
                                              "escapeClearsValue": false,
                                              "filterOption": [Function],
                                              "formatGroupLabel": [Function],
                                              "getOptionLabel": [Function],
                                              "getOptionValue": [Function],
                                              "ignoreAccents": true,
                                              "inputValue": "",
                                              "isClearable": false,
                                              "isDisabled": false,
                                              "isLoading": false,
                                              "isMulti": false,
                                              "isOptionDisabled": [Function],
                                              "isRtl": false,
                                              "isSearchable": true,
                                              "loadingMessage": [Function],
                                              "maxMenuHeight": 300,
                                              "menuIsOpen": false,
                                              "menuPlacement": "bottom",
                                              "menuPosition": "absolute",
                                              "menuShouldBlockScroll": false,
                                              "menuShouldScrollIntoView": true,
                                              "minMenuHeight": 140,
                                              "noOptionsMessage": [Function],
                                              "onChange": [Function],
                                              "onInputChange": [Function],
                                              "onMenuClose": [Function],
                                              "onMenuOpen": [Function],
                                              "onReactSelectChange": undefined,
                                              "openMenuOnClick": true,
                                              "openMenuOnFocus": false,
                                              "options": Array [
                                                Object {
                                                  "label": "10",
                                                  "value": "10",
                                                },
                                                Object {
                                                  "label": "25",
                                                  "value": "25",
                                                },
                                                Object {
                                                  "label": "50",
                                                  "value": "50",
                                                },
                                                Object {
                                                  "label": "100",
                                                  "value": "100",
                                                },
                                              ],
                                              "pageSize": 5,
                                              "placeholder": "Select...",
                                              "screenReaderStatus": [Function],
                                              "size": "normal",
                                              "styles": Object {
                                                "clearIndicator": [Function],
                                                "control": [Function],
                                                "dropdownIndicator": [Function],
                                                "menu": [Function],
                                                "multiValue": [Function],
                                                "multiValueLabel": [Function],
                                                "multiValueRemove": [Function],
                                                "placeholder": [Function],
                                                "singleValue": [Function],
                                                "valueContainer": [Function],
                                              },
                                              "tabIndex": "0",
                                              "tabSelectsValue": true,
                                              "theme": [Function],
                                              "value": Array [
                                                Object {
                                                  "label": "10",
                                                  "value": "10",
                                                },
                                              ],
                                              "valueKey": "value",
                                            }
                                          }
                                          spellCheck="false"
                                          tabIndex="0"
                                          theme={
                                            Object {
                                              "borderRadius": 4,
                                              "colors": Object {
                                                "danger": "#00427f",
                                                "dangerLight": "#bdc8e4",
                                                "neutral0": "#fff",
                                                "neutral10": "#eff2f8",
                                                "neutral20": "#a6a6a6",
                                                "neutral30": "#b4b4b4",
                                                "neutral40": "#9b9b9b",
                                                "neutral5": "#dddddd",
                                                "neutral50": "#838383",
                                                "neutral60": "#6a6a6a",
                                                "neutral70": "#515151",
                                                "neutral80": "#383838",
                                                "neutral90": "#1f1f1f",
                                                "primary": "#7894ce",
                                                "primary25": "#f3f3f3",
                                                "primary50": "#d0d0d0",
                                                "primary75": "#a6a6a6",
                                              },
                                              "spacing": Object {
                                                "baseUnit": 4,
                                                "controlHeight": 38,
                                                "menuGutter": 8,
                                              },
                                            }
                                          }
                                          type="text"
                                          value=""
                                        >
                                          <div
                                            className="css-dg7tyz"
                                          >
                                            <AutosizeInput
                                              aria-autocomplete="list"
                                              autoCapitalize="none"
                                              autoComplete="off"
                                              autoCorrect="off"
                                              className=""
                                              disabled={false}
                                              id="react-select-2-input"
                                              injectStyles={true}
                                              inputRef={[Function]}
                                              inputStyle={
                                                Object {
                                                  "background": 0,
                                                  "border": 0,
                                                  "color": "inherit",
                                                  "fontSize": "inherit",
                                                  "label": "input",
                                                  "opacity": 1,
                                                  "outline": 0,
                                                  "padding": 0,
                                                }
                                              }
                                              minWidth={1}
                                              onBlur={[Function]}
                                              onChange={[Function]}
                                              onFocus={[Function]}
                                              spellCheck="false"
                                              tabIndex="0"
                                              type="text"
                                              value=""
                                            >
                                              <div
                                                className=""
                                                style={
                                                  Object {
                                                    "display": "inline-block",
                                                  }
                                                }
                                              >
                                                <input
                                                  aria-autocomplete="list"
                                                  autoCapitalize="none"
                                                  autoComplete="off"
                                                  autoCorrect="off"
                                                  disabled={false}
                                                  id="react-select-2-input"
                                                  onBlur={[Function]}
                                                  onChange={[Function]}
                                                  onFocus={[Function]}
                                                  spellCheck="false"
                                                  style={
                                                    Object {
                                                      "background": 0,
                                                      "border": 0,
                                                      "boxSizing": "content-box",
                                                      "color": "inherit",
                                                      "fontSize": "inherit",
                                                      "label": "input",
                                                      "opacity": 1,
                                                      "outline": 0,
                                                      "padding": 0,
                                                      "width": "2px",
                                                    }
                                                  }
                                                  tabIndex="0"
                                                  type="text"
                                                  value=""
                                                />
                                                <div
                                                  style={
                                                    Object {
                                                      "height": 0,
                                                      "left": 0,
                                                      "overflow": "scroll",
                                                      "position": "absolute",
                                                      "top": 0,
                                                      "visibility": "hidden",
                                                      "whiteSpace": "pre",
                                                    }
                                                  }
                                                />
                                              </div>
                                            </AutosizeInput>
                                          </div>
                                        </Input>
                                      </div>
                                    </ValueContainer>
                                    <IndicatorsContainer
                                      clearValue={[Function]}
                                      cx={[Function]}
                                      getStyles={[Function]}
                                      getValue={[Function]}
                                      hasValue={true}
                                      isDisabled={false}
                                      isMulti={false}
                                      isRtl={false}
                                      options={
                                        Array [
                                          Object {
                                            "label": "10",
                                            "value": "10",
                                          },
                                          Object {
                                            "label": "25",
                                            "value": "25",
                                          },
                                          Object {
                                            "label": "50",
                                            "value": "50",
                                          },
                                          Object {
                                            "label": "100",
                                            "value": "100",
                                          },
                                        ]
                                      }
                                      selectOption={[Function]}
                                      selectProps={
                                        Object {
                                          "addLabelText": undefined,
                                          "allowCreate": false,
                                          "autoFocus": false,
                                          "backspaceRemovesValue": true,
                                          "blurInputOnSelect": true,
                                          "captureMenuScroll": false,
                                          "className": "ContentPacksList__StyledSizeSelect-dqllb7-1 c5",
                                          "closeMenuOnScroll": false,
                                          "closeMenuOnSelect": true,
                                          "components": Object {
                                            "DropdownIndicator": [Function],
                                            "IndicatorSeparator": [Function],
                                            "MultiValueRemove": [Function],
                                          },
                                          "controlShouldRenderValue": true,
                                          "delimiter": ",",
                                          "displayKey": "label",
                                          "escapeClearsValue": false,
                                          "filterOption": [Function],
                                          "formatGroupLabel": [Function],
                                          "getOptionLabel": [Function],
                                          "getOptionValue": [Function],
                                          "ignoreAccents": true,
                                          "inputValue": "",
                                          "isClearable": false,
                                          "isDisabled": false,
                                          "isLoading": false,
                                          "isMulti": false,
                                          "isOptionDisabled": [Function],
                                          "isRtl": false,
                                          "isSearchable": true,
                                          "loadingMessage": [Function],
                                          "maxMenuHeight": 300,
                                          "menuIsOpen": false,
                                          "menuPlacement": "bottom",
                                          "menuPosition": "absolute",
                                          "menuShouldBlockScroll": false,
                                          "menuShouldScrollIntoView": true,
                                          "minMenuHeight": 140,
                                          "noOptionsMessage": [Function],
                                          "onChange": [Function],
                                          "onInputChange": [Function],
                                          "onMenuClose": [Function],
                                          "onMenuOpen": [Function],
                                          "onReactSelectChange": undefined,
                                          "openMenuOnClick": true,
                                          "openMenuOnFocus": false,
                                          "options": Array [
                                            Object {
                                              "label": "10",
                                              "value": "10",
                                            },
                                            Object {
                                              "label": "25",
                                              "value": "25",
                                            },
                                            Object {
                                              "label": "50",
                                              "value": "50",
                                            },
                                            Object {
                                              "label": "100",
                                              "value": "100",
                                            },
                                          ],
                                          "pageSize": 5,
                                          "placeholder": "Select...",
                                          "screenReaderStatus": [Function],
                                          "size": "normal",
                                          "styles": Object {
                                            "clearIndicator": [Function],
                                            "control": [Function],
                                            "dropdownIndicator": [Function],
                                            "menu": [Function],
                                            "multiValue": [Function],
                                            "multiValueLabel": [Function],
                                            "multiValueRemove": [Function],
                                            "placeholder": [Function],
                                            "singleValue": [Function],
                                            "valueContainer": [Function],
                                          },
                                          "tabIndex": "0",
                                          "tabSelectsValue": true,
                                          "theme": [Function],
                                          "value": Array [
                                            Object {
                                              "label": "10",
                                              "value": "10",
                                            },
                                          ],
                                          "valueKey": "value",
                                        }
                                      }
                                      setValue={[Function]}
                                      theme={
                                        Object {
                                          "borderRadius": 4,
                                          "colors": Object {
                                            "danger": "#00427f",
                                            "dangerLight": "#bdc8e4",
                                            "neutral0": "#fff",
                                            "neutral10": "#eff2f8",
                                            "neutral20": "#a6a6a6",
                                            "neutral30": "#b4b4b4",
                                            "neutral40": "#9b9b9b",
                                            "neutral5": "#dddddd",
                                            "neutral50": "#838383",
                                            "neutral60": "#6a6a6a",
                                            "neutral70": "#515151",
                                            "neutral80": "#383838",
                                            "neutral90": "#1f1f1f",
                                            "primary": "#7894ce",
                                            "primary25": "#f3f3f3",
                                            "primary50": "#d0d0d0",
                                            "primary75": "#a6a6a6",
                                          },
                                          "spacing": Object {
                                            "baseUnit": 4,
                                            "controlHeight": 38,
                                            "menuGutter": 8,
                                          },
                                        }
                                      }
                                    >
                                      <div
                                        className="css-1wy0on6"
                                      >
                                        <IndicatorSeparator
                                          clearValue={[Function]}
                                          cx={[Function]}
                                          getStyles={[Function]}
                                          getValue={[Function]}
                                          hasValue={true}
                                          isDisabled={false}
                                          isFocused={false}
                                          isMulti={false}
                                          isRtl={false}
                                          options={
                                            Array [
                                              Object {
                                                "label": "10",
                                                "value": "10",
                                              },
                                              Object {
                                                "label": "25",
                                                "value": "25",
                                              },
                                              Object {
                                                "label": "50",
                                                "value": "50",
                                              },
                                              Object {
                                                "label": "100",
                                                "value": "100",
                                              },
                                            ]
                                          }
                                          selectOption={[Function]}
                                          selectProps={
                                            Object {
                                              "addLabelText": undefined,
                                              "allowCreate": false,
                                              "autoFocus": false,
                                              "backspaceRemovesValue": true,
                                              "blurInputOnSelect": true,
                                              "captureMenuScroll": false,
                                              "className": "ContentPacksList__StyledSizeSelect-dqllb7-1 c5",
                                              "closeMenuOnScroll": false,
                                              "closeMenuOnSelect": true,
                                              "components": Object {
                                                "DropdownIndicator": [Function],
                                                "IndicatorSeparator": [Function],
                                                "MultiValueRemove": [Function],
                                              },
                                              "controlShouldRenderValue": true,
                                              "delimiter": ",",
                                              "displayKey": "label",
                                              "escapeClearsValue": false,
                                              "filterOption": [Function],
                                              "formatGroupLabel": [Function],
                                              "getOptionLabel": [Function],
                                              "getOptionValue": [Function],
                                              "ignoreAccents": true,
                                              "inputValue": "",
                                              "isClearable": false,
                                              "isDisabled": false,
                                              "isLoading": false,
                                              "isMulti": false,
                                              "isOptionDisabled": [Function],
                                              "isRtl": false,
                                              "isSearchable": true,
                                              "loadingMessage": [Function],
                                              "maxMenuHeight": 300,
                                              "menuIsOpen": false,
                                              "menuPlacement": "bottom",
                                              "menuPosition": "absolute",
                                              "menuShouldBlockScroll": false,
                                              "menuShouldScrollIntoView": true,
                                              "minMenuHeight": 140,
                                              "noOptionsMessage": [Function],
                                              "onChange": [Function],
                                              "onInputChange": [Function],
                                              "onMenuClose": [Function],
                                              "onMenuOpen": [Function],
                                              "onReactSelectChange": undefined,
                                              "openMenuOnClick": true,
                                              "openMenuOnFocus": false,
                                              "options": Array [
                                                Object {
                                                  "label": "10",
                                                  "value": "10",
                                                },
                                                Object {
                                                  "label": "25",
                                                  "value": "25",
                                                },
                                                Object {
                                                  "label": "50",
                                                  "value": "50",
                                                },
                                                Object {
                                                  "label": "100",
                                                  "value": "100",
                                                },
                                              ],
                                              "pageSize": 5,
                                              "placeholder": "Select...",
                                              "screenReaderStatus": [Function],
                                              "size": "normal",
                                              "styles": Object {
                                                "clearIndicator": [Function],
                                                "control": [Function],
                                                "dropdownIndicator": [Function],
                                                "menu": [Function],
                                                "multiValue": [Function],
                                                "multiValueLabel": [Function],
                                                "multiValueRemove": [Function],
                                                "placeholder": [Function],
                                                "singleValue": [Function],
                                                "valueContainer": [Function],
                                              },
                                              "tabIndex": "0",
                                              "tabSelectsValue": true,
                                              "theme": [Function],
                                              "value": Array [
                                                Object {
                                                  "label": "10",
                                                  "value": "10",
                                                },
                                              ],
                                              "valueKey": "value",
                                            }
                                          }
                                          setValue={[Function]}
                                          theme={
                                            Object {
                                              "borderRadius": 4,
                                              "colors": Object {
                                                "danger": "#00427f",
                                                "dangerLight": "#bdc8e4",
                                                "neutral0": "#fff",
                                                "neutral10": "#eff2f8",
                                                "neutral20": "#a6a6a6",
                                                "neutral30": "#b4b4b4",
                                                "neutral40": "#9b9b9b",
                                                "neutral5": "#dddddd",
                                                "neutral50": "#838383",
                                                "neutral60": "#6a6a6a",
                                                "neutral70": "#515151",
                                                "neutral80": "#383838",
                                                "neutral90": "#1f1f1f",
                                                "primary": "#7894ce",
                                                "primary25": "#f3f3f3",
                                                "primary50": "#d0d0d0",
                                                "primary75": "#a6a6a6",
                                              },
                                              "spacing": Object {
                                                "baseUnit": 4,
                                                "controlHeight": 38,
                                                "menuGutter": 8,
                                              },
                                            }
                                          }
                                        />
                                        <DropdownIndicator
                                          clearValue={[Function]}
                                          cx={[Function]}
                                          getStyles={[Function]}
                                          getValue={[Function]}
                                          hasValue={true}
                                          innerProps={
                                            Object {
                                              "aria-hidden": "true",
                                              "onMouseDown": [Function],
                                              "onTouchEnd": [Function],
                                            }
                                          }
                                          isDisabled={false}
                                          isFocused={false}
                                          isMulti={false}
                                          isRtl={false}
                                          options={
                                            Array [
                                              Object {
                                                "label": "10",
                                                "value": "10",
                                              },
                                              Object {
                                                "label": "25",
                                                "value": "25",
                                              },
                                              Object {
                                                "label": "50",
                                                "value": "50",
                                              },
                                              Object {
                                                "label": "100",
                                                "value": "100",
                                              },
                                            ]
                                          }
                                          selectOption={[Function]}
                                          selectProps={
                                            Object {
                                              "addLabelText": undefined,
                                              "allowCreate": false,
                                              "autoFocus": false,
                                              "backspaceRemovesValue": true,
                                              "blurInputOnSelect": true,
                                              "captureMenuScroll": false,
                                              "className": "ContentPacksList__StyledSizeSelect-dqllb7-1 c5",
                                              "closeMenuOnScroll": false,
                                              "closeMenuOnSelect": true,
                                              "components": Object {
                                                "DropdownIndicator": [Function],
                                                "IndicatorSeparator": [Function],
                                                "MultiValueRemove": [Function],
                                              },
                                              "controlShouldRenderValue": true,
                                              "delimiter": ",",
                                              "displayKey": "label",
                                              "escapeClearsValue": false,
                                              "filterOption": [Function],
                                              "formatGroupLabel": [Function],
                                              "getOptionLabel": [Function],
                                              "getOptionValue": [Function],
                                              "ignoreAccents": true,
                                              "inputValue": "",
                                              "isClearable": false,
                                              "isDisabled": false,
                                              "isLoading": false,
                                              "isMulti": false,
                                              "isOptionDisabled": [Function],
                                              "isRtl": false,
                                              "isSearchable": true,
                                              "loadingMessage": [Function],
                                              "maxMenuHeight": 300,
                                              "menuIsOpen": false,
                                              "menuPlacement": "bottom",
                                              "menuPosition": "absolute",
                                              "menuShouldBlockScroll": false,
                                              "menuShouldScrollIntoView": true,
                                              "minMenuHeight": 140,
                                              "noOptionsMessage": [Function],
                                              "onChange": [Function],
                                              "onInputChange": [Function],
                                              "onMenuClose": [Function],
                                              "onMenuOpen": [Function],
                                              "onReactSelectChange": undefined,
                                              "openMenuOnClick": true,
                                              "openMenuOnFocus": false,
                                              "options": Array [
                                                Object {
                                                  "label": "10",
                                                  "value": "10",
                                                },
                                                Object {
                                                  "label": "25",
                                                  "value": "25",
                                                },
                                                Object {
                                                  "label": "50",
                                                  "value": "50",
                                                },
                                                Object {
                                                  "label": "100",
                                                  "value": "100",
                                                },
                                              ],
                                              "pageSize": 5,
                                              "placeholder": "Select...",
                                              "screenReaderStatus": [Function],
                                              "size": "normal",
                                              "styles": Object {
                                                "clearIndicator": [Function],
                                                "control": [Function],
                                                "dropdownIndicator": [Function],
                                                "menu": [Function],
                                                "multiValue": [Function],
                                                "multiValueLabel": [Function],
                                                "multiValueRemove": [Function],
                                                "placeholder": [Function],
                                                "singleValue": [Function],
                                                "valueContainer": [Function],
                                              },
                                              "tabIndex": "0",
                                              "tabSelectsValue": true,
                                              "theme": [Function],
                                              "value": Array [
                                                Object {
                                                  "label": "10",
                                                  "value": "10",
                                                },
                                              ],
                                              "valueKey": "value",
                                            }
                                          }
                                          setValue={[Function]}
                                          theme={
                                            Object {
                                              "borderRadius": 4,
                                              "colors": Object {
                                                "danger": "#00427f",
                                                "dangerLight": "#bdc8e4",
                                                "neutral0": "#fff",
                                                "neutral10": "#eff2f8",
                                                "neutral20": "#a6a6a6",
                                                "neutral30": "#b4b4b4",
                                                "neutral40": "#9b9b9b",
                                                "neutral5": "#dddddd",
                                                "neutral50": "#838383",
                                                "neutral60": "#6a6a6a",
                                                "neutral70": "#515151",
                                                "neutral80": "#383838",
                                                "neutral90": "#1f1f1f",
                                                "primary": "#7894ce",
                                                "primary25": "#f3f3f3",
                                                "primary50": "#d0d0d0",
                                                "primary75": "#a6a6a6",
                                              },
                                              "spacing": Object {
                                                "baseUnit": 4,
                                                "controlHeight": 38,
                                                "menuGutter": 8,
                                              },
                                            }
                                          }
                                        >
                                          <div
                                            aria-hidden="true"
                                            onMouseDown={[Function]}
                                            onTouchEnd={[Function]}
                                            style={
                                              Object {
                                                ":hover": Object {
                                                  "color": "#9b9b9b",
                                                },
                                                "boxSizing": "border-box",
                                                "color": "#a6a6a6",
                                                "display": "flex",
                                                "fontSize": "150%",
                                                "label": "indicatorContainer",
                                                "marginRight": "1rem",
                                                "padding": "0px",
                                                "transform": false,
                                                "transition": "color 150ms",
                                              }
                                            }
                                          >
                                            <Icon
                                              name="caret-down"
                                              type="solid"
                                            >
                                              <FontAwesomeIcon
                                                icon={
                                                  Object {
                                                    "iconName": "caret-down",
                                                    "prefix": "fas",
                                                  }
                                                }
                                              >
                                                <svg
                                                  className="svg-inline--fa fa-caret-down"
                                                />
                                              </FontAwesomeIcon>
                                            </Icon>
                                          </div>
                                        </DropdownIndicator>
                                      </div>
                                    </IndicatorsContainer>
                                  </div>
                                </Control>
                              </div>
                            </SelectContainer>
                          </Select>
                        </StateManager>
                      </Select>
                    </WithTheme(Select)>
                  </ContentPacksList__StyledSizeSelect>
                </span>
              </ContentPacksList__PageSizeSelector>
            </div>
          </Col>
        </div>
      </Row>
    </Row>
    <div>
      No content packs found. Please create or upload one
    </div>
    <Row
      className="row-sm"
    >
      <Row
        bsClass="row"
        className="c0 row-sm"
        componentClass="div"
      >
        <div
          className="c0 row-sm row"
        >
          <Col
            bsClass="col"
            componentClass="div"
            md={5}
          >
            <div
              className="col-md-5"
            />
          </Col>
          <Col
            bsClass="col"
            componentClass="div"
            md={5}
          >
            <div
              className="col-md-5"
            >
              <Pagination
                boundaryPagesRange={1}
                currentPage={1}
                disabled={false}
                hideEllipsis={false}
                hideFirstAndLastPageLinks={false}
                hidePreviousAndNextPageLinks={false}
                onChange={[Function]}
                siblingPagesRange={1}
                totalPages={0}
              />
            </div>
          </Col>
          <Col
            bsClass="col"
            className="text-right"
            componentClass="div"
            md={2}
          >
            <div
              className="text-right col-md-2"
            >
              <ContentPacksList__PageSizeSelector>
                <span
                  className="c4"
                >
                  <span>
                    Show:
                  </span>
                  <ContentPacksList__StyledSizeSelect
                    clearable={false}
                    onChange={[Function]}
                    options={
                      Array [
                        Object {
                          "label": "10",
                          "value": "10",
                        },
                        Object {
                          "label": "25",
                          "value": "25",
                        },
                        Object {
                          "label": "50",
                          "value": "50",
                        },
                        Object {
                          "label": "100",
                          "value": "100",
                        },
                      ]
                    }
                    value="10"
                  >
                    <WithTheme(Select)
                      className="c5"
                      clearable={false}
                      onChange={[Function]}
                      options={
                        Array [
                          Object {
                            "label": "10",
                            "value": "10",
                          },
                          Object {
                            "label": "25",
                            "value": "25",
                          },
                          Object {
                            "label": "50",
                            "value": "50",
                          },
                          Object {
                            "label": "100",
                            "value": "100",
                          },
                        ]
                      }
                      value="10"
                    >
                      <Select
                        allowCreate={false}
                        autoFocus={false}
                        className="c5"
                        clearable={false}
                        components={null}
                        delimiter=","
                        disabled={false}
                        displayKey="label"
                        ignoreAccents={true}
                        matchProp="any"
                        multi={false}
                        onChange={[Function]}
                        options={
                          Array [
                            Object {
                              "label": "10",
                              "value": "10",
                            },
                            Object {
                              "label": "25",
                              "value": "25",
                            },
                            Object {
                              "label": "50",
                              "value": "50",
                            },
                            Object {
                              "label": "100",
                              "value": "100",
                            },
                          ]
                        }
                        size="normal"
                        theme={
                          Object {
                            "breakpoints": Object {
                              "max": Object {
                                "lg": "1199px",
                                "md": "991px",
                                "sm": "767px",
                                "xs": "479px",
                              },
                              "min": Object {
                                "lg": "1200px",
                                "md": "992px",
                                "sm": "768px",
                                "xs": "480px",
                              },
                            },
                            "changeMode": [Function],
                            "colors": Object {
                              "brand": Object {
                                "primary": "#ff3633",
                                "secondary": "#fff",
                                "tertiary": "#1f1f1f",
                              },
                              "global": Object {
                                "background": "#e8e8e8",
                                "contentBackground": "#fff",
                                "link": "#702785",
                                "linkHover": "#410057",
                                "navigationBackground": "#fff",
                                "navigationBoxShadow": "rgba(115,115,115,0.25)",
                                "textAlt": "#fff",
                                "textDefault": "#1f1f1f",
                              },
                              "gray": Object {
                                "10": "#1f1f1f",
                                "100": "#ffffff",
                                "20": "#383838",
                                "30": "#515151",
                                "40": "#6a6a6a",
                                "50": "#838383",
                                "60": "#9b9b9b",
                                "70": "#b4b4b4",
                                "80": "#cdcdcd",
                                "90": "#e6e6e6",
                              },
                              "input": Object {
                                "background": "#fff",
                                "backgroundDisabled": "#dddddd",
                                "border": "#a6a6a6",
                                "borderFocus": "#7894ce",
                                "boxShadow": "inset 0 1px 1px rgba(0, 0, 0, 0.075), 0 0 8px rgba(120,148,206,0.4)",
                                "color": "#1f1f1f",
                                "colorDisabled": "#9b9b9b",
                                "placeholder": "#9b9b9b",
                              },
                              "table": Object {
                                "background": "#fafafa",
                                "backgroundAlt": "#f0f0f0",
                                "backgroundHover": "#f5f5f5",
                                "variant": Object {
                                  "active": "#e6e6e6",
                                  "danger": "#eddddd",
                                  "info": "#dde2f0",
                                  "primary": "#e4dee7",
                                  "success": "#ddeddf",
                                  "warning": "#fff5dd",
                                },
                                "variantHover": Object {
                                  "active": "#d0d0d0",
                                  "danger": "#debdbd",
                                  "info": "#bdc8e4",
                                  "primary": "#cbbfd1",
                                  "success": "#bddec2",
                                  "warning": "#ffecbd",
                                },
                              },
                              "variant": Object {
                                "danger": "#ad0707",
                                "dark": Object {
                                  "danger": "#990606",
                                  "default": "#737373",
                                  "info": "#0057a8",
                                  "primary": "#632275",
                                  "success": "#009a3a",
                                  "warning": "#e1b900",
                                },
                                "darker": Object {
                                  "danger": "#740505",
                                  "default": "#575757",
                                  "info": "#00427f",
                                  "primary": "#4b1a59",
                                  "success": "#00752c",
                                  "warning": "#ab8d00",
                                },
                                "darkest": Object {
                                  "danger": "#3c0202",
                                  "default": "#2d2d2d",
                                  "info": "#002242",
                                  "primary": "#270e2e",
                                  "success": "#003c17",
                                  "warning": "#584900",
                                },
                                "default": "#828282",
                                "info": "#0063be",
                                "light": Object {
                                  "danger": "#c27878",
                                  "default": "#a6a6a6",
                                  "info": "#7894ce",
                                  "primary": "#9b7ca8",
                                  "success": "#78c385",
                                  "warning": "#ffdd78",
                                },
                                "lighter": Object {
                                  "danger": "#debdbd",
                                  "default": "#d0d0d0",
                                  "info": "#bdc8e4",
                                  "primary": "#cbbfd1",
                                  "success": "#bddec2",
                                  "warning": "#ffecbd",
                                },
                                "lightest": Object {
                                  "danger": "#f7efef",
                                  "default": "#f3f3f3",
                                  "info": "#eff2f8",
                                  "primary": "#f2f0f4",
                                  "success": "#eff7f0",
                                  "warning": "#fffaef",
                                },
                                "primary": "#702785",
                                "success": "#00ae42",
                                "warning": "#ffd200",
                              },
                            },
                            "components": Object {
                              "aceEditor": Array [
                                ".ace_editor{border:1px solid ",
                                "#cdcdcd",
                                ";border-radius:5px;}.ace-graylog{background-color:",
                                "#fff",
                                ";color:",
                                "#2d2d2d",
                                ";&.ace_multiselect .ace_selection.ace_start{box-shadow:0 0 3px 0 ",
                                "#fff",
                                ";}.ace_gutter{background:",
                                "#f3f3f3",
                                ";color:",
                                "#2d2d2d",
                                ";}.ace_print-margin{width:1px;background:",
                                "#f3f3f3",
                                ";}.ace_cursor{color:",
                                "#a6a6a6",
                                ";}.ace_marker-layer{.ace_selection{background:",
                                "#b4b4b4",
                                ";}.ace_step{background:rgb(255,255,0);}.ace_bracket{margin:-1px 0 0 -1px;border:1px solid ",
                                "#b4b4b4",
                                ";}.ace_selected-word{border:1px solid ",
                                "#9b9b9b",
                                ";}.ace_active-line{background:",
                                "#e6e6e6",
                                ";}}.ace_gutter-active-line{background-color:",
                                "#cdcdcd",
                                ";}.ace_invisible{color:",
                                "#b4b4b4",
                                ";}.ace_keyword,.ace_meta,.ace_storage,.ace_storage.ace_type,.ace_support.ace_type{color:",
                                "#702785",
                                ";}.ace_keyword.ace_operator{color:",
                                "#00427f",
                                ";}.ace_constant.ace_character,.ace_constant.ace_language,.ace_constant.ace_numeric,.ace_keyword.ace_other.ace_unit,.ace_support.ace_constant,.ace_variable.ace_parameter{color:",
                                "#4b1a59",
                                ";}.ace_constant.ace_other{color:",
                                "#575757",
                                ";}.ace_invalid{color:",
                                "#fff",
                                ";background-color:",
                                "#c27878",
                                ";}.ace_invalid.ace_deprecated{color:",
                                "#fff",
                                ";background-color:",
                                "#702785",
                                ";}.ace_fold{background-color:",
                                "#0063be",
                                ";border-color:",
                                "#2d2d2d",
                                ";}.ace_entity.ace_name.ace_function,.ace_support.ace_function,.ace_variable{color:",
                                "#0063be",
                                ";}.ace_support.ace_class,.ace_support.ace_type{color:",
                                "#ab8d00",
                                ";}.ace_heading,.ace_markup.ace_heading,.ace_string{color:",
                                "#00752c",
                                ";}.ace_entity.ace_name.ace_tag,.ace_entity.ace_other.ace_attribute-name,.ace_meta.ace_tag,.ace_string.ace_regexp,.ace_variable{color:",
                                "#c27878",
                                ";}.ace_comment{color:",
                                "#737373",
                                ";}}",
                              ],
                              "button": Array [
                                Array [
                                  "&.btn-",
                                  "danger",
                                  "{background-color:",
                                  "#ad0707",
                                  ";border-color:",
                                  "#b23939",
                                  ";color:",
                                  "rgb(252,249,249)",
                                  ";transition:background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;:hover{background-color:",
                                  "#a00e0e",
                                  ";border-color:",
                                  "#a53636",
                                  ";color:",
                                  "#e9e6e6",
                                  ";}&.active{background-color:",
                                  "#b75151",
                                  ";border-color:",
                                  "#bc6363",
                                  ";color:",
                                  "rgb(252,249,249)",
                                  ";:hover{background-color:",
                                  "#a94c4c",
                                  ";border-color:",
                                  "#ad5c5c",
                                  ";color:",
                                  "#e9e6e6",
                                  ";}}&[disabled],&.disabled{background-color:",
                                  "#c07272",
                                  ";border-color:",
                                  "#bc6363",
                                  ";color:",
                                  "rgb(252,250,250)",
                                  ";:hover{background-color:",
                                  "#c07272",
                                  ";border-color:",
                                  "#bc6363",
                                  ";color:",
                                  "rgb(252,250,250)",
                                  ";}}}",
                                ],
                                Array [
                                  "&.btn-",
                                  "default",
                                  "{background-color:",
                                  "#e6e6e6",
                                  ";border-color:",
                                  "#e0e0e0",
                                  ";color:",
                                  "rgb(73,73,73)",
                                  ";transition:background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;:hover{background-color:",
                                  "#d4d4d4",
                                  ";border-color:",
                                  "#cfcfcf",
                                  ";color:",
                                  "#444444",
                                  ";}&.active{background-color:",
                                  "#dadada",
                                  ";border-color:",
                                  "#d4d4d4",
                                  ";color:",
                                  "rgb(49,49,49)",
                                  ";:hover{background-color:",
                                  "#cacaca",
                                  ";border-color:",
                                  "#c4c4c4",
                                  ";color:",
                                  "#2f2f2f",
                                  ";}}&[disabled],&.disabled{background-color:",
                                  "#cecece",
                                  ";border-color:",
                                  "#d4d4d4",
                                  ";color:",
                                  "rgb(80,80,80)",
                                  ";:hover{background-color:",
                                  "#cecece",
                                  ";border-color:",
                                  "#d4d4d4",
                                  ";color:",
                                  "rgb(80,80,80)",
                                  ";}}}",
                                ],
                                Array [
                                  "&.btn-",
                                  "info",
                                  "{background-color:",
                                  "#0063be",
                                  ";border-color:",
                                  "#3970c2",
                                  ";color:",
                                  "rgb(249,250,252)",
                                  ";transition:background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;:hover{background-color:",
                                  "#0c5cb0",
                                  ";border-color:",
                                  "#3668b3",
                                  ";color:",
                                  "#e6e7e9",
                                  ";}&.active{background-color:",
                                  "#517cc5",
                                  ";border-color:",
                                  "#6386c9",
                                  ";color:",
                                  "rgb(249,250,252)",
                                  ";:hover{background-color:",
                                  "#4b73b6",
                                  ";border-color:",
                                  "#5c7dba",
                                  ";color:",
                                  "#e6e7e9",
                                  ";}}&[disabled],&.disabled{background-color:",
                                  "#7290cd",
                                  ";border-color:",
                                  "#6386c9",
                                  ";color:",
                                  "rgb(250,251,253)",
                                  ";:hover{background-color:",
                                  "#7290cd",
                                  ";border-color:",
                                  "#6386c9",
                                  ";color:",
                                  "rgb(250,251,253)",
                                  ";}}}",
                                ],
                                Array [
                                  "&.btn-",
                                  "link",
                                  "{background-color:",
                                  "rgba(255, 255, 255, 0)",
                                  ";border-color:",
                                  "rgba(255, 255, 255, 0)",
                                  ";color:",
                                  "#702785",
                                  ";transition:background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;:hover{background-color:",
                                  "#ebebeb26",
                                  ";border-color:",
                                  "#ebebeb26",
                                  ";color:",
                                  "#68267b",
                                  ";}&.active{background-color:",
                                  "rgba(255, 255, 255, 0)",
                                  ";border-color:",
                                  "rgba(255, 255, 255, 0)",
                                  ";color:",
                                  "#410057",
                                  ";:hover{background-color:",
                                  "rgba(255, 255, 255, 0)",
                                  ";border-color:",
                                  "#ebebeb26",
                                  ";color:",
                                  "#3d0c51",
                                  ";}}&[disabled],&.disabled{background-color:",
                                  "rgba(255, 255, 255, 0)",
                                  ";border-color:",
                                  "rgba(255, 255, 255, 0)",
                                  ";color:",
                                  "#702785",
                                  ";:hover{background-color:",
                                  "rgba(255, 255, 255, 0)",
                                  ";border-color:",
                                  "rgba(255, 255, 255, 0)",
                                  ";color:",
                                  "#702785",
                                  ";}}}",
                                ],
                                Array [
                                  "&.btn-",
                                  "primary",
                                  "{background-color:",
                                  "#702785",
                                  ";border-color:",
                                  "#7b458e",
                                  ";color:",
                                  "rgb(234,229,236)",
                                  ";transition:background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;:hover{background-color:",
                                  "#68267b",
                                  ";border-color:",
                                  "#724083",
                                  ";color:",
                                  "#d8d3da",
                                  ";}&.active{background-color:",
                                  "#855996",
                                  ";border-color:",
                                  "#8f699d",
                                  ";color:",
                                  "rgb(250,249,251)",
                                  ";:hover{background-color:",
                                  "#7c538b",
                                  ";border-color:",
                                  "#846292",
                                  ";color:",
                                  "#e7e6e8",
                                  ";}}&[disabled],&.disabled{background-color:",
                                  "#9877a5",
                                  ";border-color:",
                                  "#8f699d",
                                  ";color:",
                                  "rgb(251,250,251)",
                                  ";:hover{background-color:",
                                  "#9877a5",
                                  ";border-color:",
                                  "#8f699d",
                                  ";color:",
                                  "rgb(251,250,251)",
                                  ";}}}",
                                ],
                                Array [
                                  "&.btn-",
                                  "success",
                                  "{background-color:",
                                  "#00ae42",
                                  ";border-color:",
                                  "#39b356",
                                  ";color:",
                                  "rgb(249,252,249)",
                                  ";transition:background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;:hover{background-color:",
                                  "#0ca13e",
                                  ";border-color:",
                                  "#36a550",
                                  ";color:",
                                  "#e6e9e6",
                                  ";}&.active{background-color:",
                                  "#51b866",
                                  ";border-color:",
                                  "#63bc74",
                                  ";color:",
                                  "rgb(249,252,250)",
                                  ";:hover{background-color:",
                                  "#4baa5f",
                                  ";border-color:",
                                  "#5cae6c",
                                  ";color:",
                                  "#e6e9e7",
                                  ";}}&[disabled],&.disabled{background-color:",
                                  "#72c180",
                                  ";border-color:",
                                  "#63bc74",
                                  ";color:",
                                  "rgb(250,252,250)",
                                  ";:hover{background-color:",
                                  "#72c180",
                                  ";border-color:",
                                  "#63bc74",
                                  ";color:",
                                  "rgb(250,252,250)",
                                  ";}}}",
                                ],
                                Array [
                                  "&.btn-",
                                  "warning",
                                  "{background-color:",
                                  "#ffd200",
                                  ";border-color:",
                                  "#f9cd07",
                                  ";color:",
                                  "rgb(57,47,0)",
                                  ";transition:background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;:hover{background-color:",
                                  "#ebc20c",
                                  ";border-color:",
                                  "#e6bd0e",
                                  ";color:",
                                  "#362d0c",
                                  ";}&.active{background-color:",
                                  "#f2c70a",
                                  ";border-color:",
                                  "#ebc20c",
                                  ";color:",
                                  "rgb(54,45,2)",
                                  ";:hover{background-color:",
                                  "#e0b80f",
                                  ";border-color:",
                                  "#d9b310",
                                  ";color:",
                                  "#332b0c",
                                  ";}}&[disabled],&.disabled{background-color:",
                                  "#e4bc0e",
                                  ";border-color:",
                                  "#ebc20c",
                                  ";color:",
                                  "rgb(88,73,5)",
                                  ";:hover{background-color:",
                                  "#e4bc0e",
                                  ";border-color:",
                                  "#ebc20c",
                                  ";color:",
                                  "rgb(88,73,5)",
                                  ";}}}",
                                ],
                              ],
                            },
                            "fonts": Object {
                              "family": Object {
                                "body": "\\"Open Sans\\", \\"Helvetica Neue\\", Helvetica, Arial, sans-serif",
                                "monospace": "\\"Roboto Mono\\", Menlo, Monaco, Consolas, \\"Courier New\\", monospace",
                              },
                              "size": Object {
                                "body": "1rem",
                                "h1": "1.802rem",
                                "h2": "1.602rem",
                                "h3": "1.424rem",
                                "h4": "1.266rem",
                                "h5": "1.125rem",
                                "h6": "1rem",
                                "huge": "2.027rem",
                                "large": "1.125rem",
                                "root": "87.5%",
                                "small": "0.889rem",
                                "tiny": "0.79rem",
                              },
                            },
                            "mode": "teint",
                            "utils": Object {
                              "colorLevel": [Function],
                              "contrastingColor": [Function],
                              "opacify": [Function],
                              "readableColor": [Function],
                            },
                          }
                        }
                        value="10"
                        valueKey="value"
                      >
                        <StateManager
                          allowCreate={false}
                          autoFocus={false}
                          className="c5"
                          components={
                            Object {
                              "DropdownIndicator": [Function],
                              "IndicatorSeparator": [Function],
                              "MultiValueRemove": [Function],
                            }
                          }
                          defaultInputValue=""
                          defaultMenuIsOpen={false}
                          defaultValue={null}
                          delimiter=","
                          displayKey="label"
                          filterOption={[Function]}
                          getOptionLabel={[Function]}
                          getOptionValue={[Function]}
                          ignoreAccents={true}
                          isClearable={false}
                          isDisabled={false}
                          isMulti={false}
                          isOptionDisabled={[Function]}
                          onChange={[Function]}
                          options={
                            Array [
                              Object {
                                "label": "10",
                                "value": "10",
                              },
                              Object {
                                "label": "25",
                                "value": "25",
                              },
                              Object {
                                "label": "50",
                                "value": "50",
                              },
                              Object {
                                "label": "100",
                                "value": "100",
                              },
                            ]
                          }
                          size="normal"
                          styles={
                            Object {
                              "clearIndicator": [Function],
                              "control": [Function],
                              "dropdownIndicator": [Function],
                              "menu": [Function],
                              "multiValue": [Function],
                              "multiValueLabel": [Function],
                              "multiValueRemove": [Function],
                              "placeholder": [Function],
                              "singleValue": [Function],
                              "valueContainer": [Function],
                            }
                          }
                          theme={[Function]}
                          value={
                            Array [
                              Object {
                                "label": "10",
                                "value": "10",
                              },
                            ]
                          }
                          valueKey="value"
                        >
                          <Select
                            allowCreate={false}
                            autoFocus={false}
                            backspaceRemovesValue={true}
                            blurInputOnSelect={true}
                            captureMenuScroll={false}
                            className="c5"
                            closeMenuOnScroll={false}
                            closeMenuOnSelect={true}
                            components={
                              Object {
                                "DropdownIndicator": [Function],
                                "IndicatorSeparator": [Function],
                                "MultiValueRemove": [Function],
                              }
                            }
                            controlShouldRenderValue={true}
                            delimiter=","
                            displayKey="label"
                            escapeClearsValue={false}
                            filterOption={[Function]}
                            formatGroupLabel={[Function]}
                            getOptionLabel={[Function]}
                            getOptionValue={[Function]}
                            ignoreAccents={true}
                            inputValue=""
                            isClearable={false}
                            isDisabled={false}
                            isLoading={false}
                            isMulti={false}
                            isOptionDisabled={[Function]}
                            isRtl={false}
                            isSearchable={true}
                            loadingMessage={[Function]}
                            maxMenuHeight={300}
                            menuIsOpen={false}
                            menuPlacement="bottom"
                            menuPosition="absolute"
                            menuShouldBlockScroll={false}
                            menuShouldScrollIntoView={true}
                            minMenuHeight={140}
                            noOptionsMessage={[Function]}
                            onChange={[Function]}
                            onInputChange={[Function]}
                            onMenuClose={[Function]}
                            onMenuOpen={[Function]}
                            openMenuOnClick={true}
                            openMenuOnFocus={false}
                            options={
                              Array [
                                Object {
                                  "label": "10",
                                  "value": "10",
                                },
                                Object {
                                  "label": "25",
                                  "value": "25",
                                },
                                Object {
                                  "label": "50",
                                  "value": "50",
                                },
                                Object {
                                  "label": "100",
                                  "value": "100",
                                },
                              ]
                            }
                            pageSize={5}
                            placeholder="Select..."
                            screenReaderStatus={[Function]}
                            size="normal"
                            styles={
                              Object {
                                "clearIndicator": [Function],
                                "control": [Function],
                                "dropdownIndicator": [Function],
                                "menu": [Function],
                                "multiValue": [Function],
                                "multiValueLabel": [Function],
                                "multiValueRemove": [Function],
                                "placeholder": [Function],
                                "singleValue": [Function],
                                "valueContainer": [Function],
                              }
                            }
                            tabIndex="0"
                            tabSelectsValue={true}
                            theme={[Function]}
                            value={
                              Array [
                                Object {
                                  "label": "10",
                                  "value": "10",
                                },
                              ]
                            }
                            valueKey="value"
                          >
                            <SelectContainer
                              className="c5"
                              clearValue={[Function]}
                              cx={[Function]}
                              getStyles={[Function]}
                              getValue={[Function]}
                              hasValue={true}
                              innerProps={
                                Object {
                                  "id": undefined,
                                  "onKeyDown": [Function],
                                }
                              }
                              isDisabled={false}
                              isFocused={false}
                              isMulti={false}
                              isRtl={false}
                              options={
                                Array [
                                  Object {
                                    "label": "10",
                                    "value": "10",
                                  },
                                  Object {
                                    "label": "25",
                                    "value": "25",
                                  },
                                  Object {
                                    "label": "50",
                                    "value": "50",
                                  },
                                  Object {
                                    "label": "100",
                                    "value": "100",
                                  },
                                ]
                              }
                              selectOption={[Function]}
                              selectProps={
                                Object {
                                  "addLabelText": undefined,
                                  "allowCreate": false,
                                  "autoFocus": false,
                                  "backspaceRemovesValue": true,
                                  "blurInputOnSelect": true,
                                  "captureMenuScroll": false,
                                  "className": "ContentPacksList__StyledSizeSelect-dqllb7-1 c5",
                                  "closeMenuOnScroll": false,
                                  "closeMenuOnSelect": true,
                                  "components": Object {
                                    "DropdownIndicator": [Function],
                                    "IndicatorSeparator": [Function],
                                    "MultiValueRemove": [Function],
                                  },
                                  "controlShouldRenderValue": true,
                                  "delimiter": ",",
                                  "displayKey": "label",
                                  "escapeClearsValue": false,
                                  "filterOption": [Function],
                                  "formatGroupLabel": [Function],
                                  "getOptionLabel": [Function],
                                  "getOptionValue": [Function],
                                  "ignoreAccents": true,
                                  "inputValue": "",
                                  "isClearable": false,
                                  "isDisabled": false,
                                  "isLoading": false,
                                  "isMulti": false,
                                  "isOptionDisabled": [Function],
                                  "isRtl": false,
                                  "isSearchable": true,
                                  "loadingMessage": [Function],
                                  "maxMenuHeight": 300,
                                  "menuIsOpen": false,
                                  "menuPlacement": "bottom",
                                  "menuPosition": "absolute",
                                  "menuShouldBlockScroll": false,
                                  "menuShouldScrollIntoView": true,
                                  "minMenuHeight": 140,
                                  "noOptionsMessage": [Function],
                                  "onChange": [Function],
                                  "onInputChange": [Function],
                                  "onMenuClose": [Function],
                                  "onMenuOpen": [Function],
                                  "onReactSelectChange": undefined,
                                  "openMenuOnClick": true,
                                  "openMenuOnFocus": false,
                                  "options": Array [
                                    Object {
                                      "label": "10",
                                      "value": "10",
                                    },
                                    Object {
                                      "label": "25",
                                      "value": "25",
                                    },
                                    Object {
                                      "label": "50",
                                      "value": "50",
                                    },
                                    Object {
                                      "label": "100",
                                      "value": "100",
                                    },
                                  ],
                                  "pageSize": 5,
                                  "placeholder": "Select...",
                                  "screenReaderStatus": [Function],
                                  "size": "normal",
                                  "styles": Object {
                                    "clearIndicator": [Function],
                                    "control": [Function],
                                    "dropdownIndicator": [Function],
                                    "menu": [Function],
                                    "multiValue": [Function],
                                    "multiValueLabel": [Function],
                                    "multiValueRemove": [Function],
                                    "placeholder": [Function],
                                    "singleValue": [Function],
                                    "valueContainer": [Function],
                                  },
                                  "tabIndex": "0",
                                  "tabSelectsValue": true,
                                  "theme": [Function],
                                  "value": Array [
                                    Object {
                                      "label": "10",
                                      "value": "10",
                                    },
                                  ],
                                  "valueKey": "value",
                                }
                              }
                              setValue={[Function]}
                              theme={
                                Object {
                                  "borderRadius": 4,
                                  "colors": Object {
                                    "danger": "#00427f",
                                    "dangerLight": "#bdc8e4",
                                    "neutral0": "#fff",
                                    "neutral10": "#eff2f8",
                                    "neutral20": "#a6a6a6",
                                    "neutral30": "#b4b4b4",
                                    "neutral40": "#9b9b9b",
                                    "neutral5": "#dddddd",
                                    "neutral50": "#838383",
                                    "neutral60": "#6a6a6a",
                                    "neutral70": "#515151",
                                    "neutral80": "#383838",
                                    "neutral90": "#1f1f1f",
                                    "primary": "#7894ce",
                                    "primary25": "#f3f3f3",
                                    "primary50": "#d0d0d0",
                                    "primary75": "#a6a6a6",
                                  },
                                  "spacing": Object {
                                    "baseUnit": 4,
                                    "controlHeight": 38,
                                    "menuGutter": 8,
                                  },
                                }
                              }
                            >
                              <div
                                className="css-1pcexqc-container c5"
                                onKeyDown={[Function]}
                              >
                                <Control
                                  clearValue={[Function]}
                                  cx={[Function]}
                                  getStyles={[Function]}
                                  getValue={[Function]}
                                  hasValue={true}
                                  innerProps={
                                    Object {
                                      "onMouseDown": [Function],
                                      "onTouchEnd": [Function],
                                    }
                                  }
                                  innerRef={[Function]}
                                  isDisabled={false}
                                  isFocused={false}
                                  isMulti={false}
                                  isRtl={false}
                                  menuIsOpen={false}
                                  options={
                                    Array [
                                      Object {
                                        "label": "10",
                                        "value": "10",
                                      },
                                      Object {
                                        "label": "25",
                                        "value": "25",
                                      },
                                      Object {
                                        "label": "50",
                                        "value": "50",
                                      },
                                      Object {
                                        "label": "100",
                                        "value": "100",
                                      },
                                    ]
                                  }
                                  selectOption={[Function]}
                                  selectProps={
                                    Object {
                                      "addLabelText": undefined,
                                      "allowCreate": false,
                                      "autoFocus": false,
                                      "backspaceRemovesValue": true,
                                      "blurInputOnSelect": true,
                                      "captureMenuScroll": false,
                                      "className": "ContentPacksList__StyledSizeSelect-dqllb7-1 c5",
                                      "closeMenuOnScroll": false,
                                      "closeMenuOnSelect": true,
                                      "components": Object {
                                        "DropdownIndicator": [Function],
                                        "IndicatorSeparator": [Function],
                                        "MultiValueRemove": [Function],
                                      },
                                      "controlShouldRenderValue": true,
                                      "delimiter": ",",
                                      "displayKey": "label",
                                      "escapeClearsValue": false,
                                      "filterOption": [Function],
                                      "formatGroupLabel": [Function],
                                      "getOptionLabel": [Function],
                                      "getOptionValue": [Function],
                                      "ignoreAccents": true,
                                      "inputValue": "",
                                      "isClearable": false,
                                      "isDisabled": false,
                                      "isLoading": false,
                                      "isMulti": false,
                                      "isOptionDisabled": [Function],
                                      "isRtl": false,
                                      "isSearchable": true,
                                      "loadingMessage": [Function],
                                      "maxMenuHeight": 300,
                                      "menuIsOpen": false,
                                      "menuPlacement": "bottom",
                                      "menuPosition": "absolute",
                                      "menuShouldBlockScroll": false,
                                      "menuShouldScrollIntoView": true,
                                      "minMenuHeight": 140,
                                      "noOptionsMessage": [Function],
                                      "onChange": [Function],
                                      "onInputChange": [Function],
                                      "onMenuClose": [Function],
                                      "onMenuOpen": [Function],
                                      "onReactSelectChange": undefined,
                                      "openMenuOnClick": true,
                                      "openMenuOnFocus": false,
                                      "options": Array [
                                        Object {
                                          "label": "10",
                                          "value": "10",
                                        },
                                        Object {
                                          "label": "25",
                                          "value": "25",
                                        },
                                        Object {
                                          "label": "50",
                                          "value": "50",
                                        },
                                        Object {
                                          "label": "100",
                                          "value": "100",
                                        },
                                      ],
                                      "pageSize": 5,
                                      "placeholder": "Select...",
                                      "screenReaderStatus": [Function],
                                      "size": "normal",
                                      "styles": Object {
                                        "clearIndicator": [Function],
                                        "control": [Function],
                                        "dropdownIndicator": [Function],
                                        "menu": [Function],
                                        "multiValue": [Function],
                                        "multiValueLabel": [Function],
                                        "multiValueRemove": [Function],
                                        "placeholder": [Function],
                                        "singleValue": [Function],
                                        "valueContainer": [Function],
                                      },
                                      "tabIndex": "0",
                                      "tabSelectsValue": true,
                                      "theme": [Function],
                                      "value": Array [
                                        Object {
                                          "label": "10",
                                          "value": "10",
                                        },
                                      ],
                                      "valueKey": "value",
                                    }
                                  }
                                  setValue={[Function]}
                                  theme={
                                    Object {
                                      "borderRadius": 4,
                                      "colors": Object {
                                        "danger": "#00427f",
                                        "dangerLight": "#bdc8e4",
                                        "neutral0": "#fff",
                                        "neutral10": "#eff2f8",
                                        "neutral20": "#a6a6a6",
                                        "neutral30": "#b4b4b4",
                                        "neutral40": "#9b9b9b",
                                        "neutral5": "#dddddd",
                                        "neutral50": "#838383",
                                        "neutral60": "#6a6a6a",
                                        "neutral70": "#515151",
                                        "neutral80": "#383838",
                                        "neutral90": "#1f1f1f",
                                        "primary": "#7894ce",
                                        "primary25": "#f3f3f3",
                                        "primary50": "#d0d0d0",
                                        "primary75": "#a6a6a6",
                                      },
                                      "spacing": Object {
                                        "baseUnit": 4,
                                        "controlHeight": 38,
                                        "menuGutter": 8,
                                      },
                                    }
                                  }
                                >
                                  <div
                                    className="css-ghr2vn-control"
                                    onMouseDown={[Function]}
                                    onTouchEnd={[Function]}
                                  >
                                    <ValueContainer
                                      clearValue={[Function]}
                                      cx={[Function]}
                                      getStyles={[Function]}
                                      getValue={[Function]}
                                      hasValue={true}
                                      isDisabled={false}
                                      isMulti={false}
                                      isRtl={false}
                                      options={
                                        Array [
                                          Object {
                                            "label": "10",
                                            "value": "10",
                                          },
                                          Object {
                                            "label": "25",
                                            "value": "25",
                                          },
                                          Object {
                                            "label": "50",
                                            "value": "50",
                                          },
                                          Object {
                                            "label": "100",
                                            "value": "100",
                                          },
                                        ]
                                      }
                                      selectOption={[Function]}
                                      selectProps={
                                        Object {
                                          "addLabelText": undefined,
                                          "allowCreate": false,
                                          "autoFocus": false,
                                          "backspaceRemovesValue": true,
                                          "blurInputOnSelect": true,
                                          "captureMenuScroll": false,
                                          "className": "ContentPacksList__StyledSizeSelect-dqllb7-1 c5",
                                          "closeMenuOnScroll": false,
                                          "closeMenuOnSelect": true,
                                          "components": Object {
                                            "DropdownIndicator": [Function],
                                            "IndicatorSeparator": [Function],
                                            "MultiValueRemove": [Function],
                                          },
                                          "controlShouldRenderValue": true,
                                          "delimiter": ",",
                                          "displayKey": "label",
                                          "escapeClearsValue": false,
                                          "filterOption": [Function],
                                          "formatGroupLabel": [Function],
                                          "getOptionLabel": [Function],
                                          "getOptionValue": [Function],
                                          "ignoreAccents": true,
                                          "inputValue": "",
                                          "isClearable": false,
                                          "isDisabled": false,
                                          "isLoading": false,
                                          "isMulti": false,
                                          "isOptionDisabled": [Function],
                                          "isRtl": false,
                                          "isSearchable": true,
                                          "loadingMessage": [Function],
                                          "maxMenuHeight": 300,
                                          "menuIsOpen": false,
                                          "menuPlacement": "bottom",
                                          "menuPosition": "absolute",
                                          "menuShouldBlockScroll": false,
                                          "menuShouldScrollIntoView": true,
                                          "minMenuHeight": 140,
                                          "noOptionsMessage": [Function],
                                          "onChange": [Function],
                                          "onInputChange": [Function],
                                          "onMenuClose": [Function],
                                          "onMenuOpen": [Function],
                                          "onReactSelectChange": undefined,
                                          "openMenuOnClick": true,
                                          "openMenuOnFocus": false,
                                          "options": Array [
                                            Object {
                                              "label": "10",
                                              "value": "10",
                                            },
                                            Object {
                                              "label": "25",
                                              "value": "25",
                                            },
                                            Object {
                                              "label": "50",
                                              "value": "50",
                                            },
                                            Object {
                                              "label": "100",
                                              "value": "100",
                                            },
                                          ],
                                          "pageSize": 5,
                                          "placeholder": "Select...",
                                          "screenReaderStatus": [Function],
                                          "size": "normal",
                                          "styles": Object {
                                            "clearIndicator": [Function],
                                            "control": [Function],
                                            "dropdownIndicator": [Function],
                                            "menu": [Function],
                                            "multiValue": [Function],
                                            "multiValueLabel": [Function],
                                            "multiValueRemove": [Function],
                                            "placeholder": [Function],
                                            "singleValue": [Function],
                                            "valueContainer": [Function],
                                          },
                                          "tabIndex": "0",
                                          "tabSelectsValue": true,
                                          "theme": [Function],
                                          "value": Array [
                                            Object {
                                              "label": "10",
                                              "value": "10",
                                            },
                                          ],
                                          "valueKey": "value",
                                        }
                                      }
                                      setValue={[Function]}
                                      theme={
                                        Object {
                                          "borderRadius": 4,
                                          "colors": Object {
                                            "danger": "#00427f",
                                            "dangerLight": "#bdc8e4",
                                            "neutral0": "#fff",
                                            "neutral10": "#eff2f8",
                                            "neutral20": "#a6a6a6",
                                            "neutral30": "#b4b4b4",
                                            "neutral40": "#9b9b9b",
                                            "neutral5": "#dddddd",
                                            "neutral50": "#838383",
                                            "neutral60": "#6a6a6a",
                                            "neutral70": "#515151",
                                            "neutral80": "#383838",
                                            "neutral90": "#1f1f1f",
                                            "primary": "#7894ce",
                                            "primary25": "#f3f3f3",
                                            "primary50": "#d0d0d0",
                                            "primary75": "#a6a6a6",
                                          },
                                          "spacing": Object {
                                            "baseUnit": 4,
                                            "controlHeight": 38,
                                            "menuGutter": 8,
                                          },
                                        }
                                      }
                                    >
                                      <div
                                        className="css-1hio1c"
                                      >
                                        <SingleValue
                                          clearValue={[Function]}
                                          cx={[Function]}
                                          data={
                                            Object {
                                              "label": "10",
                                              "value": "10",
                                            }
                                          }
                                          getStyles={[Function]}
                                          getValue={[Function]}
                                          hasValue={true}
                                          isDisabled={false}
                                          isMulti={false}
                                          isRtl={false}
                                          options={
                                            Array [
                                              Object {
                                                "label": "10",
                                                "value": "10",
                                              },
                                              Object {
                                                "label": "25",
                                                "value": "25",
                                              },
                                              Object {
                                                "label": "50",
                                                "value": "50",
                                              },
                                              Object {
                                                "label": "100",
                                                "value": "100",
                                              },
                                            ]
                                          }
                                          selectOption={[Function]}
                                          selectProps={
                                            Object {
                                              "addLabelText": undefined,
                                              "allowCreate": false,
                                              "autoFocus": false,
                                              "backspaceRemovesValue": true,
                                              "blurInputOnSelect": true,
                                              "captureMenuScroll": false,
                                              "className": "ContentPacksList__StyledSizeSelect-dqllb7-1 c5",
                                              "closeMenuOnScroll": false,
                                              "closeMenuOnSelect": true,
                                              "components": Object {
                                                "DropdownIndicator": [Function],
                                                "IndicatorSeparator": [Function],
                                                "MultiValueRemove": [Function],
                                              },
                                              "controlShouldRenderValue": true,
                                              "delimiter": ",",
                                              "displayKey": "label",
                                              "escapeClearsValue": false,
                                              "filterOption": [Function],
                                              "formatGroupLabel": [Function],
                                              "getOptionLabel": [Function],
                                              "getOptionValue": [Function],
                                              "ignoreAccents": true,
                                              "inputValue": "",
                                              "isClearable": false,
                                              "isDisabled": false,
                                              "isLoading": false,
                                              "isMulti": false,
                                              "isOptionDisabled": [Function],
                                              "isRtl": false,
                                              "isSearchable": true,
                                              "loadingMessage": [Function],
                                              "maxMenuHeight": 300,
                                              "menuIsOpen": false,
                                              "menuPlacement": "bottom",
                                              "menuPosition": "absolute",
                                              "menuShouldBlockScroll": false,
                                              "menuShouldScrollIntoView": true,
                                              "minMenuHeight": 140,
                                              "noOptionsMessage": [Function],
                                              "onChange": [Function],
                                              "onInputChange": [Function],
                                              "onMenuClose": [Function],
                                              "onMenuOpen": [Function],
                                              "onReactSelectChange": undefined,
                                              "openMenuOnClick": true,
                                              "openMenuOnFocus": false,
                                              "options": Array [
                                                Object {
                                                  "label": "10",
                                                  "value": "10",
                                                },
                                                Object {
                                                  "label": "25",
                                                  "value": "25",
                                                },
                                                Object {
                                                  "label": "50",
                                                  "value": "50",
                                                },
                                                Object {
                                                  "label": "100",
                                                  "value": "100",
                                                },
                                              ],
                                              "pageSize": 5,
                                              "placeholder": "Select...",
                                              "screenReaderStatus": [Function],
                                              "size": "normal",
                                              "styles": Object {
                                                "clearIndicator": [Function],
                                                "control": [Function],
                                                "dropdownIndicator": [Function],
                                                "menu": [Function],
                                                "multiValue": [Function],
                                                "multiValueLabel": [Function],
                                                "multiValueRemove": [Function],
                                                "placeholder": [Function],
                                                "singleValue": [Function],
                                                "valueContainer": [Function],
                                              },
                                              "tabIndex": "0",
                                              "tabSelectsValue": true,
                                              "theme": [Function],
                                              "value": Array [
                                                Object {
                                                  "label": "10",
                                                  "value": "10",
                                                },
                                              ],
                                              "valueKey": "value",
                                            }
                                          }
                                          setValue={[Function]}
                                          theme={
                                            Object {
                                              "borderRadius": 4,
                                              "colors": Object {
                                                "danger": "#00427f",
                                                "dangerLight": "#bdc8e4",
                                                "neutral0": "#fff",
                                                "neutral10": "#eff2f8",
                                                "neutral20": "#a6a6a6",
                                                "neutral30": "#b4b4b4",
                                                "neutral40": "#9b9b9b",
                                                "neutral5": "#dddddd",
                                                "neutral50": "#838383",
                                                "neutral60": "#6a6a6a",
                                                "neutral70": "#515151",
                                                "neutral80": "#383838",
                                                "neutral90": "#1f1f1f",
                                                "primary": "#7894ce",
                                                "primary25": "#f3f3f3",
                                                "primary50": "#d0d0d0",
                                                "primary75": "#a6a6a6",
                                              },
                                              "spacing": Object {
                                                "baseUnit": 4,
                                                "controlHeight": 38,
                                                "menuGutter": 8,
                                              },
                                            }
                                          }
                                        >
                                          <div
                                            className="css-1yjw8f2-singleValue"
                                          >
                                            10
                                          </div>
                                        </SingleValue>
                                        <Input
                                          aria-autocomplete="list"
                                          autoCapitalize="none"
                                          autoComplete="off"
                                          autoCorrect="off"
                                          cx={[Function]}
                                          getStyles={[Function]}
                                          id="react-select-3-input"
                                          innerRef={[Function]}
                                          isDisabled={false}
                                          isHidden={false}
                                          onBlur={[Function]}
                                          onChange={[Function]}
                                          onFocus={[Function]}
                                          selectProps={
                                            Object {
                                              "addLabelText": undefined,
                                              "allowCreate": false,
                                              "autoFocus": false,
                                              "backspaceRemovesValue": true,
                                              "blurInputOnSelect": true,
                                              "captureMenuScroll": false,
                                              "className": "ContentPacksList__StyledSizeSelect-dqllb7-1 c5",
                                              "closeMenuOnScroll": false,
                                              "closeMenuOnSelect": true,
                                              "components": Object {
                                                "DropdownIndicator": [Function],
                                                "IndicatorSeparator": [Function],
                                                "MultiValueRemove": [Function],
                                              },
                                              "controlShouldRenderValue": true,
                                              "delimiter": ",",
                                              "displayKey": "label",
                                              "escapeClearsValue": false,
                                              "filterOption": [Function],
                                              "formatGroupLabel": [Function],
                                              "getOptionLabel": [Function],
                                              "getOptionValue": [Function],
                                              "ignoreAccents": true,
                                              "inputValue": "",
                                              "isClearable": false,
                                              "isDisabled": false,
                                              "isLoading": false,
                                              "isMulti": false,
                                              "isOptionDisabled": [Function],
                                              "isRtl": false,
                                              "isSearchable": true,
                                              "loadingMessage": [Function],
                                              "maxMenuHeight": 300,
                                              "menuIsOpen": false,
                                              "menuPlacement": "bottom",
                                              "menuPosition": "absolute",
                                              "menuShouldBlockScroll": false,
                                              "menuShouldScrollIntoView": true,
                                              "minMenuHeight": 140,
                                              "noOptionsMessage": [Function],
                                              "onChange": [Function],
                                              "onInputChange": [Function],
                                              "onMenuClose": [Function],
                                              "onMenuOpen": [Function],
                                              "onReactSelectChange": undefined,
                                              "openMenuOnClick": true,
                                              "openMenuOnFocus": false,
                                              "options": Array [
                                                Object {
                                                  "label": "10",
                                                  "value": "10",
                                                },
                                                Object {
                                                  "label": "25",
                                                  "value": "25",
                                                },
                                                Object {
                                                  "label": "50",
                                                  "value": "50",
                                                },
                                                Object {
                                                  "label": "100",
                                                  "value": "100",
                                                },
                                              ],
                                              "pageSize": 5,
                                              "placeholder": "Select...",
                                              "screenReaderStatus": [Function],
                                              "size": "normal",
                                              "styles": Object {
                                                "clearIndicator": [Function],
                                                "control": [Function],
                                                "dropdownIndicator": [Function],
                                                "menu": [Function],
                                                "multiValue": [Function],
                                                "multiValueLabel": [Function],
                                                "multiValueRemove": [Function],
                                                "placeholder": [Function],
                                                "singleValue": [Function],
                                                "valueContainer": [Function],
                                              },
                                              "tabIndex": "0",
                                              "tabSelectsValue": true,
                                              "theme": [Function],
                                              "value": Array [
                                                Object {
                                                  "label": "10",
                                                  "value": "10",
                                                },
                                              ],
                                              "valueKey": "value",
                                            }
                                          }
                                          spellCheck="false"
                                          tabIndex="0"
                                          theme={
                                            Object {
                                              "borderRadius": 4,
                                              "colors": Object {
                                                "danger": "#00427f",
                                                "dangerLight": "#bdc8e4",
                                                "neutral0": "#fff",
                                                "neutral10": "#eff2f8",
                                                "neutral20": "#a6a6a6",
                                                "neutral30": "#b4b4b4",
                                                "neutral40": "#9b9b9b",
                                                "neutral5": "#dddddd",
                                                "neutral50": "#838383",
                                                "neutral60": "#6a6a6a",
                                                "neutral70": "#515151",
                                                "neutral80": "#383838",
                                                "neutral90": "#1f1f1f",
                                                "primary": "#7894ce",
                                                "primary25": "#f3f3f3",
                                                "primary50": "#d0d0d0",
                                                "primary75": "#a6a6a6",
                                              },
                                              "spacing": Object {
                                                "baseUnit": 4,
                                                "controlHeight": 38,
                                                "menuGutter": 8,
                                              },
                                            }
                                          }
                                          type="text"
                                          value=""
                                        >
                                          <div
                                            className="css-dg7tyz"
                                          >
                                            <AutosizeInput
                                              aria-autocomplete="list"
                                              autoCapitalize="none"
                                              autoComplete="off"
                                              autoCorrect="off"
                                              className=""
                                              disabled={false}
                                              id="react-select-3-input"
                                              injectStyles={true}
                                              inputRef={[Function]}
                                              inputStyle={
                                                Object {
                                                  "background": 0,
                                                  "border": 0,
                                                  "color": "inherit",
                                                  "fontSize": "inherit",
                                                  "label": "input",
                                                  "opacity": 1,
                                                  "outline": 0,
                                                  "padding": 0,
                                                }
                                              }
                                              minWidth={1}
                                              onBlur={[Function]}
                                              onChange={[Function]}
                                              onFocus={[Function]}
                                              spellCheck="false"
                                              tabIndex="0"
                                              type="text"
                                              value=""
                                            >
                                              <div
                                                className=""
                                                style={
                                                  Object {
                                                    "display": "inline-block",
                                                  }
                                                }
                                              >
                                                <input
                                                  aria-autocomplete="list"
                                                  autoCapitalize="none"
                                                  autoComplete="off"
                                                  autoCorrect="off"
                                                  disabled={false}
                                                  id="react-select-3-input"
                                                  onBlur={[Function]}
                                                  onChange={[Function]}
                                                  onFocus={[Function]}
                                                  spellCheck="false"
                                                  style={
                                                    Object {
                                                      "background": 0,
                                                      "border": 0,
                                                      "boxSizing": "content-box",
                                                      "color": "inherit",
                                                      "fontSize": "inherit",
                                                      "label": "input",
                                                      "opacity": 1,
                                                      "outline": 0,
                                                      "padding": 0,
                                                      "width": "2px",
                                                    }
                                                  }
                                                  tabIndex="0"
                                                  type="text"
                                                  value=""
                                                />
                                                <div
                                                  style={
                                                    Object {
                                                      "height": 0,
                                                      "left": 0,
                                                      "overflow": "scroll",
                                                      "position": "absolute",
                                                      "top": 0,
                                                      "visibility": "hidden",
                                                      "whiteSpace": "pre",
                                                    }
                                                  }
                                                />
                                              </div>
                                            </AutosizeInput>
                                          </div>
                                        </Input>
                                      </div>
                                    </ValueContainer>
                                    <IndicatorsContainer
                                      clearValue={[Function]}
                                      cx={[Function]}
                                      getStyles={[Function]}
                                      getValue={[Function]}
                                      hasValue={true}
                                      isDisabled={false}
                                      isMulti={false}
                                      isRtl={false}
                                      options={
                                        Array [
                                          Object {
                                            "label": "10",
                                            "value": "10",
                                          },
                                          Object {
                                            "label": "25",
                                            "value": "25",
                                          },
                                          Object {
                                            "label": "50",
                                            "value": "50",
                                          },
                                          Object {
                                            "label": "100",
                                            "value": "100",
                                          },
                                        ]
                                      }
                                      selectOption={[Function]}
                                      selectProps={
                                        Object {
                                          "addLabelText": undefined,
                                          "allowCreate": false,
                                          "autoFocus": false,
                                          "backspaceRemovesValue": true,
                                          "blurInputOnSelect": true,
                                          "captureMenuScroll": false,
                                          "className": "ContentPacksList__StyledSizeSelect-dqllb7-1 c5",
                                          "closeMenuOnScroll": false,
                                          "closeMenuOnSelect": true,
                                          "components": Object {
                                            "DropdownIndicator": [Function],
                                            "IndicatorSeparator": [Function],
                                            "MultiValueRemove": [Function],
                                          },
                                          "controlShouldRenderValue": true,
                                          "delimiter": ",",
                                          "displayKey": "label",
                                          "escapeClearsValue": false,
                                          "filterOption": [Function],
                                          "formatGroupLabel": [Function],
                                          "getOptionLabel": [Function],
                                          "getOptionValue": [Function],
                                          "ignoreAccents": true,
                                          "inputValue": "",
                                          "isClearable": false,
                                          "isDisabled": false,
                                          "isLoading": false,
                                          "isMulti": false,
                                          "isOptionDisabled": [Function],
                                          "isRtl": false,
                                          "isSearchable": true,
                                          "loadingMessage": [Function],
                                          "maxMenuHeight": 300,
                                          "menuIsOpen": false,
                                          "menuPlacement": "bottom",
                                          "menuPosition": "absolute",
                                          "menuShouldBlockScroll": false,
                                          "menuShouldScrollIntoView": true,
                                          "minMenuHeight": 140,
                                          "noOptionsMessage": [Function],
                                          "onChange": [Function],
                                          "onInputChange": [Function],
                                          "onMenuClose": [Function],
                                          "onMenuOpen": [Function],
                                          "onReactSelectChange": undefined,
                                          "openMenuOnClick": true,
                                          "openMenuOnFocus": false,
                                          "options": Array [
                                            Object {
                                              "label": "10",
                                              "value": "10",
                                            },
                                            Object {
                                              "label": "25",
                                              "value": "25",
                                            },
                                            Object {
                                              "label": "50",
                                              "value": "50",
                                            },
                                            Object {
                                              "label": "100",
                                              "value": "100",
                                            },
                                          ],
                                          "pageSize": 5,
                                          "placeholder": "Select...",
                                          "screenReaderStatus": [Function],
                                          "size": "normal",
                                          "styles": Object {
                                            "clearIndicator": [Function],
                                            "control": [Function],
                                            "dropdownIndicator": [Function],
                                            "menu": [Function],
                                            "multiValue": [Function],
                                            "multiValueLabel": [Function],
                                            "multiValueRemove": [Function],
                                            "placeholder": [Function],
                                            "singleValue": [Function],
                                            "valueContainer": [Function],
                                          },
                                          "tabIndex": "0",
                                          "tabSelectsValue": true,
                                          "theme": [Function],
                                          "value": Array [
                                            Object {
                                              "label": "10",
                                              "value": "10",
                                            },
                                          ],
                                          "valueKey": "value",
                                        }
                                      }
                                      setValue={[Function]}
                                      theme={
                                        Object {
                                          "borderRadius": 4,
                                          "colors": Object {
                                            "danger": "#00427f",
                                            "dangerLight": "#bdc8e4",
                                            "neutral0": "#fff",
                                            "neutral10": "#eff2f8",
                                            "neutral20": "#a6a6a6",
                                            "neutral30": "#b4b4b4",
                                            "neutral40": "#9b9b9b",
                                            "neutral5": "#dddddd",
                                            "neutral50": "#838383",
                                            "neutral60": "#6a6a6a",
                                            "neutral70": "#515151",
                                            "neutral80": "#383838",
                                            "neutral90": "#1f1f1f",
                                            "primary": "#7894ce",
                                            "primary25": "#f3f3f3",
                                            "primary50": "#d0d0d0",
                                            "primary75": "#a6a6a6",
                                          },
                                          "spacing": Object {
                                            "baseUnit": 4,
                                            "controlHeight": 38,
                                            "menuGutter": 8,
                                          },
                                        }
                                      }
                                    >
                                      <div
                                        className="css-1wy0on6"
                                      >
                                        <IndicatorSeparator
                                          clearValue={[Function]}
                                          cx={[Function]}
                                          getStyles={[Function]}
                                          getValue={[Function]}
                                          hasValue={true}
                                          isDisabled={false}
                                          isFocused={false}
                                          isMulti={false}
                                          isRtl={false}
                                          options={
                                            Array [
                                              Object {
                                                "label": "10",
                                                "value": "10",
                                              },
                                              Object {
                                                "label": "25",
                                                "value": "25",
                                              },
                                              Object {
                                                "label": "50",
                                                "value": "50",
                                              },
                                              Object {
                                                "label": "100",
                                                "value": "100",
                                              },
                                            ]
                                          }
                                          selectOption={[Function]}
                                          selectProps={
                                            Object {
                                              "addLabelText": undefined,
                                              "allowCreate": false,
                                              "autoFocus": false,
                                              "backspaceRemovesValue": true,
                                              "blurInputOnSelect": true,
                                              "captureMenuScroll": false,
                                              "className": "ContentPacksList__StyledSizeSelect-dqllb7-1 c5",
                                              "closeMenuOnScroll": false,
                                              "closeMenuOnSelect": true,
                                              "components": Object {
                                                "DropdownIndicator": [Function],
                                                "IndicatorSeparator": [Function],
                                                "MultiValueRemove": [Function],
                                              },
                                              "controlShouldRenderValue": true,
                                              "delimiter": ",",
                                              "displayKey": "label",
                                              "escapeClearsValue": false,
                                              "filterOption": [Function],
                                              "formatGroupLabel": [Function],
                                              "getOptionLabel": [Function],
                                              "getOptionValue": [Function],
                                              "ignoreAccents": true,
                                              "inputValue": "",
                                              "isClearable": false,
                                              "isDisabled": false,
                                              "isLoading": false,
                                              "isMulti": false,
                                              "isOptionDisabled": [Function],
                                              "isRtl": false,
                                              "isSearchable": true,
                                              "loadingMessage": [Function],
                                              "maxMenuHeight": 300,
                                              "menuIsOpen": false,
                                              "menuPlacement": "bottom",
                                              "menuPosition": "absolute",
                                              "menuShouldBlockScroll": false,
                                              "menuShouldScrollIntoView": true,
                                              "minMenuHeight": 140,
                                              "noOptionsMessage": [Function],
                                              "onChange": [Function],
                                              "onInputChange": [Function],
                                              "onMenuClose": [Function],
                                              "onMenuOpen": [Function],
                                              "onReactSelectChange": undefined,
                                              "openMenuOnClick": true,
                                              "openMenuOnFocus": false,
                                              "options": Array [
                                                Object {
                                                  "label": "10",
                                                  "value": "10",
                                                },
                                                Object {
                                                  "label": "25",
                                                  "value": "25",
                                                },
                                                Object {
                                                  "label": "50",
                                                  "value": "50",
                                                },
                                                Object {
                                                  "label": "100",
                                                  "value": "100",
                                                },
                                              ],
                                              "pageSize": 5,
                                              "placeholder": "Select...",
                                              "screenReaderStatus": [Function],
                                              "size": "normal",
                                              "styles": Object {
                                                "clearIndicator": [Function],
                                                "control": [Function],
                                                "dropdownIndicator": [Function],
                                                "menu": [Function],
                                                "multiValue": [Function],
                                                "multiValueLabel": [Function],
                                                "multiValueRemove": [Function],
                                                "placeholder": [Function],
                                                "singleValue": [Function],
                                                "valueContainer": [Function],
                                              },
                                              "tabIndex": "0",
                                              "tabSelectsValue": true,
                                              "theme": [Function],
                                              "value": Array [
                                                Object {
                                                  "label": "10",
                                                  "value": "10",
                                                },
                                              ],
                                              "valueKey": "value",
                                            }
                                          }
                                          setValue={[Function]}
                                          theme={
                                            Object {
                                              "borderRadius": 4,
                                              "colors": Object {
                                                "danger": "#00427f",
                                                "dangerLight": "#bdc8e4",
                                                "neutral0": "#fff",
                                                "neutral10": "#eff2f8",
                                                "neutral20": "#a6a6a6",
                                                "neutral30": "#b4b4b4",
                                                "neutral40": "#9b9b9b",
                                                "neutral5": "#dddddd",
                                                "neutral50": "#838383",
                                                "neutral60": "#6a6a6a",
                                                "neutral70": "#515151",
                                                "neutral80": "#383838",
                                                "neutral90": "#1f1f1f",
                                                "primary": "#7894ce",
                                                "primary25": "#f3f3f3",
                                                "primary50": "#d0d0d0",
                                                "primary75": "#a6a6a6",
                                              },
                                              "spacing": Object {
                                                "baseUnit": 4,
                                                "controlHeight": 38,
                                                "menuGutter": 8,
                                              },
                                            }
                                          }
                                        />
                                        <DropdownIndicator
                                          clearValue={[Function]}
                                          cx={[Function]}
                                          getStyles={[Function]}
                                          getValue={[Function]}
                                          hasValue={true}
                                          innerProps={
                                            Object {
                                              "aria-hidden": "true",
                                              "onMouseDown": [Function],
                                              "onTouchEnd": [Function],
                                            }
                                          }
                                          isDisabled={false}
                                          isFocused={false}
                                          isMulti={false}
                                          isRtl={false}
                                          options={
                                            Array [
                                              Object {
                                                "label": "10",
                                                "value": "10",
                                              },
                                              Object {
                                                "label": "25",
                                                "value": "25",
                                              },
                                              Object {
                                                "label": "50",
                                                "value": "50",
                                              },
                                              Object {
                                                "label": "100",
                                                "value": "100",
                                              },
                                            ]
                                          }
                                          selectOption={[Function]}
                                          selectProps={
                                            Object {
                                              "addLabelText": undefined,
                                              "allowCreate": false,
                                              "autoFocus": false,
                                              "backspaceRemovesValue": true,
                                              "blurInputOnSelect": true,
                                              "captureMenuScroll": false,
                                              "className": "ContentPacksList__StyledSizeSelect-dqllb7-1 c5",
                                              "closeMenuOnScroll": false,
                                              "closeMenuOnSelect": true,
                                              "components": Object {
                                                "DropdownIndicator": [Function],
                                                "IndicatorSeparator": [Function],
                                                "MultiValueRemove": [Function],
                                              },
                                              "controlShouldRenderValue": true,
                                              "delimiter": ",",
                                              "displayKey": "label",
                                              "escapeClearsValue": false,
                                              "filterOption": [Function],
                                              "formatGroupLabel": [Function],
                                              "getOptionLabel": [Function],
                                              "getOptionValue": [Function],
                                              "ignoreAccents": true,
                                              "inputValue": "",
                                              "isClearable": false,
                                              "isDisabled": false,
                                              "isLoading": false,
                                              "isMulti": false,
                                              "isOptionDisabled": [Function],
                                              "isRtl": false,
                                              "isSearchable": true,
                                              "loadingMessage": [Function],
                                              "maxMenuHeight": 300,
                                              "menuIsOpen": false,
                                              "menuPlacement": "bottom",
                                              "menuPosition": "absolute",
                                              "menuShouldBlockScroll": false,
                                              "menuShouldScrollIntoView": true,
                                              "minMenuHeight": 140,
                                              "noOptionsMessage": [Function],
                                              "onChange": [Function],
                                              "onInputChange": [Function],
                                              "onMenuClose": [Function],
                                              "onMenuOpen": [Function],
                                              "onReactSelectChange": undefined,
                                              "openMenuOnClick": true,
                                              "openMenuOnFocus": false,
                                              "options": Array [
                                                Object {
                                                  "label": "10",
                                                  "value": "10",
                                                },
                                                Object {
                                                  "label": "25",
                                                  "value": "25",
                                                },
                                                Object {
                                                  "label": "50",
                                                  "value": "50",
                                                },
                                                Object {
                                                  "label": "100",
                                                  "value": "100",
                                                },
                                              ],
                                              "pageSize": 5,
                                              "placeholder": "Select...",
                                              "screenReaderStatus": [Function],
                                              "size": "normal",
                                              "styles": Object {
                                                "clearIndicator": [Function],
                                                "control": [Function],
                                                "dropdownIndicator": [Function],
                                                "menu": [Function],
                                                "multiValue": [Function],
                                                "multiValueLabel": [Function],
                                                "multiValueRemove": [Function],
                                                "placeholder": [Function],
                                                "singleValue": [Function],
                                                "valueContainer": [Function],
                                              },
                                              "tabIndex": "0",
                                              "tabSelectsValue": true,
                                              "theme": [Function],
                                              "value": Array [
                                                Object {
                                                  "label": "10",
                                                  "value": "10",
                                                },
                                              ],
                                              "valueKey": "value",
                                            }
                                          }
                                          setValue={[Function]}
                                          theme={
                                            Object {
                                              "borderRadius": 4,
                                              "colors": Object {
                                                "danger": "#00427f",
                                                "dangerLight": "#bdc8e4",
                                                "neutral0": "#fff",
                                                "neutral10": "#eff2f8",
                                                "neutral20": "#a6a6a6",
                                                "neutral30": "#b4b4b4",
                                                "neutral40": "#9b9b9b",
                                                "neutral5": "#dddddd",
                                                "neutral50": "#838383",
                                                "neutral60": "#6a6a6a",
                                                "neutral70": "#515151",
                                                "neutral80": "#383838",
                                                "neutral90": "#1f1f1f",
                                                "primary": "#7894ce",
                                                "primary25": "#f3f3f3",
                                                "primary50": "#d0d0d0",
                                                "primary75": "#a6a6a6",
                                              },
                                              "spacing": Object {
                                                "baseUnit": 4,
                                                "controlHeight": 38,
                                                "menuGutter": 8,
                                              },
                                            }
                                          }
                                        >
                                          <div
                                            aria-hidden="true"
                                            onMouseDown={[Function]}
                                            onTouchEnd={[Function]}
                                            style={
                                              Object {
                                                ":hover": Object {
                                                  "color": "#9b9b9b",
                                                },
                                                "boxSizing": "border-box",
                                                "color": "#a6a6a6",
                                                "display": "flex",
                                                "fontSize": "150%",
                                                "label": "indicatorContainer",
                                                "marginRight": "1rem",
                                                "padding": "0px",
                                                "transform": false,
                                                "transition": "color 150ms",
                                              }
                                            }
                                          >
                                            <Icon
                                              name="caret-down"
                                              type="solid"
                                            >
                                              <FontAwesomeIcon
                                                icon={
                                                  Object {
                                                    "iconName": "caret-down",
                                                    "prefix": "fas",
                                                  }
                                                }
                                              >
                                                <svg
                                                  className="svg-inline--fa fa-caret-down"
                                                />
                                              </FontAwesomeIcon>
                                            </Icon>
                                          </div>
                                        </DropdownIndicator>
                                      </div>
                                    </IndicatorsContainer>
                                  </div>
                                </Control>
                              </div>
                            </SelectContainer>
                          </Select>
                        </StateManager>
                      </Select>
                    </WithTheme(Select)>
                  </ContentPacksList__StyledSizeSelect>
                </span>
              </ContentPacksList__PageSizeSelector>
            </div>
          </Col>
        </div>
      </Row>
    </Row>
  </div>
</ContentPacksList>
`;
