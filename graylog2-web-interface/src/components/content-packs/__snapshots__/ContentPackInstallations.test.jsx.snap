// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<ContentPackInstallations /> should render with a installation 1`] = `
<ContentPackInstallations
  installations={
    Array [
      Object {
        "_id": "5b55b8b73d274645e49f7eec",
        "comment": "The fake input",
        "content_pack_id": "82d59d98-7440-ab74-9857-36b2f1b7ab8a",
        "content_pack_revision": 1,
        "created_at": "2018-07-23T11:15:03.871Z",
        "created_by": "kmerz",
        "entities": Array [
          Object {
            "content_pack_entity_id": "5b6d973d3d274645572a4318",
            "id": "5ba38df33d274660f0b94118",
            "title": "hulud.net",
            "type": Object {
              "name": "input",
              "version": "1",
            },
          },
        ],
        "parameters": Object {
          "SOURCE": Object {
            "name": "string",
            "value": "hulud.com.uk",
          },
        },
      },
    ]
  }
  onUninstall={[Function]}
>
  <DataTable
    className=""
    dataRowFormatter={[Function]}
    displayKey="value"
    filterBy=""
    filterKeys={Array []}
    filterLabel="Filter"
    filterSuggestions={Array []}
    headerCellFormatter={[Function]}
    headers={
      Array [
        "Comment",
        "Version",
        "Action",
      ]
    }
    id="content-packs-versions"
    noDataText="No data available."
    rowClassName=""
    rows={
      Array [
        Object {
          "_id": "5b55b8b73d274645e49f7eec",
          "comment": "The fake input",
          "content_pack_id": "82d59d98-7440-ab74-9857-36b2f1b7ab8a",
          "content_pack_revision": 1,
          "created_at": "2018-07-23T11:15:03.871Z",
          "created_by": "kmerz",
          "entities": Array [
            Object {
              "content_pack_entity_id": "5b6d973d3d274645572a4318",
              "id": "5ba38df33d274660f0b94118",
              "title": "hulud.net",
              "type": Object {
                "name": "input",
                "version": "1",
              },
            },
          ],
          "parameters": Object {
            "SOURCE": Object {
              "name": "string",
              "value": "hulud.com.uk",
            },
          },
        },
      ]
    }
    sortByKey="comment"
    useResponsiveTable={true}
  >
    <div>
      <div
        className="row "
      >
        <div
          className="col-md-12"
        >
          <div
            className="data-table table-responsive"
            id="content-packs-versions"
          >
            <DataTable__StyledTable
              className="table "
            >
              <table
                className="DataTable__StyledTable-sc-1c22x1c-0 hEWaaO table "
              >
                <thead>
                  <tr>
                    <DataTableElement
                      element="Comment"
                      formatter={[Function]}
                      index={0}
                      key="header-0"
                    >
                      <th>
                        Comment
                      </th>
                    </DataTableElement>
                    <DataTableElement
                      element="Version"
                      formatter={[Function]}
                      index={1}
                      key="header-1"
                    >
                      <th>
                        Version
                      </th>
                    </DataTableElement>
                    <DataTableElement
                      element="Action"
                      formatter={[Function]}
                      index={2}
                      key="header-2"
                    >
                      <th
                        className="text-right"
                      >
                        Action
                      </th>
                    </DataTableElement>
                  </tr>
                </thead>
                <tbody>
                  <DataTableElement
                    element={
                      Object {
                        "_id": "5b55b8b73d274645e49f7eec",
                        "comment": "The fake input",
                        "content_pack_id": "82d59d98-7440-ab74-9857-36b2f1b7ab8a",
                        "content_pack_revision": 1,
                        "created_at": "2018-07-23T11:15:03.871Z",
                        "created_by": "kmerz",
                        "entities": Array [
                          Object {
                            "content_pack_entity_id": "5b6d973d3d274645572a4318",
                            "id": "5ba38df33d274660f0b94118",
                            "title": "hulud.net",
                            "type": Object {
                              "name": "input",
                              "version": "1",
                            },
                          },
                        ],
                        "parameters": Object {
                          "SOURCE": Object {
                            "name": "string",
                            "value": "hulud.com.uk",
                          },
                        },
                      }
                    }
                    formatter={[Function]}
                    index={0}
                    key="row-0"
                  >
                    <tr
                      key="[object Object]"
                    >
                      <td>
                        The fake input
                      </td>
                      <td>
                        1
                      </td>
                      <td>
                        <div
                          className="pull-right"
                        >
                          <ButtonToolbar
                            bsClass="btn-toolbar"
                          >
                            <div
                              className="btn-toolbar"
                              role="toolbar"
                            >
                              <ForwardRef
                                bsSize="small"
                                bsStyle="primary"
                                onClick={[Function]}
                              >
                                <Button__StyledButton
                                  bsSize="small"
                                  bsStyle="primary"
                                  onClick={[Function]}
                                >
                                  <Button
                                    active={false}
                                    block={false}
                                    bsClass="btn"
                                    bsSize="small"
                                    bsStyle="primary"
                                    className="Button__StyledButton-c9cbmb-0 jHWfTP"
                                    disabled={false}
                                    onClick={[Function]}
                                  >
                                    <button
                                      className="Button__StyledButton-c9cbmb-0 jHWfTP btn btn-sm btn-primary"
                                      disabled={false}
                                      onClick={[Function]}
                                      type="button"
                                    >
                                      Uninstall
                                    </button>
                                  </Button>
                                </Button__StyledButton>
                              </ForwardRef>
                              <ForwardRef
                                bsSize="small"
                                bsStyle="info"
                                onClick={[Function]}
                              >
                                <Button__StyledButton
                                  bsSize="small"
                                  bsStyle="info"
                                  onClick={[Function]}
                                >
                                  <Button
                                    active={false}
                                    block={false}
                                    bsClass="btn"
                                    bsSize="small"
                                    bsStyle="info"
                                    className="Button__StyledButton-c9cbmb-0 jHWfTP"
                                    disabled={false}
                                    onClick={[Function]}
                                  >
                                    <button
                                      className="Button__StyledButton-c9cbmb-0 jHWfTP btn btn-sm btn-info"
                                      disabled={false}
                                      onClick={[Function]}
                                      type="button"
                                    >
                                      View
                                    </button>
                                  </Button>
                                </Button__StyledButton>
                              </ForwardRef>
                              <BootstrapModalWrapper
                                backdrop="static"
                                bsSize="large"
                                onClose={[Function]}
                                onHide={[Function]}
                                onOpen={[Function]}
                                showModal={false}
                              >
                                <Modal
                                  backdrop="static"
                                  bsSize="large"
                                  onHide={[Function]}
                                  show={false}
                                >
                                  <Modal
                                    animation={true}
                                    autoFocus={true}
                                    backdrop="static"
                                    bsClass="modal"
                                    bsSize="large"
                                    className="Modal-nuree8-0 hMPgsT"
                                    dialogComponentClass={[Function]}
                                    enforceFocus={true}
                                    keyboard={true}
                                    manager={
                                      ModalManager {
                                        "add": [Function],
                                        "containers": Array [],
                                        "data": Array [],
                                        "handleContainerOverflow": true,
                                        "hideSiblingNodes": true,
                                        "isTopModal": [Function],
                                        "modals": Array [],
                                        "remove": [Function],
                                      }
                                    }
                                    onHide={[Function]}
                                    renderBackdrop={[Function]}
                                    restoreFocus={true}
                                    show={false}
                                  >
                                    <Modal
                                      autoFocus={true}
                                      backdrop="static"
                                      backdropClassName="modal-backdrop"
                                      backdropTransition={[Function]}
                                      containerClassName="modal-open"
                                      enforceFocus={true}
                                      keyboard={true}
                                      manager={
                                        ModalManager {
                                          "add": [Function],
                                          "containers": Array [],
                                          "data": Array [],
                                          "handleContainerOverflow": true,
                                          "hideSiblingNodes": true,
                                          "isTopModal": [Function],
                                          "modals": Array [],
                                          "remove": [Function],
                                        }
                                      }
                                      onEntering={[Function]}
                                      onExited={[Function]}
                                      onHide={[Function]}
                                      onMouseUp={[Function]}
                                      renderBackdrop={[Function]}
                                      restoreFocus={true}
                                      show={false}
                                      transition={[Function]}
                                    />
                                  </Modal>
                                </Modal>
                              </BootstrapModalWrapper>
                            </div>
                          </ButtonToolbar>
                        </div>
                      </td>
                    </tr>
                  </DataTableElement>
                </tbody>
              </table>
            </DataTable__StyledTable>
          </div>
        </div>
      </div>
    </div>
  </DataTable>
</ContentPackInstallations>
`;

exports[`<ContentPackInstallations /> should render with empty installations 1`] = `
<ContentPackInstallations
  installations={Array []}
  onUninstall={[Function]}
>
  <DataTable
    className=""
    dataRowFormatter={[Function]}
    displayKey="value"
    filterBy=""
    filterKeys={Array []}
    filterLabel="Filter"
    filterSuggestions={Array []}
    headerCellFormatter={[Function]}
    headers={
      Array [
        "Comment",
        "Version",
        "Action",
      ]
    }
    id="content-packs-versions"
    noDataText="No data available."
    rowClassName=""
    rows={Array []}
    sortByKey="comment"
    useResponsiveTable={true}
  >
    <div>
      <div
        className="row "
      >
        <div
          className="col-md-12"
        >
          <div
            className="data-table table-responsive"
            id="content-packs-versions"
          >
            <p>
              No data available.
            </p>
          </div>
        </div>
      </div>
    </div>
  </DataTable>
</ContentPackInstallations>
`;

exports[`<ContentPackInstallations /> should render without installations 1`] = `
<ContentPackInstallations
  installations={Array []}
  onUninstall={[Function]}
>
  <DataTable
    className=""
    dataRowFormatter={[Function]}
    displayKey="value"
    filterBy=""
    filterKeys={Array []}
    filterLabel="Filter"
    filterSuggestions={Array []}
    headerCellFormatter={[Function]}
    headers={
      Array [
        "Comment",
        "Version",
        "Action",
      ]
    }
    id="content-packs-versions"
    noDataText="No data available."
    rowClassName=""
    rows={Array []}
    sortByKey="comment"
    useResponsiveTable={true}
  >
    <div>
      <div
        className="row "
      >
        <div
          className="col-md-12"
        >
          <div
            className="data-table table-responsive"
            id="content-packs-versions"
          >
            <p>
              No data available.
            </p>
          </div>
        </div>
      </div>
    </div>
  </DataTable>
</ContentPackInstallations>
`;
