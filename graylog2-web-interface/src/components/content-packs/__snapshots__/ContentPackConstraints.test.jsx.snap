// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<ContentPackConstraints /> should render with created constraints 1`] = `
<ContentPackConstraints
  constraints={
    Array [
      Object {
        "constraint": Object {
          "fulfilled": true,
          "type": "server-version",
          "version": ">=3.0.0-alpha.2+af8d8e0",
        },
        "fulfilled": true,
      },
      Object {
        "constraint": Object {
          "fulfilled": false,
          "plugin": "org.graylog.plugins.threatintel.ThreatIntelPlugin",
          "type": "plugin-version",
          "version": ">=3.0.0-alpha.2",
        },
        "fulfilled": false,
      },
    ]
  }
  isFulfilled={false}
>
  <div>
    <h2>
      Constraints
    </h2>
    <br />
    <br />
    <DataTable
      className=""
      dataRowFormatter={[Function]}
      displayKey="value"
      filterBy=""
      filterKeys={Array []}
      filterLabel="Filter"
      filterSuggestions={Array []}
      headerCellFormatter={[Function]}
      headers={
        Array [
          "Name",
          "Type",
          "Version",
          "Fulfilled",
        ]
      }
      id="content-packs-constraints"
      noDataText="No data available."
      rowClassName=""
      rows={
        Array [
          Object {
            "fulfilled": false,
            "plugin": "org.graylog.plugins.threatintel.ThreatIntelPlugin",
            "type": "plugin-version",
            "version": ">=3.0.0-alpha.2",
          },
          Object {
            "fulfilled": true,
            "type": "server-version",
            "version": ">=3.0.0-alpha.2+af8d8e0",
          },
        ]
      }
      sortBy={[Function]}
      useResponsiveTable={true}
    >
      <div>
        <div
          className="row "
        >
          <div
            className="col-md-12"
          >
            <div
              className="data-table table-responsive"
              id="content-packs-constraints"
            >
              <DataTable__StyledTable
                className="table "
              >
                <table
                  className="DataTable__StyledTable-sc-1c22x1c-0 hEWaaO table "
                >
                  <thead>
                    <tr>
                      <DataTableElement
                        element="Name"
                        formatter={[Function]}
                        index={0}
                        key="header-0"
                      >
                        <th>
                          Name
                        </th>
                      </DataTableElement>
                      <DataTableElement
                        element="Type"
                        formatter={[Function]}
                        index={1}
                        key="header-1"
                      >
                        <th>
                          Type
                        </th>
                      </DataTableElement>
                      <DataTableElement
                        element="Version"
                        formatter={[Function]}
                        index={2}
                        key="header-2"
                      >
                        <th>
                          Version
                        </th>
                      </DataTableElement>
                      <DataTableElement
                        element="Fulfilled"
                        formatter={[Function]}
                        index={3}
                        key="header-3"
                      >
                        <th>
                          Fulfilled
                        </th>
                      </DataTableElement>
                    </tr>
                  </thead>
                  <tbody>
                    <DataTableElement
                      element={
                        Object {
                          "fulfilled": false,
                          "plugin": "org.graylog.plugins.threatintel.ThreatIntelPlugin",
                          "type": "plugin-version",
                          "version": ">=3.0.0-alpha.2",
                        }
                      }
                      formatter={[Function]}
                      index={0}
                      key="row-0"
                    >
                      <tr>
                        <td>
                          org.graylog.plugins.threatintel.ThreatIntelPlugin
                        </td>
                        <td>
                          plugin-version
                        </td>
                        <td>
                          &gt;=3.0.0-alpha.2
                        </td>
                        <td>
                          <ContentPackConstraints__StyledBadge
                            isFulfilled={false}
                          >
                            <Component
                              className="ContentPackConstraints__StyledBadge-g7th4-0 jLiCCN"
                              isFulfilled={false}
                            >
                              <ForwardRef
                                className="ContentPackConstraints__StyledBadge-g7th4-0 jLiCCN"
                              >
                                <Badge__StyledBadge
                                  className="ContentPackConstraints__StyledBadge-g7th4-0 jLiCCN"
                                >
                                  <Badge
                                    bsClass="badge"
                                    className="Badge__StyledBadge-sc-4gzqz0-0 fLCUuP ContentPackConstraints__StyledBadge-g7th4-0 jLiCCN"
                                    pullRight={false}
                                  >
                                    <span
                                      className="Badge__StyledBadge-sc-4gzqz0-0 fLCUuP ContentPackConstraints__StyledBadge-g7th4-0 jLiCCN badge"
                                    >
                                      <Icon
                                        name="times"
                                        type="solid"
                                      >
                                        <FontAwesomeIcon
                                          icon={
                                            Object {
                                              "iconName": "times",
                                              "prefix": "fas",
                                            }
                                          }
                                        >
                                          <svg
                                            className="svg-inline--fa fa-times"
                                          />
                                        </FontAwesomeIcon>
                                      </Icon>
                                    </span>
                                  </Badge>
                                </Badge__StyledBadge>
                              </ForwardRef>
                            </Component>
                          </ContentPackConstraints__StyledBadge>
                        </td>
                      </tr>
                    </DataTableElement>
                    <DataTableElement
                      element={
                        Object {
                          "fulfilled": true,
                          "type": "server-version",
                          "version": ">=3.0.0-alpha.2+af8d8e0",
                        }
                      }
                      formatter={[Function]}
                      index={1}
                      key="row-1"
                    >
                      <tr>
                        <td>
                          Graylog
                        </td>
                        <td>
                          server-version
                        </td>
                        <td>
                          &gt;=3.0.0-alpha.2+af8d8e0
                        </td>
                        <td>
                          <ContentPackConstraints__StyledBadge
                            isFulfilled={true}
                          >
                            <Component
                              className="ContentPackConstraints__StyledBadge-g7th4-0 lihdZe"
                              isFulfilled={true}
                            >
                              <ForwardRef
                                className="ContentPackConstraints__StyledBadge-g7th4-0 lihdZe"
                              >
                                <Badge__StyledBadge
                                  className="ContentPackConstraints__StyledBadge-g7th4-0 lihdZe"
                                >
                                  <Badge
                                    bsClass="badge"
                                    className="Badge__StyledBadge-sc-4gzqz0-0 fLCUuP ContentPackConstraints__StyledBadge-g7th4-0 lihdZe"
                                    pullRight={false}
                                  >
                                    <span
                                      className="Badge__StyledBadge-sc-4gzqz0-0 fLCUuP ContentPackConstraints__StyledBadge-g7th4-0 lihdZe badge"
                                    >
                                      <Icon
                                        name="check"
                                        type="solid"
                                      >
                                        <FontAwesomeIcon
                                          icon={
                                            Object {
                                              "iconName": "check",
                                              "prefix": "fas",
                                            }
                                          }
                                        >
                                          <svg
                                            className="svg-inline--fa fa-check"
                                          />
                                        </FontAwesomeIcon>
                                      </Icon>
                                    </span>
                                  </Badge>
                                </Badge__StyledBadge>
                              </ForwardRef>
                            </Component>
                          </ContentPackConstraints__StyledBadge>
                        </td>
                      </tr>
                    </DataTableElement>
                  </tbody>
                </table>
              </DataTable__StyledTable>
            </div>
          </div>
        </div>
      </div>
    </DataTable>
  </div>
</ContentPackConstraints>
`;

exports[`<ContentPackConstraints /> should render with new constraints with forced fulfillment 1`] = `
<ContentPackConstraints
  constraints={
    Array [
      Object {
        "fulfilled": true,
        "type": "server-version",
        "version": ">=3.0.0-alpha.2+af8d8e0",
      },
      Object {
        "fulfilled": true,
        "plugin": "org.graylog.plugins.threatintel.ThreatIntelPlugin",
        "type": "plugin-version",
        "version": ">=3.0.0-alpha.2",
      },
    ]
  }
  isFulfilled={true}
>
  <div>
    <h2>
      Constraints
    </h2>
    <br />
    <br />
    <DataTable
      className=""
      dataRowFormatter={[Function]}
      displayKey="value"
      filterBy=""
      filterKeys={Array []}
      filterLabel="Filter"
      filterSuggestions={Array []}
      headerCellFormatter={[Function]}
      headers={
        Array [
          "Name",
          "Type",
          "Version",
          "Fulfilled",
        ]
      }
      id="content-packs-constraints"
      noDataText="No data available."
      rowClassName=""
      rows={
        Array [
          Object {
            "fulfilled": true,
            "plugin": "org.graylog.plugins.threatintel.ThreatIntelPlugin",
            "type": "plugin-version",
            "version": ">=3.0.0-alpha.2",
          },
          Object {
            "fulfilled": true,
            "type": "server-version",
            "version": ">=3.0.0-alpha.2+af8d8e0",
          },
        ]
      }
      sortBy={[Function]}
      useResponsiveTable={true}
    >
      <div>
        <div
          className="row "
        >
          <div
            className="col-md-12"
          >
            <div
              className="data-table table-responsive"
              id="content-packs-constraints"
            >
              <DataTable__StyledTable
                className="table "
              >
                <table
                  className="DataTable__StyledTable-sc-1c22x1c-0 hEWaaO table "
                >
                  <thead>
                    <tr>
                      <DataTableElement
                        element="Name"
                        formatter={[Function]}
                        index={0}
                        key="header-0"
                      >
                        <th>
                          Name
                        </th>
                      </DataTableElement>
                      <DataTableElement
                        element="Type"
                        formatter={[Function]}
                        index={1}
                        key="header-1"
                      >
                        <th>
                          Type
                        </th>
                      </DataTableElement>
                      <DataTableElement
                        element="Version"
                        formatter={[Function]}
                        index={2}
                        key="header-2"
                      >
                        <th>
                          Version
                        </th>
                      </DataTableElement>
                      <DataTableElement
                        element="Fulfilled"
                        formatter={[Function]}
                        index={3}
                        key="header-3"
                      >
                        <th>
                          Fulfilled
                        </th>
                      </DataTableElement>
                    </tr>
                  </thead>
                  <tbody>
                    <DataTableElement
                      element={
                        Object {
                          "fulfilled": true,
                          "plugin": "org.graylog.plugins.threatintel.ThreatIntelPlugin",
                          "type": "plugin-version",
                          "version": ">=3.0.0-alpha.2",
                        }
                      }
                      formatter={[Function]}
                      index={0}
                      key="row-0"
                    >
                      <tr>
                        <td>
                          org.graylog.plugins.threatintel.ThreatIntelPlugin
                        </td>
                        <td>
                          plugin-version
                        </td>
                        <td>
                          &gt;=3.0.0-alpha.2
                        </td>
                        <td>
                          <ContentPackConstraints__StyledBadge
                            isFulfilled={true}
                          >
                            <Component
                              className="ContentPackConstraints__StyledBadge-g7th4-0 lihdZe"
                              isFulfilled={true}
                            >
                              <ForwardRef
                                className="ContentPackConstraints__StyledBadge-g7th4-0 lihdZe"
                              >
                                <Badge__StyledBadge
                                  className="ContentPackConstraints__StyledBadge-g7th4-0 lihdZe"
                                >
                                  <Badge
                                    bsClass="badge"
                                    className="Badge__StyledBadge-sc-4gzqz0-0 fLCUuP ContentPackConstraints__StyledBadge-g7th4-0 lihdZe"
                                    pullRight={false}
                                  >
                                    <span
                                      className="Badge__StyledBadge-sc-4gzqz0-0 fLCUuP ContentPackConstraints__StyledBadge-g7th4-0 lihdZe badge"
                                    >
                                      <Icon
                                        name="check"
                                        type="solid"
                                      >
                                        <FontAwesomeIcon
                                          icon={
                                            Object {
                                              "iconName": "check",
                                              "prefix": "fas",
                                            }
                                          }
                                        >
                                          <svg
                                            className="svg-inline--fa fa-check"
                                          />
                                        </FontAwesomeIcon>
                                      </Icon>
                                    </span>
                                  </Badge>
                                </Badge__StyledBadge>
                              </ForwardRef>
                            </Component>
                          </ContentPackConstraints__StyledBadge>
                        </td>
                      </tr>
                    </DataTableElement>
                    <DataTableElement
                      element={
                        Object {
                          "fulfilled": true,
                          "type": "server-version",
                          "version": ">=3.0.0-alpha.2+af8d8e0",
                        }
                      }
                      formatter={[Function]}
                      index={1}
                      key="row-1"
                    >
                      <tr>
                        <td>
                          Graylog
                        </td>
                        <td>
                          server-version
                        </td>
                        <td>
                          &gt;=3.0.0-alpha.2+af8d8e0
                        </td>
                        <td>
                          <ContentPackConstraints__StyledBadge
                            isFulfilled={true}
                          >
                            <Component
                              className="ContentPackConstraints__StyledBadge-g7th4-0 lihdZe"
                              isFulfilled={true}
                            >
                              <ForwardRef
                                className="ContentPackConstraints__StyledBadge-g7th4-0 lihdZe"
                              >
                                <Badge__StyledBadge
                                  className="ContentPackConstraints__StyledBadge-g7th4-0 lihdZe"
                                >
                                  <Badge
                                    bsClass="badge"
                                    className="Badge__StyledBadge-sc-4gzqz0-0 fLCUuP ContentPackConstraints__StyledBadge-g7th4-0 lihdZe"
                                    pullRight={false}
                                  >
                                    <span
                                      className="Badge__StyledBadge-sc-4gzqz0-0 fLCUuP ContentPackConstraints__StyledBadge-g7th4-0 lihdZe badge"
                                    >
                                      <Icon
                                        name="check"
                                        type="solid"
                                      >
                                        <FontAwesomeIcon
                                          icon={
                                            Object {
                                              "iconName": "check",
                                              "prefix": "fas",
                                            }
                                          }
                                        >
                                          <svg
                                            className="svg-inline--fa fa-check"
                                          />
                                        </FontAwesomeIcon>
                                      </Icon>
                                    </span>
                                  </Badge>
                                </Badge__StyledBadge>
                              </ForwardRef>
                            </Component>
                          </ContentPackConstraints__StyledBadge>
                        </td>
                      </tr>
                    </DataTableElement>
                  </tbody>
                </table>
              </DataTable__StyledTable>
            </div>
          </div>
        </div>
      </div>
    </DataTable>
  </div>
</ContentPackConstraints>
`;

exports[`<ContentPackConstraints /> should render with new constraints without forced fulfillment 1`] = `
<ContentPackConstraints
  constraints={
    Array [
      Object {
        "fulfilled": undefined,
        "type": "server-version",
        "version": ">=3.0.0-alpha.2+af8d8e0",
      },
      Object {
        "fulfilled": undefined,
        "plugin": "org.graylog.plugins.threatintel.ThreatIntelPlugin",
        "type": "plugin-version",
        "version": ">=3.0.0-alpha.2",
      },
    ]
  }
  isFulfilled={false}
>
  <div>
    <h2>
      Constraints
    </h2>
    <br />
    <br />
    <DataTable
      className=""
      dataRowFormatter={[Function]}
      displayKey="value"
      filterBy=""
      filterKeys={Array []}
      filterLabel="Filter"
      filterSuggestions={Array []}
      headerCellFormatter={[Function]}
      headers={
        Array [
          "Name",
          "Type",
          "Version",
          "Fulfilled",
        ]
      }
      id="content-packs-constraints"
      noDataText="No data available."
      rowClassName=""
      rows={
        Array [
          Object {
            "fulfilled": undefined,
            "plugin": "org.graylog.plugins.threatintel.ThreatIntelPlugin",
            "type": "plugin-version",
            "version": ">=3.0.0-alpha.2",
          },
          Object {
            "fulfilled": undefined,
            "type": "server-version",
            "version": ">=3.0.0-alpha.2+af8d8e0",
          },
        ]
      }
      sortBy={[Function]}
      useResponsiveTable={true}
    >
      <div>
        <div
          className="row "
        >
          <div
            className="col-md-12"
          >
            <div
              className="data-table table-responsive"
              id="content-packs-constraints"
            >
              <DataTable__StyledTable
                className="table "
              >
                <table
                  className="DataTable__StyledTable-sc-1c22x1c-0 hEWaaO table "
                >
                  <thead>
                    <tr>
                      <DataTableElement
                        element="Name"
                        formatter={[Function]}
                        index={0}
                        key="header-0"
                      >
                        <th>
                          Name
                        </th>
                      </DataTableElement>
                      <DataTableElement
                        element="Type"
                        formatter={[Function]}
                        index={1}
                        key="header-1"
                      >
                        <th>
                          Type
                        </th>
                      </DataTableElement>
                      <DataTableElement
                        element="Version"
                        formatter={[Function]}
                        index={2}
                        key="header-2"
                      >
                        <th>
                          Version
                        </th>
                      </DataTableElement>
                      <DataTableElement
                        element="Fulfilled"
                        formatter={[Function]}
                        index={3}
                        key="header-3"
                      >
                        <th>
                          Fulfilled
                        </th>
                      </DataTableElement>
                    </tr>
                  </thead>
                  <tbody>
                    <DataTableElement
                      element={
                        Object {
                          "fulfilled": undefined,
                          "plugin": "org.graylog.plugins.threatintel.ThreatIntelPlugin",
                          "type": "plugin-version",
                          "version": ">=3.0.0-alpha.2",
                        }
                      }
                      formatter={[Function]}
                      index={0}
                      key="row-0"
                    >
                      <tr>
                        <td>
                          org.graylog.plugins.threatintel.ThreatIntelPlugin
                        </td>
                        <td>
                          plugin-version
                        </td>
                        <td>
                          &gt;=3.0.0-alpha.2
                        </td>
                        <td>
                          <ContentPackConstraints__StyledBadge>
                            <Component
                              className="ContentPackConstraints__StyledBadge-g7th4-0 jLiCCN"
                            >
                              <ForwardRef
                                className="ContentPackConstraints__StyledBadge-g7th4-0 jLiCCN"
                              >
                                <Badge__StyledBadge
                                  className="ContentPackConstraints__StyledBadge-g7th4-0 jLiCCN"
                                >
                                  <Badge
                                    bsClass="badge"
                                    className="Badge__StyledBadge-sc-4gzqz0-0 fLCUuP ContentPackConstraints__StyledBadge-g7th4-0 jLiCCN"
                                    pullRight={false}
                                  >
                                    <span
                                      className="Badge__StyledBadge-sc-4gzqz0-0 fLCUuP ContentPackConstraints__StyledBadge-g7th4-0 jLiCCN badge"
                                    >
                                      <Icon
                                        name="times"
                                        type="solid"
                                      >
                                        <FontAwesomeIcon
                                          icon={
                                            Object {
                                              "iconName": "times",
                                              "prefix": "fas",
                                            }
                                          }
                                        >
                                          <svg
                                            className="svg-inline--fa fa-times"
                                          />
                                        </FontAwesomeIcon>
                                      </Icon>
                                    </span>
                                  </Badge>
                                </Badge__StyledBadge>
                              </ForwardRef>
                            </Component>
                          </ContentPackConstraints__StyledBadge>
                        </td>
                      </tr>
                    </DataTableElement>
                    <DataTableElement
                      element={
                        Object {
                          "fulfilled": undefined,
                          "type": "server-version",
                          "version": ">=3.0.0-alpha.2+af8d8e0",
                        }
                      }
                      formatter={[Function]}
                      index={1}
                      key="row-1"
                    >
                      <tr>
                        <td>
                          Graylog
                        </td>
                        <td>
                          server-version
                        </td>
                        <td>
                          &gt;=3.0.0-alpha.2+af8d8e0
                        </td>
                        <td>
                          <ContentPackConstraints__StyledBadge>
                            <Component
                              className="ContentPackConstraints__StyledBadge-g7th4-0 jLiCCN"
                            >
                              <ForwardRef
                                className="ContentPackConstraints__StyledBadge-g7th4-0 jLiCCN"
                              >
                                <Badge__StyledBadge
                                  className="ContentPackConstraints__StyledBadge-g7th4-0 jLiCCN"
                                >
                                  <Badge
                                    bsClass="badge"
                                    className="Badge__StyledBadge-sc-4gzqz0-0 fLCUuP ContentPackConstraints__StyledBadge-g7th4-0 jLiCCN"
                                    pullRight={false}
                                  >
                                    <span
                                      className="Badge__StyledBadge-sc-4gzqz0-0 fLCUuP ContentPackConstraints__StyledBadge-g7th4-0 jLiCCN badge"
                                    >
                                      <Icon
                                        name="times"
                                        type="solid"
                                      >
                                        <FontAwesomeIcon
                                          icon={
                                            Object {
                                              "iconName": "times",
                                              "prefix": "fas",
                                            }
                                          }
                                        >
                                          <svg
                                            className="svg-inline--fa fa-times"
                                          />
                                        </FontAwesomeIcon>
                                      </Icon>
                                    </span>
                                  </Badge>
                                </Badge__StyledBadge>
                              </ForwardRef>
                            </Component>
                          </ContentPackConstraints__StyledBadge>
                        </td>
                      </tr>
                    </DataTableElement>
                  </tbody>
                </table>
              </DataTable__StyledTable>
            </div>
          </div>
        </div>
      </div>
    </DataTable>
  </div>
</ContentPackConstraints>
`;
