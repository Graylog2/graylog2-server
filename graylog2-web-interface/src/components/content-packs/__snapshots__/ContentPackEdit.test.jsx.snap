// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<ContentPackEdit /> should render empty content pack for create 1`] = `
.c3.btn-danger {
  background-color: #ad0707;
  border-color: #b23939;
  color: rgb(252,249,249);
  -webkit-transition: background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;
  transition: background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;
}

.c3.btn-danger:hover {
  background-color: #a00e0e;
  border-color: #a53636;
  color: #e9e6e6;
}

.c3.btn-danger.active {
  background-color: #b75151;
  border-color: #bc6363;
  color: rgb(252,249,249);
}

.c3.btn-danger.active:hover {
  background-color: #a94c4c;
  border-color: #ad5c5c;
  color: #e9e6e6;
}

.c3.btn-danger[disabled],
.c3.btn-danger.disabled {
  background-color: #c07272;
  border-color: #bc6363;
  color: rgb(252,250,250);
}

.c3.btn-danger[disabled]:hover,
.c3.btn-danger.disabled:hover {
  background-color: #c07272;
  border-color: #bc6363;
  color: rgb(252,250,250);
}

.c3.btn-default {
  background-color: #e6e6e6;
  border-color: #e0e0e0;
  color: rgb(73,73,73);
  -webkit-transition: background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;
  transition: background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;
}

.c3.btn-default:hover {
  background-color: #d4d4d4;
  border-color: #cfcfcf;
  color: #444444;
}

.c3.btn-default.active {
  background-color: #dadada;
  border-color: #d4d4d4;
  color: rgb(49,49,49);
}

.c3.btn-default.active:hover {
  background-color: #cacaca;
  border-color: #c4c4c4;
  color: #2f2f2f;
}

.c3.btn-default[disabled],
.c3.btn-default.disabled {
  background-color: #cecece;
  border-color: #d4d4d4;
  color: rgb(80,80,80);
}

.c3.btn-default[disabled]:hover,
.c3.btn-default.disabled:hover {
  background-color: #cecece;
  border-color: #d4d4d4;
  color: rgb(80,80,80);
}

.c3.btn-info {
  background-color: #0063be;
  border-color: #3970c2;
  color: rgb(249,250,252);
  -webkit-transition: background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;
  transition: background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;
}

.c3.btn-info:hover {
  background-color: #0c5cb0;
  border-color: #3668b3;
  color: #e6e7e9;
}

.c3.btn-info.active {
  background-color: #517cc5;
  border-color: #6386c9;
  color: rgb(249,250,252);
}

.c3.btn-info.active:hover {
  background-color: #4b73b6;
  border-color: #5c7dba;
  color: #e6e7e9;
}

.c3.btn-info[disabled],
.c3.btn-info.disabled {
  background-color: #7290cd;
  border-color: #6386c9;
  color: rgb(250,251,253);
}

.c3.btn-info[disabled]:hover,
.c3.btn-info.disabled:hover {
  background-color: #7290cd;
  border-color: #6386c9;
  color: rgb(250,251,253);
}

.c3.btn-link {
  background-color: rgba(255,255,255,0);
  border-color: rgba(255,255,255,0);
  color: #702785;
  -webkit-transition: background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;
  transition: background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;
}

.c3.btn-link:hover {
  background-color: #ebebeb26;
  border-color: #ebebeb26;
  color: #68267b;
}

.c3.btn-link.active {
  background-color: rgba(255,255,255,0);
  border-color: rgba(255,255,255,0);
  color: #410057;
}

.c3.btn-link.active:hover {
  background-color: rgba(255,255,255,0);
  border-color: #ebebeb26;
  color: #3d0c51;
}

.c3.btn-link[disabled],
.c3.btn-link.disabled {
  background-color: rgba(255,255,255,0);
  border-color: rgba(255,255,255,0);
  color: #702785;
}

.c3.btn-link[disabled]:hover,
.c3.btn-link.disabled:hover {
  background-color: rgba(255,255,255,0);
  border-color: rgba(255,255,255,0);
  color: #702785;
}

.c3.btn-primary {
  background-color: #702785;
  border-color: #7b458e;
  color: rgb(234,229,236);
  -webkit-transition: background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;
  transition: background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;
}

.c3.btn-primary:hover {
  background-color: #68267b;
  border-color: #724083;
  color: #d8d3da;
}

.c3.btn-primary.active {
  background-color: #855996;
  border-color: #8f699d;
  color: rgb(250,249,251);
}

.c3.btn-primary.active:hover {
  background-color: #7c538b;
  border-color: #846292;
  color: #e7e6e8;
}

.c3.btn-primary[disabled],
.c3.btn-primary.disabled {
  background-color: #9877a5;
  border-color: #8f699d;
  color: rgb(251,250,251);
}

.c3.btn-primary[disabled]:hover,
.c3.btn-primary.disabled:hover {
  background-color: #9877a5;
  border-color: #8f699d;
  color: rgb(251,250,251);
}

.c3.btn-success {
  background-color: #00ae42;
  border-color: #39b356;
  color: rgb(249,252,249);
  -webkit-transition: background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;
  transition: background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;
}

.c3.btn-success:hover {
  background-color: #0ca13e;
  border-color: #36a550;
  color: #e6e9e6;
}

.c3.btn-success.active {
  background-color: #51b866;
  border-color: #63bc74;
  color: rgb(249,252,250);
}

.c3.btn-success.active:hover {
  background-color: #4baa5f;
  border-color: #5cae6c;
  color: #e6e9e7;
}

.c3.btn-success[disabled],
.c3.btn-success.disabled {
  background-color: #72c180;
  border-color: #63bc74;
  color: rgb(250,252,250);
}

.c3.btn-success[disabled]:hover,
.c3.btn-success.disabled:hover {
  background-color: #72c180;
  border-color: #63bc74;
  color: rgb(250,252,250);
}

.c3.btn-warning {
  background-color: #ffd200;
  border-color: #f9cd07;
  color: rgb(57,47,0);
  -webkit-transition: background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;
  transition: background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;
}

.c3.btn-warning:hover {
  background-color: #ebc20c;
  border-color: #e6bd0e;
  color: #362d0c;
}

.c3.btn-warning.active {
  background-color: #f2c70a;
  border-color: #ebc20c;
  color: rgb(54,45,2);
}

.c3.btn-warning.active:hover {
  background-color: #e0b80f;
  border-color: #d9b310;
  color: #332b0c;
}

.c3.btn-warning[disabled],
.c3.btn-warning.disabled {
  background-color: #e4bc0e;
  border-color: #ebc20c;
  color: rgb(88,73,5);
}

.c3.btn-warning[disabled]:hover,
.c3.btn-warning.disabled:hover {
  background-color: #e4bc0e;
  border-color: #ebc20c;
  color: rgb(88,73,5);
}

.c4 {
  color: #1f1f1f;
  font-weight: bold;
  margin-bottom: 5px;
  display: inline-block;
}

.c5.form-control {
  color: #1f1f1f;
  background-color: #fff;
  border-color: #a6a6a6;
}

.c5.form-control::-webkit-input-placeholder {
  color: #9b9b9b;
}

.c5.form-control::-moz-placeholder {
  color: #9b9b9b;
}

.c5.form-control:-ms-input-placeholder {
  color: #9b9b9b;
}

.c5.form-control::placeholder {
  color: #9b9b9b;
}

.c5.form-control:focus {
  border-color: #7894ce;
  box-shadow: inset 0 1px 1px rgba(0,0,0,0.075),0 0 8px rgba(120,148,206,0.4);
}

.c5.form-control[disabled],
.c5.form-control[readonly],
fieldset[disabled] .c5.form-control {
  background-color: #dddddd;
  color: #9b9b9b;
}

.c5.form-control ~ .form-control-feedback.glyphicon {
  display: none;
}

.c6 {
  display: block;
  margin-top: 5px;
  margin-bottom: 10px;
  color: #838383;
}

.c2.nav > li > a {
  -webkit-transition: background-color 150ms ease-in-out;
  transition: background-color 150ms ease-in-out;
}

.c2.nav > li > a:hover,
.c2.nav > li > a:focus {
  background-color: #f3f3f3;
}

.c2.nav > li.disabled > a {
  color: #a6a6a6;
}

.c2.nav > li.disabled > a:hover,
.c2.nav > li.disabled > a:focus {
  color: #a6a6a6;
}

.c2.nav .open > a,
.c2.nav .open > a:hover,
.c2.nav .open > a:focus {
  background-color: #f3f3f3;
  border-color: #702785;
}

.c2.nav.nav-pills > li.active > a,
.c2.nav.nav-pills > li.active > a:hover,
.c2.nav.nav-pills > li.active > a:focus {
  color: rgb(234,229,236);
  background-color: #702785;
}

.c2.nav .nav-tabs {
  border-bottom-color: rgb(198,207,231);
}

.c2.nav .nav-tabs > li > a {
  -webkit-transition: background-color 150ms ease-in-out;
  transition: background-color 150ms ease-in-out;
  color: #1f1f1f;
  border-color: #d0d0d0 #d0d0d0 rgb(198,207,231);
}

.c2.nav .nav-tabs > li > a:hover {
  background-color: #f3f3f3;
  color: #1f1f1f;
}

.c2.nav .nav-tabs > li.active > a,
.c2.nav .nav-tabs > li.active > a:hover,
.c2.nav .nav-tabs > li.active > a:focus {
  color: #1f1f1f;
  background-color: #ffffff;
  border-color: rgb(198,207,231);
  border-bottom-color: transparent;
}

.c2.nav .nav-tabs > li.disabled > a,
.c2.nav .nav-tabs > li.disabled > a:hover,
.c2.nav .nav-tabs > li.disabled > a:focus {
  color: #9b9b9b;
  background-color: #ffffff;
  border-color: #ffffff #ffffff rgb(198,207,231);
  cursor: not-allowed;
}

.c2.nav.nav-justified > .active > a,
.c2.nav.nav-justified > .active > a:hover,
.c2.nav.nav-justified > .active > a:focus {
  border-color: rgb(198,207,231);
}

.c0.content {
  background-color: #fff;
  border: 1px solid #d0d0d0;
  margin-bottom: 9px;
  border-radius: 4px;
}

.c1 {
  border-right: #cdcdcd solid 1px;
}

@media (min-width:768px) {
  .c2.nav.nav-justified > li > a {
    border-bottom-color: rgb(198,207,231);
  }

  .c2.nav.nav-justified > .active > a,
  .c2.nav.nav-justified > .active > a:hover,
  .c2.nav.nav-justified > .active > a:focus {
    border-bottom-color: #ffffff;
  }
}

<ContentPackEdit
  appliedParameter={Object {}}
  contentPack={
    Object {
      "description": "",
      "entities": Array [],
      "id": "9950ba5a-0887-40a9-2b8f-8b50292cc7fb",
      "name": "",
      "parameters": Array [],
      "rev": 1,
      "summary": "",
      "url": "",
      "v": 1,
      "vendor": "",
    }
  }
  edit={false}
  entityIndex={Object {}}
  fetchedEntities={Array []}
  onGetEntities={[Function]}
  onSave={[Function]}
  onStateChange={[Function]}
  selectedEntities={Object {}}
>
  <div>
    <Wizard
      NavigationComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "STYLES": Array [
            "tabs",
            "pills",
          ],
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "baseHash": -110015796,
            "componentId": "Nav-dzawzr-0",
            "isStatic": false,
            "rules": Array [
              [Function],
            ],
            "staticRulesId": "",
          },
          "displayName": "Nav",
          "foldedComponentIds": Array [],
          "render": [Function],
          "shouldForwardProp": undefined,
          "styledComponentId": "Nav-dzawzr-0",
          "target": [Function],
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      affixed={true}
      containerClassName="content"
      hidePreviousNextButtons={false}
      horizontal={false}
      justified={false}
      onStepChange={[Function]}
      steps={
        Array [
          Object {
            "component": <ContentPackSelection
              contentPack={
                Object {
                  "description": "",
                  "entities": Array [],
                  "id": "9950ba5a-0887-40a9-2b8f-8b50292cc7fb",
                  "name": "",
                  "parameters": Array [],
                  "rev": 1,
                  "summary": "",
                  "url": "",
                  "v": 1,
                  "vendor": "",
                }
              }
              edit={false}
              entities={Object {}}
              onStateChange={[Function]}
              selectedEntities={Object {}}
            />,
            "key": "selection",
            "title": "Content Selection",
          },
          Object {
            "component": <ContentPackParameters
              appliedParameter={Object {}}
              contentPack={
                Object {
                  "description": "",
                  "entities": Array [],
                  "id": "9950ba5a-0887-40a9-2b8f-8b50292cc7fb",
                  "name": "",
                  "parameters": Array [],
                  "rev": 1,
                  "summary": "",
                  "url": "",
                  "v": 1,
                  "vendor": "",
                }
              }
              onStateChange={[Function]}
            />,
            "disabled": true,
            "key": "parameters",
            "title": "Parameters",
          },
          Object {
            "component": <ContentPackPreview
              contentPack={
                Object {
                  "description": "",
                  "entities": Array [],
                  "id": "9950ba5a-0887-40a9-2b8f-8b50292cc7fb",
                  "name": "",
                  "parameters": Array [],
                  "rev": 1,
                  "summary": "",
                  "url": "",
                  "v": 1,
                  "vendor": "",
                }
              }
              onSave={[Function]}
            />,
            "disabled": true,
            "key": "preview",
            "title": "Preview",
          },
        ]
      }
    >
      <Row
        className="content"
      >
        <Row
          bsClass="row"
          className="c0 content"
          componentClass="div"
        >
          <div
            className="c0 content row"
          >
            <Wizard__SubnavigationCol
              md={2}
            >
              <Col
                bsClass="col"
                className="c1"
                componentClass="div"
                md={2}
              >
                <div
                  className="c1 col-md-2"
                >
                  <Nav
                    activeKey="selection"
                    bsStyle="pills"
                    justified={false}
                    onSelect={[Function]}
                    stacked={true}
                  >
                    <Nav
                      activeKey="selection"
                      bsClass="nav"
                      bsStyle="pills"
                      className="c2"
                      justified={false}
                      onSelect={[Function]}
                      pullLeft={false}
                      pullRight={false}
                      stacked={true}
                    >
                      <ul
                        className="c2 nav nav-pills nav-stacked"
                        role={null}
                      >
                        <NavItem
                          active={true}
                          activeKey="selection"
                          disabled={false}
                          eventKey="selection"
                          key=".$selection"
                          onSelect={[Function]}
                        >
                          <li
                            className="active"
                            role="presentation"
                          >
                            <SafeAnchor
                              componentClass="a"
                              disabled={false}
                              onClick={[Function]}
                            >
                              <a
                                href="#"
                                onClick={[Function]}
                                onKeyDown={[Function]}
                                role="button"
                              >
                                Content Selection
                              </a>
                            </SafeAnchor>
                          </li>
                        </NavItem>
                        <NavItem
                          active={false}
                          activeKey="selection"
                          disabled={true}
                          eventKey="parameters"
                          key=".$parameters"
                          onSelect={[Function]}
                        >
                          <li
                            className="disabled"
                            role="presentation"
                          >
                            <SafeAnchor
                              componentClass="a"
                              disabled={true}
                              onClick={[Function]}
                            >
                              <a
                                href="#"
                                onClick={[Function]}
                                onKeyDown={[Function]}
                                role="button"
                                style={
                                  Object {
                                    "pointerEvents": "none",
                                  }
                                }
                                tabIndex={-1}
                              >
                                Parameters
                              </a>
                            </SafeAnchor>
                          </li>
                        </NavItem>
                        <NavItem
                          active={false}
                          activeKey="selection"
                          disabled={true}
                          eventKey="preview"
                          key=".$preview"
                          onSelect={[Function]}
                        >
                          <li
                            className="disabled"
                            role="presentation"
                          >
                            <SafeAnchor
                              componentClass="a"
                              disabled={true}
                              onClick={[Function]}
                            >
                              <a
                                href="#"
                                onClick={[Function]}
                                onKeyDown={[Function]}
                                role="button"
                                style={
                                  Object {
                                    "pointerEvents": "none",
                                  }
                                }
                                tabIndex={-1}
                              >
                                Preview
                              </a>
                            </SafeAnchor>
                          </li>
                        </NavItem>
                      </ul>
                    </Nav>
                  </Nav>
                  <br />
                  <Row>
                    <Row
                      bsClass="row"
                      className="c0"
                      componentClass="div"
                    >
                      <div
                        className="c0 row"
                      >
                        <Col
                          bsClass="col"
                          componentClass="div"
                          xs={6}
                        >
                          <div
                            className="col-xs-6"
                          >
                            <Button
                              bsSize="small"
                              bsStyle="info"
                              disabled={true}
                              onClick={[Function]}
                            >
                              <Button
                                active={false}
                                block={false}
                                bsClass="btn"
                                bsSize="small"
                                bsStyle="info"
                                className="c3"
                                disabled={true}
                                onClick={[Function]}
                              >
                                <button
                                  className="c3 btn btn-sm btn-info"
                                  disabled={true}
                                  onClick={[Function]}
                                  type="button"
                                >
                                  Previous
                                </button>
                              </Button>
                            </Button>
                          </div>
                        </Col>
                        <Col
                          bsClass="col"
                          className="text-right"
                          componentClass="div"
                          xs={6}
                        >
                          <div
                            className="text-right col-xs-6"
                          >
                            <Button
                              bsSize="small"
                              bsStyle="info"
                              disabled={true}
                              onClick={[Function]}
                            >
                              <Button
                                active={false}
                                block={false}
                                bsClass="btn"
                                bsSize="small"
                                bsStyle="info"
                                className="c3"
                                disabled={true}
                                onClick={[Function]}
                              >
                                <button
                                  className="c3 btn btn-sm btn-info"
                                  disabled={true}
                                  onClick={[Function]}
                                  type="button"
                                >
                                  Next
                                </button>
                              </Button>
                            </Button>
                          </div>
                        </Col>
                      </div>
                    </Row>
                  </Row>
                </div>
              </Col>
            </Wizard__SubnavigationCol>
            <Col
              bsClass="col"
              componentClass="div"
              md={7}
            >
              <div
                className="col-md-7"
              >
                <ContentPackSelection
                  contentPack={
                    Object {
                      "description": "",
                      "entities": Array [],
                      "id": "9950ba5a-0887-40a9-2b8f-8b50292cc7fb",
                      "name": "",
                      "parameters": Array [],
                      "rev": 1,
                      "summary": "",
                      "url": "",
                      "v": 1,
                      "vendor": "",
                    }
                  }
                  edit={false}
                  entities={Object {}}
                  onStateChange={[Function]}
                  selectedEntities={Object {}}
                >
                  <div>
                    <Row>
                      <Row
                        bsClass="row"
                        className="c0"
                        componentClass="div"
                      >
                        <div
                          className="c0 row"
                        >
                          <Col
                            bsClass="col"
                            componentClass="div"
                            lg={8}
                            smOffset={1}
                          >
                            <div
                              className="col-lg-8 col-sm-offset-1"
                            >
                              <h2>
                                General Information
                              </h2>
                              <br />
                              <form
                                className="content-selection-form"
                                id="content-selection-form"
                                onSubmit={[Function]}
                              >
                                <fieldset>
                                  <Input
                                    addonAfter={null}
                                    bsStyle={null}
                                    buttonAfter={null}
                                    help="Required. Give a descriptive name for this content pack."
                                    id="name"
                                    label="Name"
                                    maxLength={250}
                                    name="name"
                                    onChange={[Function]}
                                    placeholder=""
                                    required={true}
                                    type="text"
                                    value=""
                                  >
                                    <Component
                                      controlId="name"
                                      validationState={null}
                                    >
                                      <FormGroup__StyledFormGroup
                                        controlId="name"
                                        validationState={null}
                                      >
                                        <FormGroup
                                          bsClass="form-group"
                                          className=""
                                          controlId="name"
                                          validationState={null}
                                        >
                                          <div
                                            className="form-group"
                                          >
                                            <ControlLabel>
                                              <ControlLabel
                                                bsClass="control-label"
                                                className="c4"
                                                srOnly={false}
                                              >
                                                <label
                                                  className="c4 control-label"
                                                  htmlFor="name"
                                                >
                                                  Name
                                                </label>
                                              </ControlLabel>
                                            </ControlLabel>
                                            <InputWrapper>
                                              <span>
                                                <FormControl
                                                  componentClass="input"
                                                  inputRef={[Function]}
                                                  label="Name"
                                                  maxLength={250}
                                                  name="name"
                                                  onChange={[Function]}
                                                  placeholder=""
                                                  required={true}
                                                  type="text"
                                                  value=""
                                                >
                                                  <FormControl
                                                    bsClass="form-control"
                                                    className="c5"
                                                    componentClass="input"
                                                    inputRef={[Function]}
                                                    label="Name"
                                                    maxLength={250}
                                                    name="name"
                                                    onChange={[Function]}
                                                    placeholder=""
                                                    required={true}
                                                    type="text"
                                                    value=""
                                                  >
                                                    <input
                                                      className="c5 form-control"
                                                      id="name"
                                                      label="Name"
                                                      maxLength={250}
                                                      name="name"
                                                      onChange={[Function]}
                                                      placeholder=""
                                                      required={true}
                                                      type="text"
                                                      value=""
                                                    />
                                                  </FormControl>
                                                </FormControl>
                                                <HelpBlock>
                                                  <HelpBlock
                                                    bsClass="help-block"
                                                    className="c6"
                                                  >
                                                    <span
                                                      className="c6 help-block"
                                                    >
                                                      Required. Give a descriptive name for this content pack.
                                                    </span>
                                                  </HelpBlock>
                                                </HelpBlock>
                                              </span>
                                            </InputWrapper>
                                          </div>
                                        </FormGroup>
                                      </FormGroup__StyledFormGroup>
                                    </Component>
                                  </Input>
                                  <Input
                                    addonAfter={null}
                                    bsStyle={null}
                                    buttonAfter={null}
                                    help="Required. Give a short summary of the content pack."
                                    id="summary"
                                    label="Summary"
                                    maxLength={250}
                                    name="summary"
                                    onChange={[Function]}
                                    placeholder=""
                                    required={true}
                                    type="text"
                                    value=""
                                  >
                                    <Component
                                      controlId="summary"
                                      validationState={null}
                                    >
                                      <FormGroup__StyledFormGroup
                                        controlId="summary"
                                        validationState={null}
                                      >
                                        <FormGroup
                                          bsClass="form-group"
                                          className=""
                                          controlId="summary"
                                          validationState={null}
                                        >
                                          <div
                                            className="form-group"
                                          >
                                            <ControlLabel>
                                              <ControlLabel
                                                bsClass="control-label"
                                                className="c4"
                                                srOnly={false}
                                              >
                                                <label
                                                  className="c4 control-label"
                                                  htmlFor="summary"
                                                >
                                                  Summary
                                                </label>
                                              </ControlLabel>
                                            </ControlLabel>
                                            <InputWrapper>
                                              <span>
                                                <FormControl
                                                  componentClass="input"
                                                  inputRef={[Function]}
                                                  label="Summary"
                                                  maxLength={250}
                                                  name="summary"
                                                  onChange={[Function]}
                                                  placeholder=""
                                                  required={true}
                                                  type="text"
                                                  value=""
                                                >
                                                  <FormControl
                                                    bsClass="form-control"
                                                    className="c5"
                                                    componentClass="input"
                                                    inputRef={[Function]}
                                                    label="Summary"
                                                    maxLength={250}
                                                    name="summary"
                                                    onChange={[Function]}
                                                    placeholder=""
                                                    required={true}
                                                    type="text"
                                                    value=""
                                                  >
                                                    <input
                                                      className="c5 form-control"
                                                      id="summary"
                                                      label="Summary"
                                                      maxLength={250}
                                                      name="summary"
                                                      onChange={[Function]}
                                                      placeholder=""
                                                      required={true}
                                                      type="text"
                                                      value=""
                                                    />
                                                  </FormControl>
                                                </FormControl>
                                                <HelpBlock>
                                                  <HelpBlock
                                                    bsClass="help-block"
                                                    className="c6"
                                                  >
                                                    <span
                                                      className="c6 help-block"
                                                    >
                                                      Required. Give a short summary of the content pack.
                                                    </span>
                                                  </HelpBlock>
                                                </HelpBlock>
                                              </span>
                                            </InputWrapper>
                                          </div>
                                        </FormGroup>
                                      </FormGroup__StyledFormGroup>
                                    </Component>
                                  </Input>
                                  <Input
                                    addonAfter={null}
                                    bsStyle={null}
                                    buttonAfter={null}
                                    help="Give a long description of the content pack in markdown."
                                    id="description"
                                    label="Description"
                                    name="description"
                                    onChange={[Function]}
                                    placeholder=""
                                    rows={6}
                                    type="textarea"
                                    value=""
                                  >
                                    <Component
                                      controlId="description"
                                      validationState={null}
                                    >
                                      <FormGroup__StyledFormGroup
                                        controlId="description"
                                        validationState={null}
                                      >
                                        <FormGroup
                                          bsClass="form-group"
                                          className=""
                                          controlId="description"
                                          validationState={null}
                                        >
                                          <div
                                            className="form-group"
                                          >
                                            <ControlLabel>
                                              <ControlLabel
                                                bsClass="control-label"
                                                className="c4"
                                                srOnly={false}
                                              >
                                                <label
                                                  className="c4 control-label"
                                                  htmlFor="description"
                                                >
                                                  Description
                                                </label>
                                              </ControlLabel>
                                            </ControlLabel>
                                            <InputWrapper>
                                              <span>
                                                <FormControl
                                                  componentClass="textarea"
                                                  inputRef={[Function]}
                                                  label="Description"
                                                  name="description"
                                                  onChange={[Function]}
                                                  placeholder=""
                                                  rows={6}
                                                  type="textarea"
                                                  value=""
                                                >
                                                  <FormControl
                                                    bsClass="form-control"
                                                    className="c5"
                                                    componentClass="textarea"
                                                    inputRef={[Function]}
                                                    label="Description"
                                                    name="description"
                                                    onChange={[Function]}
                                                    placeholder=""
                                                    rows={6}
                                                    type="textarea"
                                                    value=""
                                                  >
                                                    <textarea
                                                      className="c5 form-control"
                                                      id="description"
                                                      label="Description"
                                                      name="description"
                                                      onChange={[Function]}
                                                      placeholder=""
                                                      rows={6}
                                                      type="textarea"
                                                      value=""
                                                    />
                                                  </FormControl>
                                                </FormControl>
                                                <HelpBlock>
                                                  <HelpBlock
                                                    bsClass="help-block"
                                                    className="c6"
                                                  >
                                                    <span
                                                      className="c6 help-block"
                                                    >
                                                      Give a long description of the content pack in markdown.
                                                    </span>
                                                  </HelpBlock>
                                                </HelpBlock>
                                              </span>
                                            </InputWrapper>
                                          </div>
                                        </FormGroup>
                                      </FormGroup__StyledFormGroup>
                                    </Component>
                                  </Input>
                                  <Input
                                    addonAfter={null}
                                    bsStyle={null}
                                    buttonAfter={null}
                                    help="Required. Who did this content pack and how can they be reached, e.g. Name and email."
                                    id="vendor"
                                    label="Vendor"
                                    maxLength={250}
                                    name="vendor"
                                    onChange={[Function]}
                                    placeholder=""
                                    required={true}
                                    type="text"
                                    value=""
                                  >
                                    <Component
                                      controlId="vendor"
                                      validationState={null}
                                    >
                                      <FormGroup__StyledFormGroup
                                        controlId="vendor"
                                        validationState={null}
                                      >
                                        <FormGroup
                                          bsClass="form-group"
                                          className=""
                                          controlId="vendor"
                                          validationState={null}
                                        >
                                          <div
                                            className="form-group"
                                          >
                                            <ControlLabel>
                                              <ControlLabel
                                                bsClass="control-label"
                                                className="c4"
                                                srOnly={false}
                                              >
                                                <label
                                                  className="c4 control-label"
                                                  htmlFor="vendor"
                                                >
                                                  Vendor
                                                </label>
                                              </ControlLabel>
                                            </ControlLabel>
                                            <InputWrapper>
                                              <span>
                                                <FormControl
                                                  componentClass="input"
                                                  inputRef={[Function]}
                                                  label="Vendor"
                                                  maxLength={250}
                                                  name="vendor"
                                                  onChange={[Function]}
                                                  placeholder=""
                                                  required={true}
                                                  type="text"
                                                  value=""
                                                >
                                                  <FormControl
                                                    bsClass="form-control"
                                                    className="c5"
                                                    componentClass="input"
                                                    inputRef={[Function]}
                                                    label="Vendor"
                                                    maxLength={250}
                                                    name="vendor"
                                                    onChange={[Function]}
                                                    placeholder=""
                                                    required={true}
                                                    type="text"
                                                    value=""
                                                  >
                                                    <input
                                                      className="c5 form-control"
                                                      id="vendor"
                                                      label="Vendor"
                                                      maxLength={250}
                                                      name="vendor"
                                                      onChange={[Function]}
                                                      placeholder=""
                                                      required={true}
                                                      type="text"
                                                      value=""
                                                    />
                                                  </FormControl>
                                                </FormControl>
                                                <HelpBlock>
                                                  <HelpBlock
                                                    bsClass="help-block"
                                                    className="c6"
                                                  >
                                                    <span
                                                      className="c6 help-block"
                                                    >
                                                      Required. Who did this content pack and how can they be reached, e.g. Name and email.
                                                    </span>
                                                  </HelpBlock>
                                                </HelpBlock>
                                              </span>
                                            </InputWrapper>
                                          </div>
                                        </FormGroup>
                                      </FormGroup__StyledFormGroup>
                                    </Component>
                                  </Input>
                                  <Input
                                    addonAfter={null}
                                    bsStyle={null}
                                    buttonAfter={null}
                                    help="Where can I find the content pack. e.g. github url"
                                    id="url"
                                    label="URL"
                                    maxLength={250}
                                    name="url"
                                    onChange={[Function]}
                                    placeholder=""
                                    type="text"
                                    value=""
                                  >
                                    <Component
                                      controlId="url"
                                      validationState={null}
                                    >
                                      <FormGroup__StyledFormGroup
                                        controlId="url"
                                        validationState={null}
                                      >
                                        <FormGroup
                                          bsClass="form-group"
                                          className=""
                                          controlId="url"
                                          validationState={null}
                                        >
                                          <div
                                            className="form-group"
                                          >
                                            <ControlLabel>
                                              <ControlLabel
                                                bsClass="control-label"
                                                className="c4"
                                                srOnly={false}
                                              >
                                                <label
                                                  className="c4 control-label"
                                                  htmlFor="url"
                                                >
                                                  URL
                                                </label>
                                              </ControlLabel>
                                            </ControlLabel>
                                            <InputWrapper>
                                              <span>
                                                <FormControl
                                                  componentClass="input"
                                                  inputRef={[Function]}
                                                  label="URL"
                                                  maxLength={250}
                                                  name="url"
                                                  onChange={[Function]}
                                                  placeholder=""
                                                  type="text"
                                                  value=""
                                                >
                                                  <FormControl
                                                    bsClass="form-control"
                                                    className="c5"
                                                    componentClass="input"
                                                    inputRef={[Function]}
                                                    label="URL"
                                                    maxLength={250}
                                                    name="url"
                                                    onChange={[Function]}
                                                    placeholder=""
                                                    type="text"
                                                    value=""
                                                  >
                                                    <input
                                                      className="c5 form-control"
                                                      id="url"
                                                      label="URL"
                                                      maxLength={250}
                                                      name="url"
                                                      onChange={[Function]}
                                                      placeholder=""
                                                      type="text"
                                                      value=""
                                                    />
                                                  </FormControl>
                                                </FormControl>
                                                <HelpBlock>
                                                  <HelpBlock
                                                    bsClass="help-block"
                                                    className="c6"
                                                  >
                                                    <span
                                                      className="c6 help-block"
                                                    >
                                                      Where can I find the content pack. e.g. github url
                                                    </span>
                                                  </HelpBlock>
                                                </HelpBlock>
                                              </span>
                                            </InputWrapper>
                                          </div>
                                        </FormGroup>
                                      </FormGroup__StyledFormGroup>
                                    </Component>
                                  </Input>
                                </fieldset>
                              </form>
                            </div>
                          </Col>
                        </div>
                      </Row>
                    </Row>
                    <Row>
                      <Row
                        bsClass="row"
                        className="c0"
                        componentClass="div"
                      >
                        <div
                          className="c0 row"
                        >
                          <Col
                            bsClass="col"
                            componentClass="div"
                            lg={8}
                            smOffset={1}
                          >
                            <div
                              className="col-lg-8 col-sm-offset-1"
                            >
                              <h2>
                                Content Pack selection
                              </h2>
                            </div>
                          </Col>
                        </div>
                      </Row>
                    </Row>
                    <Row>
                      <Row
                        bsClass="row"
                        className="c0"
                        componentClass="div"
                      >
                        <div
                          className="c0 row"
                        >
                          <Col
                            bsClass="col"
                            componentClass="div"
                            lg={8}
                            smOffset={1}
                          >
                            <div
                              className="col-lg-8 col-sm-offset-1"
                            >
                              <SearchForm
                                buttonLeftMargin={5}
                                focusAfterMount={false}
                                id="filter-input"
                                label={null}
                                loadingLabel="Loading..."
                                onQueryChange={[Function]}
                                onReset={[Function]}
                                onSearch={[Function]}
                                placeholder="Enter search query..."
                                query=""
                                queryHelpComponent={null}
                                queryWidth="auto"
                                resetButtonLabel="Reset"
                                searchBsStyle="default"
                                searchButtonLabel="Filter"
                                topMargin={15}
                                useLoadingState={false}
                                wrapperClass="search"
                              >
                                <div
                                  className="search"
                                  style={
                                    Object {
                                      "marginTop": 15,
                                    }
                                  }
                                >
                                  <form
                                    className="form-inline"
                                    onSubmit={[Function]}
                                  >
                                    <div
                                      className="form-group has-feedback"
                                    >
                                      <input
                                        autoComplete="off"
                                        autoFocus={false}
                                        className="query form-control"
                                        id="common-search-form-query-input"
                                        onChange={[Function]}
                                        placeholder="Enter search query..."
                                        spellCheck="false"
                                        style={
                                          Object {
                                            "width": "auto",
                                          }
                                        }
                                        type="text"
                                        value=""
                                      />
                                    </div>
                                    <div
                                      className="form-group"
                                      style={
                                        Object {
                                          "marginLeft": 5,
                                        }
                                      }
                                    >
                                      <Button
                                        bsStyle="default"
                                        className="submit-button"
                                        disabled={false}
                                        type="submit"
                                      >
                                        <Button
                                          active={false}
                                          block={false}
                                          bsClass="btn"
                                          bsStyle="default"
                                          className="c3 submit-button"
                                          disabled={false}
                                          type="submit"
                                        >
                                          <button
                                            className="c3 submit-button btn btn-default"
                                            disabled={false}
                                            type="submit"
                                          >
                                            Filter
                                          </button>
                                        </Button>
                                      </Button>
                                    </div>
                                    <div
                                      className="form-group"
                                      style={
                                        Object {
                                          "marginLeft": 5,
                                        }
                                      }
                                    >
                                      <Button
                                        className="reset-button"
                                        onClick={[Function]}
                                        type="reset"
                                      >
                                        <Button
                                          active={false}
                                          block={false}
                                          bsClass="btn"
                                          bsStyle="default"
                                          className="c3 reset-button"
                                          disabled={false}
                                          onClick={[Function]}
                                          type="reset"
                                        >
                                          <button
                                            className="c3 reset-button btn btn-default"
                                            disabled={false}
                                            onClick={[Function]}
                                            type="reset"
                                          >
                                            Reset
                                          </button>
                                        </Button>
                                      </Button>
                                    </div>
                                  </form>
                                </div>
                              </SearchForm>
                            </div>
                          </Col>
                        </div>
                      </Row>
                    </Row>
                    <Row>
                      <Row
                        bsClass="row"
                        className="c0"
                        componentClass="div"
                      >
                        <div
                          className="c0 row"
                        >
                          <Col
                            bsClass="col"
                            componentClass="div"
                            lg={8}
                            sm={8}
                            smOffset={1}
                          >
                            <div
                              className="col-lg-8 col-sm-8 col-sm-offset-1"
                            >
                              <ExpandableList>
                                <ul
                                  className="list"
                                />
                              </ExpandableList>
                            </div>
                          </Col>
                        </div>
                      </Row>
                    </Row>
                  </div>
                </ContentPackSelection>
              </div>
            </Col>
            <Col
              bsClass="col"
              componentClass="div"
              md={3}
            >
              <div
                className="col-md-3"
              >
                <AutoAffix
                  viewportOffsetTop={65}
                >
                  <div>
                    <div>
                      <ContentPackDetails
                        constraints={Array []}
                        contentPack={
                          Object {
                            "description": "",
                            "entities": Array [],
                            "id": "9950ba5a-0887-40a9-2b8f-8b50292cc7fb",
                            "name": "",
                            "parameters": Array [],
                            "rev": 1,
                            "summary": "",
                            "url": "",
                            "v": 1,
                            "vendor": "",
                          }
                        }
                        offset={1}
                        showConstraints={false}
                        verbose={false}
                      >
                        <Row>
                          <Row
                            bsClass="row"
                            className="c0"
                            componentClass="div"
                          >
                            <div
                              className="c0 row"
                            >
                              <Col
                                bsClass="col"
                                componentClass="div"
                                sm={9}
                                smOffset={1}
                              >
                                <div
                                  className="col-sm-9 col-sm-offset-1"
                                >
                                  <div
                                    id="content-pack-details"
                                  >
                                    <h2>
                                      Details
                                    </h2>
                                    <br />
                                    <div>
                                      <dl
                                        className="deflist"
                                      >
                                        <dt>
                                          Version:
                                        </dt>
                                         
                                        <dd>
                                          1
                                        </dd>
                                        <dt>
                                          Name:
                                        </dt>
                                         
                                        <dd>
                                           
                                        </dd>
                                        <dt>
                                          Summary:
                                        </dt>
                                         
                                        <dd>
                                           
                                        </dd>
                                        <dt>
                                          Vendor:
                                        </dt>
                                         
                                        <dd>
                                           
                                        </dd>
                                        <dt>
                                          URL:
                                        </dt>
                                         
                                        <dd>
                                           
                                        </dd>
                                        <span>
                                          <dt>
                                            ID:
                                          </dt>
                                           
                                          <dd>
                                            <code>
                                              9950ba5a-0887-40a9-2b8f-8b50292cc7fb
                                            </code>
                                          </dd>
                                        </span>
                                        <span>
                                          <dt>
                                            Parameters:
                                          </dt>
                                           
                                          <dd>
                                            0
                                          </dd>
                                        </span>
                                        <span>
                                          <dt>
                                            Entities:
                                          </dt>
                                           
                                          <dd>
                                            0
                                          </dd>
                                        </span>
                                      </dl>
                                    </div>
                                    <br />
                                    <br />
                                    <br />
                                  </div>
                                </div>
                              </Col>
                            </div>
                          </Row>
                        </Row>
                      </ContentPackDetails>
                    </div>
                  </div>
                </AutoAffix>
              </div>
            </Col>
          </div>
        </Row>
      </Row>
    </Wizard>
    <ScrollButton
      delay={5}
      position="middle"
      scrollSteps={50}
    >
      <span />
    </ScrollButton>
  </div>
</ContentPackEdit>
`;

exports[`<ContentPackEdit /> should render spinner with no content pack 1`] = `
<ContentPackEdit
  appliedParameter={Object {}}
  edit={false}
  entityIndex={Object {}}
  fetchedEntities={Array []}
  onGetEntities={[Function]}
  onSave={[Function]}
  onStateChange={[Function]}
  selectedEntities={Object {}}
>
  <Spinner
    delay={200}
    name="spinner"
    text="Loading..."
  >
    <Delayed
      delay={200}
    />
  </Spinner>
</ContentPackEdit>
`;

exports[`<ContentPackEdit /> should render with content pack for edit 1`] = `
.c3.btn-danger {
  background-color: #ad0707;
  border-color: #b23939;
  color: rgb(252,249,249);
  -webkit-transition: background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;
  transition: background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;
}

.c3.btn-danger:hover {
  background-color: #a00e0e;
  border-color: #a53636;
  color: #e9e6e6;
}

.c3.btn-danger.active {
  background-color: #b75151;
  border-color: #bc6363;
  color: rgb(252,249,249);
}

.c3.btn-danger.active:hover {
  background-color: #a94c4c;
  border-color: #ad5c5c;
  color: #e9e6e6;
}

.c3.btn-danger[disabled],
.c3.btn-danger.disabled {
  background-color: #c07272;
  border-color: #bc6363;
  color: rgb(252,250,250);
}

.c3.btn-danger[disabled]:hover,
.c3.btn-danger.disabled:hover {
  background-color: #c07272;
  border-color: #bc6363;
  color: rgb(252,250,250);
}

.c3.btn-default {
  background-color: #e6e6e6;
  border-color: #e0e0e0;
  color: rgb(73,73,73);
  -webkit-transition: background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;
  transition: background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;
}

.c3.btn-default:hover {
  background-color: #d4d4d4;
  border-color: #cfcfcf;
  color: #444444;
}

.c3.btn-default.active {
  background-color: #dadada;
  border-color: #d4d4d4;
  color: rgb(49,49,49);
}

.c3.btn-default.active:hover {
  background-color: #cacaca;
  border-color: #c4c4c4;
  color: #2f2f2f;
}

.c3.btn-default[disabled],
.c3.btn-default.disabled {
  background-color: #cecece;
  border-color: #d4d4d4;
  color: rgb(80,80,80);
}

.c3.btn-default[disabled]:hover,
.c3.btn-default.disabled:hover {
  background-color: #cecece;
  border-color: #d4d4d4;
  color: rgb(80,80,80);
}

.c3.btn-info {
  background-color: #0063be;
  border-color: #3970c2;
  color: rgb(249,250,252);
  -webkit-transition: background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;
  transition: background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;
}

.c3.btn-info:hover {
  background-color: #0c5cb0;
  border-color: #3668b3;
  color: #e6e7e9;
}

.c3.btn-info.active {
  background-color: #517cc5;
  border-color: #6386c9;
  color: rgb(249,250,252);
}

.c3.btn-info.active:hover {
  background-color: #4b73b6;
  border-color: #5c7dba;
  color: #e6e7e9;
}

.c3.btn-info[disabled],
.c3.btn-info.disabled {
  background-color: #7290cd;
  border-color: #6386c9;
  color: rgb(250,251,253);
}

.c3.btn-info[disabled]:hover,
.c3.btn-info.disabled:hover {
  background-color: #7290cd;
  border-color: #6386c9;
  color: rgb(250,251,253);
}

.c3.btn-link {
  background-color: rgba(255,255,255,0);
  border-color: rgba(255,255,255,0);
  color: #702785;
  -webkit-transition: background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;
  transition: background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;
}

.c3.btn-link:hover {
  background-color: #ebebeb26;
  border-color: #ebebeb26;
  color: #68267b;
}

.c3.btn-link.active {
  background-color: rgba(255,255,255,0);
  border-color: rgba(255,255,255,0);
  color: #410057;
}

.c3.btn-link.active:hover {
  background-color: rgba(255,255,255,0);
  border-color: #ebebeb26;
  color: #3d0c51;
}

.c3.btn-link[disabled],
.c3.btn-link.disabled {
  background-color: rgba(255,255,255,0);
  border-color: rgba(255,255,255,0);
  color: #702785;
}

.c3.btn-link[disabled]:hover,
.c3.btn-link.disabled:hover {
  background-color: rgba(255,255,255,0);
  border-color: rgba(255,255,255,0);
  color: #702785;
}

.c3.btn-primary {
  background-color: #702785;
  border-color: #7b458e;
  color: rgb(234,229,236);
  -webkit-transition: background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;
  transition: background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;
}

.c3.btn-primary:hover {
  background-color: #68267b;
  border-color: #724083;
  color: #d8d3da;
}

.c3.btn-primary.active {
  background-color: #855996;
  border-color: #8f699d;
  color: rgb(250,249,251);
}

.c3.btn-primary.active:hover {
  background-color: #7c538b;
  border-color: #846292;
  color: #e7e6e8;
}

.c3.btn-primary[disabled],
.c3.btn-primary.disabled {
  background-color: #9877a5;
  border-color: #8f699d;
  color: rgb(251,250,251);
}

.c3.btn-primary[disabled]:hover,
.c3.btn-primary.disabled:hover {
  background-color: #9877a5;
  border-color: #8f699d;
  color: rgb(251,250,251);
}

.c3.btn-success {
  background-color: #00ae42;
  border-color: #39b356;
  color: rgb(249,252,249);
  -webkit-transition: background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;
  transition: background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;
}

.c3.btn-success:hover {
  background-color: #0ca13e;
  border-color: #36a550;
  color: #e6e9e6;
}

.c3.btn-success.active {
  background-color: #51b866;
  border-color: #63bc74;
  color: rgb(249,252,250);
}

.c3.btn-success.active:hover {
  background-color: #4baa5f;
  border-color: #5cae6c;
  color: #e6e9e7;
}

.c3.btn-success[disabled],
.c3.btn-success.disabled {
  background-color: #72c180;
  border-color: #63bc74;
  color: rgb(250,252,250);
}

.c3.btn-success[disabled]:hover,
.c3.btn-success.disabled:hover {
  background-color: #72c180;
  border-color: #63bc74;
  color: rgb(250,252,250);
}

.c3.btn-warning {
  background-color: #ffd200;
  border-color: #f9cd07;
  color: rgb(57,47,0);
  -webkit-transition: background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;
  transition: background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;
}

.c3.btn-warning:hover {
  background-color: #ebc20c;
  border-color: #e6bd0e;
  color: #362d0c;
}

.c3.btn-warning.active {
  background-color: #f2c70a;
  border-color: #ebc20c;
  color: rgb(54,45,2);
}

.c3.btn-warning.active:hover {
  background-color: #e0b80f;
  border-color: #d9b310;
  color: #332b0c;
}

.c3.btn-warning[disabled],
.c3.btn-warning.disabled {
  background-color: #e4bc0e;
  border-color: #ebc20c;
  color: rgb(88,73,5);
}

.c3.btn-warning[disabled]:hover,
.c3.btn-warning.disabled:hover {
  background-color: #e4bc0e;
  border-color: #ebc20c;
  color: rgb(88,73,5);
}

.c4 {
  color: #1f1f1f;
  font-weight: bold;
  margin-bottom: 5px;
  display: inline-block;
}

.c5.form-control {
  color: #1f1f1f;
  background-color: #fff;
  border-color: #a6a6a6;
}

.c5.form-control::-webkit-input-placeholder {
  color: #9b9b9b;
}

.c5.form-control::-moz-placeholder {
  color: #9b9b9b;
}

.c5.form-control:-ms-input-placeholder {
  color: #9b9b9b;
}

.c5.form-control::placeholder {
  color: #9b9b9b;
}

.c5.form-control:focus {
  border-color: #7894ce;
  box-shadow: inset 0 1px 1px rgba(0,0,0,0.075),0 0 8px rgba(120,148,206,0.4);
}

.c5.form-control[disabled],
.c5.form-control[readonly],
fieldset[disabled] .c5.form-control {
  background-color: #dddddd;
  color: #9b9b9b;
}

.c5.form-control ~ .form-control-feedback.glyphicon {
  display: none;
}

.c6 {
  display: block;
  margin-top: 5px;
  margin-bottom: 10px;
  color: #838383;
}

.c2.nav > li > a {
  -webkit-transition: background-color 150ms ease-in-out;
  transition: background-color 150ms ease-in-out;
}

.c2.nav > li > a:hover,
.c2.nav > li > a:focus {
  background-color: #f3f3f3;
}

.c2.nav > li.disabled > a {
  color: #a6a6a6;
}

.c2.nav > li.disabled > a:hover,
.c2.nav > li.disabled > a:focus {
  color: #a6a6a6;
}

.c2.nav .open > a,
.c2.nav .open > a:hover,
.c2.nav .open > a:focus {
  background-color: #f3f3f3;
  border-color: #702785;
}

.c2.nav.nav-pills > li.active > a,
.c2.nav.nav-pills > li.active > a:hover,
.c2.nav.nav-pills > li.active > a:focus {
  color: rgb(234,229,236);
  background-color: #702785;
}

.c2.nav .nav-tabs {
  border-bottom-color: rgb(198,207,231);
}

.c2.nav .nav-tabs > li > a {
  -webkit-transition: background-color 150ms ease-in-out;
  transition: background-color 150ms ease-in-out;
  color: #1f1f1f;
  border-color: #d0d0d0 #d0d0d0 rgb(198,207,231);
}

.c2.nav .nav-tabs > li > a:hover {
  background-color: #f3f3f3;
  color: #1f1f1f;
}

.c2.nav .nav-tabs > li.active > a,
.c2.nav .nav-tabs > li.active > a:hover,
.c2.nav .nav-tabs > li.active > a:focus {
  color: #1f1f1f;
  background-color: #ffffff;
  border-color: rgb(198,207,231);
  border-bottom-color: transparent;
}

.c2.nav .nav-tabs > li.disabled > a,
.c2.nav .nav-tabs > li.disabled > a:hover,
.c2.nav .nav-tabs > li.disabled > a:focus {
  color: #9b9b9b;
  background-color: #ffffff;
  border-color: #ffffff #ffffff rgb(198,207,231);
  cursor: not-allowed;
}

.c2.nav.nav-justified > .active > a,
.c2.nav.nav-justified > .active > a:hover,
.c2.nav.nav-justified > .active > a:focus {
  border-color: rgb(198,207,231);
}

.c0.content {
  background-color: #fff;
  border: 1px solid #d0d0d0;
  margin-bottom: 9px;
  border-radius: 4px;
}

.c13 {
  background-color: #f3f3f3;
  border-color: #a6a6a6;
  color: #575757;
}

.c7 {
  font-size: 1rem;
  line-height: 20px;
}

.c7 label {
  min-height: 20px;
  margin-bottom: 2px;
  margin-right: 5px;
}

.c7 label * {
  cursor: pointer;
}

.c8 {
  display: inline-block;
  width: 20px;
  margin-right: 5px;
}

.c9.fa-stack {
  cursor: pointer;
  font-size: 1.125rem;
  line-height: 20px;
  width: 1em;
  height: 1em;
  vertical-align: text-top;
}

.c9.fa-stack:hover [class*="fa-"] {
  color: #702785;
  opacity: 1;
}

.c9 [class*="fa-"]:first-child {
  opacity: 0;
}

.c9 [class*="fa-"]:first-child ~ [class*="fa-"]:hover {
  color: #fff;
}

.c10 {
  font-size: 1.125rem;
}

.c11 {
  border: 0;
  padding: 0;
  text-align: left;
  background: transparent;
}

.c12 {
  border-left: 1px #e6e6e6 solid;
  margin-left: 35px;
  margin-top: 10px;
  padding-left: 5px;
}

.c1 {
  border-right: #cdcdcd solid 1px;
}

@media (min-width:768px) {
  .c2.nav.nav-justified > li > a {
    border-bottom-color: rgb(198,207,231);
  }

  .c2.nav.nav-justified > .active > a,
  .c2.nav.nav-justified > .active > a:hover,
  .c2.nav.nav-justified > .active > a:focus {
    border-bottom-color: #ffffff;
  }
}

<ContentPackEdit
  appliedParameter={
    Object {
      "111-beef": Array [
        Object {
          "configKey": "configuration.port",
          "paramName": "PORT",
        },
      ],
    }
  }
  contentPack={
    Object {
      "description": "## No one dares",
      "entities": Array [
        Object {
          "constraints": Array [],
          "data": Object {
            "configuration": Object {
              "listen_address": "1.2.3.4",
              "port": "23",
            },
            "name": "Input",
            "title": "A good input",
          },
          "id": "111-beef",
          "type": "dashboard",
          "v": "1.0",
        },
      ],
      "id": "9950ba5a-0887-40a9-2b8f-8b50292cc7fb",
      "name": "Content Pack the movie",
      "parameters": Array [
        Object {
          "default_value": "23",
          "name": "PORT",
          "title": "Port",
          "type": "integer",
        },
      ],
      "rev": 1,
      "summary": "A old content pack",
      "url": "http://beinstein.com",
      "v": 1,
      "vendor": "Beinstein",
    }
  }
  edit={false}
  entityIndex={
    Object {
      "dashboard": Array [
        Object {
          "id": "111-beef",
          "title": "A good input",
          "type": "dashboard",
        },
      ],
    }
  }
  fetchedEntities={Array []}
  onGetEntities={[Function]}
  onSave={[Function]}
  onStateChange={[Function]}
  selectedEntities={
    Object {
      "dashboard": Array [
        Object {
          "id": "111-beef",
          "type": "dashbaord",
        },
      ],
    }
  }
>
  <div>
    <Wizard
      NavigationComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "STYLES": Array [
            "tabs",
            "pills",
          ],
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "baseHash": -110015796,
            "componentId": "Nav-dzawzr-0",
            "isStatic": false,
            "rules": Array [
              [Function],
            ],
            "staticRulesId": "",
          },
          "displayName": "Nav",
          "foldedComponentIds": Array [],
          "render": [Function],
          "shouldForwardProp": undefined,
          "styledComponentId": "Nav-dzawzr-0",
          "target": [Function],
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      affixed={true}
      containerClassName="content"
      hidePreviousNextButtons={false}
      horizontal={false}
      justified={false}
      onStepChange={[Function]}
      steps={
        Array [
          Object {
            "component": <ContentPackSelection
              contentPack={
                Object {
                  "description": "## No one dares",
                  "entities": Array [
                    Object {
                      "constraints": Array [],
                      "data": Object {
                        "configuration": Object {
                          "listen_address": "1.2.3.4",
                          "port": "23",
                        },
                        "name": "Input",
                        "title": "A good input",
                      },
                      "id": "111-beef",
                      "type": "dashboard",
                      "v": "1.0",
                    },
                  ],
                  "id": "9950ba5a-0887-40a9-2b8f-8b50292cc7fb",
                  "name": "Content Pack the movie",
                  "parameters": Array [
                    Object {
                      "default_value": "23",
                      "name": "PORT",
                      "title": "Port",
                      "type": "integer",
                    },
                  ],
                  "rev": 1,
                  "summary": "A old content pack",
                  "url": "http://beinstein.com",
                  "v": 1,
                  "vendor": "Beinstein",
                }
              }
              edit={false}
              entities={
                Object {
                  "dashboard": Array [
                    Object {
                      "id": "111-beef",
                      "title": "A good input",
                      "type": "dashboard",
                    },
                  ],
                }
              }
              onStateChange={[Function]}
              selectedEntities={
                Object {
                  "dashboard": Array [
                    Object {
                      "id": "111-beef",
                      "type": "dashbaord",
                    },
                  ],
                }
              }
            />,
            "key": "selection",
            "title": "Content Selection",
          },
          Object {
            "component": <ContentPackParameters
              appliedParameter={
                Object {
                  "111-beef": Array [
                    Object {
                      "configKey": "configuration.port",
                      "paramName": "PORT",
                    },
                  ],
                }
              }
              contentPack={
                Object {
                  "description": "## No one dares",
                  "entities": Array [
                    Object {
                      "constraints": Array [],
                      "data": Object {
                        "configuration": Object {
                          "listen_address": "1.2.3.4",
                          "port": "23",
                        },
                        "name": "Input",
                        "title": "A good input",
                      },
                      "id": "111-beef",
                      "type": "dashboard",
                      "v": "1.0",
                    },
                  ],
                  "id": "9950ba5a-0887-40a9-2b8f-8b50292cc7fb",
                  "name": "Content Pack the movie",
                  "parameters": Array [
                    Object {
                      "default_value": "23",
                      "name": "PORT",
                      "title": "Port",
                      "type": "integer",
                    },
                  ],
                  "rev": 1,
                  "summary": "A old content pack",
                  "url": "http://beinstein.com",
                  "v": 1,
                  "vendor": "Beinstein",
                }
              }
              onStateChange={[Function]}
            />,
            "disabled": false,
            "key": "parameters",
            "title": "Parameters",
          },
          Object {
            "component": <ContentPackPreview
              contentPack={
                Object {
                  "description": "## No one dares",
                  "entities": Array [
                    Object {
                      "constraints": Array [],
                      "data": Object {
                        "configuration": Object {
                          "listen_address": "1.2.3.4",
                          "port": "23",
                        },
                        "name": "Input",
                        "title": "A good input",
                      },
                      "id": "111-beef",
                      "type": "dashboard",
                      "v": "1.0",
                    },
                  ],
                  "id": "9950ba5a-0887-40a9-2b8f-8b50292cc7fb",
                  "name": "Content Pack the movie",
                  "parameters": Array [
                    Object {
                      "default_value": "23",
                      "name": "PORT",
                      "title": "Port",
                      "type": "integer",
                    },
                  ],
                  "rev": 1,
                  "summary": "A old content pack",
                  "url": "http://beinstein.com",
                  "v": 1,
                  "vendor": "Beinstein",
                }
              }
              onSave={[Function]}
            />,
            "disabled": true,
            "key": "preview",
            "title": "Preview",
          },
        ]
      }
    >
      <Row
        className="content"
      >
        <Row
          bsClass="row"
          className="c0 content"
          componentClass="div"
        >
          <div
            className="c0 content row"
          >
            <Wizard__SubnavigationCol
              md={2}
            >
              <Col
                bsClass="col"
                className="c1"
                componentClass="div"
                md={2}
              >
                <div
                  className="c1 col-md-2"
                >
                  <Nav
                    activeKey="selection"
                    bsStyle="pills"
                    justified={false}
                    onSelect={[Function]}
                    stacked={true}
                  >
                    <Nav
                      activeKey="selection"
                      bsClass="nav"
                      bsStyle="pills"
                      className="c2"
                      justified={false}
                      onSelect={[Function]}
                      pullLeft={false}
                      pullRight={false}
                      stacked={true}
                    >
                      <ul
                        className="c2 nav nav-pills nav-stacked"
                        role={null}
                      >
                        <NavItem
                          active={true}
                          activeKey="selection"
                          disabled={false}
                          eventKey="selection"
                          key=".$selection"
                          onSelect={[Function]}
                        >
                          <li
                            className="active"
                            role="presentation"
                          >
                            <SafeAnchor
                              componentClass="a"
                              disabled={false}
                              onClick={[Function]}
                            >
                              <a
                                href="#"
                                onClick={[Function]}
                                onKeyDown={[Function]}
                                role="button"
                              >
                                Content Selection
                              </a>
                            </SafeAnchor>
                          </li>
                        </NavItem>
                        <NavItem
                          active={false}
                          activeKey="selection"
                          disabled={false}
                          eventKey="parameters"
                          key=".$parameters"
                          onSelect={[Function]}
                        >
                          <li
                            className=""
                            role="presentation"
                          >
                            <SafeAnchor
                              componentClass="a"
                              disabled={false}
                              onClick={[Function]}
                            >
                              <a
                                href="#"
                                onClick={[Function]}
                                onKeyDown={[Function]}
                                role="button"
                              >
                                Parameters
                              </a>
                            </SafeAnchor>
                          </li>
                        </NavItem>
                        <NavItem
                          active={false}
                          activeKey="selection"
                          disabled={true}
                          eventKey="preview"
                          key=".$preview"
                          onSelect={[Function]}
                        >
                          <li
                            className="disabled"
                            role="presentation"
                          >
                            <SafeAnchor
                              componentClass="a"
                              disabled={true}
                              onClick={[Function]}
                            >
                              <a
                                href="#"
                                onClick={[Function]}
                                onKeyDown={[Function]}
                                role="button"
                                style={
                                  Object {
                                    "pointerEvents": "none",
                                  }
                                }
                                tabIndex={-1}
                              >
                                Preview
                              </a>
                            </SafeAnchor>
                          </li>
                        </NavItem>
                      </ul>
                    </Nav>
                  </Nav>
                  <br />
                  <Row>
                    <Row
                      bsClass="row"
                      className="c0"
                      componentClass="div"
                    >
                      <div
                        className="c0 row"
                      >
                        <Col
                          bsClass="col"
                          componentClass="div"
                          xs={6}
                        >
                          <div
                            className="col-xs-6"
                          >
                            <Button
                              bsSize="small"
                              bsStyle="info"
                              disabled={true}
                              onClick={[Function]}
                            >
                              <Button
                                active={false}
                                block={false}
                                bsClass="btn"
                                bsSize="small"
                                bsStyle="info"
                                className="c3"
                                disabled={true}
                                onClick={[Function]}
                              >
                                <button
                                  className="c3 btn btn-sm btn-info"
                                  disabled={true}
                                  onClick={[Function]}
                                  type="button"
                                >
                                  Previous
                                </button>
                              </Button>
                            </Button>
                          </div>
                        </Col>
                        <Col
                          bsClass="col"
                          className="text-right"
                          componentClass="div"
                          xs={6}
                        >
                          <div
                            className="text-right col-xs-6"
                          >
                            <Button
                              bsSize="small"
                              bsStyle="info"
                              disabled={false}
                              onClick={[Function]}
                            >
                              <Button
                                active={false}
                                block={false}
                                bsClass="btn"
                                bsSize="small"
                                bsStyle="info"
                                className="c3"
                                disabled={false}
                                onClick={[Function]}
                              >
                                <button
                                  className="c3 btn btn-sm btn-info"
                                  disabled={false}
                                  onClick={[Function]}
                                  type="button"
                                >
                                  Next
                                </button>
                              </Button>
                            </Button>
                          </div>
                        </Col>
                      </div>
                    </Row>
                  </Row>
                </div>
              </Col>
            </Wizard__SubnavigationCol>
            <Col
              bsClass="col"
              componentClass="div"
              md={7}
            >
              <div
                className="col-md-7"
              >
                <ContentPackSelection
                  contentPack={
                    Object {
                      "description": "## No one dares",
                      "entities": Array [
                        Object {
                          "constraints": Array [],
                          "data": Object {
                            "configuration": Object {
                              "listen_address": "1.2.3.4",
                              "port": "23",
                            },
                            "name": "Input",
                            "title": "A good input",
                          },
                          "id": "111-beef",
                          "type": "dashboard",
                          "v": "1.0",
                        },
                      ],
                      "id": "9950ba5a-0887-40a9-2b8f-8b50292cc7fb",
                      "name": "Content Pack the movie",
                      "parameters": Array [
                        Object {
                          "default_value": "23",
                          "name": "PORT",
                          "title": "Port",
                          "type": "integer",
                        },
                      ],
                      "rev": 1,
                      "summary": "A old content pack",
                      "url": "http://beinstein.com",
                      "v": 1,
                      "vendor": "Beinstein",
                    }
                  }
                  edit={false}
                  entities={
                    Object {
                      "dashboard": Array [
                        Object {
                          "id": "111-beef",
                          "title": "A good input",
                          "type": "dashboard",
                        },
                      ],
                    }
                  }
                  onStateChange={[Function]}
                  selectedEntities={
                    Object {
                      "dashboard": Array [
                        Object {
                          "id": "111-beef",
                          "type": "dashbaord",
                        },
                      ],
                    }
                  }
                >
                  <div>
                    <Row>
                      <Row
                        bsClass="row"
                        className="c0"
                        componentClass="div"
                      >
                        <div
                          className="c0 row"
                        >
                          <Col
                            bsClass="col"
                            componentClass="div"
                            lg={8}
                            smOffset={1}
                          >
                            <div
                              className="col-lg-8 col-sm-offset-1"
                            >
                              <h2>
                                General Information
                              </h2>
                              <br />
                              <form
                                className="content-selection-form"
                                id="content-selection-form"
                                onSubmit={[Function]}
                              >
                                <fieldset>
                                  <Input
                                    addonAfter={null}
                                    bsStyle={null}
                                    buttonAfter={null}
                                    help="Required. Give a descriptive name for this content pack."
                                    id="name"
                                    label="Name"
                                    maxLength={250}
                                    name="name"
                                    onChange={[Function]}
                                    placeholder=""
                                    required={true}
                                    type="text"
                                    value="Content Pack the movie"
                                  >
                                    <Component
                                      controlId="name"
                                      validationState={null}
                                    >
                                      <FormGroup__StyledFormGroup
                                        controlId="name"
                                        validationState={null}
                                      >
                                        <FormGroup
                                          bsClass="form-group"
                                          className=""
                                          controlId="name"
                                          validationState={null}
                                        >
                                          <div
                                            className="form-group"
                                          >
                                            <ControlLabel>
                                              <ControlLabel
                                                bsClass="control-label"
                                                className="c4"
                                                srOnly={false}
                                              >
                                                <label
                                                  className="c4 control-label"
                                                  htmlFor="name"
                                                >
                                                  Name
                                                </label>
                                              </ControlLabel>
                                            </ControlLabel>
                                            <InputWrapper>
                                              <span>
                                                <FormControl
                                                  componentClass="input"
                                                  inputRef={[Function]}
                                                  label="Name"
                                                  maxLength={250}
                                                  name="name"
                                                  onChange={[Function]}
                                                  placeholder=""
                                                  required={true}
                                                  type="text"
                                                  value="Content Pack the movie"
                                                >
                                                  <FormControl
                                                    bsClass="form-control"
                                                    className="c5"
                                                    componentClass="input"
                                                    inputRef={[Function]}
                                                    label="Name"
                                                    maxLength={250}
                                                    name="name"
                                                    onChange={[Function]}
                                                    placeholder=""
                                                    required={true}
                                                    type="text"
                                                    value="Content Pack the movie"
                                                  >
                                                    <input
                                                      className="c5 form-control"
                                                      id="name"
                                                      label="Name"
                                                      maxLength={250}
                                                      name="name"
                                                      onChange={[Function]}
                                                      placeholder=""
                                                      required={true}
                                                      type="text"
                                                      value="Content Pack the movie"
                                                    />
                                                  </FormControl>
                                                </FormControl>
                                                <HelpBlock>
                                                  <HelpBlock
                                                    bsClass="help-block"
                                                    className="c6"
                                                  >
                                                    <span
                                                      className="c6 help-block"
                                                    >
                                                      Required. Give a descriptive name for this content pack.
                                                    </span>
                                                  </HelpBlock>
                                                </HelpBlock>
                                              </span>
                                            </InputWrapper>
                                          </div>
                                        </FormGroup>
                                      </FormGroup__StyledFormGroup>
                                    </Component>
                                  </Input>
                                  <Input
                                    addonAfter={null}
                                    bsStyle={null}
                                    buttonAfter={null}
                                    help="Required. Give a short summary of the content pack."
                                    id="summary"
                                    label="Summary"
                                    maxLength={250}
                                    name="summary"
                                    onChange={[Function]}
                                    placeholder=""
                                    required={true}
                                    type="text"
                                    value="A old content pack"
                                  >
                                    <Component
                                      controlId="summary"
                                      validationState={null}
                                    >
                                      <FormGroup__StyledFormGroup
                                        controlId="summary"
                                        validationState={null}
                                      >
                                        <FormGroup
                                          bsClass="form-group"
                                          className=""
                                          controlId="summary"
                                          validationState={null}
                                        >
                                          <div
                                            className="form-group"
                                          >
                                            <ControlLabel>
                                              <ControlLabel
                                                bsClass="control-label"
                                                className="c4"
                                                srOnly={false}
                                              >
                                                <label
                                                  className="c4 control-label"
                                                  htmlFor="summary"
                                                >
                                                  Summary
                                                </label>
                                              </ControlLabel>
                                            </ControlLabel>
                                            <InputWrapper>
                                              <span>
                                                <FormControl
                                                  componentClass="input"
                                                  inputRef={[Function]}
                                                  label="Summary"
                                                  maxLength={250}
                                                  name="summary"
                                                  onChange={[Function]}
                                                  placeholder=""
                                                  required={true}
                                                  type="text"
                                                  value="A old content pack"
                                                >
                                                  <FormControl
                                                    bsClass="form-control"
                                                    className="c5"
                                                    componentClass="input"
                                                    inputRef={[Function]}
                                                    label="Summary"
                                                    maxLength={250}
                                                    name="summary"
                                                    onChange={[Function]}
                                                    placeholder=""
                                                    required={true}
                                                    type="text"
                                                    value="A old content pack"
                                                  >
                                                    <input
                                                      className="c5 form-control"
                                                      id="summary"
                                                      label="Summary"
                                                      maxLength={250}
                                                      name="summary"
                                                      onChange={[Function]}
                                                      placeholder=""
                                                      required={true}
                                                      type="text"
                                                      value="A old content pack"
                                                    />
                                                  </FormControl>
                                                </FormControl>
                                                <HelpBlock>
                                                  <HelpBlock
                                                    bsClass="help-block"
                                                    className="c6"
                                                  >
                                                    <span
                                                      className="c6 help-block"
                                                    >
                                                      Required. Give a short summary of the content pack.
                                                    </span>
                                                  </HelpBlock>
                                                </HelpBlock>
                                              </span>
                                            </InputWrapper>
                                          </div>
                                        </FormGroup>
                                      </FormGroup__StyledFormGroup>
                                    </Component>
                                  </Input>
                                  <Input
                                    addonAfter={null}
                                    bsStyle={null}
                                    buttonAfter={null}
                                    help="Give a long description of the content pack in markdown."
                                    id="description"
                                    label="Description"
                                    name="description"
                                    onChange={[Function]}
                                    placeholder=""
                                    rows={6}
                                    type="textarea"
                                    value="## No one dares"
                                  >
                                    <Component
                                      controlId="description"
                                      validationState={null}
                                    >
                                      <FormGroup__StyledFormGroup
                                        controlId="description"
                                        validationState={null}
                                      >
                                        <FormGroup
                                          bsClass="form-group"
                                          className=""
                                          controlId="description"
                                          validationState={null}
                                        >
                                          <div
                                            className="form-group"
                                          >
                                            <ControlLabel>
                                              <ControlLabel
                                                bsClass="control-label"
                                                className="c4"
                                                srOnly={false}
                                              >
                                                <label
                                                  className="c4 control-label"
                                                  htmlFor="description"
                                                >
                                                  Description
                                                </label>
                                              </ControlLabel>
                                            </ControlLabel>
                                            <InputWrapper>
                                              <span>
                                                <FormControl
                                                  componentClass="textarea"
                                                  inputRef={[Function]}
                                                  label="Description"
                                                  name="description"
                                                  onChange={[Function]}
                                                  placeholder=""
                                                  rows={6}
                                                  type="textarea"
                                                  value="## No one dares"
                                                >
                                                  <FormControl
                                                    bsClass="form-control"
                                                    className="c5"
                                                    componentClass="textarea"
                                                    inputRef={[Function]}
                                                    label="Description"
                                                    name="description"
                                                    onChange={[Function]}
                                                    placeholder=""
                                                    rows={6}
                                                    type="textarea"
                                                    value="## No one dares"
                                                  >
                                                    <textarea
                                                      className="c5 form-control"
                                                      id="description"
                                                      label="Description"
                                                      name="description"
                                                      onChange={[Function]}
                                                      placeholder=""
                                                      rows={6}
                                                      type="textarea"
                                                      value="## No one dares"
                                                    />
                                                  </FormControl>
                                                </FormControl>
                                                <HelpBlock>
                                                  <HelpBlock
                                                    bsClass="help-block"
                                                    className="c6"
                                                  >
                                                    <span
                                                      className="c6 help-block"
                                                    >
                                                      Give a long description of the content pack in markdown.
                                                    </span>
                                                  </HelpBlock>
                                                </HelpBlock>
                                              </span>
                                            </InputWrapper>
                                          </div>
                                        </FormGroup>
                                      </FormGroup__StyledFormGroup>
                                    </Component>
                                  </Input>
                                  <Input
                                    addonAfter={null}
                                    bsStyle={null}
                                    buttonAfter={null}
                                    help="Required. Who did this content pack and how can they be reached, e.g. Name and email."
                                    id="vendor"
                                    label="Vendor"
                                    maxLength={250}
                                    name="vendor"
                                    onChange={[Function]}
                                    placeholder=""
                                    required={true}
                                    type="text"
                                    value="Beinstein"
                                  >
                                    <Component
                                      controlId="vendor"
                                      validationState={null}
                                    >
                                      <FormGroup__StyledFormGroup
                                        controlId="vendor"
                                        validationState={null}
                                      >
                                        <FormGroup
                                          bsClass="form-group"
                                          className=""
                                          controlId="vendor"
                                          validationState={null}
                                        >
                                          <div
                                            className="form-group"
                                          >
                                            <ControlLabel>
                                              <ControlLabel
                                                bsClass="control-label"
                                                className="c4"
                                                srOnly={false}
                                              >
                                                <label
                                                  className="c4 control-label"
                                                  htmlFor="vendor"
                                                >
                                                  Vendor
                                                </label>
                                              </ControlLabel>
                                            </ControlLabel>
                                            <InputWrapper>
                                              <span>
                                                <FormControl
                                                  componentClass="input"
                                                  inputRef={[Function]}
                                                  label="Vendor"
                                                  maxLength={250}
                                                  name="vendor"
                                                  onChange={[Function]}
                                                  placeholder=""
                                                  required={true}
                                                  type="text"
                                                  value="Beinstein"
                                                >
                                                  <FormControl
                                                    bsClass="form-control"
                                                    className="c5"
                                                    componentClass="input"
                                                    inputRef={[Function]}
                                                    label="Vendor"
                                                    maxLength={250}
                                                    name="vendor"
                                                    onChange={[Function]}
                                                    placeholder=""
                                                    required={true}
                                                    type="text"
                                                    value="Beinstein"
                                                  >
                                                    <input
                                                      className="c5 form-control"
                                                      id="vendor"
                                                      label="Vendor"
                                                      maxLength={250}
                                                      name="vendor"
                                                      onChange={[Function]}
                                                      placeholder=""
                                                      required={true}
                                                      type="text"
                                                      value="Beinstein"
                                                    />
                                                  </FormControl>
                                                </FormControl>
                                                <HelpBlock>
                                                  <HelpBlock
                                                    bsClass="help-block"
                                                    className="c6"
                                                  >
                                                    <span
                                                      className="c6 help-block"
                                                    >
                                                      Required. Who did this content pack and how can they be reached, e.g. Name and email.
                                                    </span>
                                                  </HelpBlock>
                                                </HelpBlock>
                                              </span>
                                            </InputWrapper>
                                          </div>
                                        </FormGroup>
                                      </FormGroup__StyledFormGroup>
                                    </Component>
                                  </Input>
                                  <Input
                                    addonAfter={null}
                                    bsStyle={null}
                                    buttonAfter={null}
                                    help="Where can I find the content pack. e.g. github url"
                                    id="url"
                                    label="URL"
                                    maxLength={250}
                                    name="url"
                                    onChange={[Function]}
                                    placeholder=""
                                    type="text"
                                    value="http://beinstein.com"
                                  >
                                    <Component
                                      controlId="url"
                                      validationState={null}
                                    >
                                      <FormGroup__StyledFormGroup
                                        controlId="url"
                                        validationState={null}
                                      >
                                        <FormGroup
                                          bsClass="form-group"
                                          className=""
                                          controlId="url"
                                          validationState={null}
                                        >
                                          <div
                                            className="form-group"
                                          >
                                            <ControlLabel>
                                              <ControlLabel
                                                bsClass="control-label"
                                                className="c4"
                                                srOnly={false}
                                              >
                                                <label
                                                  className="c4 control-label"
                                                  htmlFor="url"
                                                >
                                                  URL
                                                </label>
                                              </ControlLabel>
                                            </ControlLabel>
                                            <InputWrapper>
                                              <span>
                                                <FormControl
                                                  componentClass="input"
                                                  inputRef={[Function]}
                                                  label="URL"
                                                  maxLength={250}
                                                  name="url"
                                                  onChange={[Function]}
                                                  placeholder=""
                                                  type="text"
                                                  value="http://beinstein.com"
                                                >
                                                  <FormControl
                                                    bsClass="form-control"
                                                    className="c5"
                                                    componentClass="input"
                                                    inputRef={[Function]}
                                                    label="URL"
                                                    maxLength={250}
                                                    name="url"
                                                    onChange={[Function]}
                                                    placeholder=""
                                                    type="text"
                                                    value="http://beinstein.com"
                                                  >
                                                    <input
                                                      className="c5 form-control"
                                                      id="url"
                                                      label="URL"
                                                      maxLength={250}
                                                      name="url"
                                                      onChange={[Function]}
                                                      placeholder=""
                                                      type="text"
                                                      value="http://beinstein.com"
                                                    />
                                                  </FormControl>
                                                </FormControl>
                                                <HelpBlock>
                                                  <HelpBlock
                                                    bsClass="help-block"
                                                    className="c6"
                                                  >
                                                    <span
                                                      className="c6 help-block"
                                                    >
                                                      Where can I find the content pack. e.g. github url
                                                    </span>
                                                  </HelpBlock>
                                                </HelpBlock>
                                              </span>
                                            </InputWrapper>
                                          </div>
                                        </FormGroup>
                                      </FormGroup__StyledFormGroup>
                                    </Component>
                                  </Input>
                                </fieldset>
                              </form>
                            </div>
                          </Col>
                        </div>
                      </Row>
                    </Row>
                    <Row>
                      <Row
                        bsClass="row"
                        className="c0"
                        componentClass="div"
                      >
                        <div
                          className="c0 row"
                        >
                          <Col
                            bsClass="col"
                            componentClass="div"
                            lg={8}
                            smOffset={1}
                          >
                            <div
                              className="col-lg-8 col-sm-offset-1"
                            >
                              <h2>
                                Content Pack selection
                              </h2>
                            </div>
                          </Col>
                        </div>
                      </Row>
                    </Row>
                    <Row>
                      <Row
                        bsClass="row"
                        className="c0"
                        componentClass="div"
                      >
                        <div
                          className="c0 row"
                        >
                          <Col
                            bsClass="col"
                            componentClass="div"
                            lg={8}
                            smOffset={1}
                          >
                            <div
                              className="col-lg-8 col-sm-offset-1"
                            >
                              <SearchForm
                                buttonLeftMargin={5}
                                focusAfterMount={false}
                                id="filter-input"
                                label={null}
                                loadingLabel="Loading..."
                                onQueryChange={[Function]}
                                onReset={[Function]}
                                onSearch={[Function]}
                                placeholder="Enter search query..."
                                query=""
                                queryHelpComponent={null}
                                queryWidth="auto"
                                resetButtonLabel="Reset"
                                searchBsStyle="default"
                                searchButtonLabel="Filter"
                                topMargin={15}
                                useLoadingState={false}
                                wrapperClass="search"
                              >
                                <div
                                  className="search"
                                  style={
                                    Object {
                                      "marginTop": 15,
                                    }
                                  }
                                >
                                  <form
                                    className="form-inline"
                                    onSubmit={[Function]}
                                  >
                                    <div
                                      className="form-group has-feedback"
                                    >
                                      <input
                                        autoComplete="off"
                                        autoFocus={false}
                                        className="query form-control"
                                        id="common-search-form-query-input"
                                        onChange={[Function]}
                                        placeholder="Enter search query..."
                                        spellCheck="false"
                                        style={
                                          Object {
                                            "width": "auto",
                                          }
                                        }
                                        type="text"
                                        value=""
                                      />
                                    </div>
                                    <div
                                      className="form-group"
                                      style={
                                        Object {
                                          "marginLeft": 5,
                                        }
                                      }
                                    >
                                      <Button
                                        bsStyle="default"
                                        className="submit-button"
                                        disabled={false}
                                        type="submit"
                                      >
                                        <Button
                                          active={false}
                                          block={false}
                                          bsClass="btn"
                                          bsStyle="default"
                                          className="c3 submit-button"
                                          disabled={false}
                                          type="submit"
                                        >
                                          <button
                                            className="c3 submit-button btn btn-default"
                                            disabled={false}
                                            type="submit"
                                          >
                                            Filter
                                          </button>
                                        </Button>
                                      </Button>
                                    </div>
                                    <div
                                      className="form-group"
                                      style={
                                        Object {
                                          "marginLeft": 5,
                                        }
                                      }
                                    >
                                      <Button
                                        className="reset-button"
                                        onClick={[Function]}
                                        type="reset"
                                      >
                                        <Button
                                          active={false}
                                          block={false}
                                          bsClass="btn"
                                          bsStyle="default"
                                          className="c3 reset-button"
                                          disabled={false}
                                          onClick={[Function]}
                                          type="reset"
                                        >
                                          <button
                                            className="c3 reset-button btn btn-default"
                                            disabled={false}
                                            onClick={[Function]}
                                            type="reset"
                                          >
                                            Reset
                                          </button>
                                        </Button>
                                      </Button>
                                    </div>
                                  </form>
                                </div>
                              </SearchForm>
                            </div>
                          </Col>
                        </div>
                      </Row>
                    </Row>
                    <Row>
                      <Row
                        bsClass="row"
                        className="c0"
                        componentClass="div"
                      >
                        <div
                          className="c0 row"
                        >
                          <Col
                            bsClass="col"
                            componentClass="div"
                            lg={8}
                            sm={8}
                            smOffset={1}
                          >
                            <div
                              className="col-lg-8 col-sm-8 col-sm-offset-1"
                            >
                              <ExpandableList>
                                <ul
                                  className="list"
                                >
                                  <ExpandableListItem
                                    checked={true}
                                    expandable={true}
                                    expanded={false}
                                    header="Dashboard"
                                    indetermined={false}
                                    key="dashboard"
                                    onChange={[Function]}
                                    padded={false}
                                    selectable={true}
                                    stayExpanded={false}
                                  >
                                    <ExpandableListItem__ItemWrap
                                      padded={false}
                                    >
                                      <li
                                        className=""
                                      >
                                        <ExpandableListItem__Container>
                                          <div
                                            className="c7"
                                          >
                                            <Checkbox
                                              bsClass="checkbox"
                                              checked={true}
                                              disabled={false}
                                              inline={true}
                                              inputRef={[Function]}
                                              onChange={[Function]}
                                              title=""
                                            >
                                              <label
                                                className="checkbox-inline"
                                                title=""
                                              >
                                                <input
                                                  checked={true}
                                                  disabled={false}
                                                  onChange={[Function]}
                                                  type="checkbox"
                                                />
                                              </label>
                                            </Checkbox>
                                            <ExpandableListItem__Toggle>
                                              <div
                                                className="c8"
                                              >
                                                <ExpandableListItem__IconStack
                                                  className="fa-stack"
                                                  onClick={[Function]}
                                                  tabIndex={0}
                                                >
                                                  <div
                                                    className="c9 fa-stack"
                                                    onClick={[Function]}
                                                    tabIndex={0}
                                                  >
                                                    <Icon
                                                      className="fa-stack-1x"
                                                      name="circle"
                                                      type="solid"
                                                    >
                                                      <FontAwesomeIcon
                                                        className="fa-stack-1x"
                                                        icon={
                                                          Object {
                                                            "iconName": "circle",
                                                            "prefix": "fas",
                                                          }
                                                        }
                                                      >
                                                        <svg
                                                          className="svg-inline--fa fa-circle"
                                                        />
                                                      </FontAwesomeIcon>
                                                    </Icon>
                                                    <Icon
                                                      className="fa-stack-1x"
                                                      name="angle-up"
                                                      type="solid"
                                                    >
                                                      <FontAwesomeIcon
                                                        className="fa-stack-1x"
                                                        icon={
                                                          Object {
                                                            "iconName": "angle-up",
                                                            "prefix": "fas",
                                                          }
                                                        }
                                                      >
                                                        <svg
                                                          className="svg-inline--fa fa-angle-up"
                                                        />
                                                      </FontAwesomeIcon>
                                                    </Icon>
                                                  </div>
                                                </ExpandableListItem__IconStack>
                                              </div>
                                            </ExpandableListItem__Toggle>
                                            <ExpandableListItem__HeaderWrap
                                              className="header"
                                            >
                                              <span
                                                className="c10 header"
                                              >
                                                <ExpandableListItem__Header
                                                  onClick={[Function]}
                                                  tabIndex={0}
                                                  type="button"
                                                >
                                                  <button
                                                    className="c11"
                                                    onClick={[Function]}
                                                    tabIndex={0}
                                                    type="button"
                                                  >
                                                    Dashboard
                                                  </button>
                                                </ExpandableListItem__Header>
                                              </span>
                                            </ExpandableListItem__HeaderWrap>
                                          </div>
                                        </ExpandableListItem__Container>
                                        <ExpandableListItem__ExpandableContent>
                                          <div
                                            className="c12"
                                          />
                                        </ExpandableListItem__ExpandableContent>
                                      </li>
                                    </ExpandableListItem__ItemWrap>
                                  </ExpandableListItem>
                                </ul>
                              </ExpandableList>
                            </div>
                          </Col>
                        </div>
                      </Row>
                    </Row>
                  </div>
                </ContentPackSelection>
              </div>
            </Col>
            <Col
              bsClass="col"
              componentClass="div"
              md={3}
            >
              <div
                className="col-md-3"
              >
                <AutoAffix
                  viewportOffsetTop={65}
                >
                  <div>
                    <div>
                      <ContentPackDetails
                        constraints={Array []}
                        contentPack={
                          Object {
                            "description": "## No one dares",
                            "entities": Array [
                              Object {
                                "constraints": Array [],
                                "data": Object {
                                  "configuration": Object {
                                    "listen_address": "1.2.3.4",
                                    "port": "23",
                                  },
                                  "name": "Input",
                                  "title": "A good input",
                                },
                                "id": "111-beef",
                                "type": "dashboard",
                                "v": "1.0",
                              },
                            ],
                            "id": "9950ba5a-0887-40a9-2b8f-8b50292cc7fb",
                            "name": "Content Pack the movie",
                            "parameters": Array [
                              Object {
                                "default_value": "23",
                                "name": "PORT",
                                "title": "Port",
                                "type": "integer",
                              },
                            ],
                            "rev": 1,
                            "summary": "A old content pack",
                            "url": "http://beinstein.com",
                            "v": 1,
                            "vendor": "Beinstein",
                          }
                        }
                        offset={1}
                        showConstraints={false}
                        verbose={false}
                      >
                        <Row>
                          <Row
                            bsClass="row"
                            className="c0"
                            componentClass="div"
                          >
                            <div
                              className="c0 row"
                            >
                              <Col
                                bsClass="col"
                                componentClass="div"
                                sm={9}
                                smOffset={1}
                              >
                                <div
                                  className="col-sm-9 col-sm-offset-1"
                                >
                                  <div
                                    id="content-pack-details"
                                  >
                                    <h2>
                                      Details
                                    </h2>
                                    <br />
                                    <div>
                                      <dl
                                        className="deflist"
                                      >
                                        <dt>
                                          Version:
                                        </dt>
                                         
                                        <dd>
                                          1
                                        </dd>
                                        <dt>
                                          Name:
                                        </dt>
                                         
                                        <dd>
                                          Content Pack the movie
                                           
                                        </dd>
                                        <dt>
                                          Summary:
                                        </dt>
                                         
                                        <dd>
                                          A old content pack
                                           
                                        </dd>
                                        <dt>
                                          Vendor:
                                        </dt>
                                         
                                        <dd>
                                          Beinstein
                                           
                                        </dd>
                                        <dt>
                                          URL:
                                        </dt>
                                         
                                        <dd>
                                          <a
                                            href="http://beinstein.com"
                                          >
                                            http://beinstein.com
                                          </a>
                                           
                                        </dd>
                                        <span>
                                          <dt>
                                            ID:
                                          </dt>
                                           
                                          <dd>
                                            <code>
                                              9950ba5a-0887-40a9-2b8f-8b50292cc7fb
                                            </code>
                                          </dd>
                                        </span>
                                        <span>
                                          <dt>
                                            Parameters:
                                          </dt>
                                           
                                          <dd>
                                            1
                                          </dd>
                                        </span>
                                        <span>
                                          <dt>
                                            Entities:
                                          </dt>
                                           
                                          <dd>
                                            1
                                          </dd>
                                        </span>
                                      </dl>
                                    </div>
                                    <div>
                                      <h2>
                                        Description
                                      </h2>
                                      <br />
                                      <Well>
                                        <Well
                                          bsClass="well"
                                          className="c13"
                                        >
                                          <div
                                            className="c13 well"
                                          >
                                            <div
                                              dangerouslySetInnerHTML={
                                                Object {
                                                  "__html": "<h2 id=\\"no-one-dares\\">No one dares</h2>
",
                                                }
                                              }
                                            />
                                          </div>
                                        </Well>
                                      </Well>
                                    </div>
                                    <br />
                                    <br />
                                    <br />
                                  </div>
                                </div>
                              </Col>
                            </div>
                          </Row>
                        </Row>
                      </ContentPackDetails>
                    </div>
                  </div>
                </AutoAffix>
              </div>
            </Col>
          </div>
        </Row>
      </Row>
    </Wizard>
    <ScrollButton
      delay={5}
      position="middle"
      scrollSteps={50}
    >
      <span />
    </ScrollButton>
  </div>
</ContentPackEdit>
`;
