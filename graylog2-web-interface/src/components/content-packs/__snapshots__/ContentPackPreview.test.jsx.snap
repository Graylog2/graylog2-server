// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<ContentPackPreview /> should render with empty content pack 1`] = `
.c1.btn-danger {
  background-color: #ad0707;
  border-color: #b23939;
  color: rgb(252,249,249);
  -webkit-transition: background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;
  transition: background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;
}

.c1.btn-danger:hover {
  background-color: #a00e0e;
  border-color: #a53636;
  color: #e9e6e6;
}

.c1.btn-danger.active {
  background-color: #b75151;
  border-color: #bc6363;
  color: rgb(252,249,249);
}

.c1.btn-danger.active:hover {
  background-color: #a94c4c;
  border-color: #ad5c5c;
  color: #e9e6e6;
}

.c1.btn-danger[disabled],
.c1.btn-danger.disabled {
  background-color: #c07272;
  border-color: #bc6363;
  color: rgb(252,250,250);
}

.c1.btn-danger[disabled]:hover,
.c1.btn-danger.disabled:hover {
  background-color: #c07272;
  border-color: #bc6363;
  color: rgb(252,250,250);
}

.c1.btn-default {
  background-color: #e6e6e6;
  border-color: #e0e0e0;
  color: rgb(73,73,73);
  -webkit-transition: background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;
  transition: background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;
}

.c1.btn-default:hover {
  background-color: #d4d4d4;
  border-color: #cfcfcf;
  color: #444444;
}

.c1.btn-default.active {
  background-color: #dadada;
  border-color: #d4d4d4;
  color: rgb(49,49,49);
}

.c1.btn-default.active:hover {
  background-color: #cacaca;
  border-color: #c4c4c4;
  color: #2f2f2f;
}

.c1.btn-default[disabled],
.c1.btn-default.disabled {
  background-color: #cecece;
  border-color: #d4d4d4;
  color: rgb(80,80,80);
}

.c1.btn-default[disabled]:hover,
.c1.btn-default.disabled:hover {
  background-color: #cecece;
  border-color: #d4d4d4;
  color: rgb(80,80,80);
}

.c1.btn-info {
  background-color: #0063be;
  border-color: #3970c2;
  color: rgb(249,250,252);
  -webkit-transition: background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;
  transition: background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;
}

.c1.btn-info:hover {
  background-color: #0c5cb0;
  border-color: #3668b3;
  color: #e6e7e9;
}

.c1.btn-info.active {
  background-color: #517cc5;
  border-color: #6386c9;
  color: rgb(249,250,252);
}

.c1.btn-info.active:hover {
  background-color: #4b73b6;
  border-color: #5c7dba;
  color: #e6e7e9;
}

.c1.btn-info[disabled],
.c1.btn-info.disabled {
  background-color: #7290cd;
  border-color: #6386c9;
  color: rgb(250,251,253);
}

.c1.btn-info[disabled]:hover,
.c1.btn-info.disabled:hover {
  background-color: #7290cd;
  border-color: #6386c9;
  color: rgb(250,251,253);
}

.c1.btn-link {
  background-color: rgba(255,255,255,0);
  border-color: rgba(255,255,255,0);
  color: #702785;
  -webkit-transition: background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;
  transition: background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;
}

.c1.btn-link:hover {
  background-color: #ebebeb26;
  border-color: #ebebeb26;
  color: #68267b;
}

.c1.btn-link.active {
  background-color: rgba(255,255,255,0);
  border-color: rgba(255,255,255,0);
  color: #410057;
}

.c1.btn-link.active:hover {
  background-color: rgba(255,255,255,0);
  border-color: #ebebeb26;
  color: #3d0c51;
}

.c1.btn-link[disabled],
.c1.btn-link.disabled {
  background-color: rgba(255,255,255,0);
  border-color: rgba(255,255,255,0);
  color: #702785;
}

.c1.btn-link[disabled]:hover,
.c1.btn-link.disabled:hover {
  background-color: rgba(255,255,255,0);
  border-color: rgba(255,255,255,0);
  color: #702785;
}

.c1.btn-primary {
  background-color: #702785;
  border-color: #7b458e;
  color: rgb(234,229,236);
  -webkit-transition: background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;
  transition: background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;
}

.c1.btn-primary:hover {
  background-color: #68267b;
  border-color: #724083;
  color: #d8d3da;
}

.c1.btn-primary.active {
  background-color: #855996;
  border-color: #8f699d;
  color: rgb(250,249,251);
}

.c1.btn-primary.active:hover {
  background-color: #7c538b;
  border-color: #846292;
  color: #e7e6e8;
}

.c1.btn-primary[disabled],
.c1.btn-primary.disabled {
  background-color: #9877a5;
  border-color: #8f699d;
  color: rgb(251,250,251);
}

.c1.btn-primary[disabled]:hover,
.c1.btn-primary.disabled:hover {
  background-color: #9877a5;
  border-color: #8f699d;
  color: rgb(251,250,251);
}

.c1.btn-success {
  background-color: #00ae42;
  border-color: #39b356;
  color: rgb(249,252,249);
  -webkit-transition: background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;
  transition: background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;
}

.c1.btn-success:hover {
  background-color: #0ca13e;
  border-color: #36a550;
  color: #e6e9e6;
}

.c1.btn-success.active {
  background-color: #51b866;
  border-color: #63bc74;
  color: rgb(249,252,250);
}

.c1.btn-success.active:hover {
  background-color: #4baa5f;
  border-color: #5cae6c;
  color: #e6e9e7;
}

.c1.btn-success[disabled],
.c1.btn-success.disabled {
  background-color: #72c180;
  border-color: #63bc74;
  color: rgb(250,252,250);
}

.c1.btn-success[disabled]:hover,
.c1.btn-success.disabled:hover {
  background-color: #72c180;
  border-color: #63bc74;
  color: rgb(250,252,250);
}

.c1.btn-warning {
  background-color: #ffd200;
  border-color: #f9cd07;
  color: rgb(57,47,0);
  -webkit-transition: background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;
  transition: background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;
}

.c1.btn-warning:hover {
  background-color: #ebc20c;
  border-color: #e6bd0e;
  color: #362d0c;
}

.c1.btn-warning.active {
  background-color: #f2c70a;
  border-color: #ebc20c;
  color: rgb(54,45,2);
}

.c1.btn-warning.active:hover {
  background-color: #e0b80f;
  border-color: #d9b310;
  color: #332b0c;
}

.c1.btn-warning[disabled],
.c1.btn-warning.disabled {
  background-color: #e4bc0e;
  border-color: #ebc20c;
  color: rgb(88,73,5);
}

.c1.btn-warning[disabled]:hover,
.c1.btn-warning.disabled:hover {
  background-color: #e4bc0e;
  border-color: #ebc20c;
  color: rgb(88,73,5);
}

.c0.content {
  background-color: #fff;
  border: 1px solid #d0d0d0;
  margin-bottom: 9px;
  border-radius: 4px;
}

<ContentPackPreview
  contentPack={
    Object {
      "description": "",
      "entities": Array [],
      "id": "dead-beef",
      "name": "",
      "parameters": Array [],
      "rev": 1,
      "summary": "",
      "url": "",
      "v": 1,
      "vendor": "",
    }
  }
  onSave={[Function]}
>
  <div>
    <Row>
      <Row
        bsClass="row"
        className="c0"
        componentClass="div"
      >
        <div
          className="c0 row"
        >
          <Col
            bsClass="col"
            componentClass="div"
            sm={6}
          >
            <div
              className="col-sm-6"
            >
              <ContentPackDetails
                constraints={Array []}
                contentPack={
                  Object {
                    "description": "",
                    "entities": Array [],
                    "id": "dead-beef",
                    "name": "",
                    "parameters": Array [],
                    "rev": 1,
                    "summary": "",
                    "url": "",
                    "v": 1,
                    "vendor": "",
                  }
                }
                offset={1}
                showConstraints={false}
                verbose={false}
              >
                <Row>
                  <Row
                    bsClass="row"
                    className="c0"
                    componentClass="div"
                  >
                    <div
                      className="c0 row"
                    >
                      <Col
                        bsClass="col"
                        componentClass="div"
                        sm={9}
                        smOffset={1}
                      >
                        <div
                          className="col-sm-9 col-sm-offset-1"
                        >
                          <div
                            id="content-pack-details"
                          >
                            <h2>
                              Details
                            </h2>
                            <br />
                            <div>
                              <dl
                                className="deflist"
                              >
                                <dt>
                                  Version:
                                </dt>
                                 
                                <dd>
                                  1
                                </dd>
                                <dt>
                                  Name:
                                </dt>
                                 
                                <dd>
                                   
                                </dd>
                                <dt>
                                  Summary:
                                </dt>
                                 
                                <dd>
                                   
                                </dd>
                                <dt>
                                  Vendor:
                                </dt>
                                 
                                <dd>
                                   
                                </dd>
                                <dt>
                                  URL:
                                </dt>
                                 
                                <dd>
                                   
                                </dd>
                                <span>
                                  <dt>
                                    ID:
                                  </dt>
                                   
                                  <dd>
                                    <code>
                                      dead-beef
                                    </code>
                                  </dd>
                                </span>
                                <span>
                                  <dt>
                                    Parameters:
                                  </dt>
                                   
                                  <dd>
                                    0
                                  </dd>
                                </span>
                                <span>
                                  <dt>
                                    Entities:
                                  </dt>
                                   
                                  <dd>
                                    0
                                  </dd>
                                </span>
                              </dl>
                            </div>
                            <br />
                            <br />
                            <br />
                          </div>
                        </div>
                      </Col>
                    </div>
                  </Row>
                </Row>
              </ContentPackDetails>
            </div>
          </Col>
          <Col
            bsClass="col"
            componentClass="div"
            sm={6}
          >
            <div
              className="col-sm-6"
            >
              <ContentPackConstraints
                constraints={Immutable.Set []}
                isFulfilled={true}
              >
                <div>
                  <h2>
                    Constraints
                  </h2>
                  <br />
                  <br />
                  <DataTable
                    className=""
                    dataRowFormatter={[Function]}
                    displayKey="value"
                    filterBy=""
                    filterKeys={Array []}
                    filterLabel="Filter"
                    filterSuggestions={Array []}
                    headerCellFormatter={[Function]}
                    headers={
                      Array [
                        "Name",
                        "Type",
                        "Version",
                        "Fulfilled",
                      ]
                    }
                    id="content-packs-constraints"
                    noDataText="No data available."
                    rowClassName=""
                    rows={Array []}
                    sortBy={[Function]}
                    useResponsiveTable={true}
                  >
                    <div>
                      <div
                        className="row "
                      >
                        <div
                          className="col-md-12"
                        >
                          <div
                            className="data-table table-responsive"
                            id="content-packs-constraints"
                          >
                            <p>
                              No data available.
                            </p>
                          </div>
                        </div>
                      </div>
                    </div>
                  </DataTable>
                </div>
              </ContentPackConstraints>
              <ContentPackEntitiesList
                appliedParameter={Object {}}
                contentPack={
                  Object {
                    "description": "",
                    "entities": Array [],
                    "id": "dead-beef",
                    "name": "",
                    "parameters": Array [],
                    "rev": 1,
                    "summary": "",
                    "url": "",
                    "v": 1,
                    "vendor": "",
                  }
                }
                onParameterApply={[Function]}
                onParameterClear={[Function]}
                readOnly={true}
              >
                <div>
                  <h2>
                    Entity list
                  </h2>
                  <br />
                  <SearchForm
                    buttonLeftMargin={5}
                    focusAfterMount={false}
                    label={null}
                    loadingLabel="Loading..."
                    onQueryChange={[Function]}
                    onReset={[Function]}
                    onSearch={[Function]}
                    placeholder="Enter search query..."
                    query=""
                    queryHelpComponent={null}
                    queryWidth="auto"
                    resetButtonLabel="Reset"
                    searchBsStyle="default"
                    searchButtonLabel="Filter"
                    topMargin={15}
                    useLoadingState={false}
                    wrapperClass="search"
                  >
                    <div
                      className="search"
                      style={
                        Object {
                          "marginTop": 15,
                        }
                      }
                    >
                      <form
                        className="form-inline"
                        onSubmit={[Function]}
                      >
                        <div
                          className="form-group has-feedback"
                        >
                          <input
                            autoComplete="off"
                            autoFocus={false}
                            className="query form-control"
                            id="common-search-form-query-input"
                            onChange={[Function]}
                            placeholder="Enter search query..."
                            spellCheck="false"
                            style={
                              Object {
                                "width": "auto",
                              }
                            }
                            type="text"
                            value=""
                          />
                        </div>
                        <div
                          className="form-group"
                          style={
                            Object {
                              "marginLeft": 5,
                            }
                          }
                        >
                          <Button
                            bsStyle="default"
                            className="submit-button"
                            disabled={false}
                            type="submit"
                          >
                            <Button
                              active={false}
                              block={false}
                              bsClass="btn"
                              bsStyle="default"
                              className="c1 submit-button"
                              disabled={false}
                              type="submit"
                            >
                              <button
                                className="c1 submit-button btn btn-default"
                                disabled={false}
                                type="submit"
                              >
                                Filter
                              </button>
                            </Button>
                          </Button>
                        </div>
                        <div
                          className="form-group"
                          style={
                            Object {
                              "marginLeft": 5,
                            }
                          }
                        >
                          <Button
                            className="reset-button"
                            onClick={[Function]}
                            type="reset"
                          >
                            <Button
                              active={false}
                              block={false}
                              bsClass="btn"
                              bsStyle="default"
                              className="c1 reset-button"
                              disabled={false}
                              onClick={[Function]}
                              type="reset"
                            >
                              <button
                                className="c1 reset-button btn btn-default"
                                disabled={false}
                                onClick={[Function]}
                                type="reset"
                              >
                                Reset
                              </button>
                            </Button>
                          </Button>
                        </div>
                      </form>
                    </div>
                  </SearchForm>
                  <DataTable
                    className="scrollable"
                    dataRowFormatter={[Function]}
                    displayKey="value"
                    filterBy=""
                    filterKeys={Array []}
                    filterLabel="Filter"
                    filterSuggestions={Array []}
                    headerCellFormatter={[Function]}
                    headers={
                      Array [
                        "Title",
                        "Type",
                        "Description",
                        "Action",
                      ]
                    }
                    id="entity-list"
                    noDataText="No data available."
                    rowClassName=""
                    rows={Array []}
                    sortBy={[Function]}
                    useResponsiveTable={true}
                  >
                    <div>
                      <div
                        className="row "
                      >
                        <div
                          className="col-md-12"
                        >
                          <div
                            className="data-table table-responsive"
                            id="entity-list"
                          >
                            <p>
                              No data available.
                            </p>
                          </div>
                        </div>
                      </div>
                    </div>
                  </DataTable>
                </div>
              </ContentPackEntitiesList>
              <ContentPackParameterList
                appliedParameter={Object {}}
                contentPack={
                  Object {
                    "description": "",
                    "entities": Array [],
                    "id": "dead-beef",
                    "name": "",
                    "parameters": Array [],
                    "rev": 1,
                    "summary": "",
                    "url": "",
                    "v": 1,
                    "vendor": "",
                  }
                }
                onAddParameter={[Function]}
                onDeleteParameter={[Function]}
                readOnly={true}
              >
                <div>
                  <h2>
                    Parameters list
                  </h2>
                  <br />
                  <SearchForm
                    buttonLeftMargin={5}
                    focusAfterMount={false}
                    label={null}
                    loadingLabel="Loading..."
                    onQueryChange={[Function]}
                    onReset={[Function]}
                    onSearch={[Function]}
                    placeholder="Enter search query..."
                    query=""
                    queryHelpComponent={null}
                    queryWidth="auto"
                    resetButtonLabel="Reset"
                    searchBsStyle="default"
                    searchButtonLabel="Filter"
                    topMargin={15}
                    useLoadingState={false}
                    wrapperClass="search"
                  >
                    <div
                      className="search"
                      style={
                        Object {
                          "marginTop": 15,
                        }
                      }
                    >
                      <form
                        className="form-inline"
                        onSubmit={[Function]}
                      >
                        <div
                          className="form-group has-feedback"
                        >
                          <input
                            autoComplete="off"
                            autoFocus={false}
                            className="query form-control"
                            id="common-search-form-query-input"
                            onChange={[Function]}
                            placeholder="Enter search query..."
                            spellCheck="false"
                            style={
                              Object {
                                "width": "auto",
                              }
                            }
                            type="text"
                            value=""
                          />
                        </div>
                        <div
                          className="form-group"
                          style={
                            Object {
                              "marginLeft": 5,
                            }
                          }
                        >
                          <Button
                            bsStyle="default"
                            className="submit-button"
                            disabled={false}
                            type="submit"
                          >
                            <Button
                              active={false}
                              block={false}
                              bsClass="btn"
                              bsStyle="default"
                              className="c1 submit-button"
                              disabled={false}
                              type="submit"
                            >
                              <button
                                className="c1 submit-button btn btn-default"
                                disabled={false}
                                type="submit"
                              >
                                Filter
                              </button>
                            </Button>
                          </Button>
                        </div>
                        <div
                          className="form-group"
                          style={
                            Object {
                              "marginLeft": 5,
                            }
                          }
                        >
                          <Button
                            className="reset-button"
                            onClick={[Function]}
                            type="reset"
                          >
                            <Button
                              active={false}
                              block={false}
                              bsClass="btn"
                              bsStyle="default"
                              className="c1 reset-button"
                              disabled={false}
                              onClick={[Function]}
                              type="reset"
                            >
                              <button
                                className="c1 reset-button btn btn-default"
                                disabled={false}
                                onClick={[Function]}
                                type="reset"
                              >
                                Reset
                              </button>
                            </Button>
                          </Button>
                        </div>
                      </form>
                    </div>
                  </SearchForm>
                  <DataTable
                    className="scrollable"
                    dataRowFormatter={[Function]}
                    displayKey="value"
                    filterBy=""
                    filterKeys={Array []}
                    filterLabel="Filter"
                    filterSuggestions={Array []}
                    headerCellFormatter={[Function]}
                    headers={
                      Array [
                        "Title",
                        "Name",
                        "Description",
                        "Value Type",
                        "Default Value",
                        "Used",
                      ]
                    }
                    id="parameter-list"
                    noDataText="To use parameters for content packs, at first a parameter must be created and can then be applied to a entity."
                    rowClassName=""
                    rows={Array []}
                    sortByKey="title"
                    useResponsiveTable={true}
                  >
                    <div>
                      <div
                        className="row "
                      >
                        <div
                          className="col-md-12"
                        >
                          <div
                            className="data-table table-responsive"
                            id="parameter-list"
                          >
                            <p>
                              To use parameters for content packs, at first a parameter must be created and can then be applied to a entity.
                            </p>
                          </div>
                        </div>
                      </div>
                    </div>
                  </DataTable>
                </div>
              </ContentPackParameterList>
            </div>
          </Col>
        </div>
      </Row>
    </Row>
    <Row>
      <Row
        bsClass="row"
        className="c0"
        componentClass="div"
      >
        <div
          className="c0 row"
        >
          <Col
            bsClass="col"
            componentClass="div"
            sm={6}
          >
            <div
              className="col-sm-6"
            >
              <Button
                bsStyle="primary"
                id="create"
                onClick={[Function]}
              >
                <Button
                  active={false}
                  block={false}
                  bsClass="btn"
                  bsStyle="primary"
                  className="c1"
                  disabled={false}
                  id="create"
                  onClick={[Function]}
                >
                  <button
                    className="c1 btn btn-primary"
                    disabled={false}
                    id="create"
                    onClick={[Function]}
                    type="button"
                  >
                    Create
                  </button>
                </Button>
              </Button>
               
              <a
                download="content-pack-dead-beef-1.json"
                href="data:text/plain;charset=utf-8,%7B%0A%20%20%22v%22%3A%201%2C%0A%20%20%22id%22%3A%20%22dead-beef%22%2C%0A%20%20%22rev%22%3A%201%2C%0A%20%20%22name%22%3A%20%22%22%2C%0A%20%20%22summary%22%3A%20%22%22%2C%0A%20%20%22description%22%3A%20%22%22%2C%0A%20%20%22vendor%22%3A%20%22%22%2C%0A%20%20%22url%22%3A%20%22%22%2C%0A%20%20%22parameters%22%3A%20%5B%5D%2C%0A%20%20%22entities%22%3A%20%5B%5D%0A%7D"
              >
                <Button
                  bsStyle="info"
                  id="download"
                  onClick={[Function]}
                >
                  <Button
                    active={false}
                    block={false}
                    bsClass="btn"
                    bsStyle="info"
                    className="c1"
                    disabled={false}
                    id="download"
                    onClick={[Function]}
                  >
                    <button
                      className="c1 btn btn-info"
                      disabled={false}
                      id="download"
                      onClick={[Function]}
                      type="button"
                    >
                      Create and Download
                    </button>
                  </Button>
                </Button>
              </a>
            </div>
          </Col>
        </div>
      </Row>
    </Row>
  </div>
</ContentPackPreview>
`;

exports[`<ContentPackPreview /> should render with filled content pack 1`] = `
.c2.btn-danger {
  background-color: #ad0707;
  border-color: #b23939;
  color: rgb(252,249,249);
  -webkit-transition: background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;
  transition: background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;
}

.c2.btn-danger:hover {
  background-color: #a00e0e;
  border-color: #a53636;
  color: #e9e6e6;
}

.c2.btn-danger.active {
  background-color: #b75151;
  border-color: #bc6363;
  color: rgb(252,249,249);
}

.c2.btn-danger.active:hover {
  background-color: #a94c4c;
  border-color: #ad5c5c;
  color: #e9e6e6;
}

.c2.btn-danger[disabled],
.c2.btn-danger.disabled {
  background-color: #c07272;
  border-color: #bc6363;
  color: rgb(252,250,250);
}

.c2.btn-danger[disabled]:hover,
.c2.btn-danger.disabled:hover {
  background-color: #c07272;
  border-color: #bc6363;
  color: rgb(252,250,250);
}

.c2.btn-default {
  background-color: #e6e6e6;
  border-color: #e0e0e0;
  color: rgb(73,73,73);
  -webkit-transition: background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;
  transition: background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;
}

.c2.btn-default:hover {
  background-color: #d4d4d4;
  border-color: #cfcfcf;
  color: #444444;
}

.c2.btn-default.active {
  background-color: #dadada;
  border-color: #d4d4d4;
  color: rgb(49,49,49);
}

.c2.btn-default.active:hover {
  background-color: #cacaca;
  border-color: #c4c4c4;
  color: #2f2f2f;
}

.c2.btn-default[disabled],
.c2.btn-default.disabled {
  background-color: #cecece;
  border-color: #d4d4d4;
  color: rgb(80,80,80);
}

.c2.btn-default[disabled]:hover,
.c2.btn-default.disabled:hover {
  background-color: #cecece;
  border-color: #d4d4d4;
  color: rgb(80,80,80);
}

.c2.btn-info {
  background-color: #0063be;
  border-color: #3970c2;
  color: rgb(249,250,252);
  -webkit-transition: background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;
  transition: background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;
}

.c2.btn-info:hover {
  background-color: #0c5cb0;
  border-color: #3668b3;
  color: #e6e7e9;
}

.c2.btn-info.active {
  background-color: #517cc5;
  border-color: #6386c9;
  color: rgb(249,250,252);
}

.c2.btn-info.active:hover {
  background-color: #4b73b6;
  border-color: #5c7dba;
  color: #e6e7e9;
}

.c2.btn-info[disabled],
.c2.btn-info.disabled {
  background-color: #7290cd;
  border-color: #6386c9;
  color: rgb(250,251,253);
}

.c2.btn-info[disabled]:hover,
.c2.btn-info.disabled:hover {
  background-color: #7290cd;
  border-color: #6386c9;
  color: rgb(250,251,253);
}

.c2.btn-link {
  background-color: rgba(255,255,255,0);
  border-color: rgba(255,255,255,0);
  color: #702785;
  -webkit-transition: background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;
  transition: background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;
}

.c2.btn-link:hover {
  background-color: #ebebeb26;
  border-color: #ebebeb26;
  color: #68267b;
}

.c2.btn-link.active {
  background-color: rgba(255,255,255,0);
  border-color: rgba(255,255,255,0);
  color: #410057;
}

.c2.btn-link.active:hover {
  background-color: rgba(255,255,255,0);
  border-color: #ebebeb26;
  color: #3d0c51;
}

.c2.btn-link[disabled],
.c2.btn-link.disabled {
  background-color: rgba(255,255,255,0);
  border-color: rgba(255,255,255,0);
  color: #702785;
}

.c2.btn-link[disabled]:hover,
.c2.btn-link.disabled:hover {
  background-color: rgba(255,255,255,0);
  border-color: rgba(255,255,255,0);
  color: #702785;
}

.c2.btn-primary {
  background-color: #702785;
  border-color: #7b458e;
  color: rgb(234,229,236);
  -webkit-transition: background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;
  transition: background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;
}

.c2.btn-primary:hover {
  background-color: #68267b;
  border-color: #724083;
  color: #d8d3da;
}

.c2.btn-primary.active {
  background-color: #855996;
  border-color: #8f699d;
  color: rgb(250,249,251);
}

.c2.btn-primary.active:hover {
  background-color: #7c538b;
  border-color: #846292;
  color: #e7e6e8;
}

.c2.btn-primary[disabled],
.c2.btn-primary.disabled {
  background-color: #9877a5;
  border-color: #8f699d;
  color: rgb(251,250,251);
}

.c2.btn-primary[disabled]:hover,
.c2.btn-primary.disabled:hover {
  background-color: #9877a5;
  border-color: #8f699d;
  color: rgb(251,250,251);
}

.c2.btn-success {
  background-color: #00ae42;
  border-color: #39b356;
  color: rgb(249,252,249);
  -webkit-transition: background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;
  transition: background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;
}

.c2.btn-success:hover {
  background-color: #0ca13e;
  border-color: #36a550;
  color: #e6e9e6;
}

.c2.btn-success.active {
  background-color: #51b866;
  border-color: #63bc74;
  color: rgb(249,252,250);
}

.c2.btn-success.active:hover {
  background-color: #4baa5f;
  border-color: #5cae6c;
  color: #e6e9e7;
}

.c2.btn-success[disabled],
.c2.btn-success.disabled {
  background-color: #72c180;
  border-color: #63bc74;
  color: rgb(250,252,250);
}

.c2.btn-success[disabled]:hover,
.c2.btn-success.disabled:hover {
  background-color: #72c180;
  border-color: #63bc74;
  color: rgb(250,252,250);
}

.c2.btn-warning {
  background-color: #ffd200;
  border-color: #f9cd07;
  color: rgb(57,47,0);
  -webkit-transition: background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;
  transition: background-color 150ms ease-in-out,border 150ms ease-in-out,color 150ms ease-in-out;
}

.c2.btn-warning:hover {
  background-color: #ebc20c;
  border-color: #e6bd0e;
  color: #362d0c;
}

.c2.btn-warning.active {
  background-color: #f2c70a;
  border-color: #ebc20c;
  color: rgb(54,45,2);
}

.c2.btn-warning.active:hover {
  background-color: #e0b80f;
  border-color: #d9b310;
  color: #332b0c;
}

.c2.btn-warning[disabled],
.c2.btn-warning.disabled {
  background-color: #e4bc0e;
  border-color: #ebc20c;
  color: rgb(88,73,5);
}

.c2.btn-warning[disabled]:hover,
.c2.btn-warning.disabled:hover {
  background-color: #e4bc0e;
  border-color: #ebc20c;
  color: rgb(88,73,5);
}

.c0.content {
  background-color: #fff;
  border: 1px solid #d0d0d0;
  margin-bottom: 9px;
  border-radius: 4px;
}

.c1 {
  background-color: #f3f3f3;
  border-color: #a6a6a6;
  color: #575757;
}

<ContentPackPreview
  contentPack={
    Object {
      "description": "descr",
      "entities": Array [],
      "id": "dead-beef",
      "name": "name",
      "parameters": Array [],
      "rev": 1,
      "summary": "summary",
      "url": "http://example.com",
      "v": 1,
      "vendor": "vendor",
    }
  }
  onSave={[Function]}
>
  <div>
    <Row>
      <Row
        bsClass="row"
        className="c0"
        componentClass="div"
      >
        <div
          className="c0 row"
        >
          <Col
            bsClass="col"
            componentClass="div"
            sm={6}
          >
            <div
              className="col-sm-6"
            >
              <ContentPackDetails
                constraints={Array []}
                contentPack={
                  Object {
                    "description": "descr",
                    "entities": Array [],
                    "id": "dead-beef",
                    "name": "name",
                    "parameters": Array [],
                    "rev": 1,
                    "summary": "summary",
                    "url": "http://example.com",
                    "v": 1,
                    "vendor": "vendor",
                  }
                }
                offset={1}
                showConstraints={false}
                verbose={false}
              >
                <Row>
                  <Row
                    bsClass="row"
                    className="c0"
                    componentClass="div"
                  >
                    <div
                      className="c0 row"
                    >
                      <Col
                        bsClass="col"
                        componentClass="div"
                        sm={9}
                        smOffset={1}
                      >
                        <div
                          className="col-sm-9 col-sm-offset-1"
                        >
                          <div
                            id="content-pack-details"
                          >
                            <h2>
                              Details
                            </h2>
                            <br />
                            <div>
                              <dl
                                className="deflist"
                              >
                                <dt>
                                  Version:
                                </dt>
                                 
                                <dd>
                                  1
                                </dd>
                                <dt>
                                  Name:
                                </dt>
                                 
                                <dd>
                                  name
                                   
                                </dd>
                                <dt>
                                  Summary:
                                </dt>
                                 
                                <dd>
                                  summary
                                   
                                </dd>
                                <dt>
                                  Vendor:
                                </dt>
                                 
                                <dd>
                                  vendor
                                   
                                </dd>
                                <dt>
                                  URL:
                                </dt>
                                 
                                <dd>
                                  <a
                                    href="http://example.com"
                                  >
                                    http://example.com
                                  </a>
                                   
                                </dd>
                                <span>
                                  <dt>
                                    ID:
                                  </dt>
                                   
                                  <dd>
                                    <code>
                                      dead-beef
                                    </code>
                                  </dd>
                                </span>
                                <span>
                                  <dt>
                                    Parameters:
                                  </dt>
                                   
                                  <dd>
                                    0
                                  </dd>
                                </span>
                                <span>
                                  <dt>
                                    Entities:
                                  </dt>
                                   
                                  <dd>
                                    0
                                  </dd>
                                </span>
                              </dl>
                            </div>
                            <div>
                              <h2>
                                Description
                              </h2>
                              <br />
                              <Well>
                                <Well
                                  bsClass="well"
                                  className="c1"
                                >
                                  <div
                                    className="c1 well"
                                  >
                                    <div
                                      dangerouslySetInnerHTML={
                                        Object {
                                          "__html": "<p>descr</p>
",
                                        }
                                      }
                                    />
                                  </div>
                                </Well>
                              </Well>
                            </div>
                            <br />
                            <br />
                            <br />
                          </div>
                        </div>
                      </Col>
                    </div>
                  </Row>
                </Row>
              </ContentPackDetails>
            </div>
          </Col>
          <Col
            bsClass="col"
            componentClass="div"
            sm={6}
          >
            <div
              className="col-sm-6"
            >
              <ContentPackConstraints
                constraints={Immutable.Set []}
                isFulfilled={true}
              >
                <div>
                  <h2>
                    Constraints
                  </h2>
                  <br />
                  <br />
                  <DataTable
                    className=""
                    dataRowFormatter={[Function]}
                    displayKey="value"
                    filterBy=""
                    filterKeys={Array []}
                    filterLabel="Filter"
                    filterSuggestions={Array []}
                    headerCellFormatter={[Function]}
                    headers={
                      Array [
                        "Name",
                        "Type",
                        "Version",
                        "Fulfilled",
                      ]
                    }
                    id="content-packs-constraints"
                    noDataText="No data available."
                    rowClassName=""
                    rows={Array []}
                    sortBy={[Function]}
                    useResponsiveTable={true}
                  >
                    <div>
                      <div
                        className="row "
                      >
                        <div
                          className="col-md-12"
                        >
                          <div
                            className="data-table table-responsive"
                            id="content-packs-constraints"
                          >
                            <p>
                              No data available.
                            </p>
                          </div>
                        </div>
                      </div>
                    </div>
                  </DataTable>
                </div>
              </ContentPackConstraints>
              <ContentPackEntitiesList
                appliedParameter={Object {}}
                contentPack={
                  Object {
                    "description": "descr",
                    "entities": Array [],
                    "id": "dead-beef",
                    "name": "name",
                    "parameters": Array [],
                    "rev": 1,
                    "summary": "summary",
                    "url": "http://example.com",
                    "v": 1,
                    "vendor": "vendor",
                  }
                }
                onParameterApply={[Function]}
                onParameterClear={[Function]}
                readOnly={true}
              >
                <div>
                  <h2>
                    Entity list
                  </h2>
                  <br />
                  <SearchForm
                    buttonLeftMargin={5}
                    focusAfterMount={false}
                    label={null}
                    loadingLabel="Loading..."
                    onQueryChange={[Function]}
                    onReset={[Function]}
                    onSearch={[Function]}
                    placeholder="Enter search query..."
                    query=""
                    queryHelpComponent={null}
                    queryWidth="auto"
                    resetButtonLabel="Reset"
                    searchBsStyle="default"
                    searchButtonLabel="Filter"
                    topMargin={15}
                    useLoadingState={false}
                    wrapperClass="search"
                  >
                    <div
                      className="search"
                      style={
                        Object {
                          "marginTop": 15,
                        }
                      }
                    >
                      <form
                        className="form-inline"
                        onSubmit={[Function]}
                      >
                        <div
                          className="form-group has-feedback"
                        >
                          <input
                            autoComplete="off"
                            autoFocus={false}
                            className="query form-control"
                            id="common-search-form-query-input"
                            onChange={[Function]}
                            placeholder="Enter search query..."
                            spellCheck="false"
                            style={
                              Object {
                                "width": "auto",
                              }
                            }
                            type="text"
                            value=""
                          />
                        </div>
                        <div
                          className="form-group"
                          style={
                            Object {
                              "marginLeft": 5,
                            }
                          }
                        >
                          <Button
                            bsStyle="default"
                            className="submit-button"
                            disabled={false}
                            type="submit"
                          >
                            <Button
                              active={false}
                              block={false}
                              bsClass="btn"
                              bsStyle="default"
                              className="c2 submit-button"
                              disabled={false}
                              type="submit"
                            >
                              <button
                                className="c2 submit-button btn btn-default"
                                disabled={false}
                                type="submit"
                              >
                                Filter
                              </button>
                            </Button>
                          </Button>
                        </div>
                        <div
                          className="form-group"
                          style={
                            Object {
                              "marginLeft": 5,
                            }
                          }
                        >
                          <Button
                            className="reset-button"
                            onClick={[Function]}
                            type="reset"
                          >
                            <Button
                              active={false}
                              block={false}
                              bsClass="btn"
                              bsStyle="default"
                              className="c2 reset-button"
                              disabled={false}
                              onClick={[Function]}
                              type="reset"
                            >
                              <button
                                className="c2 reset-button btn btn-default"
                                disabled={false}
                                onClick={[Function]}
                                type="reset"
                              >
                                Reset
                              </button>
                            </Button>
                          </Button>
                        </div>
                      </form>
                    </div>
                  </SearchForm>
                  <DataTable
                    className="scrollable"
                    dataRowFormatter={[Function]}
                    displayKey="value"
                    filterBy=""
                    filterKeys={Array []}
                    filterLabel="Filter"
                    filterSuggestions={Array []}
                    headerCellFormatter={[Function]}
                    headers={
                      Array [
                        "Title",
                        "Type",
                        "Description",
                        "Action",
                      ]
                    }
                    id="entity-list"
                    noDataText="No data available."
                    rowClassName=""
                    rows={Array []}
                    sortBy={[Function]}
                    useResponsiveTable={true}
                  >
                    <div>
                      <div
                        className="row "
                      >
                        <div
                          className="col-md-12"
                        >
                          <div
                            className="data-table table-responsive"
                            id="entity-list"
                          >
                            <p>
                              No data available.
                            </p>
                          </div>
                        </div>
                      </div>
                    </div>
                  </DataTable>
                </div>
              </ContentPackEntitiesList>
              <ContentPackParameterList
                appliedParameter={Object {}}
                contentPack={
                  Object {
                    "description": "descr",
                    "entities": Array [],
                    "id": "dead-beef",
                    "name": "name",
                    "parameters": Array [],
                    "rev": 1,
                    "summary": "summary",
                    "url": "http://example.com",
                    "v": 1,
                    "vendor": "vendor",
                  }
                }
                onAddParameter={[Function]}
                onDeleteParameter={[Function]}
                readOnly={true}
              >
                <div>
                  <h2>
                    Parameters list
                  </h2>
                  <br />
                  <SearchForm
                    buttonLeftMargin={5}
                    focusAfterMount={false}
                    label={null}
                    loadingLabel="Loading..."
                    onQueryChange={[Function]}
                    onReset={[Function]}
                    onSearch={[Function]}
                    placeholder="Enter search query..."
                    query=""
                    queryHelpComponent={null}
                    queryWidth="auto"
                    resetButtonLabel="Reset"
                    searchBsStyle="default"
                    searchButtonLabel="Filter"
                    topMargin={15}
                    useLoadingState={false}
                    wrapperClass="search"
                  >
                    <div
                      className="search"
                      style={
                        Object {
                          "marginTop": 15,
                        }
                      }
                    >
                      <form
                        className="form-inline"
                        onSubmit={[Function]}
                      >
                        <div
                          className="form-group has-feedback"
                        >
                          <input
                            autoComplete="off"
                            autoFocus={false}
                            className="query form-control"
                            id="common-search-form-query-input"
                            onChange={[Function]}
                            placeholder="Enter search query..."
                            spellCheck="false"
                            style={
                              Object {
                                "width": "auto",
                              }
                            }
                            type="text"
                            value=""
                          />
                        </div>
                        <div
                          className="form-group"
                          style={
                            Object {
                              "marginLeft": 5,
                            }
                          }
                        >
                          <Button
                            bsStyle="default"
                            className="submit-button"
                            disabled={false}
                            type="submit"
                          >
                            <Button
                              active={false}
                              block={false}
                              bsClass="btn"
                              bsStyle="default"
                              className="c2 submit-button"
                              disabled={false}
                              type="submit"
                            >
                              <button
                                className="c2 submit-button btn btn-default"
                                disabled={false}
                                type="submit"
                              >
                                Filter
                              </button>
                            </Button>
                          </Button>
                        </div>
                        <div
                          className="form-group"
                          style={
                            Object {
                              "marginLeft": 5,
                            }
                          }
                        >
                          <Button
                            className="reset-button"
                            onClick={[Function]}
                            type="reset"
                          >
                            <Button
                              active={false}
                              block={false}
                              bsClass="btn"
                              bsStyle="default"
                              className="c2 reset-button"
                              disabled={false}
                              onClick={[Function]}
                              type="reset"
                            >
                              <button
                                className="c2 reset-button btn btn-default"
                                disabled={false}
                                onClick={[Function]}
                                type="reset"
                              >
                                Reset
                              </button>
                            </Button>
                          </Button>
                        </div>
                      </form>
                    </div>
                  </SearchForm>
                  <DataTable
                    className="scrollable"
                    dataRowFormatter={[Function]}
                    displayKey="value"
                    filterBy=""
                    filterKeys={Array []}
                    filterLabel="Filter"
                    filterSuggestions={Array []}
                    headerCellFormatter={[Function]}
                    headers={
                      Array [
                        "Title",
                        "Name",
                        "Description",
                        "Value Type",
                        "Default Value",
                        "Used",
                      ]
                    }
                    id="parameter-list"
                    noDataText="To use parameters for content packs, at first a parameter must be created and can then be applied to a entity."
                    rowClassName=""
                    rows={Array []}
                    sortByKey="title"
                    useResponsiveTable={true}
                  >
                    <div>
                      <div
                        className="row "
                      >
                        <div
                          className="col-md-12"
                        >
                          <div
                            className="data-table table-responsive"
                            id="parameter-list"
                          >
                            <p>
                              To use parameters for content packs, at first a parameter must be created and can then be applied to a entity.
                            </p>
                          </div>
                        </div>
                      </div>
                    </div>
                  </DataTable>
                </div>
              </ContentPackParameterList>
            </div>
          </Col>
        </div>
      </Row>
    </Row>
    <Row>
      <Row
        bsClass="row"
        className="c0"
        componentClass="div"
      >
        <div
          className="c0 row"
        >
          <Col
            bsClass="col"
            componentClass="div"
            sm={6}
          >
            <div
              className="col-sm-6"
            >
              <Button
                bsStyle="primary"
                id="create"
                onClick={[Function]}
              >
                <Button
                  active={false}
                  block={false}
                  bsClass="btn"
                  bsStyle="primary"
                  className="c2"
                  disabled={false}
                  id="create"
                  onClick={[Function]}
                >
                  <button
                    className="c2 btn btn-primary"
                    disabled={false}
                    id="create"
                    onClick={[Function]}
                    type="button"
                  >
                    Create
                  </button>
                </Button>
              </Button>
               
              <a
                download="content-pack-dead-beef-1.json"
                href="data:text/plain;charset=utf-8,%7B%0A%20%20%22v%22%3A%201%2C%0A%20%20%22id%22%3A%20%22dead-beef%22%2C%0A%20%20%22rev%22%3A%201%2C%0A%20%20%22name%22%3A%20%22name%22%2C%0A%20%20%22summary%22%3A%20%22summary%22%2C%0A%20%20%22description%22%3A%20%22descr%22%2C%0A%20%20%22vendor%22%3A%20%22vendor%22%2C%0A%20%20%22url%22%3A%20%22http%3A%2F%2Fexample.com%22%2C%0A%20%20%22parameters%22%3A%20%5B%5D%2C%0A%20%20%22entities%22%3A%20%5B%5D%0A%7D"
              >
                <Button
                  bsStyle="info"
                  id="download"
                  onClick={[Function]}
                >
                  <Button
                    active={false}
                    block={false}
                    bsClass="btn"
                    bsStyle="info"
                    className="c2"
                    disabled={false}
                    id="download"
                    onClick={[Function]}
                  >
                    <button
                      className="c2 btn btn-info"
                      disabled={false}
                      id="download"
                      onClick={[Function]}
                      type="button"
                    >
                      Create and Download
                    </button>
                  </Button>
                </Button>
              </a>
            </div>
          </Col>
        </div>
      </Row>
    </Row>
  </div>
</ContentPackPreview>
`;
