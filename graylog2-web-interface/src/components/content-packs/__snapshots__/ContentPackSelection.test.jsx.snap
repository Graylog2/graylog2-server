// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<ContentPackSelection /> should render with empty content pack 1`] = `
<ContentPackSelection
  contentPack={
    Object {
      "description": "",
      "entities": Array [],
      "id": "dead-beef",
      "name": "",
      "parameters": Array [],
      "rev": 1,
      "summary": "",
      "url": "",
      "v": 1,
      "vendor": "",
    }
  }
  edit={false}
  entities={Object {}}
  onStateChange={[Function]}
  selectedEntities={Object {}}
>
  <div>
    <Row>
<<<<<<< HEAD
      <Row
        bsClass="row"
        className="Row-sc-3iisrt-0 gPzTHl"
        componentClass="div"
      >
        <div
          className="Row-sc-3iisrt-0 gPzTHl row"
        >
          <Col
            bsClass="col"
            componentClass="div"
            lg={8}
            smOffset={1}
          >
            <div
              className="col-lg-8 col-sm-offset-1"
            >
              <h2>
                General Information
              </h2>
              <br />
              <form
                className="content-selection-form"
                id="content-selection-form"
                onSubmit={[Function]}
              >
                <fieldset>
                  <Input
                    addonAfter={null}
                    bsStyle={null}
                    buttonAfter={null}
                    help="Required. Give a descriptive name for this content pack."
                    id="name"
                    label="Name"
                    maxLength={250}
                    name="name"
                    onChange={[Function]}
                    placeholder=""
                    required={true}
                    type="text"
                    value=""
                  >
                    <Component
                      controlId="name"
                      validationState={null}
                    >
                      <FormGroup__StyledFormGroup
                        controlId="name"
                        validationState={null}
                      >
                        <FormGroup
                          bsClass="form-group"
                          className="FormGroup__StyledFormGroup-sc-1wv4cm9-0 giUuGy"
                          controlId="name"
                          validationState={null}
                        >
                          <div
                            className="FormGroup__StyledFormGroup-sc-1wv4cm9-0 giUuGy form-group"
                          >
                            <ControlLabel>
                              <ControlLabel
                                bsClass="control-label"
                                className="ControlLabel-sc-1edmum5-0 jKzIRX"
                                srOnly={false}
                              >
                                <label
                                  className="ControlLabel-sc-1edmum5-0 jKzIRX control-label"
                                  htmlFor="name"
                                >
                                  Name
                                </label>
                              </ControlLabel>
                            </ControlLabel>
                            <InputWrapper>
                              <span>
                                <FormControl
                                  componentClass="input"
                                  inputRef={[Function]}
                                  label="Name"
                                  maxLength={250}
                                  name="name"
                                  onChange={[Function]}
                                  placeholder=""
                                  required={true}
                                  type="text"
                                  value=""
                                >
                                  <FormControl
                                    bsClass="form-control"
                                    className="FormControl-sc-1amoaox-0 kmJcge"
                                    componentClass="input"
<<<<<<< HEAD
=======
=======
      <StyledComponent
        forwardedComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "Row-sc-3iisrt-0",
              "isStatic": false,
              "lastClassName": "bRJRJg",
              "rules": Array [
                "&.content{",
                [Function],
                "}",
              ],
            },
            "displayName": "Row",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "Row-sc-3iisrt-0",
            "target": [Function],
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
      >
        <Row
          bsClass="row"
          className="Row-sc-3iisrt-0 bRJRJg"
          componentClass="div"
        >
          <div
            className="Row-sc-3iisrt-0 bRJRJg row"
          >
            <Col
              bsClass="col"
              componentClass="div"
              lg={8}
              smOffset={1}
            >
              <div
                className="col-lg-8 col-sm-offset-1"
              >
                <h2>
                  General Information
                </h2>
                <br />
                <form
                  className="content-selection-form"
                  id="content-selection-form"
                  onSubmit={[Function]}
                >
                  <fieldset>
                    <Input
                      addonAfter={null}
                      bsStyle={null}
                      buttonAfter={null}
                      help="Required. Give a descriptive name for this content pack."
                      id="name"
                      label="Name"
                      maxLength={250}
                      name="name"
                      onChange={[Function]}
                      placeholder=""
                      required={true}
                      type="text"
                      value=""
                    >
                      <Component
                        controlId="name"
                        validationState={null}
                      >
                        <FormGroup__StyledFormGroup
                          controlId="name"
                          validationState={null}
                        >
                          <StyledComponent
                            controlId="name"
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "SIZES": Array [
                                  "large",
                                  "small",
                                ],
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "FormGroup__StyledFormGroup-sc-1wv4cm9-0",
                                  "isStatic": false,
                                  "lastClassName": "gcTkZc",
                                  "rules": Array [
                                    [Function],
                                  ],
                                },
                                "displayName": "FormGroup__StyledFormGroup",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "FormGroup__StyledFormGroup-sc-1wv4cm9-0",
                                "target": [Function],
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                            validationState={null}
                          >
                            <FormGroup
                              bsClass="form-group"
                              className="FormGroup__StyledFormGroup-sc-1wv4cm9-0 gcTkZc"
                              controlId="name"
                              validationState={null}
                            >
                              <div
                                className="FormGroup__StyledFormGroup-sc-1wv4cm9-0 gcTkZc form-group"
                              >
                                <ControlLabel>
                                  <StyledComponent
>>>>>>> 1634bb410f... snapshots
                                    forwardedComponent={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "attrs": Array [],
                                        "componentStyle": ComponentStyle {
                                          "componentId": "ControlLabel-sc-1edmum5-0",
                                          "isStatic": false,
<<<<<<< HEAD
                                          "lastClassName": "hBmgnF",
=======
                                          "lastClassName": "hCskeX",
>>>>>>> 1634bb410f... snapshots
                                          "rules": Array [
                                            [Function],
                                          ],
                                        },
                                        "displayName": "ControlLabel",
                                        "foldedComponentIds": Array [],
                                        "render": [Function],
                                        "styledComponentId": "ControlLabel-sc-1edmum5-0",
                                        "target": [Function],
                                        "toString": [Function],
                                        "warnTooManyClasses": [Function],
                                        "withComponent": [Function],
                                      }
                                    }
                                    forwardedRef={null}
<<<<<<< HEAD
>>>>>>> 46caba27d0... snapshots
                                    inputRef={[Function]}
                                    label="Name"
                                    maxLength={250}
                                    name="name"
                                    onChange={[Function]}
                                    placeholder=""
                                    required={true}
                                    type="text"
                                    value=""
                                  >
<<<<<<< HEAD
                                    <input
                                      className="FormControl-sc-1amoaox-0 kmJcge form-control"
                                      id="name"
=======
                                    <FormControl
                                      bsClass="form-control"
                                      className="FormControl-sc-1amoaox-0 hBmgnF"
=======
                                  >
                                    <ControlLabel
                                      bsClass="control-label"
                                      className="ControlLabel-sc-1edmum5-0 hCskeX"
                                      srOnly={false}
                                    >
                                      <label
                                        className="ControlLabel-sc-1edmum5-0 hCskeX control-label"
                                        htmlFor="name"
                                      >
                                        Name
                                      </label>
                                    </ControlLabel>
                                  </StyledComponent>
                                </ControlLabel>
                                <InputWrapper>
                                  <span>
                                    <FormControl
>>>>>>> 1634bb410f... snapshots
                                      componentClass="input"
                                      inputRef={[Function]}
>>>>>>> 46caba27d0... snapshots
                                      label="Name"
                                      maxLength={250}
                                      name="name"
                                      onChange={[Function]}
                                      placeholder=""
                                      required={true}
                                      type="text"
                                      value=""
<<<<<<< HEAD
                                    />
                                  </FormControl>
=======
                                    >
<<<<<<< HEAD
                                      <input
                                        className="FormControl-sc-1amoaox-0 hBmgnF form-control"
                                        id="name"
=======
                                      <StyledComponent
                                        componentClass="input"
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "Feedback": [Function],
                                            "SIZES": Array [
                                              "small",
                                              "large",
                                            ],
                                            "Static": [Function],
                                            "attrs": Array [],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "FormControl-sc-1amoaox-0",
                                              "isStatic": false,
                                              "lastClassName": "eXfwDC",
                                              "rules": Array [
                                                [Function],
                                              ],
                                            },
                                            "displayName": "FormControl",
                                            "foldedComponentIds": Array [],
                                            "render": [Function],
                                            "styledComponentId": "FormControl-sc-1amoaox-0",
                                            "target": [Function],
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                        inputRef={[Function]}
>>>>>>> 1634bb410f... snapshots
                                        label="Name"
                                        maxLength={250}
                                        name="name"
                                        onChange={[Function]}
                                        placeholder=""
                                        required={true}
                                        type="text"
                                        value=""
                                      >
                                        <FormControl
                                          bsClass="form-control"
                                          className="FormControl-sc-1amoaox-0 eXfwDC"
                                          componentClass="input"
                                          inputRef={[Function]}
                                          label="Name"
                                          maxLength={250}
                                          name="name"
                                          onChange={[Function]}
                                          placeholder=""
                                          required={true}
                                          type="text"
                                          value=""
                                        >
                                          <input
                                            className="FormControl-sc-1amoaox-0 eXfwDC form-control"
                                            id="name"
                                            label="Name"
                                            maxLength={250}
                                            name="name"
                                            onChange={[Function]}
                                            placeholder=""
                                            required={true}
                                            type="text"
                                            value=""
                                          />
                                        </FormControl>
                                      </StyledComponent>
                                    </FormControl>
<<<<<<< HEAD
                                  </StyledComponent>
>>>>>>> 46caba27d0... snapshots
                                </FormControl>
                                <HelpBlock>
                                  <HelpBlock
                                    bsClass="help-block"
                                    className="HelpBlock-i8is92-0 fSaklp"
                                  >
                                    <span
                                      className="HelpBlock-i8is92-0 fSaklp help-block"
                                    >
                                      Required. Give a descriptive name for this content pack.
                                    </span>
                                  </HelpBlock>
                                </HelpBlock>
                              </span>
                            </InputWrapper>
                          </div>
                        </FormGroup>
                      </FormGroup__StyledFormGroup>
                    </Component>
                  </Input>
                  <Input
                    addonAfter={null}
                    bsStyle={null}
                    buttonAfter={null}
                    help="Required. Give a short summary of the content pack."
                    id="summary"
                    label="Summary"
                    maxLength={250}
                    name="summary"
                    onChange={[Function]}
                    placeholder=""
                    required={true}
                    type="text"
                    value=""
                  >
                    <Component
                      controlId="summary"
                      validationState={null}
                    >
                      <FormGroup__StyledFormGroup
                        controlId="summary"
                        validationState={null}
                      >
                        <FormGroup
                          bsClass="form-group"
                          className="FormGroup__StyledFormGroup-sc-1wv4cm9-0 giUuGy"
                          controlId="summary"
                          validationState={null}
                        >
                          <div
                            className="FormGroup__StyledFormGroup-sc-1wv4cm9-0 giUuGy form-group"
                          >
                            <ControlLabel>
                              <ControlLabel
                                bsClass="control-label"
                                className="ControlLabel-sc-1edmum5-0 jKzIRX"
                                srOnly={false}
                              >
                                <label
                                  className="ControlLabel-sc-1edmum5-0 jKzIRX control-label"
                                  htmlFor="summary"
                                >
                                  Summary
                                </label>
                              </ControlLabel>
                            </ControlLabel>
                            <InputWrapper>
                              <span>
                                <FormControl
                                  componentClass="input"
                                  inputRef={[Function]}
                                  label="Summary"
                                  maxLength={250}
                                  name="summary"
                                  onChange={[Function]}
                                  placeholder=""
                                  required={true}
                                  type="text"
                                  value=""
                                >
                                  <FormControl
                                    bsClass="form-control"
                                    className="FormControl-sc-1amoaox-0 kmJcge"
                                    componentClass="input"
<<<<<<< HEAD
=======
=======
                                    <HelpBlock>
                                      <StyledComponent
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "attrs": Array [],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "HelpBlock-i8is92-0",
                                              "isStatic": false,
                                              "lastClassName": "kxWRDS",
                                              "rules": Array [
                                                [Function],
                                              ],
                                            },
                                            "displayName": "HelpBlock",
                                            "foldedComponentIds": Array [],
                                            "render": [Function],
                                            "styledComponentId": "HelpBlock-i8is92-0",
                                            "target": [Function],
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                      >
                                        <HelpBlock
                                          bsClass="help-block"
                                          className="HelpBlock-i8is92-0 kxWRDS"
                                        >
                                          <span
                                            className="HelpBlock-i8is92-0 kxWRDS help-block"
                                          >
                                            Required. Give a descriptive name for this content pack.
                                          </span>
                                        </HelpBlock>
                                      </StyledComponent>
                                    </HelpBlock>
                                  </span>
                                </InputWrapper>
                              </div>
                            </FormGroup>
                          </StyledComponent>
                        </FormGroup__StyledFormGroup>
                      </Component>
                    </Input>
                    <Input
                      addonAfter={null}
                      bsStyle={null}
                      buttonAfter={null}
                      help="Required. Give a short summary of the content pack."
                      id="summary"
                      label="Summary"
                      maxLength={250}
                      name="summary"
                      onChange={[Function]}
                      placeholder=""
                      required={true}
                      type="text"
                      value=""
                    >
                      <Component
                        controlId="summary"
                        validationState={null}
                      >
                        <FormGroup__StyledFormGroup
                          controlId="summary"
                          validationState={null}
                        >
                          <StyledComponent
                            controlId="summary"
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "SIZES": Array [
                                  "large",
                                  "small",
                                ],
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "FormGroup__StyledFormGroup-sc-1wv4cm9-0",
                                  "isStatic": false,
                                  "lastClassName": "gcTkZc",
                                  "rules": Array [
                                    [Function],
                                  ],
                                },
                                "displayName": "FormGroup__StyledFormGroup",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "FormGroup__StyledFormGroup-sc-1wv4cm9-0",
                                "target": [Function],
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                            validationState={null}
                          >
                            <FormGroup
                              bsClass="form-group"
                              className="FormGroup__StyledFormGroup-sc-1wv4cm9-0 gcTkZc"
                              controlId="summary"
                              validationState={null}
                            >
                              <div
                                className="FormGroup__StyledFormGroup-sc-1wv4cm9-0 gcTkZc form-group"
                              >
                                <ControlLabel>
                                  <StyledComponent
>>>>>>> 1634bb410f... snapshots
                                    forwardedComponent={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "attrs": Array [],
                                        "componentStyle": ComponentStyle {
                                          "componentId": "ControlLabel-sc-1edmum5-0",
                                          "isStatic": false,
<<<<<<< HEAD
                                          "lastClassName": "hBmgnF",
=======
                                          "lastClassName": "hCskeX",
>>>>>>> 1634bb410f... snapshots
                                          "rules": Array [
                                            [Function],
                                          ],
                                        },
                                        "displayName": "ControlLabel",
                                        "foldedComponentIds": Array [],
                                        "render": [Function],
                                        "styledComponentId": "ControlLabel-sc-1edmum5-0",
                                        "target": [Function],
                                        "toString": [Function],
                                        "warnTooManyClasses": [Function],
                                        "withComponent": [Function],
                                      }
                                    }
                                    forwardedRef={null}
<<<<<<< HEAD
>>>>>>> 46caba27d0... snapshots
                                    inputRef={[Function]}
                                    label="Summary"
                                    maxLength={250}
                                    name="summary"
                                    onChange={[Function]}
                                    placeholder=""
                                    required={true}
                                    type="text"
                                    value=""
                                  >
<<<<<<< HEAD
                                    <input
                                      className="FormControl-sc-1amoaox-0 kmJcge form-control"
                                      id="summary"
=======
                                    <FormControl
                                      bsClass="form-control"
                                      className="FormControl-sc-1amoaox-0 hBmgnF"
=======
                                  >
                                    <ControlLabel
                                      bsClass="control-label"
                                      className="ControlLabel-sc-1edmum5-0 hCskeX"
                                      srOnly={false}
                                    >
                                      <label
                                        className="ControlLabel-sc-1edmum5-0 hCskeX control-label"
                                        htmlFor="summary"
                                      >
                                        Summary
                                      </label>
                                    </ControlLabel>
                                  </StyledComponent>
                                </ControlLabel>
                                <InputWrapper>
                                  <span>
                                    <FormControl
>>>>>>> 1634bb410f... snapshots
                                      componentClass="input"
                                      inputRef={[Function]}
>>>>>>> 46caba27d0... snapshots
                                      label="Summary"
                                      maxLength={250}
                                      name="summary"
                                      onChange={[Function]}
                                      placeholder=""
                                      required={true}
                                      type="text"
                                      value=""
<<<<<<< HEAD
                                    />
                                  </FormControl>
=======
                                    >
<<<<<<< HEAD
                                      <input
                                        className="FormControl-sc-1amoaox-0 hBmgnF form-control"
                                        id="summary"
=======
                                      <StyledComponent
                                        componentClass="input"
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "Feedback": [Function],
                                            "SIZES": Array [
                                              "small",
                                              "large",
                                            ],
                                            "Static": [Function],
                                            "attrs": Array [],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "FormControl-sc-1amoaox-0",
                                              "isStatic": false,
                                              "lastClassName": "eXfwDC",
                                              "rules": Array [
                                                [Function],
                                              ],
                                            },
                                            "displayName": "FormControl",
                                            "foldedComponentIds": Array [],
                                            "render": [Function],
                                            "styledComponentId": "FormControl-sc-1amoaox-0",
                                            "target": [Function],
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                        inputRef={[Function]}
>>>>>>> 1634bb410f... snapshots
                                        label="Summary"
                                        maxLength={250}
                                        name="summary"
                                        onChange={[Function]}
                                        placeholder=""
                                        required={true}
                                        type="text"
                                        value=""
<<<<<<< HEAD
                                      />
                                    </FormControl>
                                  </StyledComponent>
>>>>>>> 46caba27d0... snapshots
                                </FormControl>
                                <HelpBlock>
                                  <HelpBlock
                                    bsClass="help-block"
                                    className="HelpBlock-i8is92-0 fSaklp"
                                  >
                                    <span
                                      className="HelpBlock-i8is92-0 fSaklp help-block"
                                    >
                                      Required. Give a short summary of the content pack.
                                    </span>
                                  </HelpBlock>
                                </HelpBlock>
                              </span>
                            </InputWrapper>
                          </div>
                        </FormGroup>
                      </FormGroup__StyledFormGroup>
                    </Component>
                  </Input>
                  <Input
                    addonAfter={null}
                    bsStyle={null}
                    buttonAfter={null}
                    help="Give a long description of the content pack in markdown."
                    id="description"
                    label="Description"
                    name="description"
                    onChange={[Function]}
                    placeholder=""
                    rows={6}
                    type="textarea"
                    value=""
                  >
                    <Component
                      controlId="description"
                      validationState={null}
                    >
                      <FormGroup__StyledFormGroup
                        controlId="description"
                        validationState={null}
                      >
                        <FormGroup
                          bsClass="form-group"
                          className="FormGroup__StyledFormGroup-sc-1wv4cm9-0 giUuGy"
                          controlId="description"
                          validationState={null}
                        >
                          <div
                            className="FormGroup__StyledFormGroup-sc-1wv4cm9-0 giUuGy form-group"
                          >
                            <ControlLabel>
                              <ControlLabel
                                bsClass="control-label"
                                className="ControlLabel-sc-1edmum5-0 jKzIRX"
                                srOnly={false}
                              >
                                <label
                                  className="ControlLabel-sc-1edmum5-0 jKzIRX control-label"
                                  htmlFor="description"
                                >
                                  Description
                                </label>
                              </ControlLabel>
                            </ControlLabel>
                            <InputWrapper>
                              <span>
                                <FormControl
                                  componentClass="textarea"
                                  inputRef={[Function]}
                                  label="Description"
                                  name="description"
                                  onChange={[Function]}
                                  placeholder=""
                                  rows={6}
                                  type="textarea"
                                  value=""
                                >
                                  <FormControl
                                    bsClass="form-control"
                                    className="FormControl-sc-1amoaox-0 kmJcge"
                                    componentClass="textarea"
<<<<<<< HEAD
=======
=======
                                      >
                                        <FormControl
                                          bsClass="form-control"
                                          className="FormControl-sc-1amoaox-0 eXfwDC"
                                          componentClass="input"
                                          inputRef={[Function]}
                                          label="Summary"
                                          maxLength={250}
                                          name="summary"
                                          onChange={[Function]}
                                          placeholder=""
                                          required={true}
                                          type="text"
                                          value=""
                                        >
                                          <input
                                            className="FormControl-sc-1amoaox-0 eXfwDC form-control"
                                            id="summary"
                                            label="Summary"
                                            maxLength={250}
                                            name="summary"
                                            onChange={[Function]}
                                            placeholder=""
                                            required={true}
                                            type="text"
                                            value=""
                                          />
                                        </FormControl>
                                      </StyledComponent>
                                    </FormControl>
                                    <HelpBlock>
                                      <StyledComponent
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "attrs": Array [],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "HelpBlock-i8is92-0",
                                              "isStatic": false,
                                              "lastClassName": "kxWRDS",
                                              "rules": Array [
                                                [Function],
                                              ],
                                            },
                                            "displayName": "HelpBlock",
                                            "foldedComponentIds": Array [],
                                            "render": [Function],
                                            "styledComponentId": "HelpBlock-i8is92-0",
                                            "target": [Function],
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                      >
                                        <HelpBlock
                                          bsClass="help-block"
                                          className="HelpBlock-i8is92-0 kxWRDS"
                                        >
                                          <span
                                            className="HelpBlock-i8is92-0 kxWRDS help-block"
                                          >
                                            Required. Give a short summary of the content pack.
                                          </span>
                                        </HelpBlock>
                                      </StyledComponent>
                                    </HelpBlock>
                                  </span>
                                </InputWrapper>
                              </div>
                            </FormGroup>
                          </StyledComponent>
                        </FormGroup__StyledFormGroup>
                      </Component>
                    </Input>
                    <Input
                      addonAfter={null}
                      bsStyle={null}
                      buttonAfter={null}
                      help="Give a long description of the content pack in markdown."
                      id="description"
                      label="Description"
                      name="description"
                      onChange={[Function]}
                      placeholder=""
                      rows={6}
                      type="textarea"
                      value=""
                    >
                      <Component
                        controlId="description"
                        validationState={null}
                      >
                        <FormGroup__StyledFormGroup
                          controlId="description"
                          validationState={null}
                        >
                          <StyledComponent
                            controlId="description"
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "SIZES": Array [
                                  "large",
                                  "small",
                                ],
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "FormGroup__StyledFormGroup-sc-1wv4cm9-0",
                                  "isStatic": false,
                                  "lastClassName": "gcTkZc",
                                  "rules": Array [
                                    [Function],
                                  ],
                                },
                                "displayName": "FormGroup__StyledFormGroup",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "FormGroup__StyledFormGroup-sc-1wv4cm9-0",
                                "target": [Function],
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                            validationState={null}
                          >
                            <FormGroup
                              bsClass="form-group"
                              className="FormGroup__StyledFormGroup-sc-1wv4cm9-0 gcTkZc"
                              controlId="description"
                              validationState={null}
                            >
                              <div
                                className="FormGroup__StyledFormGroup-sc-1wv4cm9-0 gcTkZc form-group"
                              >
                                <ControlLabel>
                                  <StyledComponent
>>>>>>> 1634bb410f... snapshots
                                    forwardedComponent={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "attrs": Array [],
                                        "componentStyle": ComponentStyle {
                                          "componentId": "ControlLabel-sc-1edmum5-0",
                                          "isStatic": false,
<<<<<<< HEAD
                                          "lastClassName": "hBmgnF",
=======
                                          "lastClassName": "hCskeX",
>>>>>>> 1634bb410f... snapshots
                                          "rules": Array [
                                            [Function],
                                          ],
                                        },
                                        "displayName": "ControlLabel",
                                        "foldedComponentIds": Array [],
                                        "render": [Function],
                                        "styledComponentId": "ControlLabel-sc-1edmum5-0",
                                        "target": [Function],
                                        "toString": [Function],
                                        "warnTooManyClasses": [Function],
                                        "withComponent": [Function],
                                      }
                                    }
                                    forwardedRef={null}
<<<<<<< HEAD
>>>>>>> 46caba27d0... snapshots
                                    inputRef={[Function]}
                                    label="Description"
                                    name="description"
                                    onChange={[Function]}
                                    placeholder=""
                                    rows={6}
                                    type="textarea"
                                    value=""
                                  >
<<<<<<< HEAD
                                    <textarea
                                      className="FormControl-sc-1amoaox-0 kmJcge form-control"
                                      id="description"
=======
                                    <FormControl
                                      bsClass="form-control"
                                      className="FormControl-sc-1amoaox-0 hBmgnF"
=======
                                  >
                                    <ControlLabel
                                      bsClass="control-label"
                                      className="ControlLabel-sc-1edmum5-0 hCskeX"
                                      srOnly={false}
                                    >
                                      <label
                                        className="ControlLabel-sc-1edmum5-0 hCskeX control-label"
                                        htmlFor="description"
                                      >
                                        Description
                                      </label>
                                    </ControlLabel>
                                  </StyledComponent>
                                </ControlLabel>
                                <InputWrapper>
                                  <span>
                                    <FormControl
>>>>>>> 1634bb410f... snapshots
                                      componentClass="textarea"
                                      inputRef={[Function]}
>>>>>>> 46caba27d0... snapshots
                                      label="Description"
                                      name="description"
                                      onChange={[Function]}
                                      placeholder=""
                                      rows={6}
                                      type="textarea"
                                      value=""
<<<<<<< HEAD
                                    />
                                  </FormControl>
=======
                                    >
<<<<<<< HEAD
                                      <textarea
                                        className="FormControl-sc-1amoaox-0 hBmgnF form-control"
                                        id="description"
=======
                                      <StyledComponent
                                        componentClass="textarea"
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "Feedback": [Function],
                                            "SIZES": Array [
                                              "small",
                                              "large",
                                            ],
                                            "Static": [Function],
                                            "attrs": Array [],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "FormControl-sc-1amoaox-0",
                                              "isStatic": false,
                                              "lastClassName": "eXfwDC",
                                              "rules": Array [
                                                [Function],
                                              ],
                                            },
                                            "displayName": "FormControl",
                                            "foldedComponentIds": Array [],
                                            "render": [Function],
                                            "styledComponentId": "FormControl-sc-1amoaox-0",
                                            "target": [Function],
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                        inputRef={[Function]}
>>>>>>> 1634bb410f... snapshots
                                        label="Description"
                                        name="description"
                                        onChange={[Function]}
                                        placeholder=""
                                        rows={6}
                                        type="textarea"
                                        value=""
                                      >
                                        <FormControl
                                          bsClass="form-control"
                                          className="FormControl-sc-1amoaox-0 eXfwDC"
                                          componentClass="textarea"
                                          inputRef={[Function]}
                                          label="Description"
                                          name="description"
                                          onChange={[Function]}
                                          placeholder=""
                                          rows={6}
                                          type="textarea"
                                          value=""
                                        >
                                          <textarea
                                            className="FormControl-sc-1amoaox-0 eXfwDC form-control"
                                            id="description"
                                            label="Description"
                                            name="description"
                                            onChange={[Function]}
                                            placeholder=""
                                            rows={6}
                                            type="textarea"
                                            value=""
                                          />
                                        </FormControl>
                                      </StyledComponent>
                                    </FormControl>
<<<<<<< HEAD
                                  </StyledComponent>
>>>>>>> 46caba27d0... snapshots
                                </FormControl>
                                <HelpBlock>
                                  <HelpBlock
                                    bsClass="help-block"
                                    className="HelpBlock-i8is92-0 fSaklp"
                                  >
                                    <span
                                      className="HelpBlock-i8is92-0 fSaklp help-block"
                                    >
                                      Give a long description of the content pack in markdown.
                                    </span>
                                  </HelpBlock>
                                </HelpBlock>
                              </span>
                            </InputWrapper>
                          </div>
                        </FormGroup>
                      </FormGroup__StyledFormGroup>
                    </Component>
                  </Input>
                  <Input
                    addonAfter={null}
                    bsStyle={null}
                    buttonAfter={null}
                    help="Required. Who did this content pack and how can they be reached, e.g. Name and email."
                    id="vendor"
                    label="Vendor"
                    maxLength={250}
                    name="vendor"
                    onChange={[Function]}
                    placeholder=""
                    required={true}
                    type="text"
                    value=""
                  >
                    <Component
                      controlId="vendor"
                      validationState={null}
                    >
                      <FormGroup__StyledFormGroup
                        controlId="vendor"
                        validationState={null}
                      >
                        <FormGroup
                          bsClass="form-group"
                          className="FormGroup__StyledFormGroup-sc-1wv4cm9-0 giUuGy"
                          controlId="vendor"
                          validationState={null}
                        >
                          <div
                            className="FormGroup__StyledFormGroup-sc-1wv4cm9-0 giUuGy form-group"
                          >
                            <ControlLabel>
                              <ControlLabel
                                bsClass="control-label"
                                className="ControlLabel-sc-1edmum5-0 jKzIRX"
                                srOnly={false}
                              >
                                <label
                                  className="ControlLabel-sc-1edmum5-0 jKzIRX control-label"
                                  htmlFor="vendor"
                                >
                                  Vendor
                                </label>
                              </ControlLabel>
                            </ControlLabel>
                            <InputWrapper>
                              <span>
                                <FormControl
                                  componentClass="input"
                                  inputRef={[Function]}
                                  label="Vendor"
                                  maxLength={250}
                                  name="vendor"
                                  onChange={[Function]}
                                  placeholder=""
                                  required={true}
                                  type="text"
                                  value=""
                                >
                                  <FormControl
                                    bsClass="form-control"
                                    className="FormControl-sc-1amoaox-0 kmJcge"
                                    componentClass="input"
<<<<<<< HEAD
=======
=======
                                    <HelpBlock>
                                      <StyledComponent
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "attrs": Array [],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "HelpBlock-i8is92-0",
                                              "isStatic": false,
                                              "lastClassName": "kxWRDS",
                                              "rules": Array [
                                                [Function],
                                              ],
                                            },
                                            "displayName": "HelpBlock",
                                            "foldedComponentIds": Array [],
                                            "render": [Function],
                                            "styledComponentId": "HelpBlock-i8is92-0",
                                            "target": [Function],
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                      >
                                        <HelpBlock
                                          bsClass="help-block"
                                          className="HelpBlock-i8is92-0 kxWRDS"
                                        >
                                          <span
                                            className="HelpBlock-i8is92-0 kxWRDS help-block"
                                          >
                                            Give a long description of the content pack in markdown.
                                          </span>
                                        </HelpBlock>
                                      </StyledComponent>
                                    </HelpBlock>
                                  </span>
                                </InputWrapper>
                              </div>
                            </FormGroup>
                          </StyledComponent>
                        </FormGroup__StyledFormGroup>
                      </Component>
                    </Input>
                    <Input
                      addonAfter={null}
                      bsStyle={null}
                      buttonAfter={null}
                      help="Required. Who did this content pack and how can they be reached, e.g. Name and email."
                      id="vendor"
                      label="Vendor"
                      maxLength={250}
                      name="vendor"
                      onChange={[Function]}
                      placeholder=""
                      required={true}
                      type="text"
                      value=""
                    >
                      <Component
                        controlId="vendor"
                        validationState={null}
                      >
                        <FormGroup__StyledFormGroup
                          controlId="vendor"
                          validationState={null}
                        >
                          <StyledComponent
                            controlId="vendor"
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "SIZES": Array [
                                  "large",
                                  "small",
                                ],
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "FormGroup__StyledFormGroup-sc-1wv4cm9-0",
                                  "isStatic": false,
                                  "lastClassName": "gcTkZc",
                                  "rules": Array [
                                    [Function],
                                  ],
                                },
                                "displayName": "FormGroup__StyledFormGroup",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "FormGroup__StyledFormGroup-sc-1wv4cm9-0",
                                "target": [Function],
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                            validationState={null}
                          >
                            <FormGroup
                              bsClass="form-group"
                              className="FormGroup__StyledFormGroup-sc-1wv4cm9-0 gcTkZc"
                              controlId="vendor"
                              validationState={null}
                            >
                              <div
                                className="FormGroup__StyledFormGroup-sc-1wv4cm9-0 gcTkZc form-group"
                              >
                                <ControlLabel>
                                  <StyledComponent
>>>>>>> 1634bb410f... snapshots
                                    forwardedComponent={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "attrs": Array [],
                                        "componentStyle": ComponentStyle {
                                          "componentId": "ControlLabel-sc-1edmum5-0",
                                          "isStatic": false,
<<<<<<< HEAD
                                          "lastClassName": "hBmgnF",
=======
                                          "lastClassName": "hCskeX",
>>>>>>> 1634bb410f... snapshots
                                          "rules": Array [
                                            [Function],
                                          ],
                                        },
                                        "displayName": "ControlLabel",
                                        "foldedComponentIds": Array [],
                                        "render": [Function],
                                        "styledComponentId": "ControlLabel-sc-1edmum5-0",
                                        "target": [Function],
                                        "toString": [Function],
                                        "warnTooManyClasses": [Function],
                                        "withComponent": [Function],
                                      }
                                    }
                                    forwardedRef={null}
<<<<<<< HEAD
>>>>>>> 46caba27d0... snapshots
                                    inputRef={[Function]}
                                    label="Vendor"
                                    maxLength={250}
                                    name="vendor"
                                    onChange={[Function]}
                                    placeholder=""
                                    required={true}
                                    type="text"
                                    value=""
                                  >
<<<<<<< HEAD
                                    <input
                                      className="FormControl-sc-1amoaox-0 kmJcge form-control"
                                      id="vendor"
=======
                                    <FormControl
                                      bsClass="form-control"
                                      className="FormControl-sc-1amoaox-0 hBmgnF"
=======
                                  >
                                    <ControlLabel
                                      bsClass="control-label"
                                      className="ControlLabel-sc-1edmum5-0 hCskeX"
                                      srOnly={false}
                                    >
                                      <label
                                        className="ControlLabel-sc-1edmum5-0 hCskeX control-label"
                                        htmlFor="vendor"
                                      >
                                        Vendor
                                      </label>
                                    </ControlLabel>
                                  </StyledComponent>
                                </ControlLabel>
                                <InputWrapper>
                                  <span>
                                    <FormControl
>>>>>>> 1634bb410f... snapshots
                                      componentClass="input"
                                      inputRef={[Function]}
>>>>>>> 46caba27d0... snapshots
                                      label="Vendor"
                                      maxLength={250}
                                      name="vendor"
                                      onChange={[Function]}
                                      placeholder=""
                                      required={true}
                                      type="text"
                                      value=""
<<<<<<< HEAD
                                    />
                                  </FormControl>
=======
                                    >
<<<<<<< HEAD
                                      <input
                                        className="FormControl-sc-1amoaox-0 hBmgnF form-control"
                                        id="vendor"
=======
                                      <StyledComponent
                                        componentClass="input"
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "Feedback": [Function],
                                            "SIZES": Array [
                                              "small",
                                              "large",
                                            ],
                                            "Static": [Function],
                                            "attrs": Array [],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "FormControl-sc-1amoaox-0",
                                              "isStatic": false,
                                              "lastClassName": "eXfwDC",
                                              "rules": Array [
                                                [Function],
                                              ],
                                            },
                                            "displayName": "FormControl",
                                            "foldedComponentIds": Array [],
                                            "render": [Function],
                                            "styledComponentId": "FormControl-sc-1amoaox-0",
                                            "target": [Function],
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                        inputRef={[Function]}
>>>>>>> 1634bb410f... snapshots
                                        label="Vendor"
                                        maxLength={250}
                                        name="vendor"
                                        onChange={[Function]}
                                        placeholder=""
                                        required={true}
                                        type="text"
                                        value=""
                                      >
                                        <FormControl
                                          bsClass="form-control"
                                          className="FormControl-sc-1amoaox-0 eXfwDC"
                                          componentClass="input"
                                          inputRef={[Function]}
                                          label="Vendor"
                                          maxLength={250}
                                          name="vendor"
                                          onChange={[Function]}
                                          placeholder=""
                                          required={true}
                                          type="text"
                                          value=""
                                        >
                                          <input
                                            className="FormControl-sc-1amoaox-0 eXfwDC form-control"
                                            id="vendor"
                                            label="Vendor"
                                            maxLength={250}
                                            name="vendor"
                                            onChange={[Function]}
                                            placeholder=""
                                            required={true}
                                            type="text"
                                            value=""
                                          />
                                        </FormControl>
                                      </StyledComponent>
                                    </FormControl>
<<<<<<< HEAD
                                  </StyledComponent>
>>>>>>> 46caba27d0... snapshots
                                </FormControl>
                                <HelpBlock>
                                  <HelpBlock
                                    bsClass="help-block"
                                    className="HelpBlock-i8is92-0 fSaklp"
                                  >
                                    <span
                                      className="HelpBlock-i8is92-0 fSaklp help-block"
                                    >
                                      Required. Who did this content pack and how can they be reached, e.g. Name and email.
                                    </span>
                                  </HelpBlock>
                                </HelpBlock>
                              </span>
                            </InputWrapper>
                          </div>
                        </FormGroup>
                      </FormGroup__StyledFormGroup>
                    </Component>
                  </Input>
                  <Input
                    addonAfter={null}
                    bsStyle={null}
                    buttonAfter={null}
                    help="Where can I find the content pack. e.g. github url"
                    id="url"
                    label="URL"
                    maxLength={250}
                    name="url"
                    onChange={[Function]}
                    placeholder=""
                    type="text"
                    value=""
                  >
                    <Component
                      controlId="url"
                      validationState={null}
                    >
                      <FormGroup__StyledFormGroup
                        controlId="url"
                        validationState={null}
                      >
                        <FormGroup
                          bsClass="form-group"
                          className="FormGroup__StyledFormGroup-sc-1wv4cm9-0 giUuGy"
                          controlId="url"
                          validationState={null}
                        >
                          <div
                            className="FormGroup__StyledFormGroup-sc-1wv4cm9-0 giUuGy form-group"
                          >
                            <ControlLabel>
                              <ControlLabel
                                bsClass="control-label"
                                className="ControlLabel-sc-1edmum5-0 jKzIRX"
                                srOnly={false}
                              >
                                <label
                                  className="ControlLabel-sc-1edmum5-0 jKzIRX control-label"
                                  htmlFor="url"
                                >
                                  URL
                                </label>
                              </ControlLabel>
                            </ControlLabel>
                            <InputWrapper>
                              <span>
                                <FormControl
                                  componentClass="input"
                                  inputRef={[Function]}
                                  label="URL"
                                  maxLength={250}
                                  name="url"
                                  onChange={[Function]}
                                  placeholder=""
                                  type="text"
                                  value=""
                                >
                                  <FormControl
                                    bsClass="form-control"
                                    className="FormControl-sc-1amoaox-0 kmJcge"
                                    componentClass="input"
<<<<<<< HEAD
=======
=======
                                    <HelpBlock>
                                      <StyledComponent
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "attrs": Array [],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "HelpBlock-i8is92-0",
                                              "isStatic": false,
                                              "lastClassName": "kxWRDS",
                                              "rules": Array [
                                                [Function],
                                              ],
                                            },
                                            "displayName": "HelpBlock",
                                            "foldedComponentIds": Array [],
                                            "render": [Function],
                                            "styledComponentId": "HelpBlock-i8is92-0",
                                            "target": [Function],
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                      >
                                        <HelpBlock
                                          bsClass="help-block"
                                          className="HelpBlock-i8is92-0 kxWRDS"
                                        >
                                          <span
                                            className="HelpBlock-i8is92-0 kxWRDS help-block"
                                          >
                                            Required. Who did this content pack and how can they be reached, e.g. Name and email.
                                          </span>
                                        </HelpBlock>
                                      </StyledComponent>
                                    </HelpBlock>
                                  </span>
                                </InputWrapper>
                              </div>
                            </FormGroup>
                          </StyledComponent>
                        </FormGroup__StyledFormGroup>
                      </Component>
                    </Input>
                    <Input
                      addonAfter={null}
                      bsStyle={null}
                      buttonAfter={null}
                      help="Where can I find the content pack. e.g. github url"
                      id="url"
                      label="URL"
                      maxLength={250}
                      name="url"
                      onChange={[Function]}
                      placeholder=""
                      type="text"
                      value=""
                    >
                      <Component
                        controlId="url"
                        validationState={null}
                      >
                        <FormGroup__StyledFormGroup
                          controlId="url"
                          validationState={null}
                        >
                          <StyledComponent
                            controlId="url"
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "SIZES": Array [
                                  "large",
                                  "small",
                                ],
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "FormGroup__StyledFormGroup-sc-1wv4cm9-0",
                                  "isStatic": false,
                                  "lastClassName": "gcTkZc",
                                  "rules": Array [
                                    [Function],
                                  ],
                                },
                                "displayName": "FormGroup__StyledFormGroup",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "FormGroup__StyledFormGroup-sc-1wv4cm9-0",
                                "target": [Function],
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                            validationState={null}
                          >
                            <FormGroup
                              bsClass="form-group"
                              className="FormGroup__StyledFormGroup-sc-1wv4cm9-0 gcTkZc"
                              controlId="url"
                              validationState={null}
                            >
                              <div
                                className="FormGroup__StyledFormGroup-sc-1wv4cm9-0 gcTkZc form-group"
                              >
                                <ControlLabel>
                                  <StyledComponent
>>>>>>> 1634bb410f... snapshots
                                    forwardedComponent={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "attrs": Array [],
                                        "componentStyle": ComponentStyle {
                                          "componentId": "ControlLabel-sc-1edmum5-0",
                                          "isStatic": false,
<<<<<<< HEAD
                                          "lastClassName": "hBmgnF",
=======
                                          "lastClassName": "hCskeX",
>>>>>>> 1634bb410f... snapshots
                                          "rules": Array [
                                            [Function],
                                          ],
                                        },
                                        "displayName": "ControlLabel",
                                        "foldedComponentIds": Array [],
                                        "render": [Function],
                                        "styledComponentId": "ControlLabel-sc-1edmum5-0",
                                        "target": [Function],
                                        "toString": [Function],
                                        "warnTooManyClasses": [Function],
                                        "withComponent": [Function],
                                      }
                                    }
                                    forwardedRef={null}
<<<<<<< HEAD
>>>>>>> 46caba27d0... snapshots
                                    inputRef={[Function]}
                                    label="URL"
                                    maxLength={250}
                                    name="url"
                                    onChange={[Function]}
                                    placeholder=""
                                    type="text"
                                    value=""
                                  >
<<<<<<< HEAD
                                    <input
                                      className="FormControl-sc-1amoaox-0 kmJcge form-control"
                                      id="url"
=======
                                    <FormControl
                                      bsClass="form-control"
                                      className="FormControl-sc-1amoaox-0 hBmgnF"
=======
                                  >
                                    <ControlLabel
                                      bsClass="control-label"
                                      className="ControlLabel-sc-1edmum5-0 hCskeX"
                                      srOnly={false}
                                    >
                                      <label
                                        className="ControlLabel-sc-1edmum5-0 hCskeX control-label"
                                        htmlFor="url"
                                      >
                                        URL
                                      </label>
                                    </ControlLabel>
                                  </StyledComponent>
                                </ControlLabel>
                                <InputWrapper>
                                  <span>
                                    <FormControl
>>>>>>> 1634bb410f... snapshots
                                      componentClass="input"
                                      inputRef={[Function]}
>>>>>>> 46caba27d0... snapshots
                                      label="URL"
                                      maxLength={250}
                                      name="url"
                                      onChange={[Function]}
                                      placeholder=""
                                      type="text"
                                      value=""
<<<<<<< HEAD
                                    />
                                  </FormControl>
=======
                                    >
<<<<<<< HEAD
                                      <input
                                        className="FormControl-sc-1amoaox-0 hBmgnF form-control"
                                        id="url"
=======
                                      <StyledComponent
                                        componentClass="input"
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "Feedback": [Function],
                                            "SIZES": Array [
                                              "small",
                                              "large",
                                            ],
                                            "Static": [Function],
                                            "attrs": Array [],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "FormControl-sc-1amoaox-0",
                                              "isStatic": false,
                                              "lastClassName": "eXfwDC",
                                              "rules": Array [
                                                [Function],
                                              ],
                                            },
                                            "displayName": "FormControl",
                                            "foldedComponentIds": Array [],
                                            "render": [Function],
                                            "styledComponentId": "FormControl-sc-1amoaox-0",
                                            "target": [Function],
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                        inputRef={[Function]}
>>>>>>> 1634bb410f... snapshots
                                        label="URL"
                                        maxLength={250}
                                        name="url"
                                        onChange={[Function]}
                                        placeholder=""
                                        type="text"
                                        value=""
                                      >
                                        <FormControl
                                          bsClass="form-control"
                                          className="FormControl-sc-1amoaox-0 eXfwDC"
                                          componentClass="input"
                                          inputRef={[Function]}
                                          label="URL"
                                          maxLength={250}
                                          name="url"
                                          onChange={[Function]}
                                          placeholder=""
                                          type="text"
                                          value=""
                                        >
                                          <input
                                            className="FormControl-sc-1amoaox-0 eXfwDC form-control"
                                            id="url"
                                            label="URL"
                                            maxLength={250}
                                            name="url"
                                            onChange={[Function]}
                                            placeholder=""
                                            type="text"
                                            value=""
                                          />
                                        </FormControl>
                                      </StyledComponent>
                                    </FormControl>
<<<<<<< HEAD
                                  </StyledComponent>
>>>>>>> 46caba27d0... snapshots
                                </FormControl>
                                <HelpBlock>
                                  <HelpBlock
                                    bsClass="help-block"
                                    className="HelpBlock-i8is92-0 fSaklp"
                                  >
                                    <span
                                      className="HelpBlock-i8is92-0 fSaklp help-block"
                                    >
                                      Where can I find the content pack. e.g. github url
                                    </span>
                                  </HelpBlock>
                                </HelpBlock>
                              </span>
                            </InputWrapper>
                          </div>
                        </FormGroup>
                      </FormGroup__StyledFormGroup>
                    </Component>
                  </Input>
                </fieldset>
              </form>
            </div>
          </Col>
        </div>
      </Row>
    </Row>
    <Row>
      <Row
        bsClass="row"
        className="Row-sc-3iisrt-0 gPzTHl"
        componentClass="div"
      >
        <div
          className="Row-sc-3iisrt-0 gPzTHl row"
        >
          <Col
            bsClass="col"
            componentClass="div"
            lg={8}
            smOffset={1}
          >
            <div
              className="col-lg-8 col-sm-offset-1"
            >
              <h2>
                Content Pack selection
              </h2>
            </div>
          </Col>
        </div>
      </Row>
    </Row>
    <Row>
      <Row
        bsClass="row"
        className="Row-sc-3iisrt-0 gPzTHl"
        componentClass="div"
      >
        <div
          className="Row-sc-3iisrt-0 gPzTHl row"
        >
          <Col
            bsClass="col"
            componentClass="div"
            lg={8}
            smOffset={1}
          >
            <div
              className="col-lg-8 col-sm-offset-1"
            >
              <SearchForm
                buttonLeftMargin={5}
                focusAfterMount={false}
                id="filter-input"
                label={null}
                loadingLabel="Loading..."
                onQueryChange={[Function]}
                onReset={[Function]}
                onSearch={[Function]}
                placeholder="Enter search query..."
                query=""
                queryHelpComponent={null}
                queryWidth="auto"
                resetButtonLabel="Reset"
                searchBsStyle="default"
                searchButtonLabel="Filter"
                topMargin={15}
                useLoadingState={false}
                wrapperClass="search"
              >
                <div
                  className="search"
                  style={
                    Object {
                      "marginTop": 15,
                    }
                  }
                >
                  <form
                    className="form-inline"
                    onSubmit={[Function]}
                  >
                    <div
                      className="form-group has-feedback"
                    >
                      <input
                        autoComplete="off"
                        autoFocus={false}
                        className="query form-control"
                        id="common-search-form-query-input"
                        onChange={[Function]}
                        placeholder="Enter search query..."
                        spellCheck="false"
                        style={
                          Object {
                            "width": "auto",
                          }
                        }
                        type="text"
                        value=""
                      />
                    </div>
                    <div
                      className="form-group"
                      style={
                        Object {
                          "marginLeft": 5,
                        }
                      }
                    >
                      <ForwardRef
                        bsStyle="default"
                        className="submit-button"
                        disabled={false}
                        type="submit"
                      >
                        <Button__StyledButton
=======
                                    <HelpBlock>
                                      <StyledComponent
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "attrs": Array [],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "HelpBlock-i8is92-0",
                                              "isStatic": false,
                                              "lastClassName": "kxWRDS",
                                              "rules": Array [
                                                [Function],
                                              ],
                                            },
                                            "displayName": "HelpBlock",
                                            "foldedComponentIds": Array [],
                                            "render": [Function],
                                            "styledComponentId": "HelpBlock-i8is92-0",
                                            "target": [Function],
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                      >
                                        <HelpBlock
                                          bsClass="help-block"
                                          className="HelpBlock-i8is92-0 kxWRDS"
                                        >
                                          <span
                                            className="HelpBlock-i8is92-0 kxWRDS help-block"
                                          >
                                            Where can I find the content pack. e.g. github url
                                          </span>
                                        </HelpBlock>
                                      </StyledComponent>
                                    </HelpBlock>
                                  </span>
                                </InputWrapper>
                              </div>
                            </FormGroup>
                          </StyledComponent>
                        </FormGroup__StyledFormGroup>
                      </Component>
                    </Input>
                  </fieldset>
                </form>
              </div>
            </Col>
          </div>
        </Row>
      </StyledComponent>
    </Row>
    <Row>
      <StyledComponent
        forwardedComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "Row-sc-3iisrt-0",
              "isStatic": false,
              "lastClassName": "bRJRJg",
              "rules": Array [
                "&.content{",
                [Function],
                "}",
              ],
            },
            "displayName": "Row",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "Row-sc-3iisrt-0",
            "target": [Function],
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
      >
        <Row
          bsClass="row"
          className="Row-sc-3iisrt-0 bRJRJg"
          componentClass="div"
        >
          <div
            className="Row-sc-3iisrt-0 bRJRJg row"
          >
            <Col
              bsClass="col"
              componentClass="div"
              lg={8}
              smOffset={1}
            >
              <div
                className="col-lg-8 col-sm-offset-1"
              >
                <h2>
                  Content Pack selection
                </h2>
              </div>
            </Col>
          </div>
        </Row>
      </StyledComponent>
    </Row>
    <Row>
      <StyledComponent
        forwardedComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "Row-sc-3iisrt-0",
              "isStatic": false,
              "lastClassName": "bRJRJg",
              "rules": Array [
                "&.content{",
                [Function],
                "}",
              ],
            },
            "displayName": "Row",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "Row-sc-3iisrt-0",
            "target": [Function],
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
      >
        <Row
          bsClass="row"
          className="Row-sc-3iisrt-0 bRJRJg"
          componentClass="div"
        >
          <div
            className="Row-sc-3iisrt-0 bRJRJg row"
          >
            <Col
              bsClass="col"
              componentClass="div"
              lg={8}
              smOffset={1}
            >
              <div
                className="col-lg-8 col-sm-offset-1"
              >
                <SearchForm
                  buttonLeftMargin={5}
                  focusAfterMount={false}
                  id="filter-input"
                  label={null}
                  loadingLabel="Loading..."
                  onQueryChange={[Function]}
                  onReset={[Function]}
                  onSearch={[Function]}
                  placeholder="Enter search query..."
                  query=""
                  queryHelpComponent={null}
                  queryWidth="auto"
                  resetButtonLabel="Reset"
                  searchBsStyle="default"
                  searchButtonLabel="Filter"
                  topMargin={15}
                  useLoadingState={false}
                  wrapperClass="search"
                >
                  <div
                    className="search"
                    style={
                      Object {
                        "marginTop": 15,
                      }
                    }
                  >
                    <form
                      className="form-inline"
                      onSubmit={[Function]}
                    >
                      <div
                        className="form-group has-feedback"
                      >
                        <input
                          autoComplete="off"
                          autoFocus={false}
                          className="query form-control"
                          id="common-search-form-query-input"
                          onChange={[Function]}
                          placeholder="Enter search query..."
                          spellCheck="false"
                          style={
                            Object {
                              "width": "auto",
                            }
                          }
                          type="text"
                          value=""
                        />
                      </div>
                      <div
                        className="form-group"
                        style={
                          Object {
                            "marginLeft": 5,
                          }
                        }
                      >
                        <ForwardRef
>>>>>>> 1634bb410f... snapshots
                          bsStyle="default"
                          className="submit-button"
                          disabled={false}
                          type="submit"
                        >
                          <Button__StyledButton
                            bsStyle="default"
<<<<<<< HEAD
                            className="Button__StyledButton-c9cbmb-0 laZUlH submit-button"
                            disabled={false}
                            type="submit"
                          >
                            <button
                              className="Button__StyledButton-c9cbmb-0 laZUlH submit-button btn btn-default"
=======
                            className="submit-button"
                            disabled={false}
                            type="submit"
                          >
                            <StyledComponent
                              bsStyle="default"
                              className="submit-button"
>>>>>>> 1634bb410f... snapshots
                              disabled={false}
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "SIZES": Array [
                                    "large",
                                    "small",
                                    "xsmall",
                                  ],
                                  "STYLES": Array [
                                    "success",
                                    "warning",
                                    "danger",
                                    "info",
                                    "default",
                                    "primary",
                                    "link",
                                  ],
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "Button__StyledButton-c9cbmb-0",
                                    "isStatic": false,
                                    "lastClassName": "hpBclA",
                                    "rules": Array [
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Button__StyledButton",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "Button__StyledButton-c9cbmb-0",
                                  "target": [Function],
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                              type="submit"
                            >
<<<<<<< HEAD
                              Filter
                            </button>
                          </Button>
                        </Button__StyledButton>
                      </ForwardRef>
                    </div>
                    <div
                      className="form-group"
                      style={
                        Object {
                          "marginLeft": 5,
                        }
                      }
                    >
                      <ForwardRef
                        className="reset-button"
                        onClick={[Function]}
                        type="reset"
                      >
                        <Button__StyledButton
=======
                              <Button
                                active={false}
                                block={false}
                                bsClass="btn"
                                bsStyle="default"
                                className="Button__StyledButton-c9cbmb-0 hpBclA submit-button"
                                disabled={false}
                                type="submit"
                              >
                                <button
                                  className="Button__StyledButton-c9cbmb-0 hpBclA submit-button btn btn-default"
                                  disabled={false}
                                  type="submit"
                                >
                                  Filter
                                </button>
                              </Button>
                            </StyledComponent>
                          </Button__StyledButton>
                        </ForwardRef>
                      </div>
                      <div
                        className="form-group"
                        style={
                          Object {
                            "marginLeft": 5,
                          }
                        }
                      >
                        <ForwardRef
>>>>>>> 1634bb410f... snapshots
                          className="reset-button"
                          onClick={[Function]}
                          type="reset"
                        >
<<<<<<< HEAD
                          <Button
                            active={false}
                            block={false}
                            bsClass="btn"
                            bsStyle="default"
                            className="Button__StyledButton-c9cbmb-0 laZUlH reset-button"
                            disabled={false}
                            onClick={[Function]}
                            type="reset"
                          >
                            <button
                              className="Button__StyledButton-c9cbmb-0 laZUlH reset-button btn btn-default"
                              disabled={false}
                              onClick={[Function]}
                              type="reset"
                            >
                              Reset
                            </button>
                          </Button>
                        </Button__StyledButton>
                      </ForwardRef>
                    </div>
                  </form>
                </div>
              </SearchForm>
            </div>
          </Col>
        </div>
      </Row>
    </Row>
    <Row>
      <Row
        bsClass="row"
        className="Row-sc-3iisrt-0 gPzTHl"
        componentClass="div"
      >
        <div
          className="Row-sc-3iisrt-0 gPzTHl row"
        >
          <Col
            bsClass="col"
            componentClass="div"
            lg={8}
            sm={8}
            smOffset={1}
          >
            <div
              className="col-lg-8 col-sm-8 col-sm-offset-1"
            >
              <ExpandableList>
                <ul
                  className="list"
                />
              </ExpandableList>
            </div>
          </Col>
        </div>
      </Row>
=======
                          <Button__StyledButton
                            className="reset-button"
                            onClick={[Function]}
                            type="reset"
                          >
                            <StyledComponent
                              className="reset-button"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "SIZES": Array [
                                    "large",
                                    "small",
                                    "xsmall",
                                  ],
                                  "STYLES": Array [
                                    "success",
                                    "warning",
                                    "danger",
                                    "info",
                                    "default",
                                    "primary",
                                    "link",
                                  ],
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "Button__StyledButton-c9cbmb-0",
                                    "isStatic": false,
                                    "lastClassName": "hpBclA",
                                    "rules": Array [
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Button__StyledButton",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "Button__StyledButton-c9cbmb-0",
                                  "target": [Function],
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                              onClick={[Function]}
                              type="reset"
                            >
                              <Button
                                active={false}
                                block={false}
                                bsClass="btn"
                                bsStyle="default"
                                className="Button__StyledButton-c9cbmb-0 hpBclA reset-button"
                                disabled={false}
                                onClick={[Function]}
                                type="reset"
                              >
                                <button
                                  className="Button__StyledButton-c9cbmb-0 hpBclA reset-button btn btn-default"
                                  disabled={false}
                                  onClick={[Function]}
                                  type="reset"
                                >
                                  Reset
                                </button>
                              </Button>
                            </StyledComponent>
                          </Button__StyledButton>
                        </ForwardRef>
                      </div>
                    </form>
                  </div>
                </SearchForm>
              </div>
            </Col>
          </div>
        </Row>
      </StyledComponent>
    </Row>
    <Row>
      <StyledComponent
        forwardedComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "Row-sc-3iisrt-0",
              "isStatic": false,
              "lastClassName": "bRJRJg",
              "rules": Array [
                "&.content{",
                [Function],
                "}",
              ],
            },
            "displayName": "Row",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "Row-sc-3iisrt-0",
            "target": [Function],
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
      >
        <Row
          bsClass="row"
          className="Row-sc-3iisrt-0 bRJRJg"
          componentClass="div"
        >
          <div
            className="Row-sc-3iisrt-0 bRJRJg row"
          >
            <Col
              bsClass="col"
              componentClass="div"
              lg={8}
              sm={8}
              smOffset={1}
            >
              <div
                className="col-lg-8 col-sm-8 col-sm-offset-1"
              >
                <ExpandableList>
                  <ul
                    className="list"
                  />
                </ExpandableList>
              </div>
            </Col>
          </div>
        </Row>
      </StyledComponent>
>>>>>>> 1634bb410f... snapshots
    </Row>
  </div>
</ContentPackSelection>
`;

exports[`<ContentPackSelection /> should render with filled content pack 1`] = `
<ContentPackSelection
  contentPack={
    Object {
      "description": "description",
      "entities": Array [],
      "id": "dead-beef",
      "name": "name",
      "parameters": Array [],
      "rev": 1,
      "summary": "summary",
      "url": "http://example.com",
      "v": 1,
      "vendor": "vendor",
    }
  }
  edit={true}
  entities={
    Object {
      "spaceship": Array [
        Object {
          "constraints": Array [],
          "data": Object {
            "title": Object {
              "type": "string",
              "value": "breq",
            },
          },
          "id": "beef123",
          "type": Object {
            "name": "spaceship",
            "version": "1",
          },
          "v": "1",
        },
      ],
    }
  }
  onStateChange={[Function]}
  selectedEntities={Object {}}
>
  <div>
    <Row>
<<<<<<< HEAD
      <Row
        bsClass="row"
        className="Row-sc-3iisrt-0 gPzTHl"
        componentClass="div"
      >
        <div
          className="Row-sc-3iisrt-0 gPzTHl row"
        >
          <Col
            bsClass="col"
            componentClass="div"
            lg={8}
            smOffset={1}
          >
            <div
              className="col-lg-8 col-sm-offset-1"
            >
              <h2>
                General Information
              </h2>
              <br />
              <form
                className="content-selection-form"
                id="content-selection-form"
                onSubmit={[Function]}
              >
                <fieldset>
                  <Input
                    addonAfter={null}
                    bsStyle={null}
                    buttonAfter={null}
                    help="Required. Give a descriptive name for this content pack."
                    id="name"
                    label="Name"
                    maxLength={250}
                    name="name"
                    onChange={[Function]}
                    placeholder=""
                    required={true}
                    type="text"
                    value="name"
                  >
                    <Component
                      controlId="name"
                      validationState={null}
                    >
                      <FormGroup__StyledFormGroup
                        controlId="name"
                        validationState={null}
                      >
                        <FormGroup
                          bsClass="form-group"
                          className="FormGroup__StyledFormGroup-sc-1wv4cm9-0 giUuGy"
                          controlId="name"
                          validationState={null}
                        >
                          <div
                            className="FormGroup__StyledFormGroup-sc-1wv4cm9-0 giUuGy form-group"
                          >
                            <ControlLabel>
                              <ControlLabel
                                bsClass="control-label"
                                className="ControlLabel-sc-1edmum5-0 jKzIRX"
                                srOnly={false}
                              >
                                <label
                                  className="ControlLabel-sc-1edmum5-0 jKzIRX control-label"
                                  htmlFor="name"
                                >
                                  Name
                                </label>
                              </ControlLabel>
                            </ControlLabel>
                            <InputWrapper>
                              <span>
                                <FormControl
                                  componentClass="input"
                                  inputRef={[Function]}
                                  label="Name"
                                  maxLength={250}
                                  name="name"
                                  onChange={[Function]}
                                  placeholder=""
                                  required={true}
                                  type="text"
                                  value="name"
                                >
                                  <FormControl
                                    bsClass="form-control"
                                    className="FormControl-sc-1amoaox-0 kmJcge"
                                    componentClass="input"
<<<<<<< HEAD
=======
=======
      <StyledComponent
        forwardedComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "Row-sc-3iisrt-0",
              "isStatic": false,
              "lastClassName": "bRJRJg",
              "rules": Array [
                "&.content{",
                [Function],
                "}",
              ],
            },
            "displayName": "Row",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "Row-sc-3iisrt-0",
            "target": [Function],
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
      >
        <Row
          bsClass="row"
          className="Row-sc-3iisrt-0 bRJRJg"
          componentClass="div"
        >
          <div
            className="Row-sc-3iisrt-0 bRJRJg row"
          >
            <Col
              bsClass="col"
              componentClass="div"
              lg={8}
              smOffset={1}
            >
              <div
                className="col-lg-8 col-sm-offset-1"
              >
                <h2>
                  General Information
                </h2>
                <br />
                <form
                  className="content-selection-form"
                  id="content-selection-form"
                  onSubmit={[Function]}
                >
                  <fieldset>
                    <Input
                      addonAfter={null}
                      bsStyle={null}
                      buttonAfter={null}
                      help="Required. Give a descriptive name for this content pack."
                      id="name"
                      label="Name"
                      maxLength={250}
                      name="name"
                      onChange={[Function]}
                      placeholder=""
                      required={true}
                      type="text"
                      value="name"
                    >
                      <Component
                        controlId="name"
                        validationState={null}
                      >
                        <FormGroup__StyledFormGroup
                          controlId="name"
                          validationState={null}
                        >
                          <StyledComponent
                            controlId="name"
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "SIZES": Array [
                                  "large",
                                  "small",
                                ],
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "FormGroup__StyledFormGroup-sc-1wv4cm9-0",
                                  "isStatic": false,
                                  "lastClassName": "gcTkZc",
                                  "rules": Array [
                                    [Function],
                                  ],
                                },
                                "displayName": "FormGroup__StyledFormGroup",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "FormGroup__StyledFormGroup-sc-1wv4cm9-0",
                                "target": [Function],
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                            validationState={null}
                          >
                            <FormGroup
                              bsClass="form-group"
                              className="FormGroup__StyledFormGroup-sc-1wv4cm9-0 gcTkZc"
                              controlId="name"
                              validationState={null}
                            >
                              <div
                                className="FormGroup__StyledFormGroup-sc-1wv4cm9-0 gcTkZc form-group"
                              >
                                <ControlLabel>
                                  <StyledComponent
>>>>>>> 1634bb410f... snapshots
                                    forwardedComponent={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "attrs": Array [],
                                        "componentStyle": ComponentStyle {
                                          "componentId": "ControlLabel-sc-1edmum5-0",
                                          "isStatic": false,
<<<<<<< HEAD
                                          "lastClassName": "hBmgnF",
=======
                                          "lastClassName": "hCskeX",
>>>>>>> 1634bb410f... snapshots
                                          "rules": Array [
                                            [Function],
                                          ],
                                        },
                                        "displayName": "ControlLabel",
                                        "foldedComponentIds": Array [],
                                        "render": [Function],
                                        "styledComponentId": "ControlLabel-sc-1edmum5-0",
                                        "target": [Function],
                                        "toString": [Function],
                                        "warnTooManyClasses": [Function],
                                        "withComponent": [Function],
                                      }
                                    }
                                    forwardedRef={null}
<<<<<<< HEAD
>>>>>>> 46caba27d0... snapshots
                                    inputRef={[Function]}
                                    label="Name"
                                    maxLength={250}
                                    name="name"
                                    onChange={[Function]}
                                    placeholder=""
                                    required={true}
                                    type="text"
                                    value="name"
                                  >
<<<<<<< HEAD
                                    <input
                                      className="FormControl-sc-1amoaox-0 kmJcge form-control"
                                      id="name"
=======
                                    <FormControl
                                      bsClass="form-control"
                                      className="FormControl-sc-1amoaox-0 hBmgnF"
=======
                                  >
                                    <ControlLabel
                                      bsClass="control-label"
                                      className="ControlLabel-sc-1edmum5-0 hCskeX"
                                      srOnly={false}
                                    >
                                      <label
                                        className="ControlLabel-sc-1edmum5-0 hCskeX control-label"
                                        htmlFor="name"
                                      >
                                        Name
                                      </label>
                                    </ControlLabel>
                                  </StyledComponent>
                                </ControlLabel>
                                <InputWrapper>
                                  <span>
                                    <FormControl
>>>>>>> 1634bb410f... snapshots
                                      componentClass="input"
                                      inputRef={[Function]}
>>>>>>> 46caba27d0... snapshots
                                      label="Name"
                                      maxLength={250}
                                      name="name"
                                      onChange={[Function]}
                                      placeholder=""
                                      required={true}
                                      type="text"
                                      value="name"
<<<<<<< HEAD
                                    />
                                  </FormControl>
=======
                                    >
<<<<<<< HEAD
                                      <input
                                        className="FormControl-sc-1amoaox-0 hBmgnF form-control"
                                        id="name"
=======
                                      <StyledComponent
                                        componentClass="input"
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "Feedback": [Function],
                                            "SIZES": Array [
                                              "small",
                                              "large",
                                            ],
                                            "Static": [Function],
                                            "attrs": Array [],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "FormControl-sc-1amoaox-0",
                                              "isStatic": false,
                                              "lastClassName": "eXfwDC",
                                              "rules": Array [
                                                [Function],
                                              ],
                                            },
                                            "displayName": "FormControl",
                                            "foldedComponentIds": Array [],
                                            "render": [Function],
                                            "styledComponentId": "FormControl-sc-1amoaox-0",
                                            "target": [Function],
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                        inputRef={[Function]}
>>>>>>> 1634bb410f... snapshots
                                        label="Name"
                                        maxLength={250}
                                        name="name"
                                        onChange={[Function]}
                                        placeholder=""
                                        required={true}
                                        type="text"
                                        value="name"
                                      >
                                        <FormControl
                                          bsClass="form-control"
                                          className="FormControl-sc-1amoaox-0 eXfwDC"
                                          componentClass="input"
                                          inputRef={[Function]}
                                          label="Name"
                                          maxLength={250}
                                          name="name"
                                          onChange={[Function]}
                                          placeholder=""
                                          required={true}
                                          type="text"
                                          value="name"
                                        >
                                          <input
                                            className="FormControl-sc-1amoaox-0 eXfwDC form-control"
                                            id="name"
                                            label="Name"
                                            maxLength={250}
                                            name="name"
                                            onChange={[Function]}
                                            placeholder=""
                                            required={true}
                                            type="text"
                                            value="name"
                                          />
                                        </FormControl>
                                      </StyledComponent>
                                    </FormControl>
<<<<<<< HEAD
                                  </StyledComponent>
>>>>>>> 46caba27d0... snapshots
                                </FormControl>
                                <HelpBlock>
                                  <HelpBlock
                                    bsClass="help-block"
                                    className="HelpBlock-i8is92-0 fSaklp"
                                  >
                                    <span
                                      className="HelpBlock-i8is92-0 fSaklp help-block"
                                    >
                                      Required. Give a descriptive name for this content pack.
                                    </span>
                                  </HelpBlock>
                                </HelpBlock>
                              </span>
                            </InputWrapper>
                          </div>
                        </FormGroup>
                      </FormGroup__StyledFormGroup>
                    </Component>
                  </Input>
                  <Input
                    addonAfter={null}
                    bsStyle={null}
                    buttonAfter={null}
                    help="Required. Give a short summary of the content pack."
                    id="summary"
                    label="Summary"
                    maxLength={250}
                    name="summary"
                    onChange={[Function]}
                    placeholder=""
                    required={true}
                    type="text"
                    value="summary"
                  >
                    <Component
                      controlId="summary"
                      validationState={null}
                    >
                      <FormGroup__StyledFormGroup
                        controlId="summary"
                        validationState={null}
                      >
                        <FormGroup
                          bsClass="form-group"
                          className="FormGroup__StyledFormGroup-sc-1wv4cm9-0 giUuGy"
                          controlId="summary"
                          validationState={null}
                        >
                          <div
                            className="FormGroup__StyledFormGroup-sc-1wv4cm9-0 giUuGy form-group"
                          >
                            <ControlLabel>
                              <ControlLabel
                                bsClass="control-label"
                                className="ControlLabel-sc-1edmum5-0 jKzIRX"
                                srOnly={false}
                              >
                                <label
                                  className="ControlLabel-sc-1edmum5-0 jKzIRX control-label"
                                  htmlFor="summary"
                                >
                                  Summary
                                </label>
                              </ControlLabel>
                            </ControlLabel>
                            <InputWrapper>
                              <span>
                                <FormControl
                                  componentClass="input"
                                  inputRef={[Function]}
                                  label="Summary"
                                  maxLength={250}
                                  name="summary"
                                  onChange={[Function]}
                                  placeholder=""
                                  required={true}
                                  type="text"
                                  value="summary"
                                >
                                  <FormControl
                                    bsClass="form-control"
                                    className="FormControl-sc-1amoaox-0 kmJcge"
                                    componentClass="input"
<<<<<<< HEAD
=======
=======
                                    <HelpBlock>
                                      <StyledComponent
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "attrs": Array [],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "HelpBlock-i8is92-0",
                                              "isStatic": false,
                                              "lastClassName": "kxWRDS",
                                              "rules": Array [
                                                [Function],
                                              ],
                                            },
                                            "displayName": "HelpBlock",
                                            "foldedComponentIds": Array [],
                                            "render": [Function],
                                            "styledComponentId": "HelpBlock-i8is92-0",
                                            "target": [Function],
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                      >
                                        <HelpBlock
                                          bsClass="help-block"
                                          className="HelpBlock-i8is92-0 kxWRDS"
                                        >
                                          <span
                                            className="HelpBlock-i8is92-0 kxWRDS help-block"
                                          >
                                            Required. Give a descriptive name for this content pack.
                                          </span>
                                        </HelpBlock>
                                      </StyledComponent>
                                    </HelpBlock>
                                  </span>
                                </InputWrapper>
                              </div>
                            </FormGroup>
                          </StyledComponent>
                        </FormGroup__StyledFormGroup>
                      </Component>
                    </Input>
                    <Input
                      addonAfter={null}
                      bsStyle={null}
                      buttonAfter={null}
                      help="Required. Give a short summary of the content pack."
                      id="summary"
                      label="Summary"
                      maxLength={250}
                      name="summary"
                      onChange={[Function]}
                      placeholder=""
                      required={true}
                      type="text"
                      value="summary"
                    >
                      <Component
                        controlId="summary"
                        validationState={null}
                      >
                        <FormGroup__StyledFormGroup
                          controlId="summary"
                          validationState={null}
                        >
                          <StyledComponent
                            controlId="summary"
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "SIZES": Array [
                                  "large",
                                  "small",
                                ],
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "FormGroup__StyledFormGroup-sc-1wv4cm9-0",
                                  "isStatic": false,
                                  "lastClassName": "gcTkZc",
                                  "rules": Array [
                                    [Function],
                                  ],
                                },
                                "displayName": "FormGroup__StyledFormGroup",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "FormGroup__StyledFormGroup-sc-1wv4cm9-0",
                                "target": [Function],
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                            validationState={null}
                          >
                            <FormGroup
                              bsClass="form-group"
                              className="FormGroup__StyledFormGroup-sc-1wv4cm9-0 gcTkZc"
                              controlId="summary"
                              validationState={null}
                            >
                              <div
                                className="FormGroup__StyledFormGroup-sc-1wv4cm9-0 gcTkZc form-group"
                              >
                                <ControlLabel>
                                  <StyledComponent
>>>>>>> 1634bb410f... snapshots
                                    forwardedComponent={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "attrs": Array [],
                                        "componentStyle": ComponentStyle {
                                          "componentId": "ControlLabel-sc-1edmum5-0",
                                          "isStatic": false,
<<<<<<< HEAD
                                          "lastClassName": "hBmgnF",
=======
                                          "lastClassName": "hCskeX",
>>>>>>> 1634bb410f... snapshots
                                          "rules": Array [
                                            [Function],
                                          ],
                                        },
                                        "displayName": "ControlLabel",
                                        "foldedComponentIds": Array [],
                                        "render": [Function],
                                        "styledComponentId": "ControlLabel-sc-1edmum5-0",
                                        "target": [Function],
                                        "toString": [Function],
                                        "warnTooManyClasses": [Function],
                                        "withComponent": [Function],
                                      }
                                    }
                                    forwardedRef={null}
<<<<<<< HEAD
>>>>>>> 46caba27d0... snapshots
                                    inputRef={[Function]}
                                    label="Summary"
                                    maxLength={250}
                                    name="summary"
                                    onChange={[Function]}
                                    placeholder=""
                                    required={true}
                                    type="text"
                                    value="summary"
                                  >
<<<<<<< HEAD
                                    <input
                                      className="FormControl-sc-1amoaox-0 kmJcge form-control"
                                      id="summary"
=======
                                    <FormControl
                                      bsClass="form-control"
                                      className="FormControl-sc-1amoaox-0 hBmgnF"
=======
                                  >
                                    <ControlLabel
                                      bsClass="control-label"
                                      className="ControlLabel-sc-1edmum5-0 hCskeX"
                                      srOnly={false}
                                    >
                                      <label
                                        className="ControlLabel-sc-1edmum5-0 hCskeX control-label"
                                        htmlFor="summary"
                                      >
                                        Summary
                                      </label>
                                    </ControlLabel>
                                  </StyledComponent>
                                </ControlLabel>
                                <InputWrapper>
                                  <span>
                                    <FormControl
>>>>>>> 1634bb410f... snapshots
                                      componentClass="input"
                                      inputRef={[Function]}
>>>>>>> 46caba27d0... snapshots
                                      label="Summary"
                                      maxLength={250}
                                      name="summary"
                                      onChange={[Function]}
                                      placeholder=""
                                      required={true}
                                      type="text"
                                      value="summary"
<<<<<<< HEAD
                                    />
                                  </FormControl>
=======
                                    >
<<<<<<< HEAD
                                      <input
                                        className="FormControl-sc-1amoaox-0 hBmgnF form-control"
                                        id="summary"
=======
                                      <StyledComponent
                                        componentClass="input"
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "Feedback": [Function],
                                            "SIZES": Array [
                                              "small",
                                              "large",
                                            ],
                                            "Static": [Function],
                                            "attrs": Array [],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "FormControl-sc-1amoaox-0",
                                              "isStatic": false,
                                              "lastClassName": "eXfwDC",
                                              "rules": Array [
                                                [Function],
                                              ],
                                            },
                                            "displayName": "FormControl",
                                            "foldedComponentIds": Array [],
                                            "render": [Function],
                                            "styledComponentId": "FormControl-sc-1amoaox-0",
                                            "target": [Function],
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                        inputRef={[Function]}
>>>>>>> 1634bb410f... snapshots
                                        label="Summary"
                                        maxLength={250}
                                        name="summary"
                                        onChange={[Function]}
                                        placeholder=""
                                        required={true}
                                        type="text"
                                        value="summary"
<<<<<<< HEAD
                                      />
                                    </FormControl>
                                  </StyledComponent>
>>>>>>> 46caba27d0... snapshots
                                </FormControl>
                                <HelpBlock>
                                  <HelpBlock
                                    bsClass="help-block"
                                    className="HelpBlock-i8is92-0 fSaklp"
                                  >
                                    <span
                                      className="HelpBlock-i8is92-0 fSaklp help-block"
                                    >
                                      Required. Give a short summary of the content pack.
                                    </span>
                                  </HelpBlock>
                                </HelpBlock>
                              </span>
                            </InputWrapper>
                          </div>
                        </FormGroup>
                      </FormGroup__StyledFormGroup>
                    </Component>
                  </Input>
                  <Input
                    addonAfter={null}
                    bsStyle={null}
                    buttonAfter={null}
                    help="Give a long description of the content pack in markdown."
                    id="description"
                    label="Description"
                    name="description"
                    onChange={[Function]}
                    placeholder=""
                    rows={6}
                    type="textarea"
                    value="description"
                  >
                    <Component
                      controlId="description"
                      validationState={null}
                    >
                      <FormGroup__StyledFormGroup
                        controlId="description"
                        validationState={null}
                      >
                        <FormGroup
                          bsClass="form-group"
                          className="FormGroup__StyledFormGroup-sc-1wv4cm9-0 giUuGy"
                          controlId="description"
                          validationState={null}
                        >
                          <div
                            className="FormGroup__StyledFormGroup-sc-1wv4cm9-0 giUuGy form-group"
                          >
                            <ControlLabel>
                              <ControlLabel
                                bsClass="control-label"
                                className="ControlLabel-sc-1edmum5-0 jKzIRX"
                                srOnly={false}
                              >
                                <label
                                  className="ControlLabel-sc-1edmum5-0 jKzIRX control-label"
                                  htmlFor="description"
                                >
                                  Description
                                </label>
                              </ControlLabel>
                            </ControlLabel>
                            <InputWrapper>
                              <span>
                                <FormControl
                                  componentClass="textarea"
                                  inputRef={[Function]}
                                  label="Description"
                                  name="description"
                                  onChange={[Function]}
                                  placeholder=""
                                  rows={6}
                                  type="textarea"
                                  value="description"
                                >
                                  <FormControl
                                    bsClass="form-control"
                                    className="FormControl-sc-1amoaox-0 kmJcge"
                                    componentClass="textarea"
<<<<<<< HEAD
=======
=======
                                      >
                                        <FormControl
                                          bsClass="form-control"
                                          className="FormControl-sc-1amoaox-0 eXfwDC"
                                          componentClass="input"
                                          inputRef={[Function]}
                                          label="Summary"
                                          maxLength={250}
                                          name="summary"
                                          onChange={[Function]}
                                          placeholder=""
                                          required={true}
                                          type="text"
                                          value="summary"
                                        >
                                          <input
                                            className="FormControl-sc-1amoaox-0 eXfwDC form-control"
                                            id="summary"
                                            label="Summary"
                                            maxLength={250}
                                            name="summary"
                                            onChange={[Function]}
                                            placeholder=""
                                            required={true}
                                            type="text"
                                            value="summary"
                                          />
                                        </FormControl>
                                      </StyledComponent>
                                    </FormControl>
                                    <HelpBlock>
                                      <StyledComponent
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "attrs": Array [],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "HelpBlock-i8is92-0",
                                              "isStatic": false,
                                              "lastClassName": "kxWRDS",
                                              "rules": Array [
                                                [Function],
                                              ],
                                            },
                                            "displayName": "HelpBlock",
                                            "foldedComponentIds": Array [],
                                            "render": [Function],
                                            "styledComponentId": "HelpBlock-i8is92-0",
                                            "target": [Function],
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                      >
                                        <HelpBlock
                                          bsClass="help-block"
                                          className="HelpBlock-i8is92-0 kxWRDS"
                                        >
                                          <span
                                            className="HelpBlock-i8is92-0 kxWRDS help-block"
                                          >
                                            Required. Give a short summary of the content pack.
                                          </span>
                                        </HelpBlock>
                                      </StyledComponent>
                                    </HelpBlock>
                                  </span>
                                </InputWrapper>
                              </div>
                            </FormGroup>
                          </StyledComponent>
                        </FormGroup__StyledFormGroup>
                      </Component>
                    </Input>
                    <Input
                      addonAfter={null}
                      bsStyle={null}
                      buttonAfter={null}
                      help="Give a long description of the content pack in markdown."
                      id="description"
                      label="Description"
                      name="description"
                      onChange={[Function]}
                      placeholder=""
                      rows={6}
                      type="textarea"
                      value="description"
                    >
                      <Component
                        controlId="description"
                        validationState={null}
                      >
                        <FormGroup__StyledFormGroup
                          controlId="description"
                          validationState={null}
                        >
                          <StyledComponent
                            controlId="description"
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "SIZES": Array [
                                  "large",
                                  "small",
                                ],
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "FormGroup__StyledFormGroup-sc-1wv4cm9-0",
                                  "isStatic": false,
                                  "lastClassName": "gcTkZc",
                                  "rules": Array [
                                    [Function],
                                  ],
                                },
                                "displayName": "FormGroup__StyledFormGroup",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "FormGroup__StyledFormGroup-sc-1wv4cm9-0",
                                "target": [Function],
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                            validationState={null}
                          >
                            <FormGroup
                              bsClass="form-group"
                              className="FormGroup__StyledFormGroup-sc-1wv4cm9-0 gcTkZc"
                              controlId="description"
                              validationState={null}
                            >
                              <div
                                className="FormGroup__StyledFormGroup-sc-1wv4cm9-0 gcTkZc form-group"
                              >
                                <ControlLabel>
                                  <StyledComponent
>>>>>>> 1634bb410f... snapshots
                                    forwardedComponent={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "attrs": Array [],
                                        "componentStyle": ComponentStyle {
                                          "componentId": "ControlLabel-sc-1edmum5-0",
                                          "isStatic": false,
<<<<<<< HEAD
                                          "lastClassName": "hBmgnF",
=======
                                          "lastClassName": "hCskeX",
>>>>>>> 1634bb410f... snapshots
                                          "rules": Array [
                                            [Function],
                                          ],
                                        },
                                        "displayName": "ControlLabel",
                                        "foldedComponentIds": Array [],
                                        "render": [Function],
                                        "styledComponentId": "ControlLabel-sc-1edmum5-0",
                                        "target": [Function],
                                        "toString": [Function],
                                        "warnTooManyClasses": [Function],
                                        "withComponent": [Function],
                                      }
                                    }
                                    forwardedRef={null}
<<<<<<< HEAD
>>>>>>> 46caba27d0... snapshots
                                    inputRef={[Function]}
                                    label="Description"
                                    name="description"
                                    onChange={[Function]}
                                    placeholder=""
                                    rows={6}
                                    type="textarea"
                                    value="description"
                                  >
<<<<<<< HEAD
                                    <textarea
                                      className="FormControl-sc-1amoaox-0 kmJcge form-control"
                                      id="description"
=======
                                    <FormControl
                                      bsClass="form-control"
                                      className="FormControl-sc-1amoaox-0 hBmgnF"
=======
                                  >
                                    <ControlLabel
                                      bsClass="control-label"
                                      className="ControlLabel-sc-1edmum5-0 hCskeX"
                                      srOnly={false}
                                    >
                                      <label
                                        className="ControlLabel-sc-1edmum5-0 hCskeX control-label"
                                        htmlFor="description"
                                      >
                                        Description
                                      </label>
                                    </ControlLabel>
                                  </StyledComponent>
                                </ControlLabel>
                                <InputWrapper>
                                  <span>
                                    <FormControl
>>>>>>> 1634bb410f... snapshots
                                      componentClass="textarea"
                                      inputRef={[Function]}
>>>>>>> 46caba27d0... snapshots
                                      label="Description"
                                      name="description"
                                      onChange={[Function]}
                                      placeholder=""
                                      rows={6}
                                      type="textarea"
                                      value="description"
<<<<<<< HEAD
                                    />
                                  </FormControl>
=======
                                    >
<<<<<<< HEAD
                                      <textarea
                                        className="FormControl-sc-1amoaox-0 hBmgnF form-control"
                                        id="description"
=======
                                      <StyledComponent
                                        componentClass="textarea"
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "Feedback": [Function],
                                            "SIZES": Array [
                                              "small",
                                              "large",
                                            ],
                                            "Static": [Function],
                                            "attrs": Array [],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "FormControl-sc-1amoaox-0",
                                              "isStatic": false,
                                              "lastClassName": "eXfwDC",
                                              "rules": Array [
                                                [Function],
                                              ],
                                            },
                                            "displayName": "FormControl",
                                            "foldedComponentIds": Array [],
                                            "render": [Function],
                                            "styledComponentId": "FormControl-sc-1amoaox-0",
                                            "target": [Function],
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                        inputRef={[Function]}
>>>>>>> 1634bb410f... snapshots
                                        label="Description"
                                        name="description"
                                        onChange={[Function]}
                                        placeholder=""
                                        rows={6}
                                        type="textarea"
                                        value="description"
                                      >
                                        <FormControl
                                          bsClass="form-control"
                                          className="FormControl-sc-1amoaox-0 eXfwDC"
                                          componentClass="textarea"
                                          inputRef={[Function]}
                                          label="Description"
                                          name="description"
                                          onChange={[Function]}
                                          placeholder=""
                                          rows={6}
                                          type="textarea"
                                          value="description"
                                        >
                                          <textarea
                                            className="FormControl-sc-1amoaox-0 eXfwDC form-control"
                                            id="description"
                                            label="Description"
                                            name="description"
                                            onChange={[Function]}
                                            placeholder=""
                                            rows={6}
                                            type="textarea"
                                            value="description"
                                          />
                                        </FormControl>
                                      </StyledComponent>
                                    </FormControl>
<<<<<<< HEAD
                                  </StyledComponent>
>>>>>>> 46caba27d0... snapshots
                                </FormControl>
                                <HelpBlock>
                                  <HelpBlock
                                    bsClass="help-block"
                                    className="HelpBlock-i8is92-0 fSaklp"
                                  >
                                    <span
                                      className="HelpBlock-i8is92-0 fSaklp help-block"
                                    >
                                      Give a long description of the content pack in markdown.
                                    </span>
                                  </HelpBlock>
                                </HelpBlock>
                              </span>
                            </InputWrapper>
                          </div>
                        </FormGroup>
                      </FormGroup__StyledFormGroup>
                    </Component>
                  </Input>
                  <Input
                    addonAfter={null}
                    bsStyle={null}
                    buttonAfter={null}
                    help="Required. Who did this content pack and how can they be reached, e.g. Name and email."
                    id="vendor"
                    label="Vendor"
                    maxLength={250}
                    name="vendor"
                    onChange={[Function]}
                    placeholder=""
                    required={true}
                    type="text"
                    value="vendor"
                  >
                    <Component
                      controlId="vendor"
                      validationState={null}
                    >
                      <FormGroup__StyledFormGroup
                        controlId="vendor"
                        validationState={null}
                      >
                        <FormGroup
                          bsClass="form-group"
                          className="FormGroup__StyledFormGroup-sc-1wv4cm9-0 giUuGy"
                          controlId="vendor"
                          validationState={null}
                        >
                          <div
                            className="FormGroup__StyledFormGroup-sc-1wv4cm9-0 giUuGy form-group"
                          >
                            <ControlLabel>
                              <ControlLabel
                                bsClass="control-label"
                                className="ControlLabel-sc-1edmum5-0 jKzIRX"
                                srOnly={false}
                              >
                                <label
                                  className="ControlLabel-sc-1edmum5-0 jKzIRX control-label"
                                  htmlFor="vendor"
                                >
                                  Vendor
                                </label>
                              </ControlLabel>
                            </ControlLabel>
                            <InputWrapper>
                              <span>
                                <FormControl
                                  componentClass="input"
                                  inputRef={[Function]}
                                  label="Vendor"
                                  maxLength={250}
                                  name="vendor"
                                  onChange={[Function]}
                                  placeholder=""
                                  required={true}
                                  type="text"
                                  value="vendor"
                                >
                                  <FormControl
                                    bsClass="form-control"
                                    className="FormControl-sc-1amoaox-0 kmJcge"
                                    componentClass="input"
<<<<<<< HEAD
=======
=======
                                    <HelpBlock>
                                      <StyledComponent
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "attrs": Array [],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "HelpBlock-i8is92-0",
                                              "isStatic": false,
                                              "lastClassName": "kxWRDS",
                                              "rules": Array [
                                                [Function],
                                              ],
                                            },
                                            "displayName": "HelpBlock",
                                            "foldedComponentIds": Array [],
                                            "render": [Function],
                                            "styledComponentId": "HelpBlock-i8is92-0",
                                            "target": [Function],
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                      >
                                        <HelpBlock
                                          bsClass="help-block"
                                          className="HelpBlock-i8is92-0 kxWRDS"
                                        >
                                          <span
                                            className="HelpBlock-i8is92-0 kxWRDS help-block"
                                          >
                                            Give a long description of the content pack in markdown.
                                          </span>
                                        </HelpBlock>
                                      </StyledComponent>
                                    </HelpBlock>
                                  </span>
                                </InputWrapper>
                              </div>
                            </FormGroup>
                          </StyledComponent>
                        </FormGroup__StyledFormGroup>
                      </Component>
                    </Input>
                    <Input
                      addonAfter={null}
                      bsStyle={null}
                      buttonAfter={null}
                      help="Required. Who did this content pack and how can they be reached, e.g. Name and email."
                      id="vendor"
                      label="Vendor"
                      maxLength={250}
                      name="vendor"
                      onChange={[Function]}
                      placeholder=""
                      required={true}
                      type="text"
                      value="vendor"
                    >
                      <Component
                        controlId="vendor"
                        validationState={null}
                      >
                        <FormGroup__StyledFormGroup
                          controlId="vendor"
                          validationState={null}
                        >
                          <StyledComponent
                            controlId="vendor"
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "SIZES": Array [
                                  "large",
                                  "small",
                                ],
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "FormGroup__StyledFormGroup-sc-1wv4cm9-0",
                                  "isStatic": false,
                                  "lastClassName": "gcTkZc",
                                  "rules": Array [
                                    [Function],
                                  ],
                                },
                                "displayName": "FormGroup__StyledFormGroup",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "FormGroup__StyledFormGroup-sc-1wv4cm9-0",
                                "target": [Function],
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                            validationState={null}
                          >
                            <FormGroup
                              bsClass="form-group"
                              className="FormGroup__StyledFormGroup-sc-1wv4cm9-0 gcTkZc"
                              controlId="vendor"
                              validationState={null}
                            >
                              <div
                                className="FormGroup__StyledFormGroup-sc-1wv4cm9-0 gcTkZc form-group"
                              >
                                <ControlLabel>
                                  <StyledComponent
>>>>>>> 1634bb410f... snapshots
                                    forwardedComponent={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "attrs": Array [],
                                        "componentStyle": ComponentStyle {
                                          "componentId": "ControlLabel-sc-1edmum5-0",
                                          "isStatic": false,
<<<<<<< HEAD
                                          "lastClassName": "hBmgnF",
=======
                                          "lastClassName": "hCskeX",
>>>>>>> 1634bb410f... snapshots
                                          "rules": Array [
                                            [Function],
                                          ],
                                        },
                                        "displayName": "ControlLabel",
                                        "foldedComponentIds": Array [],
                                        "render": [Function],
                                        "styledComponentId": "ControlLabel-sc-1edmum5-0",
                                        "target": [Function],
                                        "toString": [Function],
                                        "warnTooManyClasses": [Function],
                                        "withComponent": [Function],
                                      }
                                    }
                                    forwardedRef={null}
<<<<<<< HEAD
>>>>>>> 46caba27d0... snapshots
                                    inputRef={[Function]}
                                    label="Vendor"
                                    maxLength={250}
                                    name="vendor"
                                    onChange={[Function]}
                                    placeholder=""
                                    required={true}
                                    type="text"
                                    value="vendor"
                                  >
<<<<<<< HEAD
                                    <input
                                      className="FormControl-sc-1amoaox-0 kmJcge form-control"
                                      id="vendor"
=======
                                    <FormControl
                                      bsClass="form-control"
                                      className="FormControl-sc-1amoaox-0 hBmgnF"
=======
                                  >
                                    <ControlLabel
                                      bsClass="control-label"
                                      className="ControlLabel-sc-1edmum5-0 hCskeX"
                                      srOnly={false}
                                    >
                                      <label
                                        className="ControlLabel-sc-1edmum5-0 hCskeX control-label"
                                        htmlFor="vendor"
                                      >
                                        Vendor
                                      </label>
                                    </ControlLabel>
                                  </StyledComponent>
                                </ControlLabel>
                                <InputWrapper>
                                  <span>
                                    <FormControl
>>>>>>> 1634bb410f... snapshots
                                      componentClass="input"
                                      inputRef={[Function]}
>>>>>>> 46caba27d0... snapshots
                                      label="Vendor"
                                      maxLength={250}
                                      name="vendor"
                                      onChange={[Function]}
                                      placeholder=""
                                      required={true}
                                      type="text"
                                      value="vendor"
<<<<<<< HEAD
                                    />
                                  </FormControl>
=======
                                    >
<<<<<<< HEAD
                                      <input
                                        className="FormControl-sc-1amoaox-0 hBmgnF form-control"
                                        id="vendor"
=======
                                      <StyledComponent
                                        componentClass="input"
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "Feedback": [Function],
                                            "SIZES": Array [
                                              "small",
                                              "large",
                                            ],
                                            "Static": [Function],
                                            "attrs": Array [],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "FormControl-sc-1amoaox-0",
                                              "isStatic": false,
                                              "lastClassName": "eXfwDC",
                                              "rules": Array [
                                                [Function],
                                              ],
                                            },
                                            "displayName": "FormControl",
                                            "foldedComponentIds": Array [],
                                            "render": [Function],
                                            "styledComponentId": "FormControl-sc-1amoaox-0",
                                            "target": [Function],
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                        inputRef={[Function]}
>>>>>>> 1634bb410f... snapshots
                                        label="Vendor"
                                        maxLength={250}
                                        name="vendor"
                                        onChange={[Function]}
                                        placeholder=""
                                        required={true}
                                        type="text"
                                        value="vendor"
                                      >
                                        <FormControl
                                          bsClass="form-control"
                                          className="FormControl-sc-1amoaox-0 eXfwDC"
                                          componentClass="input"
                                          inputRef={[Function]}
                                          label="Vendor"
                                          maxLength={250}
                                          name="vendor"
                                          onChange={[Function]}
                                          placeholder=""
                                          required={true}
                                          type="text"
                                          value="vendor"
                                        >
                                          <input
                                            className="FormControl-sc-1amoaox-0 eXfwDC form-control"
                                            id="vendor"
                                            label="Vendor"
                                            maxLength={250}
                                            name="vendor"
                                            onChange={[Function]}
                                            placeholder=""
                                            required={true}
                                            type="text"
                                            value="vendor"
                                          />
                                        </FormControl>
                                      </StyledComponent>
                                    </FormControl>
<<<<<<< HEAD
                                  </StyledComponent>
>>>>>>> 46caba27d0... snapshots
                                </FormControl>
                                <HelpBlock>
                                  <HelpBlock
                                    bsClass="help-block"
                                    className="HelpBlock-i8is92-0 fSaklp"
                                  >
                                    <span
                                      className="HelpBlock-i8is92-0 fSaklp help-block"
                                    >
                                      Required. Who did this content pack and how can they be reached, e.g. Name and email.
                                    </span>
                                  </HelpBlock>
                                </HelpBlock>
                              </span>
                            </InputWrapper>
                          </div>
                        </FormGroup>
                      </FormGroup__StyledFormGroup>
                    </Component>
                  </Input>
                  <Input
                    addonAfter={null}
                    bsStyle={null}
                    buttonAfter={null}
                    help="Where can I find the content pack. e.g. github url"
                    id="url"
                    label="URL"
                    maxLength={250}
                    name="url"
                    onChange={[Function]}
                    placeholder=""
                    type="text"
                    value="http://example.com"
                  >
                    <Component
                      controlId="url"
                      validationState={null}
                    >
                      <FormGroup__StyledFormGroup
                        controlId="url"
                        validationState={null}
                      >
                        <FormGroup
                          bsClass="form-group"
                          className="FormGroup__StyledFormGroup-sc-1wv4cm9-0 giUuGy"
                          controlId="url"
                          validationState={null}
                        >
                          <div
                            className="FormGroup__StyledFormGroup-sc-1wv4cm9-0 giUuGy form-group"
                          >
                            <ControlLabel>
                              <ControlLabel
                                bsClass="control-label"
                                className="ControlLabel-sc-1edmum5-0 jKzIRX"
                                srOnly={false}
                              >
                                <label
                                  className="ControlLabel-sc-1edmum5-0 jKzIRX control-label"
                                  htmlFor="url"
                                >
                                  URL
                                </label>
                              </ControlLabel>
                            </ControlLabel>
                            <InputWrapper>
                              <span>
                                <FormControl
                                  componentClass="input"
                                  inputRef={[Function]}
                                  label="URL"
                                  maxLength={250}
                                  name="url"
                                  onChange={[Function]}
                                  placeholder=""
                                  type="text"
                                  value="http://example.com"
                                >
                                  <FormControl
                                    bsClass="form-control"
                                    className="FormControl-sc-1amoaox-0 kmJcge"
                                    componentClass="input"
<<<<<<< HEAD
=======
=======
                                    <HelpBlock>
                                      <StyledComponent
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "attrs": Array [],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "HelpBlock-i8is92-0",
                                              "isStatic": false,
                                              "lastClassName": "kxWRDS",
                                              "rules": Array [
                                                [Function],
                                              ],
                                            },
                                            "displayName": "HelpBlock",
                                            "foldedComponentIds": Array [],
                                            "render": [Function],
                                            "styledComponentId": "HelpBlock-i8is92-0",
                                            "target": [Function],
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                      >
                                        <HelpBlock
                                          bsClass="help-block"
                                          className="HelpBlock-i8is92-0 kxWRDS"
                                        >
                                          <span
                                            className="HelpBlock-i8is92-0 kxWRDS help-block"
                                          >
                                            Required. Who did this content pack and how can they be reached, e.g. Name and email.
                                          </span>
                                        </HelpBlock>
                                      </StyledComponent>
                                    </HelpBlock>
                                  </span>
                                </InputWrapper>
                              </div>
                            </FormGroup>
                          </StyledComponent>
                        </FormGroup__StyledFormGroup>
                      </Component>
                    </Input>
                    <Input
                      addonAfter={null}
                      bsStyle={null}
                      buttonAfter={null}
                      help="Where can I find the content pack. e.g. github url"
                      id="url"
                      label="URL"
                      maxLength={250}
                      name="url"
                      onChange={[Function]}
                      placeholder=""
                      type="text"
                      value="http://example.com"
                    >
                      <Component
                        controlId="url"
                        validationState={null}
                      >
                        <FormGroup__StyledFormGroup
                          controlId="url"
                          validationState={null}
                        >
                          <StyledComponent
                            controlId="url"
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "SIZES": Array [
                                  "large",
                                  "small",
                                ],
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "FormGroup__StyledFormGroup-sc-1wv4cm9-0",
                                  "isStatic": false,
                                  "lastClassName": "gcTkZc",
                                  "rules": Array [
                                    [Function],
                                  ],
                                },
                                "displayName": "FormGroup__StyledFormGroup",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "FormGroup__StyledFormGroup-sc-1wv4cm9-0",
                                "target": [Function],
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                            validationState={null}
                          >
                            <FormGroup
                              bsClass="form-group"
                              className="FormGroup__StyledFormGroup-sc-1wv4cm9-0 gcTkZc"
                              controlId="url"
                              validationState={null}
                            >
                              <div
                                className="FormGroup__StyledFormGroup-sc-1wv4cm9-0 gcTkZc form-group"
                              >
                                <ControlLabel>
                                  <StyledComponent
>>>>>>> 1634bb410f... snapshots
                                    forwardedComponent={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "attrs": Array [],
                                        "componentStyle": ComponentStyle {
                                          "componentId": "ControlLabel-sc-1edmum5-0",
                                          "isStatic": false,
<<<<<<< HEAD
                                          "lastClassName": "hBmgnF",
=======
                                          "lastClassName": "hCskeX",
>>>>>>> 1634bb410f... snapshots
                                          "rules": Array [
                                            [Function],
                                          ],
                                        },
                                        "displayName": "ControlLabel",
                                        "foldedComponentIds": Array [],
                                        "render": [Function],
                                        "styledComponentId": "ControlLabel-sc-1edmum5-0",
                                        "target": [Function],
                                        "toString": [Function],
                                        "warnTooManyClasses": [Function],
                                        "withComponent": [Function],
                                      }
                                    }
                                    forwardedRef={null}
<<<<<<< HEAD
>>>>>>> 46caba27d0... snapshots
                                    inputRef={[Function]}
                                    label="URL"
                                    maxLength={250}
                                    name="url"
                                    onChange={[Function]}
                                    placeholder=""
                                    type="text"
                                    value="http://example.com"
                                  >
<<<<<<< HEAD
                                    <input
                                      className="FormControl-sc-1amoaox-0 kmJcge form-control"
                                      id="url"
=======
                                    <FormControl
                                      bsClass="form-control"
                                      className="FormControl-sc-1amoaox-0 hBmgnF"
=======
                                  >
                                    <ControlLabel
                                      bsClass="control-label"
                                      className="ControlLabel-sc-1edmum5-0 hCskeX"
                                      srOnly={false}
                                    >
                                      <label
                                        className="ControlLabel-sc-1edmum5-0 hCskeX control-label"
                                        htmlFor="url"
                                      >
                                        URL
                                      </label>
                                    </ControlLabel>
                                  </StyledComponent>
                                </ControlLabel>
                                <InputWrapper>
                                  <span>
                                    <FormControl
>>>>>>> 1634bb410f... snapshots
                                      componentClass="input"
                                      inputRef={[Function]}
>>>>>>> 46caba27d0... snapshots
                                      label="URL"
                                      maxLength={250}
                                      name="url"
                                      onChange={[Function]}
                                      placeholder=""
                                      type="text"
                                      value="http://example.com"
<<<<<<< HEAD
                                    />
                                  </FormControl>
=======
                                    >
<<<<<<< HEAD
                                      <input
                                        className="FormControl-sc-1amoaox-0 hBmgnF form-control"
                                        id="url"
=======
                                      <StyledComponent
                                        componentClass="input"
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "Feedback": [Function],
                                            "SIZES": Array [
                                              "small",
                                              "large",
                                            ],
                                            "Static": [Function],
                                            "attrs": Array [],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "FormControl-sc-1amoaox-0",
                                              "isStatic": false,
                                              "lastClassName": "eXfwDC",
                                              "rules": Array [
                                                [Function],
                                              ],
                                            },
                                            "displayName": "FormControl",
                                            "foldedComponentIds": Array [],
                                            "render": [Function],
                                            "styledComponentId": "FormControl-sc-1amoaox-0",
                                            "target": [Function],
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                        inputRef={[Function]}
>>>>>>> 1634bb410f... snapshots
                                        label="URL"
                                        maxLength={250}
                                        name="url"
                                        onChange={[Function]}
                                        placeholder=""
                                        type="text"
                                        value="http://example.com"
                                      >
                                        <FormControl
                                          bsClass="form-control"
                                          className="FormControl-sc-1amoaox-0 eXfwDC"
                                          componentClass="input"
                                          inputRef={[Function]}
                                          label="URL"
                                          maxLength={250}
                                          name="url"
                                          onChange={[Function]}
                                          placeholder=""
                                          type="text"
                                          value="http://example.com"
                                        >
                                          <input
                                            className="FormControl-sc-1amoaox-0 eXfwDC form-control"
                                            id="url"
                                            label="URL"
                                            maxLength={250}
                                            name="url"
                                            onChange={[Function]}
                                            placeholder=""
                                            type="text"
                                            value="http://example.com"
                                          />
                                        </FormControl>
                                      </StyledComponent>
                                    </FormControl>
<<<<<<< HEAD
                                  </StyledComponent>
>>>>>>> 46caba27d0... snapshots
                                </FormControl>
                                <HelpBlock>
                                  <HelpBlock
                                    bsClass="help-block"
                                    className="HelpBlock-i8is92-0 fSaklp"
                                  >
                                    <span
                                      className="HelpBlock-i8is92-0 fSaklp help-block"
                                    >
                                      Where can I find the content pack. e.g. github url
                                    </span>
                                  </HelpBlock>
                                </HelpBlock>
                              </span>
                            </InputWrapper>
                          </div>
                        </FormGroup>
                      </FormGroup__StyledFormGroup>
                    </Component>
                  </Input>
                </fieldset>
              </form>
            </div>
          </Col>
        </div>
      </Row>
    </Row>
    <Row>
      <Row
        bsClass="row"
        className="Row-sc-3iisrt-0 gPzTHl"
        componentClass="div"
      >
        <div
          className="Row-sc-3iisrt-0 gPzTHl row"
        >
          <Col
            bsClass="col"
            componentClass="div"
            lg={8}
            smOffset={1}
          >
            <div
              className="col-lg-8 col-sm-offset-1"
            >
              <h2>
                Content Pack selection
              </h2>
              <HelpBlock>
                <HelpBlock
                  bsClass="help-block"
                  className="HelpBlock-i8is92-0 fSaklp"
                >
                  <span
                    className="HelpBlock-i8is92-0 fSaklp help-block"
=======
                                    <HelpBlock>
                                      <StyledComponent
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "attrs": Array [],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "HelpBlock-i8is92-0",
                                              "isStatic": false,
                                              "lastClassName": "kxWRDS",
                                              "rules": Array [
                                                [Function],
                                              ],
                                            },
                                            "displayName": "HelpBlock",
                                            "foldedComponentIds": Array [],
                                            "render": [Function],
                                            "styledComponentId": "HelpBlock-i8is92-0",
                                            "target": [Function],
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                      >
                                        <HelpBlock
                                          bsClass="help-block"
                                          className="HelpBlock-i8is92-0 kxWRDS"
                                        >
                                          <span
                                            className="HelpBlock-i8is92-0 kxWRDS help-block"
                                          >
                                            Where can I find the content pack. e.g. github url
                                          </span>
                                        </HelpBlock>
                                      </StyledComponent>
                                    </HelpBlock>
                                  </span>
                                </InputWrapper>
                              </div>
                            </FormGroup>
                          </StyledComponent>
                        </FormGroup__StyledFormGroup>
                      </Component>
                    </Input>
                  </fieldset>
                </form>
              </div>
            </Col>
          </div>
        </Row>
      </StyledComponent>
    </Row>
    <Row>
      <StyledComponent
        forwardedComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "Row-sc-3iisrt-0",
              "isStatic": false,
              "lastClassName": "bRJRJg",
              "rules": Array [
                "&.content{",
                [Function],
                "}",
              ],
            },
            "displayName": "Row",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "Row-sc-3iisrt-0",
            "target": [Function],
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
      >
        <Row
          bsClass="row"
          className="Row-sc-3iisrt-0 bRJRJg"
          componentClass="div"
        >
          <div
            className="Row-sc-3iisrt-0 bRJRJg row"
          >
            <Col
              bsClass="col"
              componentClass="div"
              lg={8}
              smOffset={1}
            >
              <div
                className="col-lg-8 col-sm-offset-1"
              >
                <h2>
                  Content Pack selection
                </h2>
                <HelpBlock>
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "HelpBlock-i8is92-0",
                          "isStatic": false,
                          "lastClassName": "kxWRDS",
                          "rules": Array [
                            [Function],
                          ],
                        },
                        "displayName": "HelpBlock",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "HelpBlock-i8is92-0",
                        "target": [Function],
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
>>>>>>> 1634bb410f... snapshots
                  >
                    <HelpBlock
                      bsClass="help-block"
                      className="HelpBlock-i8is92-0 kxWRDS"
                    >
                      <span
                        className="HelpBlock-i8is92-0 kxWRDS help-block"
                      >
                        You can select between installed entities from the server (
                        <Icon
                          name="server"
                          type="solid"
                        >
                          <FontAwesomeIcon
                            icon={
                              Object {
                                "iconName": "server",
                                "prefix": "fas",
                              }
                            }
                          >
                            <svg
                              className="svg-inline--fa fa-server"
                            />
                          </FontAwesomeIcon>
                        </Icon>
                        ) or entities from the former content pack revision (
                        <Icon
                          className="contentPackEntity"
                          name="archive"
                          type="solid"
                        >
                          <FontAwesomeIcon
                            className="contentPackEntity"
                            icon={
                              Object {
                                "iconName": "archive",
                                "prefix": "fas",
                              }
                            }
                          >
                            <svg
                              className="svg-inline--fa fa-archive"
                            />
                          </FontAwesomeIcon>
                        </Icon>
                        ).
                      </span>
                    </HelpBlock>
                  </StyledComponent>
                </HelpBlock>
<<<<<<< HEAD
              </HelpBlock>
            </div>
          </Col>
        </div>
      </Row>
    </Row>
    <Row>
      <Row
        bsClass="row"
        className="Row-sc-3iisrt-0 gPzTHl"
        componentClass="div"
      >
        <div
          className="Row-sc-3iisrt-0 gPzTHl row"
        >
          <Col
            bsClass="col"
            componentClass="div"
            lg={8}
            smOffset={1}
          >
            <div
              className="col-lg-8 col-sm-offset-1"
            >
              <SearchForm
                buttonLeftMargin={5}
                focusAfterMount={false}
                id="filter-input"
                label={null}
                loadingLabel="Loading..."
                onQueryChange={[Function]}
                onReset={[Function]}
                onSearch={[Function]}
                placeholder="Enter search query..."
                query=""
                queryHelpComponent={null}
                queryWidth="auto"
                resetButtonLabel="Reset"
                searchBsStyle="default"
                searchButtonLabel="Filter"
                topMargin={15}
                useLoadingState={false}
                wrapperClass="search"
              >
                <div
                  className="search"
                  style={
                    Object {
                      "marginTop": 15,
                    }
                  }
                >
                  <form
                    className="form-inline"
                    onSubmit={[Function]}
                  >
                    <div
                      className="form-group has-feedback"
                    >
                      <input
                        autoComplete="off"
                        autoFocus={false}
                        className="query form-control"
                        id="common-search-form-query-input"
                        onChange={[Function]}
                        placeholder="Enter search query..."
                        spellCheck="false"
                        style={
                          Object {
                            "width": "auto",
                          }
                        }
                        type="text"
                        value=""
                      />
                    </div>
                    <div
                      className="form-group"
                      style={
                        Object {
                          "marginLeft": 5,
                        }
                      }
                    >
                      <ForwardRef
                        bsStyle="default"
                        className="submit-button"
                        disabled={false}
                        type="submit"
                      >
                        <Button__StyledButton
=======
              </div>
            </Col>
          </div>
        </Row>
      </StyledComponent>
    </Row>
    <Row>
      <StyledComponent
        forwardedComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "Row-sc-3iisrt-0",
              "isStatic": false,
              "lastClassName": "bRJRJg",
              "rules": Array [
                "&.content{",
                [Function],
                "}",
              ],
            },
            "displayName": "Row",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "Row-sc-3iisrt-0",
            "target": [Function],
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
      >
        <Row
          bsClass="row"
          className="Row-sc-3iisrt-0 bRJRJg"
          componentClass="div"
        >
          <div
            className="Row-sc-3iisrt-0 bRJRJg row"
          >
            <Col
              bsClass="col"
              componentClass="div"
              lg={8}
              smOffset={1}
            >
              <div
                className="col-lg-8 col-sm-offset-1"
              >
                <SearchForm
                  buttonLeftMargin={5}
                  focusAfterMount={false}
                  id="filter-input"
                  label={null}
                  loadingLabel="Loading..."
                  onQueryChange={[Function]}
                  onReset={[Function]}
                  onSearch={[Function]}
                  placeholder="Enter search query..."
                  query=""
                  queryHelpComponent={null}
                  queryWidth="auto"
                  resetButtonLabel="Reset"
                  searchBsStyle="default"
                  searchButtonLabel="Filter"
                  topMargin={15}
                  useLoadingState={false}
                  wrapperClass="search"
                >
                  <div
                    className="search"
                    style={
                      Object {
                        "marginTop": 15,
                      }
                    }
                  >
                    <form
                      className="form-inline"
                      onSubmit={[Function]}
                    >
                      <div
                        className="form-group has-feedback"
                      >
                        <input
                          autoComplete="off"
                          autoFocus={false}
                          className="query form-control"
                          id="common-search-form-query-input"
                          onChange={[Function]}
                          placeholder="Enter search query..."
                          spellCheck="false"
                          style={
                            Object {
                              "width": "auto",
                            }
                          }
                          type="text"
                          value=""
                        />
                      </div>
                      <div
                        className="form-group"
                        style={
                          Object {
                            "marginLeft": 5,
                          }
                        }
                      >
                        <ForwardRef
>>>>>>> 1634bb410f... snapshots
                          bsStyle="default"
                          className="submit-button"
                          disabled={false}
                          type="submit"
                        >
                          <Button__StyledButton
                            bsStyle="default"
<<<<<<< HEAD
                            className="Button__StyledButton-c9cbmb-0 laZUlH submit-button"
                            disabled={false}
                            type="submit"
                          >
                            <button
                              className="Button__StyledButton-c9cbmb-0 laZUlH submit-button btn btn-default"
=======
                            className="submit-button"
                            disabled={false}
                            type="submit"
                          >
                            <StyledComponent
                              bsStyle="default"
                              className="submit-button"
>>>>>>> 1634bb410f... snapshots
                              disabled={false}
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "SIZES": Array [
                                    "large",
                                    "small",
                                    "xsmall",
                                  ],
                                  "STYLES": Array [
                                    "success",
                                    "warning",
                                    "danger",
                                    "info",
                                    "default",
                                    "primary",
                                    "link",
                                  ],
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "Button__StyledButton-c9cbmb-0",
                                    "isStatic": false,
                                    "lastClassName": "hpBclA",
                                    "rules": Array [
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Button__StyledButton",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "Button__StyledButton-c9cbmb-0",
                                  "target": [Function],
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                              type="submit"
                            >
<<<<<<< HEAD
                              Filter
                            </button>
                          </Button>
                        </Button__StyledButton>
                      </ForwardRef>
                    </div>
                    <div
                      className="form-group"
                      style={
                        Object {
                          "marginLeft": 5,
                        }
                      }
                    >
                      <ForwardRef
                        className="reset-button"
                        onClick={[Function]}
                        type="reset"
                      >
                        <Button__StyledButton
=======
                              <Button
                                active={false}
                                block={false}
                                bsClass="btn"
                                bsStyle="default"
                                className="Button__StyledButton-c9cbmb-0 hpBclA submit-button"
                                disabled={false}
                                type="submit"
                              >
                                <button
                                  className="Button__StyledButton-c9cbmb-0 hpBclA submit-button btn btn-default"
                                  disabled={false}
                                  type="submit"
                                >
                                  Filter
                                </button>
                              </Button>
                            </StyledComponent>
                          </Button__StyledButton>
                        </ForwardRef>
                      </div>
                      <div
                        className="form-group"
                        style={
                          Object {
                            "marginLeft": 5,
                          }
                        }
                      >
                        <ForwardRef
>>>>>>> 1634bb410f... snapshots
                          className="reset-button"
                          onClick={[Function]}
                          type="reset"
                        >
<<<<<<< HEAD
                          <Button
                            active={false}
                            block={false}
                            bsClass="btn"
                            bsStyle="default"
                            className="Button__StyledButton-c9cbmb-0 laZUlH reset-button"
                            disabled={false}
                            onClick={[Function]}
                            type="reset"
                          >
                            <button
                              className="Button__StyledButton-c9cbmb-0 laZUlH reset-button btn btn-default"
                              disabled={false}
                              onClick={[Function]}
                              type="reset"
                            >
                              Reset
                            </button>
                          </Button>
                        </Button__StyledButton>
                      </ForwardRef>
                    </div>
                  </form>
                </div>
              </SearchForm>
            </div>
          </Col>
        </div>
      </Row>
    </Row>
    <Row>
      <Row
        bsClass="row"
        className="Row-sc-3iisrt-0 gPzTHl"
        componentClass="div"
      >
        <div
          className="Row-sc-3iisrt-0 gPzTHl row"
        >
          <Col
            bsClass="col"
            componentClass="div"
            lg={8}
            sm={8}
            smOffset={1}
          >
            <div
              className="col-lg-8 col-sm-8 col-sm-offset-1"
            >
              <ExpandableList>
                <ul
                  className="list"
                >
                  <ExpandableListItem
                    checked={false}
                    expandable={true}
                    expanded={false}
                    header="Spaceship"
                    indetermined={false}
                    key="spaceship"
                    onChange={[Function]}
                    padded={false}
                    selectable={true}
                    stayExpanded={false}
                  >
                    <ExpandableListItem__ItemWrap
=======
                          <Button__StyledButton
                            className="reset-button"
                            onClick={[Function]}
                            type="reset"
                          >
                            <StyledComponent
                              className="reset-button"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "SIZES": Array [
                                    "large",
                                    "small",
                                    "xsmall",
                                  ],
                                  "STYLES": Array [
                                    "success",
                                    "warning",
                                    "danger",
                                    "info",
                                    "default",
                                    "primary",
                                    "link",
                                  ],
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "Button__StyledButton-c9cbmb-0",
                                    "isStatic": false,
                                    "lastClassName": "hpBclA",
                                    "rules": Array [
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Button__StyledButton",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "Button__StyledButton-c9cbmb-0",
                                  "target": [Function],
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                              onClick={[Function]}
                              type="reset"
                            >
                              <Button
                                active={false}
                                block={false}
                                bsClass="btn"
                                bsStyle="default"
                                className="Button__StyledButton-c9cbmb-0 hpBclA reset-button"
                                disabled={false}
                                onClick={[Function]}
                                type="reset"
                              >
                                <button
                                  className="Button__StyledButton-c9cbmb-0 hpBclA reset-button btn btn-default"
                                  disabled={false}
                                  onClick={[Function]}
                                  type="reset"
                                >
                                  Reset
                                </button>
                              </Button>
                            </StyledComponent>
                          </Button__StyledButton>
                        </ForwardRef>
                      </div>
                    </form>
                  </div>
                </SearchForm>
              </div>
            </Col>
          </div>
        </Row>
      </StyledComponent>
    </Row>
    <Row>
      <StyledComponent
        forwardedComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "Row-sc-3iisrt-0",
              "isStatic": false,
              "lastClassName": "bRJRJg",
              "rules": Array [
                "&.content{",
                [Function],
                "}",
              ],
            },
            "displayName": "Row",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "Row-sc-3iisrt-0",
            "target": [Function],
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
      >
        <Row
          bsClass="row"
          className="Row-sc-3iisrt-0 bRJRJg"
          componentClass="div"
        >
          <div
            className="Row-sc-3iisrt-0 bRJRJg row"
          >
            <Col
              bsClass="col"
              componentClass="div"
              lg={8}
              sm={8}
              smOffset={1}
            >
              <div
                className="col-lg-8 col-sm-8 col-sm-offset-1"
              >
                <ExpandableList>
                  <ul
                    className="list"
                  >
                    <ExpandableListItem
                      checked={false}
                      expandable={true}
                      expanded={false}
                      header="Spaceship"
                      indetermined={false}
                      key="spaceship"
                      onChange={[Function]}
>>>>>>> 1634bb410f... snapshots
                      padded={false}
                      selectable={true}
                      stayExpanded={false}
                    >
<<<<<<< HEAD
                      <li
                        className="ExpandableListItem__ItemWrap-sc-10hsq3a-0 wLlKR"
                      >
                        <ExpandableListItem__Container>
                          <div
                            className="ExpandableListItem__Container-sc-10hsq3a-1 hYIMSn"
                          >
                            <Checkbox
                              bsClass="checkbox"
                              checked={false}
                              disabled={false}
                              inline={true}
                              inputRef={[Function]}
                              onChange={[Function]}
                              title=""
                            >
                              <label
                                className="checkbox-inline"
                                title=""
                              >
                                <input
                                  checked={false}
                                  disabled={false}
                                  onChange={[Function]}
                                  type="checkbox"
                                />
                              </label>
                            </Checkbox>
                            <ExpandableListItem__Toggle>
                              <div
                                className="ExpandableListItem__Toggle-sc-10hsq3a-2 xBomU"
                              >
                                <ExpandableListItem__IconStack
                                  className="fa-stack"
                                  onClick={[Function]}
                                  tabIndex={0}
                                >
                                  <div
                                    className="ExpandableListItem__IconStack-sc-10hsq3a-3 dEjoPz fa-stack"
                                    onClick={[Function]}
                                    tabIndex={0}
                                  >
                                    <Icon
                                      className="fa-stack-1x"
                                      name="circle"
                                      type="solid"
                                    >
                                      <FontAwesomeIcon
                                        className="fa-stack-1x"
                                        icon={
                                          Object {
                                            "iconName": "circle",
                                            "prefix": "fas",
                                          }
                                        }
                                      >
                                        <svg
                                          className="svg-inline--fa fa-circle"
                                        />
                                      </FontAwesomeIcon>
                                    </Icon>
                                    <Icon
                                      className="fa-stack-1x"
                                      name="angle-up"
                                      type="solid"
                                    >
                                      <FontAwesomeIcon
                                        className="fa-stack-1x"
                                        icon={
                                          Object {
                                            "iconName": "angle-up",
                                            "prefix": "fas",
                                          }
                                        }
                                      >
                                        <svg
                                          className="svg-inline--fa fa-angle-up"
                                        />
                                      </FontAwesomeIcon>
                                    </Icon>
                                  </div>
                                </ExpandableListItem__IconStack>
                              </div>
                            </ExpandableListItem__Toggle>
                            <ExpandableListItem__HeaderWrap
                              className="header"
                            >
                              <span
                                className="ExpandableListItem__HeaderWrap-sc-10hsq3a-4 tDeuS header"
                              >
                                <ExpandableListItem__Header
                                  onClick={[Function]}
                                  tabIndex={0}
                                  type="button"
                                >
                                  <button
                                    className="ExpandableListItem__Header-sc-10hsq3a-5 cAgeBx"
                                    onClick={[Function]}
                                    tabIndex={0}
                                    type="button"
                                  >
                                    Spaceship
                                  </button>
                                </ExpandableListItem__Header>
                              </span>
                            </ExpandableListItem__HeaderWrap>
                          </div>
                        </ExpandableListItem__Container>
                        <ExpandableListItem__ExpandableContent>
                          <div
                            className="ExpandableListItem__ExpandableContent-sc-10hsq3a-7 hICkaB"
                          />
                        </ExpandableListItem__ExpandableContent>
                      </li>
                    </ExpandableListItem__ItemWrap>
                  </ExpandableListItem>
                </ul>
              </ExpandableList>
            </div>
          </Col>
        </div>
      </Row>
=======
                      <ExpandableListItem__ItemWrap
                        padded={false}
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "ExpandableListItem__ItemWrap-sc-10hsq3a-0",
                                "isStatic": false,
                                "lastClassName": "chUVyE",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "ExpandableListItem__ItemWrap",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "ExpandableListItem__ItemWrap-sc-10hsq3a-0",
                              "target": "li",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          padded={false}
                        >
                          <li
                            className="ExpandableListItem__ItemWrap-sc-10hsq3a-0 chUVyE"
                          >
                            <ExpandableListItem__Container>
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "ExpandableListItem__Container-sc-10hsq3a-1",
                                      "isStatic": false,
                                      "lastClassName": "jAkkIc",
                                      "rules": Array [
                                        [Function],
                                      ],
                                    },
                                    "displayName": "ExpandableListItem__Container",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "ExpandableListItem__Container-sc-10hsq3a-1",
                                    "target": "div",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                              >
                                <div
                                  className="ExpandableListItem__Container-sc-10hsq3a-1 jAkkIc"
                                >
                                  <Checkbox
                                    bsClass="checkbox"
                                    checked={false}
                                    disabled={false}
                                    inline={true}
                                    inputRef={[Function]}
                                    onChange={[Function]}
                                    title=""
                                  >
                                    <label
                                      className="checkbox-inline"
                                      title=""
                                    >
                                      <input
                                        checked={false}
                                        disabled={false}
                                        onChange={[Function]}
                                        type="checkbox"
                                      />
                                    </label>
                                  </Checkbox>
                                  <ExpandableListItem__Toggle>
                                    <StyledComponent
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "ExpandableListItem__Toggle-sc-10hsq3a-2",
                                            "isStatic": false,
                                            "lastClassName": "hwyxtE",
                                            "rules": Array [
                                              "display:inline-block;width:20px;margin-right:5px;",
                                            ],
                                          },
                                          "displayName": "ExpandableListItem__Toggle",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "ExpandableListItem__Toggle-sc-10hsq3a-2",
                                          "target": "div",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                    >
                                      <div
                                        className="ExpandableListItem__Toggle-sc-10hsq3a-2 hwyxtE"
                                      >
                                        <ExpandableListItem__IconStack
                                          className="fa-stack"
                                          onClick={[Function]}
                                          tabIndex={0}
                                        >
                                          <StyledComponent
                                            className="fa-stack"
                                            forwardedComponent={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "attrs": Array [],
                                                "componentStyle": ComponentStyle {
                                                  "componentId": "ExpandableListItem__IconStack-sc-10hsq3a-3",
                                                  "isStatic": false,
                                                  "lastClassName": "gKePgA",
                                                  "rules": Array [
                                                    [Function],
                                                  ],
                                                },
                                                "displayName": "ExpandableListItem__IconStack",
                                                "foldedComponentIds": Array [],
                                                "render": [Function],
                                                "styledComponentId": "ExpandableListItem__IconStack-sc-10hsq3a-3",
                                                "target": "div",
                                                "toString": [Function],
                                                "warnTooManyClasses": [Function],
                                                "withComponent": [Function],
                                              }
                                            }
                                            forwardedRef={null}
                                            onClick={[Function]}
                                            tabIndex={0}
                                          >
                                            <div
                                              className="ExpandableListItem__IconStack-sc-10hsq3a-3 gKePgA fa-stack"
                                              onClick={[Function]}
                                              tabIndex={0}
                                            >
                                              <Icon
                                                className="fa-stack-1x"
                                                name="circle"
                                                type="solid"
                                              >
                                                <FontAwesomeIcon
                                                  className="fa-stack-1x"
                                                  icon={
                                                    Object {
                                                      "iconName": "circle",
                                                      "prefix": "fas",
                                                    }
                                                  }
                                                >
                                                  <svg
                                                    className="svg-inline--fa fa-circle"
                                                  />
                                                </FontAwesomeIcon>
                                              </Icon>
                                              <Icon
                                                className="fa-stack-1x"
                                                name="angle-up"
                                                type="solid"
                                              >
                                                <FontAwesomeIcon
                                                  className="fa-stack-1x"
                                                  icon={
                                                    Object {
                                                      "iconName": "angle-up",
                                                      "prefix": "fas",
                                                    }
                                                  }
                                                >
                                                  <svg
                                                    className="svg-inline--fa fa-angle-up"
                                                  />
                                                </FontAwesomeIcon>
                                              </Icon>
                                            </div>
                                          </StyledComponent>
                                        </ExpandableListItem__IconStack>
                                      </div>
                                    </StyledComponent>
                                  </ExpandableListItem__Toggle>
                                  <ExpandableListItem__HeaderWrap
                                    className="header"
                                  >
                                    <StyledComponent
                                      className="header"
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "ExpandableListItem__HeaderWrap-sc-10hsq3a-4",
                                            "isStatic": false,
                                            "lastClassName": "dtXXmg",
                                            "rules": Array [
                                              [Function],
                                            ],
                                          },
                                          "displayName": "ExpandableListItem__HeaderWrap",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "ExpandableListItem__HeaderWrap-sc-10hsq3a-4",
                                          "target": "span",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                    >
                                      <span
                                        className="ExpandableListItem__HeaderWrap-sc-10hsq3a-4 dtXXmg header"
                                      >
                                        <ExpandableListItem__Header
                                          onClick={[Function]}
                                          tabIndex={0}
                                          type="button"
                                        >
                                          <StyledComponent
                                            forwardedComponent={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "attrs": Array [],
                                                "componentStyle": ComponentStyle {
                                                  "componentId": "ExpandableListItem__Header-sc-10hsq3a-5",
                                                  "isStatic": false,
                                                  "lastClassName": "clUCXq",
                                                  "rules": Array [
                                                    "border:0;padding:0;text-align:left;background:transparent;",
                                                  ],
                                                },
                                                "displayName": "ExpandableListItem__Header",
                                                "foldedComponentIds": Array [],
                                                "render": [Function],
                                                "styledComponentId": "ExpandableListItem__Header-sc-10hsq3a-5",
                                                "target": "button",
                                                "toString": [Function],
                                                "warnTooManyClasses": [Function],
                                                "withComponent": [Function],
                                              }
                                            }
                                            forwardedRef={null}
                                            onClick={[Function]}
                                            tabIndex={0}
                                            type="button"
                                          >
                                            <button
                                              className="ExpandableListItem__Header-sc-10hsq3a-5 clUCXq"
                                              onClick={[Function]}
                                              tabIndex={0}
                                              type="button"
                                            >
                                              Spaceship
                                            </button>
                                          </StyledComponent>
                                        </ExpandableListItem__Header>
                                      </span>
                                    </StyledComponent>
                                  </ExpandableListItem__HeaderWrap>
                                </div>
                              </StyledComponent>
                            </ExpandableListItem__Container>
                            <ExpandableListItem__ExpandableContent>
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "ExpandableListItem__ExpandableContent-sc-10hsq3a-7",
                                      "isStatic": false,
                                      "lastClassName": "dVTgnM",
                                      "rules": Array [
                                        [Function],
                                      ],
                                    },
                                    "displayName": "ExpandableListItem__ExpandableContent",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "ExpandableListItem__ExpandableContent-sc-10hsq3a-7",
                                    "target": "div",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                              >
                                <div
                                  className="ExpandableListItem__ExpandableContent-sc-10hsq3a-7 dVTgnM"
                                />
                              </StyledComponent>
                            </ExpandableListItem__ExpandableContent>
                          </li>
                        </StyledComponent>
                      </ExpandableListItem__ItemWrap>
                    </ExpandableListItem>
                  </ul>
                </ExpandableList>
              </div>
            </Col>
          </div>
        </Row>
      </StyledComponent>
>>>>>>> 1634bb410f... snapshots
    </Row>
  </div>
</ContentPackSelection>
`;
