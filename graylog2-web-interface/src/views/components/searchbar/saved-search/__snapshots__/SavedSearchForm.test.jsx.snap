// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SavedSearchForm render the SavedSearchForm should render create new 1`] = `
<SavedSearchForm
  disableCreateNew={false}
  isCreateNew={true}
  onChangeTitle={[Function]}
  saveAsSearch={[Function]}
  saveSearch={[Function]}
  target={[Function]}
  toggleModal={[Function]}
  value="new Title"
>
  <MockPortal>
    <mock-portal>
      <MockPosition
        container={<body />}
        placement="left"
        target={[Function]}
      >
        <mock-position
          container={<body />}
          placement="left"
          target={[Function]}
        >
          <Popover
            id="saved-search-popover"
            title="Name of search"
          >
            <GraylogThemeProvider>
              <ThemeProvider
                theme={
                  Object {
                    "breakpoints": Object {
                      "max": Object {
                        "lg": "1199px",
                        "md": "991px",
                        "sm": "767px",
                        "xs": "479px",
                      },
                      "min": Object {
                        "lg": "1200px",
                        "md": "992px",
                        "sm": "768px",
                        "xs": "480px",
                      },
                    },
                    "colors": Object {
                      "brand": Object {
                        "primary": "#ff3633",
                        "secondary": "#fff",
                        "tertiary": "#1f1f1f",
                      },
                      "global": Object {
                        "background": "#e8e8e8",
                        "contentBackground": "#fff",
                        "inputBackground": "#fff",
                        "link": "#702785",
                        "linkHover": "#410057",
                        "textAlt": "#fff",
                        "textDefault": "#1f1f1f",
                      },
                      "gray": Object {
                        "10": "#1f1f1f",
                        "100": "#ffffff",
                        "20": "#383838",
                        "30": "#515151",
                        "40": "#6a6a6a",
                        "50": "#838383",
                        "60": "#9b9b9b",
                        "70": "#b4b4b4",
                        "80": "#cdcdcd",
                        "90": "#e6e6e6",
                      },
                      "table": Object {
                        "background": "#fafafa",
                        "backgroundAlt": "#f0f0f0",
                        "backgroundHover": "#f5f5f5",
                        "variant": Object {
                          "active": "#e6e6e6",
                          "danger": "#eddddd",
                          "info": "#dde2f0",
                          "primary": "#e4dee7",
                          "success": "#ddeddf",
                          "warning": "#fff5dd",
                        },
                        "variantHover": Object {
                          "active": "#d0d0d0",
                          "danger": "#debdbd",
                          "info": "#bdc8e4",
                          "primary": "#cbbfd1",
                          "success": "#bddec2",
                          "warning": "#ffecbd",
                        },
                      },
                      "variant": Object {
                        "danger": "#ad0707",
                        "dark": Object {
                          "danger": "#990606",
                          "default": "#737373",
                          "info": "#0057a8",
                          "primary": "#632275",
                          "success": "#009a3a",
                          "warning": "#e1b900",
                        },
                        "darker": Object {
                          "danger": "#740505",
                          "default": "#575757",
                          "info": "#00427f",
                          "primary": "#4b1a59",
                          "success": "#00752c",
                          "warning": "#ab8d00",
                        },
                        "darkest": Object {
                          "danger": "#3c0202",
                          "default": "#2d2d2d",
                          "info": "#002242",
                          "primary": "#270e2e",
                          "success": "#003c17",
                          "warning": "#584900",
                        },
                        "default": "#828282",
                        "info": "#0063be",
                        "light": Object {
                          "danger": "#c27878",
                          "default": "#a6a6a6",
                          "info": "#7894ce",
                          "primary": "#9b7ca8",
                          "success": "#78c385",
                          "warning": "#ffdd78",
                        },
                        "lighter": Object {
                          "danger": "#debdbd",
                          "default": "#d0d0d0",
                          "info": "#bdc8e4",
                          "primary": "#cbbfd1",
                          "success": "#bddec2",
                          "warning": "#ffecbd",
                        },
                        "lightest": Object {
                          "danger": "#f7efef",
                          "default": "#f3f3f3",
                          "info": "#eff2f8",
                          "primary": "#f2f0f4",
                          "success": "#eff7f0",
                          "warning": "#fffaef",
                        },
                        "primary": "#702785",
                        "success": "#00ae42",
                        "warning": "#ffd200",
                      },
                    },
                    "components": Object {
                      "button": Array [
                        Array [
                          [Function],
                        ],
                        Array [
                          [Function],
                        ],
                        Array [
                          [Function],
                        ],
                        Array [
                          [Function],
                        ],
                        Array [
                          [Function],
                        ],
                        Array [
                          [Function],
                        ],
                        Array [
                          [Function],
                        ],
                      ],
                    },
                    "fonts": Object {
                      "family": Object {
                        "body": "\\"Open Sans\\", \\"Helvetica Neue\\", Helvetica, Arial, sans-serif",
                        "monospace": "\\"Roboto Mono\\", Menlo, Monaco, Consolas, \\"Courier New\\", monospace",
                      },
                      "size": Object {
                        "body": "1rem",
                        "h1": "1.802rem",
                        "h2": "1.602rem",
                        "h3": "1.424rem",
                        "h4": "1.266rem",
                        "h5": "1.125rem",
                        "h6": "1rem",
                        "huge": "2.027rem",
                        "large": "1.125rem",
                        "root": "87.5%",
                        "small": "0.889rem",
                        "tiny": "0.79rem",
                      },
                    },
                    "mode": "teinte",
                    "utils": Object {
                      "colorLevel": [Function],
                      "contrastingColor": [Function],
                      "opacify": [Function],
                      "readableColor": [Function],
                    },
                  }
                }
              >
                <Popover__StyledPopover
                  id="saved-search-popover"
                  title="Name of search"
                >
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "Popover__StyledPopover-wd1j0g-0",
                          "isStatic": false,
                          "lastClassName": "cdMcFy",
                          "rules": Array [
                            [Function],
                          ],
                        },
                        "displayName": "Popover__StyledPopover",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "Popover__StyledPopover-wd1j0g-0",
                        "target": [Function],
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    id="saved-search-popover"
                    title="Name of search"
                  >
                    <Popover
                      bsClass="popover"
                      className="Popover__StyledPopover-wd1j0g-0 cdMcFy"
                      id="saved-search-popover"
                      placement="right"
                      title="Name of search"
                    >
                      <div
                        className="Popover__StyledPopover-wd1j0g-0 cdMcFy popover right"
                        id="saved-search-popover"
                        role="tooltip"
                        style={
                          Object {
                            "display": "block",
                            "left": undefined,
                            "top": undefined,
                          }
                        }
                      >
                        <div
                          className="arrow"
                          style={
                            Object {
                              "left": undefined,
                              "top": undefined,
                            }
                          }
                        />
                        <h3
                          className="popover-title"
                        >
                          Name of search
                        </h3>
                        <div
                          className="popover-content"
                        >
                          <form
                            onSubmit={[Function]}
                          >
                            <Component
                              validationState={null}
                            >
                              <FormGroup__StyledFormGroup
                                validationState={null}
                              >
                                <StyledComponent
                                  forwardedComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "SIZES": Array [
                                        "large",
                                        "small",
                                      ],
                                      "attrs": Array [],
                                      "componentStyle": ComponentStyle {
                                        "componentId": "FormGroup__StyledFormGroup-sc-1wv4cm9-0",
                                        "isStatic": false,
                                        "lastClassName": "gcTkZc",
                                        "rules": Array [
                                          [Function],
                                        ],
                                      },
                                      "displayName": "FormGroup__StyledFormGroup",
                                      "foldedComponentIds": Array [],
                                      "render": [Function],
                                      "styledComponentId": "FormGroup__StyledFormGroup-sc-1wv4cm9-0",
                                      "target": [Function],
                                      "toString": [Function],
                                      "warnTooManyClasses": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  forwardedRef={null}
                                  validationState={null}
                                >
                                  <FormGroup
                                    bsClass="form-group"
                                    className="FormGroup__StyledFormGroup-sc-1wv4cm9-0 gcTkZc"
                                    validationState={null}
                                  >
                                    <div
                                      className="FormGroup__StyledFormGroup-sc-1wv4cm9-0 gcTkZc form-group"
                                    >
                                      <ControlLabel>
                                        <StyledComponent
                                          forwardedComponent={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "attrs": Array [],
                                              "componentStyle": ComponentStyle {
                                                "componentId": "ControlLabel-sc-1edmum5-0",
                                                "isStatic": false,
                                                "lastClassName": "hCskeX",
                                                "rules": Array [
                                                  [Function],
                                                ],
                                              },
                                              "displayName": "ControlLabel",
                                              "foldedComponentIds": Array [],
                                              "render": [Function],
                                              "styledComponentId": "ControlLabel-sc-1edmum5-0",
                                              "target": [Function],
                                              "toString": [Function],
                                              "warnTooManyClasses": [Function],
                                              "withComponent": [Function],
                                            }
                                          }
                                          forwardedRef={null}
                                        >
                                          <ControlLabel
                                            bsClass="control-label"
                                            className="ControlLabel-sc-1edmum5-0 hCskeX"
                                            srOnly={false}
                                          >
                                            <label
                                              className="ControlLabel-sc-1edmum5-0 hCskeX control-label"
                                            >
                                              Title
                                            </label>
                                          </ControlLabel>
                                        </StyledComponent>
                                      </ControlLabel>
                                      <FormControl
                                        onChange={[Function]}
                                        placeholder="Enter title"
                                        type="text"
                                        value="new Title"
                                      >
                                        <StyledComponent
                                          forwardedComponent={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "Feedback": [Function],
                                              "SIZES": Array [
                                                "small",
                                                "large",
                                              ],
                                              "Static": [Function],
                                              "attrs": Array [],
                                              "componentStyle": ComponentStyle {
                                                "componentId": "FormControl-sc-1amoaox-0",
                                                "isStatic": false,
                                                "lastClassName": "eXfwDC",
                                                "rules": Array [
                                                  [Function],
                                                ],
                                              },
                                              "displayName": "FormControl",
                                              "foldedComponentIds": Array [],
                                              "render": [Function],
                                              "styledComponentId": "FormControl-sc-1amoaox-0",
                                              "target": [Function],
                                              "toString": [Function],
                                              "warnTooManyClasses": [Function],
                                              "withComponent": [Function],
                                            }
                                          }
                                          forwardedRef={null}
                                          onChange={[Function]}
                                          placeholder="Enter title"
                                          type="text"
                                          value="new Title"
                                        >
                                          <FormControl
                                            bsClass="form-control"
                                            className="FormControl-sc-1amoaox-0 eXfwDC"
                                            componentClass="input"
                                            onChange={[Function]}
                                            placeholder="Enter title"
                                            type="text"
                                            value="new Title"
                                          >
                                            <input
                                              className="FormControl-sc-1amoaox-0 eXfwDC form-control"
                                              onChange={[Function]}
                                              placeholder="Enter title"
                                              type="text"
                                              value="new Title"
                                            />
                                          </FormControl>
                                        </StyledComponent>
                                      </FormControl>
                                    </div>
                                  </FormGroup>
                                </StyledComponent>
                              </FormGroup__StyledFormGroup>
                            </Component>
                            <ForwardRef
                              bsStyle="info"
                              className="button"
                              disabled={false}
                              onClick={[Function]}
                              type="submit"
                            >
                              <Button__StyledButton
                                bsStyle="info"
                                className="button"
                                disabled={false}
                                onClick={[Function]}
                                type="submit"
                              >
                                <StyledComponent
                                  bsStyle="info"
                                  className="button"
                                  disabled={false}
                                  forwardedComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "SIZES": Array [
                                        "large",
                                        "small",
                                        "xsmall",
                                      ],
                                      "STYLES": Array [
                                        "success",
                                        "warning",
                                        "danger",
                                        "info",
                                        "default",
                                        "primary",
                                        "link",
                                      ],
                                      "attrs": Array [],
                                      "componentStyle": ComponentStyle {
                                        "componentId": "Button__StyledButton-c9cbmb-0",
                                        "isStatic": false,
                                        "lastClassName": "jVYrA",
                                        "rules": Array [
                                          [Function],
                                        ],
                                      },
                                      "displayName": "Button__StyledButton",
                                      "foldedComponentIds": Array [],
                                      "render": [Function],
                                      "styledComponentId": "Button__StyledButton-c9cbmb-0",
                                      "target": [Function],
                                      "toString": [Function],
                                      "warnTooManyClasses": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  forwardedRef={null}
                                  onClick={[Function]}
                                  type="submit"
                                >
                                  <Button
                                    active={false}
                                    block={false}
                                    bsClass="btn"
                                    bsStyle="info"
                                    className="Button__StyledButton-c9cbmb-0 jVYrA button"
                                    disabled={false}
                                    onClick={[Function]}
                                    type="submit"
                                  >
                                    <button
                                      className="Button__StyledButton-c9cbmb-0 jVYrA button btn btn-info"
                                      disabled={false}
                                      onClick={[Function]}
                                      type="submit"
                                    >
                                      Create new
                                    </button>
                                  </Button>
                                </StyledComponent>
                              </Button__StyledButton>
                            </ForwardRef>
                            <ForwardRef
                              className="button"
                              onClick={[Function]}
                            >
                              <Button__StyledButton
                                className="button"
                                onClick={[Function]}
                              >
                                <StyledComponent
                                  className="button"
                                  forwardedComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "SIZES": Array [
                                        "large",
                                        "small",
                                        "xsmall",
                                      ],
                                      "STYLES": Array [
                                        "success",
                                        "warning",
                                        "danger",
                                        "info",
                                        "default",
                                        "primary",
                                        "link",
                                      ],
                                      "attrs": Array [],
                                      "componentStyle": ComponentStyle {
                                        "componentId": "Button__StyledButton-c9cbmb-0",
                                        "isStatic": false,
                                        "lastClassName": "jVYrA",
                                        "rules": Array [
                                          [Function],
                                        ],
                                      },
                                      "displayName": "Button__StyledButton",
                                      "foldedComponentIds": Array [],
                                      "render": [Function],
                                      "styledComponentId": "Button__StyledButton-c9cbmb-0",
                                      "target": [Function],
                                      "toString": [Function],
                                      "warnTooManyClasses": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  forwardedRef={null}
                                  onClick={[Function]}
                                >
                                  <Button
                                    active={false}
                                    block={false}
                                    bsClass="btn"
                                    bsStyle="default"
                                    className="Button__StyledButton-c9cbmb-0 jVYrA button"
                                    disabled={false}
                                    onClick={[Function]}
                                  >
                                    <button
                                      className="Button__StyledButton-c9cbmb-0 jVYrA button btn btn-default"
                                      disabled={false}
                                      onClick={[Function]}
                                      type="button"
                                    >
                                      Cancel
                                    </button>
                                  </Button>
                                </StyledComponent>
                              </Button__StyledButton>
                            </ForwardRef>
                          </form>
                        </div>
                      </div>
                    </Popover>
                  </StyledComponent>
                </Popover__StyledPopover>
              </ThemeProvider>
            </GraylogThemeProvider>
          </Popover>
        </mock-position>
      </MockPosition>
    </mock-portal>
  </MockPortal>
</SavedSearchForm>
`;

exports[`SavedSearchForm render the SavedSearchForm should render disabled create new 1`] = `
<SavedSearchForm
  disableCreateNew={true}
  isCreateNew={false}
  onChangeTitle={[Function]}
  saveAsSearch={[Function]}
  saveSearch={[Function]}
  target={[Function]}
  toggleModal={[Function]}
  value="new Title"
>
  <MockPortal>
    <mock-portal>
      <MockPosition
        container={<body />}
        placement="left"
        target={[Function]}
      >
        <mock-position
          container={<body />}
          placement="left"
          target={[Function]}
        >
          <Popover
            id="saved-search-popover"
            title="Name of search"
          >
            <GraylogThemeProvider>
              <ThemeProvider
                theme={
                  Object {
                    "breakpoints": Object {
                      "max": Object {
                        "lg": "1199px",
                        "md": "991px",
                        "sm": "767px",
                        "xs": "479px",
                      },
                      "min": Object {
                        "lg": "1200px",
                        "md": "992px",
                        "sm": "768px",
                        "xs": "480px",
                      },
                    },
                    "colors": Object {
                      "brand": Object {
                        "primary": "#ff3633",
                        "secondary": "#fff",
                        "tertiary": "#1f1f1f",
                      },
                      "global": Object {
                        "background": "#e8e8e8",
                        "contentBackground": "#fff",
                        "inputBackground": "#fff",
                        "link": "#702785",
                        "linkHover": "#410057",
                        "textAlt": "#fff",
                        "textDefault": "#1f1f1f",
                      },
                      "gray": Object {
                        "10": "#1f1f1f",
                        "100": "#ffffff",
                        "20": "#383838",
                        "30": "#515151",
                        "40": "#6a6a6a",
                        "50": "#838383",
                        "60": "#9b9b9b",
                        "70": "#b4b4b4",
                        "80": "#cdcdcd",
                        "90": "#e6e6e6",
                      },
                      "table": Object {
                        "background": "#fafafa",
                        "backgroundAlt": "#f0f0f0",
                        "backgroundHover": "#f5f5f5",
                        "variant": Object {
                          "active": "#e6e6e6",
                          "danger": "#eddddd",
                          "info": "#dde2f0",
                          "primary": "#e4dee7",
                          "success": "#ddeddf",
                          "warning": "#fff5dd",
                        },
                        "variantHover": Object {
                          "active": "#d0d0d0",
                          "danger": "#debdbd",
                          "info": "#bdc8e4",
                          "primary": "#cbbfd1",
                          "success": "#bddec2",
                          "warning": "#ffecbd",
                        },
                      },
                      "variant": Object {
                        "danger": "#ad0707",
                        "dark": Object {
                          "danger": "#990606",
                          "default": "#737373",
                          "info": "#0057a8",
                          "primary": "#632275",
                          "success": "#009a3a",
                          "warning": "#e1b900",
                        },
                        "darker": Object {
                          "danger": "#740505",
                          "default": "#575757",
                          "info": "#00427f",
                          "primary": "#4b1a59",
                          "success": "#00752c",
                          "warning": "#ab8d00",
                        },
                        "darkest": Object {
                          "danger": "#3c0202",
                          "default": "#2d2d2d",
                          "info": "#002242",
                          "primary": "#270e2e",
                          "success": "#003c17",
                          "warning": "#584900",
                        },
                        "default": "#828282",
                        "info": "#0063be",
                        "light": Object {
                          "danger": "#c27878",
                          "default": "#a6a6a6",
                          "info": "#7894ce",
                          "primary": "#9b7ca8",
                          "success": "#78c385",
                          "warning": "#ffdd78",
                        },
                        "lighter": Object {
                          "danger": "#debdbd",
                          "default": "#d0d0d0",
                          "info": "#bdc8e4",
                          "primary": "#cbbfd1",
                          "success": "#bddec2",
                          "warning": "#ffecbd",
                        },
                        "lightest": Object {
                          "danger": "#f7efef",
                          "default": "#f3f3f3",
                          "info": "#eff2f8",
                          "primary": "#f2f0f4",
                          "success": "#eff7f0",
                          "warning": "#fffaef",
                        },
                        "primary": "#702785",
                        "success": "#00ae42",
                        "warning": "#ffd200",
                      },
                    },
                    "components": Object {
                      "button": Array [
                        Array [
                          [Function],
                        ],
                        Array [
                          [Function],
                        ],
                        Array [
                          [Function],
                        ],
                        Array [
                          [Function],
                        ],
                        Array [
                          [Function],
                        ],
                        Array [
                          [Function],
                        ],
                        Array [
                          [Function],
                        ],
                      ],
                    },
                    "fonts": Object {
                      "family": Object {
                        "body": "\\"Open Sans\\", \\"Helvetica Neue\\", Helvetica, Arial, sans-serif",
                        "monospace": "\\"Roboto Mono\\", Menlo, Monaco, Consolas, \\"Courier New\\", monospace",
                      },
                      "size": Object {
                        "body": "1rem",
                        "h1": "1.802rem",
                        "h2": "1.602rem",
                        "h3": "1.424rem",
                        "h4": "1.266rem",
                        "h5": "1.125rem",
                        "h6": "1rem",
                        "huge": "2.027rem",
                        "large": "1.125rem",
                        "root": "87.5%",
                        "small": "0.889rem",
                        "tiny": "0.79rem",
                      },
                    },
                    "mode": "teinte",
                    "utils": Object {
                      "colorLevel": [Function],
                      "contrastingColor": [Function],
                      "opacify": [Function],
                      "readableColor": [Function],
                    },
                  }
                }
              >
                <Popover__StyledPopover
                  id="saved-search-popover"
                  title="Name of search"
                >
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "Popover__StyledPopover-wd1j0g-0",
                          "isStatic": false,
                          "lastClassName": "cdMcFy",
                          "rules": Array [
                            [Function],
                          ],
                        },
                        "displayName": "Popover__StyledPopover",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "Popover__StyledPopover-wd1j0g-0",
                        "target": [Function],
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    id="saved-search-popover"
                    title="Name of search"
                  >
                    <Popover
                      bsClass="popover"
                      className="Popover__StyledPopover-wd1j0g-0 cdMcFy"
                      id="saved-search-popover"
                      placement="right"
                      title="Name of search"
                    >
                      <div
                        className="Popover__StyledPopover-wd1j0g-0 cdMcFy popover right"
                        id="saved-search-popover"
                        role="tooltip"
                        style={
                          Object {
                            "display": "block",
                            "left": undefined,
                            "top": undefined,
                          }
                        }
                      >
                        <div
                          className="arrow"
                          style={
                            Object {
                              "left": undefined,
                              "top": undefined,
                            }
                          }
                        />
                        <h3
                          className="popover-title"
                        >
                          Name of search
                        </h3>
                        <div
                          className="popover-content"
                        >
                          <form
                            onSubmit={[Function]}
                          >
                            <Component
                              validationState={null}
                            >
                              <FormGroup__StyledFormGroup
                                validationState={null}
                              >
                                <StyledComponent
                                  forwardedComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "SIZES": Array [
                                        "large",
                                        "small",
                                      ],
                                      "attrs": Array [],
                                      "componentStyle": ComponentStyle {
                                        "componentId": "FormGroup__StyledFormGroup-sc-1wv4cm9-0",
                                        "isStatic": false,
                                        "lastClassName": "gcTkZc",
                                        "rules": Array [
                                          [Function],
                                        ],
                                      },
                                      "displayName": "FormGroup__StyledFormGroup",
                                      "foldedComponentIds": Array [],
                                      "render": [Function],
                                      "styledComponentId": "FormGroup__StyledFormGroup-sc-1wv4cm9-0",
                                      "target": [Function],
                                      "toString": [Function],
                                      "warnTooManyClasses": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  forwardedRef={null}
                                  validationState={null}
                                >
                                  <FormGroup
                                    bsClass="form-group"
                                    className="FormGroup__StyledFormGroup-sc-1wv4cm9-0 gcTkZc"
                                    validationState={null}
                                  >
                                    <div
                                      className="FormGroup__StyledFormGroup-sc-1wv4cm9-0 gcTkZc form-group"
                                    >
                                      <ControlLabel>
                                        <StyledComponent
                                          forwardedComponent={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "attrs": Array [],
                                              "componentStyle": ComponentStyle {
                                                "componentId": "ControlLabel-sc-1edmum5-0",
                                                "isStatic": false,
                                                "lastClassName": "hCskeX",
                                                "rules": Array [
                                                  [Function],
                                                ],
                                              },
                                              "displayName": "ControlLabel",
                                              "foldedComponentIds": Array [],
                                              "render": [Function],
                                              "styledComponentId": "ControlLabel-sc-1edmum5-0",
                                              "target": [Function],
                                              "toString": [Function],
                                              "warnTooManyClasses": [Function],
                                              "withComponent": [Function],
                                            }
                                          }
                                          forwardedRef={null}
                                        >
                                          <ControlLabel
                                            bsClass="control-label"
                                            className="ControlLabel-sc-1edmum5-0 hCskeX"
                                            srOnly={false}
                                          >
                                            <label
                                              className="ControlLabel-sc-1edmum5-0 hCskeX control-label"
                                            >
                                              Title
                                            </label>
                                          </ControlLabel>
                                        </StyledComponent>
                                      </ControlLabel>
                                      <FormControl
                                        onChange={[Function]}
                                        placeholder="Enter title"
                                        type="text"
                                        value="new Title"
                                      >
                                        <StyledComponent
                                          forwardedComponent={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "Feedback": [Function],
                                              "SIZES": Array [
                                                "small",
                                                "large",
                                              ],
                                              "Static": [Function],
                                              "attrs": Array [],
                                              "componentStyle": ComponentStyle {
                                                "componentId": "FormControl-sc-1amoaox-0",
                                                "isStatic": false,
                                                "lastClassName": "eXfwDC",
                                                "rules": Array [
                                                  [Function],
                                                ],
                                              },
                                              "displayName": "FormControl",
                                              "foldedComponentIds": Array [],
                                              "render": [Function],
                                              "styledComponentId": "FormControl-sc-1amoaox-0",
                                              "target": [Function],
                                              "toString": [Function],
                                              "warnTooManyClasses": [Function],
                                              "withComponent": [Function],
                                            }
                                          }
                                          forwardedRef={null}
                                          onChange={[Function]}
                                          placeholder="Enter title"
                                          type="text"
                                          value="new Title"
                                        >
                                          <FormControl
                                            bsClass="form-control"
                                            className="FormControl-sc-1amoaox-0 eXfwDC"
                                            componentClass="input"
                                            onChange={[Function]}
                                            placeholder="Enter title"
                                            type="text"
                                            value="new Title"
                                          >
                                            <input
                                              className="FormControl-sc-1amoaox-0 eXfwDC form-control"
                                              onChange={[Function]}
                                              placeholder="Enter title"
                                              type="text"
                                              value="new Title"
                                            />
                                          </FormControl>
                                        </StyledComponent>
                                      </FormControl>
                                    </div>
                                  </FormGroup>
                                </StyledComponent>
                              </FormGroup__StyledFormGroup>
                            </Component>
                            <ForwardRef
                              bsStyle="primary"
                              className="button"
                              onClick={[Function]}
                              type="submit"
                            >
                              <Button__StyledButton
                                bsStyle="primary"
                                className="button"
                                onClick={[Function]}
                                type="submit"
                              >
                                <StyledComponent
                                  bsStyle="primary"
                                  className="button"
                                  forwardedComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "SIZES": Array [
                                        "large",
                                        "small",
                                        "xsmall",
                                      ],
                                      "STYLES": Array [
                                        "success",
                                        "warning",
                                        "danger",
                                        "info",
                                        "default",
                                        "primary",
                                        "link",
                                      ],
                                      "attrs": Array [],
                                      "componentStyle": ComponentStyle {
                                        "componentId": "Button__StyledButton-c9cbmb-0",
                                        "isStatic": false,
                                        "lastClassName": "jVYrA",
                                        "rules": Array [
                                          [Function],
                                        ],
                                      },
                                      "displayName": "Button__StyledButton",
                                      "foldedComponentIds": Array [],
                                      "render": [Function],
                                      "styledComponentId": "Button__StyledButton-c9cbmb-0",
                                      "target": [Function],
                                      "toString": [Function],
                                      "warnTooManyClasses": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  forwardedRef={null}
                                  onClick={[Function]}
                                  type="submit"
                                >
                                  <Button
                                    active={false}
                                    block={false}
                                    bsClass="btn"
                                    bsStyle="primary"
                                    className="Button__StyledButton-c9cbmb-0 jVYrA button"
                                    disabled={false}
                                    onClick={[Function]}
                                    type="submit"
                                  >
                                    <button
                                      className="Button__StyledButton-c9cbmb-0 jVYrA button btn btn-primary"
                                      disabled={false}
                                      onClick={[Function]}
                                      type="submit"
                                    >
                                      Save
                                    </button>
                                  </Button>
                                </StyledComponent>
                              </Button__StyledButton>
                            </ForwardRef>
                            <ForwardRef
                              bsStyle="info"
                              className="button"
                              disabled={true}
                              onClick={[Function]}
                              type="submit"
                            >
                              <Button__StyledButton
                                bsStyle="info"
                                className="button"
                                disabled={true}
                                onClick={[Function]}
                                type="submit"
                              >
                                <StyledComponent
                                  bsStyle="info"
                                  className="button"
                                  disabled={true}
                                  forwardedComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "SIZES": Array [
                                        "large",
                                        "small",
                                        "xsmall",
                                      ],
                                      "STYLES": Array [
                                        "success",
                                        "warning",
                                        "danger",
                                        "info",
                                        "default",
                                        "primary",
                                        "link",
                                      ],
                                      "attrs": Array [],
                                      "componentStyle": ComponentStyle {
                                        "componentId": "Button__StyledButton-c9cbmb-0",
                                        "isStatic": false,
                                        "lastClassName": "jVYrA",
                                        "rules": Array [
                                          [Function],
                                        ],
                                      },
                                      "displayName": "Button__StyledButton",
                                      "foldedComponentIds": Array [],
                                      "render": [Function],
                                      "styledComponentId": "Button__StyledButton-c9cbmb-0",
                                      "target": [Function],
                                      "toString": [Function],
                                      "warnTooManyClasses": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  forwardedRef={null}
                                  onClick={[Function]}
                                  type="submit"
                                >
                                  <Button
                                    active={false}
                                    block={false}
                                    bsClass="btn"
                                    bsStyle="info"
                                    className="Button__StyledButton-c9cbmb-0 jVYrA button"
                                    disabled={true}
                                    onClick={[Function]}
                                    type="submit"
                                  >
                                    <button
                                      className="Button__StyledButton-c9cbmb-0 jVYrA button btn btn-info"
                                      disabled={true}
                                      onClick={[Function]}
                                      type="submit"
                                    >
                                      Save as
                                    </button>
                                  </Button>
                                </StyledComponent>
                              </Button__StyledButton>
                            </ForwardRef>
                            <ForwardRef
                              className="button"
                              onClick={[Function]}
                            >
                              <Button__StyledButton
                                className="button"
                                onClick={[Function]}
                              >
                                <StyledComponent
                                  className="button"
                                  forwardedComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "SIZES": Array [
                                        "large",
                                        "small",
                                        "xsmall",
                                      ],
                                      "STYLES": Array [
                                        "success",
                                        "warning",
                                        "danger",
                                        "info",
                                        "default",
                                        "primary",
                                        "link",
                                      ],
                                      "attrs": Array [],
                                      "componentStyle": ComponentStyle {
                                        "componentId": "Button__StyledButton-c9cbmb-0",
                                        "isStatic": false,
                                        "lastClassName": "jVYrA",
                                        "rules": Array [
                                          [Function],
                                        ],
                                      },
                                      "displayName": "Button__StyledButton",
                                      "foldedComponentIds": Array [],
                                      "render": [Function],
                                      "styledComponentId": "Button__StyledButton-c9cbmb-0",
                                      "target": [Function],
                                      "toString": [Function],
                                      "warnTooManyClasses": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  forwardedRef={null}
                                  onClick={[Function]}
                                >
                                  <Button
                                    active={false}
                                    block={false}
                                    bsClass="btn"
                                    bsStyle="default"
                                    className="Button__StyledButton-c9cbmb-0 jVYrA button"
                                    disabled={false}
                                    onClick={[Function]}
                                  >
                                    <button
                                      className="Button__StyledButton-c9cbmb-0 jVYrA button btn btn-default"
                                      disabled={false}
                                      onClick={[Function]}
                                      type="button"
                                    >
                                      Cancel
                                    </button>
                                  </Button>
                                </StyledComponent>
                              </Button__StyledButton>
                            </ForwardRef>
                          </form>
                        </div>
                      </div>
                    </Popover>
                  </StyledComponent>
                </Popover__StyledPopover>
              </ThemeProvider>
            </GraylogThemeProvider>
          </Popover>
        </mock-position>
      </MockPosition>
    </mock-portal>
  </MockPortal>
</SavedSearchForm>
`;

exports[`SavedSearchForm render the SavedSearchForm should render save 1`] = `
<SavedSearchForm
  disableCreateNew={false}
  isCreateNew={false}
  onChangeTitle={[Function]}
  saveAsSearch={[Function]}
  saveSearch={[Function]}
  target={[Function]}
  toggleModal={[Function]}
  value="new Title"
>
  <MockPortal>
    <mock-portal>
      <MockPosition
        container={<body />}
        placement="left"
        target={[Function]}
      >
        <mock-position
          container={<body />}
          placement="left"
          target={[Function]}
        >
          <Popover
            id="saved-search-popover"
            title="Name of search"
          >
            <GraylogThemeProvider>
              <ThemeProvider
                theme={
                  Object {
                    "breakpoints": Object {
                      "max": Object {
                        "lg": "1199px",
                        "md": "991px",
                        "sm": "767px",
                        "xs": "479px",
                      },
                      "min": Object {
                        "lg": "1200px",
                        "md": "992px",
                        "sm": "768px",
                        "xs": "480px",
                      },
                    },
                    "colors": Object {
                      "brand": Object {
                        "primary": "#ff3633",
                        "secondary": "#fff",
                        "tertiary": "#1f1f1f",
                      },
                      "global": Object {
                        "background": "#e8e8e8",
                        "contentBackground": "#fff",
                        "inputBackground": "#fff",
                        "link": "#702785",
                        "linkHover": "#410057",
                        "textAlt": "#fff",
                        "textDefault": "#1f1f1f",
                      },
                      "gray": Object {
                        "10": "#1f1f1f",
                        "100": "#ffffff",
                        "20": "#383838",
                        "30": "#515151",
                        "40": "#6a6a6a",
                        "50": "#838383",
                        "60": "#9b9b9b",
                        "70": "#b4b4b4",
                        "80": "#cdcdcd",
                        "90": "#e6e6e6",
                      },
                      "table": Object {
                        "background": "#fafafa",
                        "backgroundAlt": "#f0f0f0",
                        "backgroundHover": "#f5f5f5",
                        "variant": Object {
                          "active": "#e6e6e6",
                          "danger": "#eddddd",
                          "info": "#dde2f0",
                          "primary": "#e4dee7",
                          "success": "#ddeddf",
                          "warning": "#fff5dd",
                        },
                        "variantHover": Object {
                          "active": "#d0d0d0",
                          "danger": "#debdbd",
                          "info": "#bdc8e4",
                          "primary": "#cbbfd1",
                          "success": "#bddec2",
                          "warning": "#ffecbd",
                        },
                      },
                      "variant": Object {
                        "danger": "#ad0707",
                        "dark": Object {
                          "danger": "#990606",
                          "default": "#737373",
                          "info": "#0057a8",
                          "primary": "#632275",
                          "success": "#009a3a",
                          "warning": "#e1b900",
                        },
                        "darker": Object {
                          "danger": "#740505",
                          "default": "#575757",
                          "info": "#00427f",
                          "primary": "#4b1a59",
                          "success": "#00752c",
                          "warning": "#ab8d00",
                        },
                        "darkest": Object {
                          "danger": "#3c0202",
                          "default": "#2d2d2d",
                          "info": "#002242",
                          "primary": "#270e2e",
                          "success": "#003c17",
                          "warning": "#584900",
                        },
                        "default": "#828282",
                        "info": "#0063be",
                        "light": Object {
                          "danger": "#c27878",
                          "default": "#a6a6a6",
                          "info": "#7894ce",
                          "primary": "#9b7ca8",
                          "success": "#78c385",
                          "warning": "#ffdd78",
                        },
                        "lighter": Object {
                          "danger": "#debdbd",
                          "default": "#d0d0d0",
                          "info": "#bdc8e4",
                          "primary": "#cbbfd1",
                          "success": "#bddec2",
                          "warning": "#ffecbd",
                        },
                        "lightest": Object {
                          "danger": "#f7efef",
                          "default": "#f3f3f3",
                          "info": "#eff2f8",
                          "primary": "#f2f0f4",
                          "success": "#eff7f0",
                          "warning": "#fffaef",
                        },
                        "primary": "#702785",
                        "success": "#00ae42",
                        "warning": "#ffd200",
                      },
                    },
                    "components": Object {
                      "button": Array [
                        Array [
                          [Function],
                        ],
                        Array [
                          [Function],
                        ],
                        Array [
                          [Function],
                        ],
                        Array [
                          [Function],
                        ],
                        Array [
                          [Function],
                        ],
                        Array [
                          [Function],
                        ],
                        Array [
                          [Function],
                        ],
                      ],
                    },
                    "fonts": Object {
                      "family": Object {
                        "body": "\\"Open Sans\\", \\"Helvetica Neue\\", Helvetica, Arial, sans-serif",
                        "monospace": "\\"Roboto Mono\\", Menlo, Monaco, Consolas, \\"Courier New\\", monospace",
                      },
                      "size": Object {
                        "body": "1rem",
                        "h1": "1.802rem",
                        "h2": "1.602rem",
                        "h3": "1.424rem",
                        "h4": "1.266rem",
                        "h5": "1.125rem",
                        "h6": "1rem",
                        "huge": "2.027rem",
                        "large": "1.125rem",
                        "root": "87.5%",
                        "small": "0.889rem",
                        "tiny": "0.79rem",
                      },
                    },
                    "mode": "teinte",
                    "utils": Object {
                      "colorLevel": [Function],
                      "contrastingColor": [Function],
                      "opacify": [Function],
                      "readableColor": [Function],
                    },
                  }
                }
              >
                <Popover__StyledPopover
                  id="saved-search-popover"
                  title="Name of search"
                >
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "Popover__StyledPopover-wd1j0g-0",
                          "isStatic": false,
                          "lastClassName": "cdMcFy",
                          "rules": Array [
                            [Function],
                          ],
                        },
                        "displayName": "Popover__StyledPopover",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "Popover__StyledPopover-wd1j0g-0",
                        "target": [Function],
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    id="saved-search-popover"
                    title="Name of search"
                  >
                    <Popover
                      bsClass="popover"
                      className="Popover__StyledPopover-wd1j0g-0 cdMcFy"
                      id="saved-search-popover"
                      placement="right"
                      title="Name of search"
                    >
                      <div
                        className="Popover__StyledPopover-wd1j0g-0 cdMcFy popover right"
                        id="saved-search-popover"
                        role="tooltip"
                        style={
                          Object {
                            "display": "block",
                            "left": undefined,
                            "top": undefined,
                          }
                        }
                      >
                        <div
                          className="arrow"
                          style={
                            Object {
                              "left": undefined,
                              "top": undefined,
                            }
                          }
                        />
                        <h3
                          className="popover-title"
                        >
                          Name of search
                        </h3>
                        <div
                          className="popover-content"
                        >
                          <form
                            onSubmit={[Function]}
                          >
                            <Component
                              validationState={null}
                            >
                              <FormGroup__StyledFormGroup
                                validationState={null}
                              >
                                <StyledComponent
                                  forwardedComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "SIZES": Array [
                                        "large",
                                        "small",
                                      ],
                                      "attrs": Array [],
                                      "componentStyle": ComponentStyle {
                                        "componentId": "FormGroup__StyledFormGroup-sc-1wv4cm9-0",
                                        "isStatic": false,
                                        "lastClassName": "gcTkZc",
                                        "rules": Array [
                                          [Function],
                                        ],
                                      },
                                      "displayName": "FormGroup__StyledFormGroup",
                                      "foldedComponentIds": Array [],
                                      "render": [Function],
                                      "styledComponentId": "FormGroup__StyledFormGroup-sc-1wv4cm9-0",
                                      "target": [Function],
                                      "toString": [Function],
                                      "warnTooManyClasses": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  forwardedRef={null}
                                  validationState={null}
                                >
                                  <FormGroup
                                    bsClass="form-group"
                                    className="FormGroup__StyledFormGroup-sc-1wv4cm9-0 gcTkZc"
                                    validationState={null}
                                  >
                                    <div
                                      className="FormGroup__StyledFormGroup-sc-1wv4cm9-0 gcTkZc form-group"
                                    >
                                      <ControlLabel>
                                        <StyledComponent
                                          forwardedComponent={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "attrs": Array [],
                                              "componentStyle": ComponentStyle {
                                                "componentId": "ControlLabel-sc-1edmum5-0",
                                                "isStatic": false,
                                                "lastClassName": "hCskeX",
                                                "rules": Array [
                                                  [Function],
                                                ],
                                              },
                                              "displayName": "ControlLabel",
                                              "foldedComponentIds": Array [],
                                              "render": [Function],
                                              "styledComponentId": "ControlLabel-sc-1edmum5-0",
                                              "target": [Function],
                                              "toString": [Function],
                                              "warnTooManyClasses": [Function],
                                              "withComponent": [Function],
                                            }
                                          }
                                          forwardedRef={null}
                                        >
                                          <ControlLabel
                                            bsClass="control-label"
                                            className="ControlLabel-sc-1edmum5-0 hCskeX"
                                            srOnly={false}
                                          >
                                            <label
                                              className="ControlLabel-sc-1edmum5-0 hCskeX control-label"
                                            >
                                              Title
                                            </label>
                                          </ControlLabel>
                                        </StyledComponent>
                                      </ControlLabel>
                                      <FormControl
                                        onChange={[Function]}
                                        placeholder="Enter title"
                                        type="text"
                                        value="new Title"
                                      >
                                        <StyledComponent
                                          forwardedComponent={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "Feedback": [Function],
                                              "SIZES": Array [
                                                "small",
                                                "large",
                                              ],
                                              "Static": [Function],
                                              "attrs": Array [],
                                              "componentStyle": ComponentStyle {
                                                "componentId": "FormControl-sc-1amoaox-0",
                                                "isStatic": false,
                                                "lastClassName": "eXfwDC",
                                                "rules": Array [
                                                  [Function],
                                                ],
                                              },
                                              "displayName": "FormControl",
                                              "foldedComponentIds": Array [],
                                              "render": [Function],
                                              "styledComponentId": "FormControl-sc-1amoaox-0",
                                              "target": [Function],
                                              "toString": [Function],
                                              "warnTooManyClasses": [Function],
                                              "withComponent": [Function],
                                            }
                                          }
                                          forwardedRef={null}
                                          onChange={[Function]}
                                          placeholder="Enter title"
                                          type="text"
                                          value="new Title"
                                        >
                                          <FormControl
                                            bsClass="form-control"
                                            className="FormControl-sc-1amoaox-0 eXfwDC"
                                            componentClass="input"
                                            onChange={[Function]}
                                            placeholder="Enter title"
                                            type="text"
                                            value="new Title"
                                          >
                                            <input
                                              className="FormControl-sc-1amoaox-0 eXfwDC form-control"
                                              onChange={[Function]}
                                              placeholder="Enter title"
                                              type="text"
                                              value="new Title"
                                            />
                                          </FormControl>
                                        </StyledComponent>
                                      </FormControl>
                                    </div>
                                  </FormGroup>
                                </StyledComponent>
                              </FormGroup__StyledFormGroup>
                            </Component>
                            <ForwardRef
                              bsStyle="primary"
                              className="button"
                              onClick={[Function]}
                              type="submit"
                            >
                              <Button__StyledButton
                                bsStyle="primary"
                                className="button"
                                onClick={[Function]}
                                type="submit"
                              >
                                <StyledComponent
                                  bsStyle="primary"
                                  className="button"
                                  forwardedComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "SIZES": Array [
                                        "large",
                                        "small",
                                        "xsmall",
                                      ],
                                      "STYLES": Array [
                                        "success",
                                        "warning",
                                        "danger",
                                        "info",
                                        "default",
                                        "primary",
                                        "link",
                                      ],
                                      "attrs": Array [],
                                      "componentStyle": ComponentStyle {
                                        "componentId": "Button__StyledButton-c9cbmb-0",
                                        "isStatic": false,
                                        "lastClassName": "jVYrA",
                                        "rules": Array [
                                          [Function],
                                        ],
                                      },
                                      "displayName": "Button__StyledButton",
                                      "foldedComponentIds": Array [],
                                      "render": [Function],
                                      "styledComponentId": "Button__StyledButton-c9cbmb-0",
                                      "target": [Function],
                                      "toString": [Function],
                                      "warnTooManyClasses": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  forwardedRef={null}
                                  onClick={[Function]}
                                  type="submit"
                                >
                                  <Button
                                    active={false}
                                    block={false}
                                    bsClass="btn"
                                    bsStyle="primary"
                                    className="Button__StyledButton-c9cbmb-0 jVYrA button"
                                    disabled={false}
                                    onClick={[Function]}
                                    type="submit"
                                  >
                                    <button
                                      className="Button__StyledButton-c9cbmb-0 jVYrA button btn btn-primary"
                                      disabled={false}
                                      onClick={[Function]}
                                      type="submit"
                                    >
                                      Save
                                    </button>
                                  </Button>
                                </StyledComponent>
                              </Button__StyledButton>
                            </ForwardRef>
                            <ForwardRef
                              bsStyle="info"
                              className="button"
                              disabled={false}
                              onClick={[Function]}
                              type="submit"
                            >
                              <Button__StyledButton
                                bsStyle="info"
                                className="button"
                                disabled={false}
                                onClick={[Function]}
                                type="submit"
                              >
                                <StyledComponent
                                  bsStyle="info"
                                  className="button"
                                  disabled={false}
                                  forwardedComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "SIZES": Array [
                                        "large",
                                        "small",
                                        "xsmall",
                                      ],
                                      "STYLES": Array [
                                        "success",
                                        "warning",
                                        "danger",
                                        "info",
                                        "default",
                                        "primary",
                                        "link",
                                      ],
                                      "attrs": Array [],
                                      "componentStyle": ComponentStyle {
                                        "componentId": "Button__StyledButton-c9cbmb-0",
                                        "isStatic": false,
                                        "lastClassName": "jVYrA",
                                        "rules": Array [
                                          [Function],
                                        ],
                                      },
                                      "displayName": "Button__StyledButton",
                                      "foldedComponentIds": Array [],
                                      "render": [Function],
                                      "styledComponentId": "Button__StyledButton-c9cbmb-0",
                                      "target": [Function],
                                      "toString": [Function],
                                      "warnTooManyClasses": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  forwardedRef={null}
                                  onClick={[Function]}
                                  type="submit"
                                >
                                  <Button
                                    active={false}
                                    block={false}
                                    bsClass="btn"
                                    bsStyle="info"
                                    className="Button__StyledButton-c9cbmb-0 jVYrA button"
                                    disabled={false}
                                    onClick={[Function]}
                                    type="submit"
                                  >
                                    <button
                                      className="Button__StyledButton-c9cbmb-0 jVYrA button btn btn-info"
                                      disabled={false}
                                      onClick={[Function]}
                                      type="submit"
                                    >
                                      Save as
                                    </button>
                                  </Button>
                                </StyledComponent>
                              </Button__StyledButton>
                            </ForwardRef>
                            <ForwardRef
                              className="button"
                              onClick={[Function]}
                            >
                              <Button__StyledButton
                                className="button"
                                onClick={[Function]}
                              >
                                <StyledComponent
                                  className="button"
                                  forwardedComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "SIZES": Array [
                                        "large",
                                        "small",
                                        "xsmall",
                                      ],
                                      "STYLES": Array [
                                        "success",
                                        "warning",
                                        "danger",
                                        "info",
                                        "default",
                                        "primary",
                                        "link",
                                      ],
                                      "attrs": Array [],
                                      "componentStyle": ComponentStyle {
                                        "componentId": "Button__StyledButton-c9cbmb-0",
                                        "isStatic": false,
                                        "lastClassName": "jVYrA",
                                        "rules": Array [
                                          [Function],
                                        ],
                                      },
                                      "displayName": "Button__StyledButton",
                                      "foldedComponentIds": Array [],
                                      "render": [Function],
                                      "styledComponentId": "Button__StyledButton-c9cbmb-0",
                                      "target": [Function],
                                      "toString": [Function],
                                      "warnTooManyClasses": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  forwardedRef={null}
                                  onClick={[Function]}
                                >
                                  <Button
                                    active={false}
                                    block={false}
                                    bsClass="btn"
                                    bsStyle="default"
                                    className="Button__StyledButton-c9cbmb-0 jVYrA button"
                                    disabled={false}
                                    onClick={[Function]}
                                  >
                                    <button
                                      className="Button__StyledButton-c9cbmb-0 jVYrA button btn btn-default"
                                      disabled={false}
                                      onClick={[Function]}
                                      type="button"
                                    >
                                      Cancel
                                    </button>
                                  </Button>
                                </StyledComponent>
                              </Button__StyledButton>
                            </ForwardRef>
                          </form>
                        </div>
                      </div>
                    </Popover>
                  </StyledComponent>
                </Popover__StyledPopover>
              </ThemeProvider>
            </GraylogThemeProvider>
          </Popover>
        </mock-position>
      </MockPosition>
    </mock-portal>
  </MockPortal>
</SavedSearchForm>
`;
