// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SavedSearchForm render the SavedSearchForm should render create new 1`] = `
<SavedSearchForm
  disableCreateNew={false}
  isCreateNew={true}
  onChangeTitle={[Function]}
  saveAsSearch={[Function]}
  saveSearch={[Function]}
  target={[Function]}
  toggleModal={[Function]}
  value="new Title"
>
  <MockPortal>
    <mock-portal>
      <MockPosition
        container={<body />}
        placement="left"
        target={[Function]}
      >
        <mock-position
          container={<body />}
          placement="left"
          target={[Function]}
        >
          <Popover
            id="saved-search-popover"
            title="Name of search"
          >
            <GraylogThemeProvider>
              <ThemeProvider
                theme={
                  Object {
                    "breakpoints": Object {
                      "max": Object {
                        "lg": "1199px",
                        "md": "991px",
                        "sm": "767px",
                        "xs": "479px",
                      },
                      "min": Object {
                        "lg": "1200px",
                        "md": "992px",
                        "sm": "768px",
                        "xs": "480px",
                      },
                    },
                    "colors": Object {
                      "brand": Object {
                        "primary": "#ff3633",
                        "secondary": "#fff",
                        "tertiary": "#1f1f1f",
                      },
                      "global": Object {
                        "background": "#e8e8e8",
                        "contentBackground": "#fff",
                        "link": "#702785",
                        "linkHover": "#410057",
                        "textAlt": "#fff",
                        "textDefault": "#1f1f1f",
                      },
                      "gray": Object {
                        "10": "#1f1f1f",
                        "100": "#ffffff",
                        "20": "#383838",
                        "30": "#515151",
                        "40": "#6a6a6a",
                        "50": "#838383",
                        "60": "#9b9b9b",
                        "70": "#b4b4b4",
                        "80": "#cdcdcd",
                        "90": "#e6e6e6",
                      },
                      "input": Object {
                        "background": "#fff",
                        "backgroundDisabled": "#dddddd",
                        "border": "#a6a6a6",
                        "borderFocus": "#7894ce",
                        "boxShadow": "inset 0 1px 1px rgba(0, 0, 0, 0.075), 0 0 8px rgba(120,148,206,0.4)",
                        "color": "#1f1f1f",
                        "colorDisabled": "#9b9b9b",
                        "placeholder": "#9b9b9b",
                      },
                      "table": Object {
                        "background": "#fafafa",
                        "backgroundAlt": "#f0f0f0",
                        "backgroundHover": "#f5f5f5",
                        "variant": Object {
                          "active": "#e6e6e6",
                          "danger": "#eddddd",
                          "info": "#dde2f0",
                          "primary": "#e4dee7",
                          "success": "#ddeddf",
                          "warning": "#fff5dd",
                        },
                        "variantHover": Object {
                          "active": "#d0d0d0",
                          "danger": "#debdbd",
                          "info": "#bdc8e4",
                          "primary": "#cbbfd1",
                          "success": "#bddec2",
                          "warning": "#ffecbd",
                        },
                      },
                      "variant": Object {
                        "danger": "#ad0707",
                        "dark": Object {
                          "danger": "#990606",
                          "default": "#737373",
                          "info": "#0057a8",
                          "primary": "#632275",
                          "success": "#009a3a",
                          "warning": "#e1b900",
                        },
                        "darker": Object {
                          "danger": "#740505",
                          "default": "#575757",
                          "info": "#00427f",
                          "primary": "#4b1a59",
                          "success": "#00752c",
                          "warning": "#ab8d00",
                        },
                        "darkest": Object {
                          "danger": "#3c0202",
                          "default": "#2d2d2d",
                          "info": "#002242",
                          "primary": "#270e2e",
                          "success": "#003c17",
                          "warning": "#584900",
                        },
                        "default": "#828282",
                        "info": "#0063be",
                        "light": Object {
                          "danger": "#c27878",
                          "default": "#a6a6a6",
                          "info": "#7894ce",
                          "primary": "#9b7ca8",
                          "success": "#78c385",
                          "warning": "#ffdd78",
                        },
                        "lighter": Object {
                          "danger": "#debdbd",
                          "default": "#d0d0d0",
                          "info": "#bdc8e4",
                          "primary": "#cbbfd1",
                          "success": "#bddec2",
                          "warning": "#ffecbd",
                        },
                        "lightest": Object {
                          "danger": "#f7efef",
                          "default": "#f3f3f3",
                          "info": "#eff2f8",
                          "primary": "#f2f0f4",
                          "success": "#eff7f0",
                          "warning": "#fffaef",
                        },
                        "primary": "#702785",
                        "success": "#00ae42",
                        "warning": "#ffd200",
                      },
                    },
                    "components": Object {
                      "aceEditor": Array [
                        ".ace_editor{border:1px solid ",
                        "#cdcdcd",
                        ";border-radius:5px;}.ace-graylog{background-color:",
                        "#fff",
                        ";color:",
                        "#2d2d2d",
                        ";&.ace_multiselect .ace_selection.ace_start{box-shadow:0 0 3px 0 ",
                        "#fff",
                        ";}.ace_gutter{background:",
                        "#f3f3f3",
                        ";color:",
                        "#2d2d2d",
                        ";}.ace_print-margin{width:1px;background:",
                        "#f3f3f3",
                        ";}.ace_cursor{color:",
                        "#a6a6a6",
                        ";}.ace_marker-layer{.ace_selection{background:",
                        "#b4b4b4",
                        ";}.ace_step{background:rgb(255,255,0);}.ace_bracket{margin:-1px 0 0 -1px;border:1px solid ",
                        "#b4b4b4",
                        ";}.ace_selected-word{border:1px solid ",
                        "#9b9b9b",
                        ";}.ace_active-line{background:",
                        "#e6e6e6",
                        ";}}.ace_gutter-active-line{background-color:",
                        "#cdcdcd",
                        ";}.ace_invisible{color:",
                        "#b4b4b4",
                        ";}.ace_keyword,.ace_meta,.ace_storage,.ace_storage.ace_type,.ace_support.ace_type{color:",
                        "#702785",
                        ";}.ace_keyword.ace_operator{color:",
                        "#00427f",
                        ";}.ace_constant.ace_character,.ace_constant.ace_language,.ace_constant.ace_numeric,.ace_keyword.ace_other.ace_unit,.ace_support.ace_constant,.ace_variable.ace_parameter{color:",
                        "#4b1a59",
                        ";}.ace_constant.ace_other{color:",
                        "#575757",
                        ";}.ace_invalid{color:",
                        "#fff",
                        ";background-color:",
                        "#c27878",
                        ";}.ace_invalid.ace_deprecated{color:",
                        "#fff",
                        ";background-color:",
                        "#702785",
                        ";}.ace_fold{background-color:",
                        "#0063be",
                        ";border-color:",
                        "#2d2d2d",
                        ";}.ace_entity.ace_name.ace_function,.ace_support.ace_function,.ace_variable{color:",
                        "#0063be",
                        ";}.ace_support.ace_class,.ace_support.ace_type{color:",
                        "#ab8d00",
                        ";}.ace_heading,.ace_markup.ace_heading,.ace_string{color:",
                        "#00752c",
                        ";}.ace_entity.ace_name.ace_tag,.ace_entity.ace_other.ace_attribute-name,.ace_meta.ace_tag,.ace_string.ace_regexp,.ace_variable{color:",
                        "#c27878",
                        ";}.ace_comment{color:",
                        "#737373",
                        ";}}",
                      ],
                      "button": Array [
                        Array [
                          [Function],
                        ],
                        Array [
                          [Function],
                        ],
                        Array [
                          [Function],
                        ],
                        Array [
                          [Function],
                        ],
                        Array [
                          [Function],
                        ],
                        Array [
                          [Function],
                        ],
                        Array [
                          [Function],
                        ],
                      ],
                    },
                    "fonts": Object {
                      "family": Object {
                        "body": "\\"Open Sans\\", \\"Helvetica Neue\\", Helvetica, Arial, sans-serif",
                        "monospace": "\\"Roboto Mono\\", Menlo, Monaco, Consolas, \\"Courier New\\", monospace",
                      },
                      "size": Object {
                        "body": "1rem",
                        "h1": "1.802rem",
                        "h2": "1.602rem",
                        "h3": "1.424rem",
                        "h4": "1.266rem",
                        "h5": "1.125rem",
                        "h6": "1rem",
                        "huge": "2.027rem",
                        "large": "1.125rem",
                        "root": "87.5%",
                        "small": "0.889rem",
                        "tiny": "0.79rem",
                      },
                    },
                    "mode": "teinte",
                    "utils": Object {
                      "colorLevel": [Function],
                      "contrastingColor": [Function],
                      "opacify": [Function],
                      "readableColor": [Function],
                    },
                  }
                }
              >
                <Popover__StyledPopover
                  id="saved-search-popover"
                  title="Name of search"
                >
                  <Popover
                    bsClass="popover"
                    className="Popover__StyledPopover-wd1j0g-0 imQAUx"
                    id="saved-search-popover"
                    placement="right"
                    title="Name of search"
                  >
                    <div
                      className="Popover__StyledPopover-wd1j0g-0 imQAUx popover right"
                      id="saved-search-popover"
                      role="tooltip"
                      style={
                        Object {
                          "display": "block",
                          "left": undefined,
                          "top": undefined,
                        }
                      }
                    >
                      <div
                        className="arrow"
                        style={
                          Object {
                            "left": undefined,
                            "top": undefined,
                          }
                        }
                      />
                      <h3
                        className="popover-title"
                      >
                        Name of search
                      </h3>
                      <div
                        className="popover-content"
                      >
                        <form
                          onSubmit={[Function]}
                        >
                          <Component
                            validationState={null}
                          >
                            <FormGroup__StyledFormGroup
                              validationState={null}
                            >
                              <FormGroup
                                bsClass="form-group"
                                className="FormGroup__StyledFormGroup-sc-1wv4cm9-0 giUuGy"
                                validationState={null}
                              >
                                <div
                                  className="FormGroup__StyledFormGroup-sc-1wv4cm9-0 giUuGy form-group"
                                >
                                  <ControlLabel>
                                    <ControlLabel
                                      bsClass="control-label"
                                      className="ControlLabel-sc-1edmum5-0 jKzIRX"
                                      srOnly={false}
                                    >
                                      <label
                                        className="ControlLabel-sc-1edmum5-0 jKzIRX control-label"
                                      >
                                        Title
                                      </label>
                                    </ControlLabel>
                                  </ControlLabel>
                                  <FormControl
                                    onChange={[Function]}
                                    placeholder="Enter title"
                                    type="text"
                                    value="new Title"
                                  >
                                    <FormControl
                                      bsClass="form-control"
                                      className="FormControl-sc-1amoaox-0 fKSsjP"
                                      componentClass="input"
                                      onChange={[Function]}
                                      placeholder="Enter title"
                                      type="text"
                                      value="new Title"
                                    >
                                      <input
                                        className="FormControl-sc-1amoaox-0 fKSsjP form-control"
                                        onChange={[Function]}
                                        placeholder="Enter title"
                                        type="text"
                                        value="new Title"
                                      />
                                    </FormControl>
                                  </FormControl>
                                </div>
                              </FormGroup>
                            </FormGroup__StyledFormGroup>
                          </Component>
                          <ForwardRef
                            bsStyle="info"
                            className="button"
                            disabled={false}
                            onClick={[Function]}
                            type="submit"
                          >
                            <Button__StyledButton
                              bsStyle="info"
                              className="button"
                              disabled={false}
                              onClick={[Function]}
                              type="submit"
                            >
                              <Button
                                active={false}
                                block={false}
                                bsClass="btn"
                                bsStyle="info"
                                className="Button__StyledButton-c9cbmb-0 laZUlH button"
                                disabled={false}
                                onClick={[Function]}
                                type="submit"
                              >
                                <button
                                  className="Button__StyledButton-c9cbmb-0 laZUlH button btn btn-info"
                                  disabled={false}
                                  onClick={[Function]}
                                  type="submit"
                                >
                                  Create new
                                </button>
                              </Button>
                            </Button__StyledButton>
                          </ForwardRef>
                          <ForwardRef
                            className="button"
                            onClick={[Function]}
                          >
                            <Button__StyledButton
                              className="button"
                              onClick={[Function]}
                            >
                              <Button
                                active={false}
                                block={false}
                                bsClass="btn"
                                bsStyle="default"
                                className="Button__StyledButton-c9cbmb-0 laZUlH button"
                                disabled={false}
                                onClick={[Function]}
                              >
                                <button
                                  className="Button__StyledButton-c9cbmb-0 laZUlH button btn btn-default"
                                  disabled={false}
                                  onClick={[Function]}
                                  type="button"
                                >
                                  Cancel
                                </button>
                              </Button>
                            </Button__StyledButton>
                          </ForwardRef>
                        </form>
                      </div>
                    </div>
                  </Popover>
                </Popover__StyledPopover>
              </ThemeProvider>
            </GraylogThemeProvider>
          </Popover>
        </mock-position>
      </MockPosition>
    </mock-portal>
  </MockPortal>
</SavedSearchForm>
`;

exports[`SavedSearchForm render the SavedSearchForm should render disabled create new 1`] = `
<SavedSearchForm
  disableCreateNew={true}
  isCreateNew={false}
  onChangeTitle={[Function]}
  saveAsSearch={[Function]}
  saveSearch={[Function]}
  target={[Function]}
  toggleModal={[Function]}
  value="new Title"
>
  <MockPortal>
    <mock-portal>
      <MockPosition
        container={<body />}
        placement="left"
        target={[Function]}
      >
        <mock-position
          container={<body />}
          placement="left"
          target={[Function]}
        >
          <Popover
            id="saved-search-popover"
            title="Name of search"
          >
            <GraylogThemeProvider>
              <ThemeProvider
                theme={
                  Object {
                    "breakpoints": Object {
                      "max": Object {
                        "lg": "1199px",
                        "md": "991px",
                        "sm": "767px",
                        "xs": "479px",
                      },
                      "min": Object {
                        "lg": "1200px",
                        "md": "992px",
                        "sm": "768px",
                        "xs": "480px",
                      },
                    },
                    "colors": Object {
                      "brand": Object {
                        "primary": "#ff3633",
                        "secondary": "#fff",
                        "tertiary": "#1f1f1f",
                      },
                      "global": Object {
                        "background": "#e8e8e8",
                        "contentBackground": "#fff",
                        "link": "#702785",
                        "linkHover": "#410057",
                        "textAlt": "#fff",
                        "textDefault": "#1f1f1f",
                      },
                      "gray": Object {
                        "10": "#1f1f1f",
                        "100": "#ffffff",
                        "20": "#383838",
                        "30": "#515151",
                        "40": "#6a6a6a",
                        "50": "#838383",
                        "60": "#9b9b9b",
                        "70": "#b4b4b4",
                        "80": "#cdcdcd",
                        "90": "#e6e6e6",
                      },
                      "input": Object {
                        "background": "#fff",
                        "backgroundDisabled": "#dddddd",
                        "border": "#a6a6a6",
                        "borderFocus": "#7894ce",
                        "boxShadow": "inset 0 1px 1px rgba(0, 0, 0, 0.075), 0 0 8px rgba(120,148,206,0.4)",
                        "color": "#1f1f1f",
                        "colorDisabled": "#9b9b9b",
                        "placeholder": "#9b9b9b",
                      },
                      "table": Object {
                        "background": "#fafafa",
                        "backgroundAlt": "#f0f0f0",
                        "backgroundHover": "#f5f5f5",
                        "variant": Object {
                          "active": "#e6e6e6",
                          "danger": "#eddddd",
                          "info": "#dde2f0",
                          "primary": "#e4dee7",
                          "success": "#ddeddf",
                          "warning": "#fff5dd",
                        },
                        "variantHover": Object {
                          "active": "#d0d0d0",
                          "danger": "#debdbd",
                          "info": "#bdc8e4",
                          "primary": "#cbbfd1",
                          "success": "#bddec2",
                          "warning": "#ffecbd",
                        },
                      },
                      "variant": Object {
                        "danger": "#ad0707",
                        "dark": Object {
                          "danger": "#990606",
                          "default": "#737373",
                          "info": "#0057a8",
                          "primary": "#632275",
                          "success": "#009a3a",
                          "warning": "#e1b900",
                        },
                        "darker": Object {
                          "danger": "#740505",
                          "default": "#575757",
                          "info": "#00427f",
                          "primary": "#4b1a59",
                          "success": "#00752c",
                          "warning": "#ab8d00",
                        },
                        "darkest": Object {
                          "danger": "#3c0202",
                          "default": "#2d2d2d",
                          "info": "#002242",
                          "primary": "#270e2e",
                          "success": "#003c17",
                          "warning": "#584900",
                        },
                        "default": "#828282",
                        "info": "#0063be",
                        "light": Object {
                          "danger": "#c27878",
                          "default": "#a6a6a6",
                          "info": "#7894ce",
                          "primary": "#9b7ca8",
                          "success": "#78c385",
                          "warning": "#ffdd78",
                        },
                        "lighter": Object {
                          "danger": "#debdbd",
                          "default": "#d0d0d0",
                          "info": "#bdc8e4",
                          "primary": "#cbbfd1",
                          "success": "#bddec2",
                          "warning": "#ffecbd",
                        },
                        "lightest": Object {
                          "danger": "#f7efef",
                          "default": "#f3f3f3",
                          "info": "#eff2f8",
                          "primary": "#f2f0f4",
                          "success": "#eff7f0",
                          "warning": "#fffaef",
                        },
                        "primary": "#702785",
                        "success": "#00ae42",
                        "warning": "#ffd200",
                      },
                    },
                    "components": Object {
                      "aceEditor": Array [
                        ".ace_editor{border:1px solid ",
                        "#cdcdcd",
                        ";border-radius:5px;}.ace-graylog{background-color:",
                        "#fff",
                        ";color:",
                        "#2d2d2d",
                        ";&.ace_multiselect .ace_selection.ace_start{box-shadow:0 0 3px 0 ",
                        "#fff",
                        ";}.ace_gutter{background:",
                        "#f3f3f3",
                        ";color:",
                        "#2d2d2d",
                        ";}.ace_print-margin{width:1px;background:",
                        "#f3f3f3",
                        ";}.ace_cursor{color:",
                        "#a6a6a6",
                        ";}.ace_marker-layer{.ace_selection{background:",
                        "#b4b4b4",
                        ";}.ace_step{background:rgb(255,255,0);}.ace_bracket{margin:-1px 0 0 -1px;border:1px solid ",
                        "#b4b4b4",
                        ";}.ace_selected-word{border:1px solid ",
                        "#9b9b9b",
                        ";}.ace_active-line{background:",
                        "#e6e6e6",
                        ";}}.ace_gutter-active-line{background-color:",
                        "#cdcdcd",
                        ";}.ace_invisible{color:",
                        "#b4b4b4",
                        ";}.ace_keyword,.ace_meta,.ace_storage,.ace_storage.ace_type,.ace_support.ace_type{color:",
                        "#702785",
                        ";}.ace_keyword.ace_operator{color:",
                        "#00427f",
                        ";}.ace_constant.ace_character,.ace_constant.ace_language,.ace_constant.ace_numeric,.ace_keyword.ace_other.ace_unit,.ace_support.ace_constant,.ace_variable.ace_parameter{color:",
                        "#4b1a59",
                        ";}.ace_constant.ace_other{color:",
                        "#575757",
                        ";}.ace_invalid{color:",
                        "#fff",
                        ";background-color:",
                        "#c27878",
                        ";}.ace_invalid.ace_deprecated{color:",
                        "#fff",
                        ";background-color:",
                        "#702785",
                        ";}.ace_fold{background-color:",
                        "#0063be",
                        ";border-color:",
                        "#2d2d2d",
                        ";}.ace_entity.ace_name.ace_function,.ace_support.ace_function,.ace_variable{color:",
                        "#0063be",
                        ";}.ace_support.ace_class,.ace_support.ace_type{color:",
                        "#ab8d00",
                        ";}.ace_heading,.ace_markup.ace_heading,.ace_string{color:",
                        "#00752c",
                        ";}.ace_entity.ace_name.ace_tag,.ace_entity.ace_other.ace_attribute-name,.ace_meta.ace_tag,.ace_string.ace_regexp,.ace_variable{color:",
                        "#c27878",
                        ";}.ace_comment{color:",
                        "#737373",
                        ";}}",
                      ],
                      "button": Array [
                        Array [
                          [Function],
                        ],
                        Array [
                          [Function],
                        ],
                        Array [
                          [Function],
                        ],
                        Array [
                          [Function],
                        ],
                        Array [
                          [Function],
                        ],
                        Array [
                          [Function],
                        ],
                        Array [
                          [Function],
                        ],
                      ],
                    },
                    "fonts": Object {
                      "family": Object {
                        "body": "\\"Open Sans\\", \\"Helvetica Neue\\", Helvetica, Arial, sans-serif",
                        "monospace": "\\"Roboto Mono\\", Menlo, Monaco, Consolas, \\"Courier New\\", monospace",
                      },
                      "size": Object {
                        "body": "1rem",
                        "h1": "1.802rem",
                        "h2": "1.602rem",
                        "h3": "1.424rem",
                        "h4": "1.266rem",
                        "h5": "1.125rem",
                        "h6": "1rem",
                        "huge": "2.027rem",
                        "large": "1.125rem",
                        "root": "87.5%",
                        "small": "0.889rem",
                        "tiny": "0.79rem",
                      },
                    },
                    "mode": "teinte",
                    "utils": Object {
                      "colorLevel": [Function],
                      "contrastingColor": [Function],
                      "opacify": [Function],
                      "readableColor": [Function],
                    },
                  }
                }
              >
                <Popover__StyledPopover
                  id="saved-search-popover"
                  title="Name of search"
                >
                  <Popover
                    bsClass="popover"
                    className="Popover__StyledPopover-wd1j0g-0 imQAUx"
                    id="saved-search-popover"
                    placement="right"
                    title="Name of search"
                  >
                    <div
                      className="Popover__StyledPopover-wd1j0g-0 imQAUx popover right"
                      id="saved-search-popover"
                      role="tooltip"
                      style={
                        Object {
                          "display": "block",
                          "left": undefined,
                          "top": undefined,
                        }
                      }
                    >
                      <div
                        className="arrow"
                        style={
                          Object {
                            "left": undefined,
                            "top": undefined,
                          }
                        }
                      />
                      <h3
                        className="popover-title"
                      >
                        Name of search
                      </h3>
                      <div
                        className="popover-content"
                      >
                        <form
                          onSubmit={[Function]}
                        >
                          <Component
                            validationState={null}
                          >
                            <FormGroup__StyledFormGroup
                              validationState={null}
                            >
                              <FormGroup
                                bsClass="form-group"
                                className="FormGroup__StyledFormGroup-sc-1wv4cm9-0 giUuGy"
                                validationState={null}
                              >
                                <div
                                  className="FormGroup__StyledFormGroup-sc-1wv4cm9-0 giUuGy form-group"
                                >
                                  <ControlLabel>
                                    <ControlLabel
                                      bsClass="control-label"
                                      className="ControlLabel-sc-1edmum5-0 jKzIRX"
                                      srOnly={false}
                                    >
                                      <label
                                        className="ControlLabel-sc-1edmum5-0 jKzIRX control-label"
                                      >
                                        Title
                                      </label>
                                    </ControlLabel>
                                  </ControlLabel>
                                  <FormControl
                                    onChange={[Function]}
                                    placeholder="Enter title"
                                    type="text"
                                    value="new Title"
                                  >
                                    <FormControl
                                      bsClass="form-control"
                                      className="FormControl-sc-1amoaox-0 fKSsjP"
                                      componentClass="input"
                                      onChange={[Function]}
                                      placeholder="Enter title"
                                      type="text"
                                      value="new Title"
                                    >
                                      <input
                                        className="FormControl-sc-1amoaox-0 fKSsjP form-control"
                                        onChange={[Function]}
                                        placeholder="Enter title"
                                        type="text"
                                        value="new Title"
                                      />
                                    </FormControl>
                                  </FormControl>
                                </div>
                              </FormGroup>
                            </FormGroup__StyledFormGroup>
                          </Component>
                          <ForwardRef
                            bsStyle="primary"
                            className="button"
                            onClick={[Function]}
                            type="submit"
                          >
                            <Button__StyledButton
                              bsStyle="primary"
                              className="button"
                              onClick={[Function]}
                              type="submit"
                            >
                              <Button
                                active={false}
                                block={false}
                                bsClass="btn"
                                bsStyle="primary"
                                className="Button__StyledButton-c9cbmb-0 laZUlH button"
                                disabled={false}
                                onClick={[Function]}
                                type="submit"
                              >
                                <button
                                  className="Button__StyledButton-c9cbmb-0 laZUlH button btn btn-primary"
                                  disabled={false}
                                  onClick={[Function]}
                                  type="submit"
                                >
                                  Save
                                </button>
                              </Button>
                            </Button__StyledButton>
                          </ForwardRef>
                          <ForwardRef
                            bsStyle="info"
                            className="button"
                            disabled={true}
                            onClick={[Function]}
                            type="submit"
                          >
                            <Button__StyledButton
                              bsStyle="info"
                              className="button"
                              disabled={true}
                              onClick={[Function]}
                              type="submit"
                            >
                              <Button
                                active={false}
                                block={false}
                                bsClass="btn"
                                bsStyle="info"
                                className="Button__StyledButton-c9cbmb-0 laZUlH button"
                                disabled={true}
                                onClick={[Function]}
                                type="submit"
                              >
                                <button
                                  className="Button__StyledButton-c9cbmb-0 laZUlH button btn btn-info"
                                  disabled={true}
                                  onClick={[Function]}
                                  type="submit"
                                >
                                  Save as
                                </button>
                              </Button>
                            </Button__StyledButton>
                          </ForwardRef>
                          <ForwardRef
                            className="button"
                            onClick={[Function]}
                          >
                            <Button__StyledButton
                              className="button"
                              onClick={[Function]}
                            >
                              <Button
                                active={false}
                                block={false}
                                bsClass="btn"
                                bsStyle="default"
                                className="Button__StyledButton-c9cbmb-0 laZUlH button"
                                disabled={false}
                                onClick={[Function]}
                              >
                                <button
                                  className="Button__StyledButton-c9cbmb-0 laZUlH button btn btn-default"
                                  disabled={false}
                                  onClick={[Function]}
                                  type="button"
                                >
                                  Cancel
                                </button>
                              </Button>
                            </Button__StyledButton>
                          </ForwardRef>
                        </form>
                      </div>
                    </div>
                  </Popover>
                </Popover__StyledPopover>
              </ThemeProvider>
            </GraylogThemeProvider>
          </Popover>
        </mock-position>
      </MockPosition>
    </mock-portal>
  </MockPortal>
</SavedSearchForm>
`;

exports[`SavedSearchForm render the SavedSearchForm should render save 1`] = `
<SavedSearchForm
  disableCreateNew={false}
  isCreateNew={false}
  onChangeTitle={[Function]}
  saveAsSearch={[Function]}
  saveSearch={[Function]}
  target={[Function]}
  toggleModal={[Function]}
  value="new Title"
>
  <MockPortal>
    <mock-portal>
      <MockPosition
        container={<body />}
        placement="left"
        target={[Function]}
      >
        <mock-position
          container={<body />}
          placement="left"
          target={[Function]}
        >
          <Popover
            id="saved-search-popover"
            title="Name of search"
          >
            <GraylogThemeProvider>
              <ThemeProvider
                theme={
                  Object {
                    "breakpoints": Object {
                      "max": Object {
                        "lg": "1199px",
                        "md": "991px",
                        "sm": "767px",
                        "xs": "479px",
                      },
                      "min": Object {
                        "lg": "1200px",
                        "md": "992px",
                        "sm": "768px",
                        "xs": "480px",
                      },
                    },
                    "colors": Object {
                      "brand": Object {
                        "primary": "#ff3633",
                        "secondary": "#fff",
                        "tertiary": "#1f1f1f",
                      },
                      "global": Object {
                        "background": "#e8e8e8",
                        "contentBackground": "#fff",
                        "link": "#702785",
                        "linkHover": "#410057",
                        "textAlt": "#fff",
                        "textDefault": "#1f1f1f",
                      },
                      "gray": Object {
                        "10": "#1f1f1f",
                        "100": "#ffffff",
                        "20": "#383838",
                        "30": "#515151",
                        "40": "#6a6a6a",
                        "50": "#838383",
                        "60": "#9b9b9b",
                        "70": "#b4b4b4",
                        "80": "#cdcdcd",
                        "90": "#e6e6e6",
                      },
                      "input": Object {
                        "background": "#fff",
                        "backgroundDisabled": "#dddddd",
                        "border": "#a6a6a6",
                        "borderFocus": "#7894ce",
                        "boxShadow": "inset 0 1px 1px rgba(0, 0, 0, 0.075), 0 0 8px rgba(120,148,206,0.4)",
                        "color": "#1f1f1f",
                        "colorDisabled": "#9b9b9b",
                        "placeholder": "#9b9b9b",
                      },
                      "table": Object {
                        "background": "#fafafa",
                        "backgroundAlt": "#f0f0f0",
                        "backgroundHover": "#f5f5f5",
                        "variant": Object {
                          "active": "#e6e6e6",
                          "danger": "#eddddd",
                          "info": "#dde2f0",
                          "primary": "#e4dee7",
                          "success": "#ddeddf",
                          "warning": "#fff5dd",
                        },
                        "variantHover": Object {
                          "active": "#d0d0d0",
                          "danger": "#debdbd",
                          "info": "#bdc8e4",
                          "primary": "#cbbfd1",
                          "success": "#bddec2",
                          "warning": "#ffecbd",
                        },
                      },
                      "variant": Object {
                        "danger": "#ad0707",
                        "dark": Object {
                          "danger": "#990606",
                          "default": "#737373",
                          "info": "#0057a8",
                          "primary": "#632275",
                          "success": "#009a3a",
                          "warning": "#e1b900",
                        },
                        "darker": Object {
                          "danger": "#740505",
                          "default": "#575757",
                          "info": "#00427f",
                          "primary": "#4b1a59",
                          "success": "#00752c",
                          "warning": "#ab8d00",
                        },
                        "darkest": Object {
                          "danger": "#3c0202",
                          "default": "#2d2d2d",
                          "info": "#002242",
                          "primary": "#270e2e",
                          "success": "#003c17",
                          "warning": "#584900",
                        },
                        "default": "#828282",
                        "info": "#0063be",
                        "light": Object {
                          "danger": "#c27878",
                          "default": "#a6a6a6",
                          "info": "#7894ce",
                          "primary": "#9b7ca8",
                          "success": "#78c385",
                          "warning": "#ffdd78",
                        },
                        "lighter": Object {
                          "danger": "#debdbd",
                          "default": "#d0d0d0",
                          "info": "#bdc8e4",
                          "primary": "#cbbfd1",
                          "success": "#bddec2",
                          "warning": "#ffecbd",
                        },
                        "lightest": Object {
                          "danger": "#f7efef",
                          "default": "#f3f3f3",
                          "info": "#eff2f8",
                          "primary": "#f2f0f4",
                          "success": "#eff7f0",
                          "warning": "#fffaef",
                        },
                        "primary": "#702785",
                        "success": "#00ae42",
                        "warning": "#ffd200",
                      },
                    },
                    "components": Object {
                      "aceEditor": Array [
                        ".ace_editor{border:1px solid ",
                        "#cdcdcd",
                        ";border-radius:5px;}.ace-graylog{background-color:",
                        "#fff",
                        ";color:",
                        "#2d2d2d",
                        ";&.ace_multiselect .ace_selection.ace_start{box-shadow:0 0 3px 0 ",
                        "#fff",
                        ";}.ace_gutter{background:",
                        "#f3f3f3",
                        ";color:",
                        "#2d2d2d",
                        ";}.ace_print-margin{width:1px;background:",
                        "#f3f3f3",
                        ";}.ace_cursor{color:",
                        "#a6a6a6",
                        ";}.ace_marker-layer{.ace_selection{background:",
                        "#b4b4b4",
                        ";}.ace_step{background:rgb(255,255,0);}.ace_bracket{margin:-1px 0 0 -1px;border:1px solid ",
                        "#b4b4b4",
                        ";}.ace_selected-word{border:1px solid ",
                        "#9b9b9b",
                        ";}.ace_active-line{background:",
                        "#e6e6e6",
                        ";}}.ace_gutter-active-line{background-color:",
                        "#cdcdcd",
                        ";}.ace_invisible{color:",
                        "#b4b4b4",
                        ";}.ace_keyword,.ace_meta,.ace_storage,.ace_storage.ace_type,.ace_support.ace_type{color:",
                        "#702785",
                        ";}.ace_keyword.ace_operator{color:",
                        "#00427f",
                        ";}.ace_constant.ace_character,.ace_constant.ace_language,.ace_constant.ace_numeric,.ace_keyword.ace_other.ace_unit,.ace_support.ace_constant,.ace_variable.ace_parameter{color:",
                        "#4b1a59",
                        ";}.ace_constant.ace_other{color:",
                        "#575757",
                        ";}.ace_invalid{color:",
                        "#fff",
                        ";background-color:",
                        "#c27878",
                        ";}.ace_invalid.ace_deprecated{color:",
                        "#fff",
                        ";background-color:",
                        "#702785",
                        ";}.ace_fold{background-color:",
                        "#0063be",
                        ";border-color:",
                        "#2d2d2d",
                        ";}.ace_entity.ace_name.ace_function,.ace_support.ace_function,.ace_variable{color:",
                        "#0063be",
                        ";}.ace_support.ace_class,.ace_support.ace_type{color:",
                        "#ab8d00",
                        ";}.ace_heading,.ace_markup.ace_heading,.ace_string{color:",
                        "#00752c",
                        ";}.ace_entity.ace_name.ace_tag,.ace_entity.ace_other.ace_attribute-name,.ace_meta.ace_tag,.ace_string.ace_regexp,.ace_variable{color:",
                        "#c27878",
                        ";}.ace_comment{color:",
                        "#737373",
                        ";}}",
                      ],
                      "button": Array [
                        Array [
                          [Function],
                        ],
                        Array [
                          [Function],
                        ],
                        Array [
                          [Function],
                        ],
                        Array [
                          [Function],
                        ],
                        Array [
                          [Function],
                        ],
                        Array [
                          [Function],
                        ],
                        Array [
                          [Function],
                        ],
                      ],
                    },
                    "fonts": Object {
                      "family": Object {
                        "body": "\\"Open Sans\\", \\"Helvetica Neue\\", Helvetica, Arial, sans-serif",
                        "monospace": "\\"Roboto Mono\\", Menlo, Monaco, Consolas, \\"Courier New\\", monospace",
                      },
                      "size": Object {
                        "body": "1rem",
                        "h1": "1.802rem",
                        "h2": "1.602rem",
                        "h3": "1.424rem",
                        "h4": "1.266rem",
                        "h5": "1.125rem",
                        "h6": "1rem",
                        "huge": "2.027rem",
                        "large": "1.125rem",
                        "root": "87.5%",
                        "small": "0.889rem",
                        "tiny": "0.79rem",
                      },
                    },
                    "mode": "teinte",
                    "utils": Object {
                      "colorLevel": [Function],
                      "contrastingColor": [Function],
                      "opacify": [Function],
                      "readableColor": [Function],
                    },
                  }
                }
              >
                <Popover__StyledPopover
                  id="saved-search-popover"
                  title="Name of search"
                >
                  <Popover
                    bsClass="popover"
                    className="Popover__StyledPopover-wd1j0g-0 imQAUx"
                    id="saved-search-popover"
                    placement="right"
                    title="Name of search"
                  >
                    <div
                      className="Popover__StyledPopover-wd1j0g-0 imQAUx popover right"
                      id="saved-search-popover"
                      role="tooltip"
                      style={
                        Object {
                          "display": "block",
                          "left": undefined,
                          "top": undefined,
                        }
                      }
                    >
                      <div
                        className="arrow"
                        style={
                          Object {
                            "left": undefined,
                            "top": undefined,
                          }
                        }
                      />
                      <h3
                        className="popover-title"
                      >
                        Name of search
                      </h3>
                      <div
                        className="popover-content"
                      >
                        <form
                          onSubmit={[Function]}
                        >
                          <Component
                            validationState={null}
                          >
                            <FormGroup__StyledFormGroup
                              validationState={null}
                            >
                              <FormGroup
                                bsClass="form-group"
                                className="FormGroup__StyledFormGroup-sc-1wv4cm9-0 giUuGy"
                                validationState={null}
                              >
                                <div
                                  className="FormGroup__StyledFormGroup-sc-1wv4cm9-0 giUuGy form-group"
                                >
                                  <ControlLabel>
                                    <ControlLabel
                                      bsClass="control-label"
                                      className="ControlLabel-sc-1edmum5-0 jKzIRX"
                                      srOnly={false}
                                    >
                                      <label
                                        className="ControlLabel-sc-1edmum5-0 jKzIRX control-label"
                                      >
                                        Title
                                      </label>
                                    </ControlLabel>
                                  </ControlLabel>
                                  <FormControl
                                    onChange={[Function]}
                                    placeholder="Enter title"
                                    type="text"
                                    value="new Title"
                                  >
                                    <FormControl
                                      bsClass="form-control"
                                      className="FormControl-sc-1amoaox-0 fKSsjP"
                                      componentClass="input"
                                      onChange={[Function]}
                                      placeholder="Enter title"
                                      type="text"
                                      value="new Title"
                                    >
                                      <input
                                        className="FormControl-sc-1amoaox-0 fKSsjP form-control"
                                        onChange={[Function]}
                                        placeholder="Enter title"
                                        type="text"
                                        value="new Title"
                                      />
                                    </FormControl>
                                  </FormControl>
                                </div>
                              </FormGroup>
                            </FormGroup__StyledFormGroup>
                          </Component>
                          <ForwardRef
                            bsStyle="primary"
                            className="button"
                            onClick={[Function]}
                            type="submit"
                          >
                            <Button__StyledButton
                              bsStyle="primary"
                              className="button"
                              onClick={[Function]}
                              type="submit"
                            >
                              <Button
                                active={false}
                                block={false}
                                bsClass="btn"
                                bsStyle="primary"
                                className="Button__StyledButton-c9cbmb-0 laZUlH button"
                                disabled={false}
                                onClick={[Function]}
                                type="submit"
                              >
                                <button
                                  className="Button__StyledButton-c9cbmb-0 laZUlH button btn btn-primary"
                                  disabled={false}
                                  onClick={[Function]}
                                  type="submit"
                                >
                                  Save
                                </button>
                              </Button>
                            </Button__StyledButton>
                          </ForwardRef>
                          <ForwardRef
                            bsStyle="info"
                            className="button"
                            disabled={false}
                            onClick={[Function]}
                            type="submit"
                          >
                            <Button__StyledButton
                              bsStyle="info"
                              className="button"
                              disabled={false}
                              onClick={[Function]}
                              type="submit"
                            >
                              <Button
                                active={false}
                                block={false}
                                bsClass="btn"
                                bsStyle="info"
                                className="Button__StyledButton-c9cbmb-0 laZUlH button"
                                disabled={false}
                                onClick={[Function]}
                                type="submit"
                              >
                                <button
                                  className="Button__StyledButton-c9cbmb-0 laZUlH button btn btn-info"
                                  disabled={false}
                                  onClick={[Function]}
                                  type="submit"
                                >
                                  Save as
                                </button>
                              </Button>
                            </Button__StyledButton>
                          </ForwardRef>
                          <ForwardRef
                            className="button"
                            onClick={[Function]}
                          >
                            <Button__StyledButton
                              className="button"
                              onClick={[Function]}
                            >
                              <Button
                                active={false}
                                block={false}
                                bsClass="btn"
                                bsStyle="default"
                                className="Button__StyledButton-c9cbmb-0 laZUlH button"
                                disabled={false}
                                onClick={[Function]}
                              >
                                <button
                                  className="Button__StyledButton-c9cbmb-0 laZUlH button btn btn-default"
                                  disabled={false}
                                  onClick={[Function]}
                                  type="button"
                                >
                                  Cancel
                                </button>
                              </Button>
                            </Button__StyledButton>
                          </ForwardRef>
                        </form>
                      </div>
                    </div>
                  </Popover>
                </Popover__StyledPopover>
              </ThemeProvider>
            </GraylogThemeProvider>
          </Popover>
        </mock-position>
      </MockPosition>
    </mock-portal>
  </MockPortal>
</SavedSearchForm>
`;
