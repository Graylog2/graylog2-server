// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`RefreshControls rendering it renders refresh controlls with enabled: false and interval: 1000 1`] = `
<Component
  refreshConfig={
    Object {
      "enabled": false,
      "interval": 1000,
    }
  }
>
  <RefreshControls
    refreshConfig={
      Object {
        "enabled": false,
        "interval": 1000,
      }
    }
  >
    <RefreshControls__ControlsContainer
      className="pull-right"
    >
      <StyledComponent
        className="pull-right"
        forwardedComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "RefreshControls__ControlsContainer-sc-1pygk8n-0",
              "isStatic": true,
              "lastClassName": "kShVuS",
              "rules": Array [
                "max-width:100%;",
              ],
            },
            "displayName": "RefreshControls__ControlsContainer",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "RefreshControls__ControlsContainer-sc-1pygk8n-0",
            "target": "div",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
      >
        <div
          className="pull-right RefreshControls__ControlsContainer-sc-1pygk8n-0 kShVuS"
        >
          <RefreshControls__FlexibleButtonGroup>
            <StyledComponent
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "RefreshControls__FlexibleButtonGroup-sc-1pygk8n-1",
                    "isStatic": true,
                    "lastClassName": "etyOYS",
                    "rules": Array [
                      "display:flex;> .btn-group{max-width:calc(100% - 34px);.btn:first-child{max-width:100%;}}",
                    ],
                  },
                  "displayName": "RefreshControls__FlexibleButtonGroup",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "RefreshControls__FlexibleButtonGroup-sc-1pygk8n-1",
                  "target": [Function],
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
            >
              <ButtonGroup
                block={false}
                bsClass="btn-group"
                className="RefreshControls__FlexibleButtonGroup-sc-1pygk8n-1 etyOYS"
                justified={false}
                vertical={false}
              >
                <div
                  className="RefreshControls__FlexibleButtonGroup-sc-1pygk8n-1 etyOYS btn-group"
                >
                  <ForwardRef
                    bsStyle="default"
                    onClick={[Function]}
                  >
                    <Button
                      bsStyle="default"
                      onClick={[Function]}
                    >
                      <StyledComponent
                        bsStyle="default"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "SIZES": Array [
                              "large",
                              "small",
                              "xsmall",
                            ],
                            "STYLES": Array [
                              "success",
                              "warning",
                              "danger",
                              "info",
                              "default",
                              "primary",
                              "link",
                            ],
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Button-c9cbmb-0",
                              "isStatic": false,
                              "lastClassName": "iKWoaE",
                              "rules": Array [
                                [Function],
                              ],
                            },
                            "displayName": "Button",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Button-c9cbmb-0",
                            "target": [Function],
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                        onClick={[Function]}
                      >
                        <Button
                          active={false}
                          block={false}
                          bsClass="btn"
                          bsStyle="default"
                          className="Button-c9cbmb-0 iKWoaE"
                          disabled={false}
                          onClick={[Function]}
                        >
                          <button
                            className="Button-c9cbmb-0 iKWoaE btn btn-default"
                            disabled={false}
                            onClick={[Function]}
                            type="button"
                          >
                            <ForwardRef
                              fixedWidth={false}
                              inverse={false}
                              name="play"
                              pulse={false}
                              spin={false}
                            >
                              <i
                                className="fa fa-play"
                              />
                            </ForwardRef>
                          </button>
                        </Button>
                      </StyledComponent>
                    </Button>
                  </ForwardRef>
                  <DropdownButton
                    id="refresh-options-dropdown"
                    title={
                      <ForwardRef(RefreshControls__ButtonLabel)>
                        Not updating
                      </ForwardRef(RefreshControls__ButtonLabel)>
                    }
                  >
                    <StyledComponent
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "DropdownButton-sc-1343dcx-0",
                            "isStatic": false,
                            "lastClassName": "jgZJTb",
                            "rules": Array [
                              [Function],
                              ";",
                              "& ~",
                              " .dropdown-menu{> li > a{color:",
                              "#1F1F1F",
                              ";:hover,:focus{color:",
                              "#484848",
                              ";background-color:",
                              "#F1F2F2",
                              ";}}> .active > a{background-color:",
                              "#6DC6E7",
                              ";color:",
                              "#f7fcfd",
                              ";:hover,:focus{background-color:",
                              "#16ACE3",
                              ";color:",
                              "#f3fafd",
                              ";}}> .disabled > a{color:",
                              "#8f8f8f",
                              ";:hover,:focus{background-color:",
                              "#F1F2F2",
                              ";color:",
                              "#b0b0b0",
                              ";}}}",
                              ";",
                            ],
                          },
                          "displayName": "DropdownButton",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "DropdownButton-sc-1343dcx-0",
                          "target": [Function],
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                      id="refresh-options-dropdown"
                      title={
                        <ForwardRef(RefreshControls__ButtonLabel)>
                          Not updating
                        </ForwardRef(RefreshControls__ButtonLabel)>
                      }
                    >
                      <DropdownButton
                        className="DropdownButton-sc-1343dcx-0 jgZJTb"
                        id="refresh-options-dropdown"
                        title={
                          <ForwardRef(RefreshControls__ButtonLabel)>
                            Not updating
                          </ForwardRef(RefreshControls__ButtonLabel)>
                        }
                      >
                        <ForwardRef
                          id="refresh-options-dropdown"
                        >
                          <Uncontrolled(Dropdown)
                            id="refresh-options-dropdown"
                            innerRef={null}
                          >
                            <Dropdown
                              bsClass="dropdown"
                              componentClass={[Function]}
                              id="refresh-options-dropdown"
                              onToggle={[Function]}
                            >
                              <ButtonGroup
                                block={false}
                                bsClass="btn-group"
                                className="dropdown"
                                justified={false}
                                vertical={false}
                              >
                                <div
                                  className="dropdown btn-group"
                                >
                                  <DropdownToggle
                                    bsClass="dropdown-toggle"
                                    bsRole="toggle"
                                    className="DropdownButton-sc-1343dcx-0 jgZJTb"
                                    id="refresh-options-dropdown"
                                    key=".0"
                                    onClick={[Function]}
                                    onKeyDown={[Function]}
                                    open={false}
                                    useAnchor={false}
                                  >
                                    <Button
                                      active={false}
                                      aria-expanded={false}
                                      aria-haspopup={true}
                                      block={false}
                                      bsClass="btn"
                                      bsStyle="default"
                                      className="DropdownButton-sc-1343dcx-0 jgZJTb dropdown-toggle"
                                      disabled={false}
                                      id="refresh-options-dropdown"
                                      onClick={[Function]}
                                      onKeyDown={[Function]}
                                      role="button"
                                    >
                                      <button
                                        aria-expanded={false}
                                        aria-haspopup={true}
                                        className="DropdownButton-sc-1343dcx-0 jgZJTb dropdown-toggle btn btn-default"
                                        disabled={false}
                                        id="refresh-options-dropdown"
                                        onClick={[Function]}
                                        onKeyDown={[Function]}
                                        role="button"
                                        type="button"
                                      >
                                        <RefreshControls__ButtonLabel>
                                          <StyledComponent
                                            forwardedComponent={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "attrs": Array [],
                                                "componentStyle": ComponentStyle {
                                                  "componentId": "RefreshControls__ButtonLabel-sc-1pygk8n-2",
                                                  "isStatic": true,
                                                  "lastClassName": "jztvlP",
                                                  "rules": Array [
                                                    "display:inline-block;text-overflow:ellipsis;overflow:hidden;max-width:calc(100% - 9px);vertical-align:inherit;",
                                                  ],
                                                },
                                                "displayName": "RefreshControls__ButtonLabel",
                                                "foldedComponentIds": Array [],
                                                "render": [Function],
                                                "styledComponentId": "RefreshControls__ButtonLabel-sc-1pygk8n-2",
                                                "target": "div",
                                                "toString": [Function],
                                                "warnTooManyClasses": [Function],
                                                "withComponent": [Function],
                                              }
                                            }
                                            forwardedRef={null}
                                          >
                                            <div
                                              className="RefreshControls__ButtonLabel-sc-1pygk8n-2 jztvlP"
                                            >
                                              Not updating
                                            </div>
                                          </StyledComponent>
                                        </RefreshControls__ButtonLabel>
                                         
                                        <span
                                          className="caret"
                                        />
                                      </button>
                                    </Button>
                                  </DropdownToggle>
                                  <DropdownMenu
                                    bsClass="dropdown-menu"
                                    bsRole="menu"
                                    key=".1"
                                    labelledBy="refresh-options-dropdown"
                                    onClose={[Function]}
                                    onSelect={[Function]}
                                    pullRight={false}
                                  >
                                    <RootCloseWrapper
                                      disabled={true}
                                      event="click"
                                      onRootClose={[Function]}
                                    >
                                      <ul
                                        aria-labelledby="refresh-options-dropdown"
                                        className="dropdown-menu"
                                        role="menu"
                                      >
                                        <MenuItem
                                          bsClass="dropdown"
                                          disabled={false}
                                          divider={false}
                                          header={false}
                                          key=".$RefreshControls-1 Second"
                                          onClick={[Function]}
                                          onKeyDown={[Function]}
                                          onSelect={[Function]}
                                        >
                                          <li
                                            className=""
                                            role="presentation"
                                          >
                                            <SafeAnchor
                                              componentClass="a"
                                              onClick={[Function]}
                                              onKeyDown={[Function]}
                                              role="menuitem"
                                              tabIndex="-1"
                                            >
                                              <a
                                                href="#"
                                                onClick={[Function]}
                                                onKeyDown={[Function]}
                                                role="menuitem"
                                                tabIndex="-1"
                                              >
                                                1 Second
                                              </a>
                                            </SafeAnchor>
                                          </li>
                                        </MenuItem>
                                        <MenuItem
                                          bsClass="dropdown"
                                          disabled={false}
                                          divider={false}
                                          header={false}
                                          key=".$RefreshControls-2 Seconds"
                                          onClick={[Function]}
                                          onKeyDown={[Function]}
                                          onSelect={[Function]}
                                        >
                                          <li
                                            className=""
                                            role="presentation"
                                          >
                                            <SafeAnchor
                                              componentClass="a"
                                              onClick={[Function]}
                                              onKeyDown={[Function]}
                                              role="menuitem"
                                              tabIndex="-1"
                                            >
                                              <a
                                                href="#"
                                                onClick={[Function]}
                                                onKeyDown={[Function]}
                                                role="menuitem"
                                                tabIndex="-1"
                                              >
                                                2 Seconds
                                              </a>
                                            </SafeAnchor>
                                          </li>
                                        </MenuItem>
                                        <MenuItem
                                          bsClass="dropdown"
                                          disabled={false}
                                          divider={false}
                                          header={false}
                                          key=".$RefreshControls-5 Seconds"
                                          onClick={[Function]}
                                          onKeyDown={[Function]}
                                          onSelect={[Function]}
                                        >
                                          <li
                                            className=""
                                            role="presentation"
                                          >
                                            <SafeAnchor
                                              componentClass="a"
                                              onClick={[Function]}
                                              onKeyDown={[Function]}
                                              role="menuitem"
                                              tabIndex="-1"
                                            >
                                              <a
                                                href="#"
                                                onClick={[Function]}
                                                onKeyDown={[Function]}
                                                role="menuitem"
                                                tabIndex="-1"
                                              >
                                                5 Seconds
                                              </a>
                                            </SafeAnchor>
                                          </li>
                                        </MenuItem>
                                        <MenuItem
                                          bsClass="dropdown"
                                          disabled={false}
                                          divider={false}
                                          header={false}
                                          key=".$RefreshControls-10 Seconds"
                                          onClick={[Function]}
                                          onKeyDown={[Function]}
                                          onSelect={[Function]}
                                        >
                                          <li
                                            className=""
                                            role="presentation"
                                          >
                                            <SafeAnchor
                                              componentClass="a"
                                              onClick={[Function]}
                                              onKeyDown={[Function]}
                                              role="menuitem"
                                              tabIndex="-1"
                                            >
                                              <a
                                                href="#"
                                                onClick={[Function]}
                                                onKeyDown={[Function]}
                                                role="menuitem"
                                                tabIndex="-1"
                                              >
                                                10 Seconds
                                              </a>
                                            </SafeAnchor>
                                          </li>
                                        </MenuItem>
                                        <MenuItem
                                          bsClass="dropdown"
                                          disabled={false}
                                          divider={false}
                                          header={false}
                                          key=".$RefreshControls-30 Seconds"
                                          onClick={[Function]}
                                          onKeyDown={[Function]}
                                          onSelect={[Function]}
                                        >
                                          <li
                                            className=""
                                            role="presentation"
                                          >
                                            <SafeAnchor
                                              componentClass="a"
                                              onClick={[Function]}
                                              onKeyDown={[Function]}
                                              role="menuitem"
                                              tabIndex="-1"
                                            >
                                              <a
                                                href="#"
                                                onClick={[Function]}
                                                onKeyDown={[Function]}
                                                role="menuitem"
                                                tabIndex="-1"
                                              >
                                                30 Seconds
                                              </a>
                                            </SafeAnchor>
                                          </li>
                                        </MenuItem>
                                        <MenuItem
                                          bsClass="dropdown"
                                          disabled={false}
                                          divider={false}
                                          header={false}
                                          key=".$RefreshControls-1 Minute"
                                          onClick={[Function]}
                                          onKeyDown={[Function]}
                                          onSelect={[Function]}
                                        >
                                          <li
                                            className=""
                                            role="presentation"
                                          >
                                            <SafeAnchor
                                              componentClass="a"
                                              onClick={[Function]}
                                              onKeyDown={[Function]}
                                              role="menuitem"
                                              tabIndex="-1"
                                            >
                                              <a
                                                href="#"
                                                onClick={[Function]}
                                                onKeyDown={[Function]}
                                                role="menuitem"
                                                tabIndex="-1"
                                              >
                                                1 Minute
                                              </a>
                                            </SafeAnchor>
                                          </li>
                                        </MenuItem>
                                        <MenuItem
                                          bsClass="dropdown"
                                          disabled={false}
                                          divider={false}
                                          header={false}
                                          key=".$RefreshControls-5 Minutes"
                                          onClick={[Function]}
                                          onKeyDown={[Function]}
                                          onSelect={[Function]}
                                        >
                                          <li
                                            className=""
                                            role="presentation"
                                          >
                                            <SafeAnchor
                                              componentClass="a"
                                              onClick={[Function]}
                                              onKeyDown={[Function]}
                                              role="menuitem"
                                              tabIndex="-1"
                                            >
                                              <a
                                                href="#"
                                                onClick={[Function]}
                                                onKeyDown={[Function]}
                                                role="menuitem"
                                                tabIndex="-1"
                                              >
                                                5 Minutes
                                              </a>
                                            </SafeAnchor>
                                          </li>
                                        </MenuItem>
                                      </ul>
                                    </RootCloseWrapper>
                                  </DropdownMenu>
                                </div>
                              </ButtonGroup>
                            </Dropdown>
                          </Uncontrolled(Dropdown)>
                        </ForwardRef>
                      </DropdownButton>
                    </StyledComponent>
                  </DropdownButton>
                </div>
              </ButtonGroup>
            </StyledComponent>
          </RefreshControls__FlexibleButtonGroup>
        </div>
      </StyledComponent>
    </RefreshControls__ControlsContainer>
  </RefreshControls>
</Component>
`;

exports[`RefreshControls rendering it renders refresh controlls with enabled: false and interval: 300000 1`] = `
<Component
  refreshConfig={
    Object {
      "enabled": false,
      "interval": 300000,
    }
  }
>
  <RefreshControls
    refreshConfig={
      Object {
        "enabled": false,
        "interval": 300000,
      }
    }
  >
    <RefreshControls__ControlsContainer
      className="pull-right"
    >
      <StyledComponent
        className="pull-right"
        forwardedComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "RefreshControls__ControlsContainer-sc-1pygk8n-0",
              "isStatic": true,
              "lastClassName": "kShVuS",
              "rules": Array [
                "max-width:100%;",
              ],
            },
            "displayName": "RefreshControls__ControlsContainer",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "RefreshControls__ControlsContainer-sc-1pygk8n-0",
            "target": "div",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
      >
        <div
          className="pull-right RefreshControls__ControlsContainer-sc-1pygk8n-0 kShVuS"
        >
          <RefreshControls__FlexibleButtonGroup>
            <StyledComponent
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "RefreshControls__FlexibleButtonGroup-sc-1pygk8n-1",
                    "isStatic": true,
                    "lastClassName": "etyOYS",
                    "rules": Array [
                      "display:flex;> .btn-group{max-width:calc(100% - 34px);.btn:first-child{max-width:100%;}}",
                    ],
                  },
                  "displayName": "RefreshControls__FlexibleButtonGroup",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "RefreshControls__FlexibleButtonGroup-sc-1pygk8n-1",
                  "target": [Function],
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
            >
              <ButtonGroup
                block={false}
                bsClass="btn-group"
                className="RefreshControls__FlexibleButtonGroup-sc-1pygk8n-1 etyOYS"
                justified={false}
                vertical={false}
              >
                <div
                  className="RefreshControls__FlexibleButtonGroup-sc-1pygk8n-1 etyOYS btn-group"
                >
                  <ForwardRef
                    bsStyle="default"
                    onClick={[Function]}
                  >
                    <Button
                      bsStyle="default"
                      onClick={[Function]}
                    >
                      <StyledComponent
                        bsStyle="default"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "SIZES": Array [
                              "large",
                              "small",
                              "xsmall",
                            ],
                            "STYLES": Array [
                              "success",
                              "warning",
                              "danger",
                              "info",
                              "default",
                              "primary",
                              "link",
                            ],
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Button-c9cbmb-0",
                              "isStatic": false,
                              "lastClassName": "iKWoaE",
                              "rules": Array [
                                [Function],
                              ],
                            },
                            "displayName": "Button",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Button-c9cbmb-0",
                            "target": [Function],
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                        onClick={[Function]}
                      >
                        <Button
                          active={false}
                          block={false}
                          bsClass="btn"
                          bsStyle="default"
                          className="Button-c9cbmb-0 iKWoaE"
                          disabled={false}
                          onClick={[Function]}
                        >
                          <button
                            className="Button-c9cbmb-0 iKWoaE btn btn-default"
                            disabled={false}
                            onClick={[Function]}
                            type="button"
                          >
                            <ForwardRef
                              fixedWidth={false}
                              inverse={false}
                              name="play"
                              pulse={false}
                              spin={false}
                            >
                              <i
                                className="fa fa-play"
                              />
                            </ForwardRef>
                          </button>
                        </Button>
                      </StyledComponent>
                    </Button>
                  </ForwardRef>
                  <DropdownButton
                    id="refresh-options-dropdown"
                    title={
                      <ForwardRef(RefreshControls__ButtonLabel)>
                        Not updating
                      </ForwardRef(RefreshControls__ButtonLabel)>
                    }
                  >
                    <StyledComponent
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "DropdownButton-sc-1343dcx-0",
                            "isStatic": false,
                            "lastClassName": "jgZJTb",
                            "rules": Array [
                              [Function],
                              ";",
                              "& ~",
                              " .dropdown-menu{> li > a{color:",
                              "#1F1F1F",
                              ";:hover,:focus{color:",
                              "#484848",
                              ";background-color:",
                              "#F1F2F2",
                              ";}}> .active > a{background-color:",
                              "#6DC6E7",
                              ";color:",
                              "#f7fcfd",
                              ";:hover,:focus{background-color:",
                              "#16ACE3",
                              ";color:",
                              "#f3fafd",
                              ";}}> .disabled > a{color:",
                              "#8f8f8f",
                              ";:hover,:focus{background-color:",
                              "#F1F2F2",
                              ";color:",
                              "#b0b0b0",
                              ";}}}",
                              ";",
                            ],
                          },
                          "displayName": "DropdownButton",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "DropdownButton-sc-1343dcx-0",
                          "target": [Function],
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                      id="refresh-options-dropdown"
                      title={
                        <ForwardRef(RefreshControls__ButtonLabel)>
                          Not updating
                        </ForwardRef(RefreshControls__ButtonLabel)>
                      }
                    >
                      <DropdownButton
                        className="DropdownButton-sc-1343dcx-0 jgZJTb"
                        id="refresh-options-dropdown"
                        title={
                          <ForwardRef(RefreshControls__ButtonLabel)>
                            Not updating
                          </ForwardRef(RefreshControls__ButtonLabel)>
                        }
                      >
                        <ForwardRef
                          id="refresh-options-dropdown"
                        >
                          <Uncontrolled(Dropdown)
                            id="refresh-options-dropdown"
                            innerRef={null}
                          >
                            <Dropdown
                              bsClass="dropdown"
                              componentClass={[Function]}
                              id="refresh-options-dropdown"
                              onToggle={[Function]}
                            >
                              <ButtonGroup
                                block={false}
                                bsClass="btn-group"
                                className="dropdown"
                                justified={false}
                                vertical={false}
                              >
                                <div
                                  className="dropdown btn-group"
                                >
                                  <DropdownToggle
                                    bsClass="dropdown-toggle"
                                    bsRole="toggle"
                                    className="DropdownButton-sc-1343dcx-0 jgZJTb"
                                    id="refresh-options-dropdown"
                                    key=".0"
                                    onClick={[Function]}
                                    onKeyDown={[Function]}
                                    open={false}
                                    useAnchor={false}
                                  >
                                    <Button
                                      active={false}
                                      aria-expanded={false}
                                      aria-haspopup={true}
                                      block={false}
                                      bsClass="btn"
                                      bsStyle="default"
                                      className="DropdownButton-sc-1343dcx-0 jgZJTb dropdown-toggle"
                                      disabled={false}
                                      id="refresh-options-dropdown"
                                      onClick={[Function]}
                                      onKeyDown={[Function]}
                                      role="button"
                                    >
                                      <button
                                        aria-expanded={false}
                                        aria-haspopup={true}
                                        className="DropdownButton-sc-1343dcx-0 jgZJTb dropdown-toggle btn btn-default"
                                        disabled={false}
                                        id="refresh-options-dropdown"
                                        onClick={[Function]}
                                        onKeyDown={[Function]}
                                        role="button"
                                        type="button"
                                      >
                                        <RefreshControls__ButtonLabel>
                                          <StyledComponent
                                            forwardedComponent={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "attrs": Array [],
                                                "componentStyle": ComponentStyle {
                                                  "componentId": "RefreshControls__ButtonLabel-sc-1pygk8n-2",
                                                  "isStatic": true,
                                                  "lastClassName": "jztvlP",
                                                  "rules": Array [
                                                    "display:inline-block;text-overflow:ellipsis;overflow:hidden;max-width:calc(100% - 9px);vertical-align:inherit;",
                                                  ],
                                                },
                                                "displayName": "RefreshControls__ButtonLabel",
                                                "foldedComponentIds": Array [],
                                                "render": [Function],
                                                "styledComponentId": "RefreshControls__ButtonLabel-sc-1pygk8n-2",
                                                "target": "div",
                                                "toString": [Function],
                                                "warnTooManyClasses": [Function],
                                                "withComponent": [Function],
                                              }
                                            }
                                            forwardedRef={null}
                                          >
                                            <div
                                              className="RefreshControls__ButtonLabel-sc-1pygk8n-2 jztvlP"
                                            >
                                              Not updating
                                            </div>
                                          </StyledComponent>
                                        </RefreshControls__ButtonLabel>
                                         
                                        <span
                                          className="caret"
                                        />
                                      </button>
                                    </Button>
                                  </DropdownToggle>
                                  <DropdownMenu
                                    bsClass="dropdown-menu"
                                    bsRole="menu"
                                    key=".1"
                                    labelledBy="refresh-options-dropdown"
                                    onClose={[Function]}
                                    onSelect={[Function]}
                                    pullRight={false}
                                  >
                                    <RootCloseWrapper
                                      disabled={true}
                                      event="click"
                                      onRootClose={[Function]}
                                    >
                                      <ul
                                        aria-labelledby="refresh-options-dropdown"
                                        className="dropdown-menu"
                                        role="menu"
                                      >
                                        <MenuItem
                                          bsClass="dropdown"
                                          disabled={false}
                                          divider={false}
                                          header={false}
                                          key=".$RefreshControls-1 Second"
                                          onClick={[Function]}
                                          onKeyDown={[Function]}
                                          onSelect={[Function]}
                                        >
                                          <li
                                            className=""
                                            role="presentation"
                                          >
                                            <SafeAnchor
                                              componentClass="a"
                                              onClick={[Function]}
                                              onKeyDown={[Function]}
                                              role="menuitem"
                                              tabIndex="-1"
                                            >
                                              <a
                                                href="#"
                                                onClick={[Function]}
                                                onKeyDown={[Function]}
                                                role="menuitem"
                                                tabIndex="-1"
                                              >
                                                1 Second
                                              </a>
                                            </SafeAnchor>
                                          </li>
                                        </MenuItem>
                                        <MenuItem
                                          bsClass="dropdown"
                                          disabled={false}
                                          divider={false}
                                          header={false}
                                          key=".$RefreshControls-2 Seconds"
                                          onClick={[Function]}
                                          onKeyDown={[Function]}
                                          onSelect={[Function]}
                                        >
                                          <li
                                            className=""
                                            role="presentation"
                                          >
                                            <SafeAnchor
                                              componentClass="a"
                                              onClick={[Function]}
                                              onKeyDown={[Function]}
                                              role="menuitem"
                                              tabIndex="-1"
                                            >
                                              <a
                                                href="#"
                                                onClick={[Function]}
                                                onKeyDown={[Function]}
                                                role="menuitem"
                                                tabIndex="-1"
                                              >
                                                2 Seconds
                                              </a>
                                            </SafeAnchor>
                                          </li>
                                        </MenuItem>
                                        <MenuItem
                                          bsClass="dropdown"
                                          disabled={false}
                                          divider={false}
                                          header={false}
                                          key=".$RefreshControls-5 Seconds"
                                          onClick={[Function]}
                                          onKeyDown={[Function]}
                                          onSelect={[Function]}
                                        >
                                          <li
                                            className=""
                                            role="presentation"
                                          >
                                            <SafeAnchor
                                              componentClass="a"
                                              onClick={[Function]}
                                              onKeyDown={[Function]}
                                              role="menuitem"
                                              tabIndex="-1"
                                            >
                                              <a
                                                href="#"
                                                onClick={[Function]}
                                                onKeyDown={[Function]}
                                                role="menuitem"
                                                tabIndex="-1"
                                              >
                                                5 Seconds
                                              </a>
                                            </SafeAnchor>
                                          </li>
                                        </MenuItem>
                                        <MenuItem
                                          bsClass="dropdown"
                                          disabled={false}
                                          divider={false}
                                          header={false}
                                          key=".$RefreshControls-10 Seconds"
                                          onClick={[Function]}
                                          onKeyDown={[Function]}
                                          onSelect={[Function]}
                                        >
                                          <li
                                            className=""
                                            role="presentation"
                                          >
                                            <SafeAnchor
                                              componentClass="a"
                                              onClick={[Function]}
                                              onKeyDown={[Function]}
                                              role="menuitem"
                                              tabIndex="-1"
                                            >
                                              <a
                                                href="#"
                                                onClick={[Function]}
                                                onKeyDown={[Function]}
                                                role="menuitem"
                                                tabIndex="-1"
                                              >
                                                10 Seconds
                                              </a>
                                            </SafeAnchor>
                                          </li>
                                        </MenuItem>
                                        <MenuItem
                                          bsClass="dropdown"
                                          disabled={false}
                                          divider={false}
                                          header={false}
                                          key=".$RefreshControls-30 Seconds"
                                          onClick={[Function]}
                                          onKeyDown={[Function]}
                                          onSelect={[Function]}
                                        >
                                          <li
                                            className=""
                                            role="presentation"
                                          >
                                            <SafeAnchor
                                              componentClass="a"
                                              onClick={[Function]}
                                              onKeyDown={[Function]}
                                              role="menuitem"
                                              tabIndex="-1"
                                            >
                                              <a
                                                href="#"
                                                onClick={[Function]}
                                                onKeyDown={[Function]}
                                                role="menuitem"
                                                tabIndex="-1"
                                              >
                                                30 Seconds
                                              </a>
                                            </SafeAnchor>
                                          </li>
                                        </MenuItem>
                                        <MenuItem
                                          bsClass="dropdown"
                                          disabled={false}
                                          divider={false}
                                          header={false}
                                          key=".$RefreshControls-1 Minute"
                                          onClick={[Function]}
                                          onKeyDown={[Function]}
                                          onSelect={[Function]}
                                        >
                                          <li
                                            className=""
                                            role="presentation"
                                          >
                                            <SafeAnchor
                                              componentClass="a"
                                              onClick={[Function]}
                                              onKeyDown={[Function]}
                                              role="menuitem"
                                              tabIndex="-1"
                                            >
                                              <a
                                                href="#"
                                                onClick={[Function]}
                                                onKeyDown={[Function]}
                                                role="menuitem"
                                                tabIndex="-1"
                                              >
                                                1 Minute
                                              </a>
                                            </SafeAnchor>
                                          </li>
                                        </MenuItem>
                                        <MenuItem
                                          bsClass="dropdown"
                                          disabled={false}
                                          divider={false}
                                          header={false}
                                          key=".$RefreshControls-5 Minutes"
                                          onClick={[Function]}
                                          onKeyDown={[Function]}
                                          onSelect={[Function]}
                                        >
                                          <li
                                            className=""
                                            role="presentation"
                                          >
                                            <SafeAnchor
                                              componentClass="a"
                                              onClick={[Function]}
                                              onKeyDown={[Function]}
                                              role="menuitem"
                                              tabIndex="-1"
                                            >
                                              <a
                                                href="#"
                                                onClick={[Function]}
                                                onKeyDown={[Function]}
                                                role="menuitem"
                                                tabIndex="-1"
                                              >
                                                5 Minutes
                                              </a>
                                            </SafeAnchor>
                                          </li>
                                        </MenuItem>
                                      </ul>
                                    </RootCloseWrapper>
                                  </DropdownMenu>
                                </div>
                              </ButtonGroup>
                            </Dropdown>
                          </Uncontrolled(Dropdown)>
                        </ForwardRef>
                      </DropdownButton>
                    </StyledComponent>
                  </DropdownButton>
                </div>
              </ButtonGroup>
            </StyledComponent>
          </RefreshControls__FlexibleButtonGroup>
        </div>
      </StyledComponent>
    </RefreshControls__ControlsContainer>
  </RefreshControls>
</Component>
`;

exports[`RefreshControls rendering it renders refresh controlls with enabled: true and interval: 1000 1`] = `
<Component
  refreshConfig={
    Object {
      "enabled": true,
      "interval": 1000,
    }
  }
>
  <RefreshControls
    refreshConfig={
      Object {
        "enabled": true,
        "interval": 1000,
      }
    }
  >
    <RefreshControls__ControlsContainer
      className="pull-right"
    >
      <StyledComponent
        className="pull-right"
        forwardedComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "RefreshControls__ControlsContainer-sc-1pygk8n-0",
              "isStatic": true,
              "lastClassName": "kShVuS",
              "rules": Array [
                "max-width:100%;",
              ],
            },
            "displayName": "RefreshControls__ControlsContainer",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "RefreshControls__ControlsContainer-sc-1pygk8n-0",
            "target": "div",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
      >
        <div
          className="pull-right RefreshControls__ControlsContainer-sc-1pygk8n-0 kShVuS"
        >
          <RefreshControls__FlexibleButtonGroup>
            <StyledComponent
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "RefreshControls__FlexibleButtonGroup-sc-1pygk8n-1",
                    "isStatic": true,
                    "lastClassName": "etyOYS",
                    "rules": Array [
                      "display:flex;> .btn-group{max-width:calc(100% - 34px);.btn:first-child{max-width:100%;}}",
                    ],
                  },
                  "displayName": "RefreshControls__FlexibleButtonGroup",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "RefreshControls__FlexibleButtonGroup-sc-1pygk8n-1",
                  "target": [Function],
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
            >
              <ButtonGroup
                block={false}
                bsClass="btn-group"
                className="RefreshControls__FlexibleButtonGroup-sc-1pygk8n-1 etyOYS"
                justified={false}
                vertical={false}
              >
                <div
                  className="RefreshControls__FlexibleButtonGroup-sc-1pygk8n-1 etyOYS btn-group"
                >
                  <ForwardRef
                    bsStyle="default"
                    onClick={[Function]}
                  >
                    <Button
                      bsStyle="default"
                      onClick={[Function]}
                    >
                      <StyledComponent
                        bsStyle="default"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "SIZES": Array [
                              "large",
                              "small",
                              "xsmall",
                            ],
                            "STYLES": Array [
                              "success",
                              "warning",
                              "danger",
                              "info",
                              "default",
                              "primary",
                              "link",
                            ],
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Button-c9cbmb-0",
                              "isStatic": false,
                              "lastClassName": "iKWoaE",
                              "rules": Array [
                                [Function],
                              ],
                            },
                            "displayName": "Button",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Button-c9cbmb-0",
                            "target": [Function],
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                        onClick={[Function]}
                      >
                        <Button
                          active={false}
                          block={false}
                          bsClass="btn"
                          bsStyle="default"
                          className="Button-c9cbmb-0 iKWoaE"
                          disabled={false}
                          onClick={[Function]}
                        >
                          <button
                            className="Button-c9cbmb-0 iKWoaE btn btn-default"
                            disabled={false}
                            onClick={[Function]}
                            type="button"
                          >
                            <ForwardRef
                              fixedWidth={false}
                              inverse={false}
                              name="pause"
                              pulse={false}
                              spin={false}
                            >
                              <i
                                className="fa fa-pause"
                              />
                            </ForwardRef>
                          </button>
                        </Button>
                      </StyledComponent>
                    </Button>
                  </ForwardRef>
                  <DropdownButton
                    id="refresh-options-dropdown"
                    title={
                      <ForwardRef(RefreshControls__ButtonLabel)>
                        <React.Fragment>
                          Update every 
                          <span>
                            1
                             
                            <Pluralize
                              plural="seconds"
                              singular="second"
                              value={1}
                            />
                          </span>
                        </React.Fragment>
                      </ForwardRef(RefreshControls__ButtonLabel)>
                    }
                  >
                    <StyledComponent
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "DropdownButton-sc-1343dcx-0",
                            "isStatic": false,
                            "lastClassName": "jgZJTb",
                            "rules": Array [
                              [Function],
                              ";",
                              "& ~",
                              " .dropdown-menu{> li > a{color:",
                              "#1F1F1F",
                              ";:hover,:focus{color:",
                              "#484848",
                              ";background-color:",
                              "#F1F2F2",
                              ";}}> .active > a{background-color:",
                              "#6DC6E7",
                              ";color:",
                              "#f7fcfd",
                              ";:hover,:focus{background-color:",
                              "#16ACE3",
                              ";color:",
                              "#f3fafd",
                              ";}}> .disabled > a{color:",
                              "#8f8f8f",
                              ";:hover,:focus{background-color:",
                              "#F1F2F2",
                              ";color:",
                              "#b0b0b0",
                              ";}}}",
                              ";",
                            ],
                          },
                          "displayName": "DropdownButton",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "DropdownButton-sc-1343dcx-0",
                          "target": [Function],
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                      id="refresh-options-dropdown"
                      title={
                        <ForwardRef(RefreshControls__ButtonLabel)>
                          <React.Fragment>
                            Update every 
                            <span>
                              1
                               
                              <Pluralize
                                plural="seconds"
                                singular="second"
                                value={1}
                              />
                            </span>
                          </React.Fragment>
                        </ForwardRef(RefreshControls__ButtonLabel)>
                      }
                    >
                      <DropdownButton
                        className="DropdownButton-sc-1343dcx-0 jgZJTb"
                        id="refresh-options-dropdown"
                        title={
                          <ForwardRef(RefreshControls__ButtonLabel)>
                            <React.Fragment>
                              Update every 
                              <span>
                                1
                                 
                                <Pluralize
                                  plural="seconds"
                                  singular="second"
                                  value={1}
                                />
                              </span>
                            </React.Fragment>
                          </ForwardRef(RefreshControls__ButtonLabel)>
                        }
                      >
                        <ForwardRef
                          id="refresh-options-dropdown"
                        >
                          <Uncontrolled(Dropdown)
                            id="refresh-options-dropdown"
                            innerRef={null}
                          >
                            <Dropdown
                              bsClass="dropdown"
                              componentClass={[Function]}
                              id="refresh-options-dropdown"
                              onToggle={[Function]}
                            >
                              <ButtonGroup
                                block={false}
                                bsClass="btn-group"
                                className="dropdown"
                                justified={false}
                                vertical={false}
                              >
                                <div
                                  className="dropdown btn-group"
                                >
                                  <DropdownToggle
                                    bsClass="dropdown-toggle"
                                    bsRole="toggle"
                                    className="DropdownButton-sc-1343dcx-0 jgZJTb"
                                    id="refresh-options-dropdown"
                                    key=".0"
                                    onClick={[Function]}
                                    onKeyDown={[Function]}
                                    open={false}
                                    useAnchor={false}
                                  >
                                    <Button
                                      active={false}
                                      aria-expanded={false}
                                      aria-haspopup={true}
                                      block={false}
                                      bsClass="btn"
                                      bsStyle="default"
                                      className="DropdownButton-sc-1343dcx-0 jgZJTb dropdown-toggle"
                                      disabled={false}
                                      id="refresh-options-dropdown"
                                      onClick={[Function]}
                                      onKeyDown={[Function]}
                                      role="button"
                                    >
                                      <button
                                        aria-expanded={false}
                                        aria-haspopup={true}
                                        className="DropdownButton-sc-1343dcx-0 jgZJTb dropdown-toggle btn btn-default"
                                        disabled={false}
                                        id="refresh-options-dropdown"
                                        onClick={[Function]}
                                        onKeyDown={[Function]}
                                        role="button"
                                        type="button"
                                      >
                                        <RefreshControls__ButtonLabel>
                                          <StyledComponent
                                            forwardedComponent={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "attrs": Array [],
                                                "componentStyle": ComponentStyle {
                                                  "componentId": "RefreshControls__ButtonLabel-sc-1pygk8n-2",
                                                  "isStatic": true,
                                                  "lastClassName": "jztvlP",
                                                  "rules": Array [
                                                    "display:inline-block;text-overflow:ellipsis;overflow:hidden;max-width:calc(100% - 9px);vertical-align:inherit;",
                                                  ],
                                                },
                                                "displayName": "RefreshControls__ButtonLabel",
                                                "foldedComponentIds": Array [],
                                                "render": [Function],
                                                "styledComponentId": "RefreshControls__ButtonLabel-sc-1pygk8n-2",
                                                "target": "div",
                                                "toString": [Function],
                                                "warnTooManyClasses": [Function],
                                                "withComponent": [Function],
                                              }
                                            }
                                            forwardedRef={null}
                                          >
                                            <div
                                              className="RefreshControls__ButtonLabel-sc-1pygk8n-2 jztvlP"
                                            >
                                              Update every 
                                              <span>
                                                1
                                                 
                                                <Pluralize
                                                  plural="seconds"
                                                  singular="second"
                                                  value={1}
                                                >
                                                  <span>
                                                    second
                                                  </span>
                                                </Pluralize>
                                              </span>
                                            </div>
                                          </StyledComponent>
                                        </RefreshControls__ButtonLabel>
                                         
                                        <span
                                          className="caret"
                                        />
                                      </button>
                                    </Button>
                                  </DropdownToggle>
                                  <DropdownMenu
                                    bsClass="dropdown-menu"
                                    bsRole="menu"
                                    key=".1"
                                    labelledBy="refresh-options-dropdown"
                                    onClose={[Function]}
                                    onSelect={[Function]}
                                    pullRight={false}
                                  >
                                    <RootCloseWrapper
                                      disabled={true}
                                      event="click"
                                      onRootClose={[Function]}
                                    >
                                      <ul
                                        aria-labelledby="refresh-options-dropdown"
                                        className="dropdown-menu"
                                        role="menu"
                                      >
                                        <MenuItem
                                          bsClass="dropdown"
                                          disabled={false}
                                          divider={false}
                                          header={false}
                                          key=".$RefreshControls-1 Second"
                                          onClick={[Function]}
                                          onKeyDown={[Function]}
                                          onSelect={[Function]}
                                        >
                                          <li
                                            className=""
                                            role="presentation"
                                          >
                                            <SafeAnchor
                                              componentClass="a"
                                              onClick={[Function]}
                                              onKeyDown={[Function]}
                                              role="menuitem"
                                              tabIndex="-1"
                                            >
                                              <a
                                                href="#"
                                                onClick={[Function]}
                                                onKeyDown={[Function]}
                                                role="menuitem"
                                                tabIndex="-1"
                                              >
                                                1 Second
                                              </a>
                                            </SafeAnchor>
                                          </li>
                                        </MenuItem>
                                        <MenuItem
                                          bsClass="dropdown"
                                          disabled={false}
                                          divider={false}
                                          header={false}
                                          key=".$RefreshControls-2 Seconds"
                                          onClick={[Function]}
                                          onKeyDown={[Function]}
                                          onSelect={[Function]}
                                        >
                                          <li
                                            className=""
                                            role="presentation"
                                          >
                                            <SafeAnchor
                                              componentClass="a"
                                              onClick={[Function]}
                                              onKeyDown={[Function]}
                                              role="menuitem"
                                              tabIndex="-1"
                                            >
                                              <a
                                                href="#"
                                                onClick={[Function]}
                                                onKeyDown={[Function]}
                                                role="menuitem"
                                                tabIndex="-1"
                                              >
                                                2 Seconds
                                              </a>
                                            </SafeAnchor>
                                          </li>
                                        </MenuItem>
                                        <MenuItem
                                          bsClass="dropdown"
                                          disabled={false}
                                          divider={false}
                                          header={false}
                                          key=".$RefreshControls-5 Seconds"
                                          onClick={[Function]}
                                          onKeyDown={[Function]}
                                          onSelect={[Function]}
                                        >
                                          <li
                                            className=""
                                            role="presentation"
                                          >
                                            <SafeAnchor
                                              componentClass="a"
                                              onClick={[Function]}
                                              onKeyDown={[Function]}
                                              role="menuitem"
                                              tabIndex="-1"
                                            >
                                              <a
                                                href="#"
                                                onClick={[Function]}
                                                onKeyDown={[Function]}
                                                role="menuitem"
                                                tabIndex="-1"
                                              >
                                                5 Seconds
                                              </a>
                                            </SafeAnchor>
                                          </li>
                                        </MenuItem>
                                        <MenuItem
                                          bsClass="dropdown"
                                          disabled={false}
                                          divider={false}
                                          header={false}
                                          key=".$RefreshControls-10 Seconds"
                                          onClick={[Function]}
                                          onKeyDown={[Function]}
                                          onSelect={[Function]}
                                        >
                                          <li
                                            className=""
                                            role="presentation"
                                          >
                                            <SafeAnchor
                                              componentClass="a"
                                              onClick={[Function]}
                                              onKeyDown={[Function]}
                                              role="menuitem"
                                              tabIndex="-1"
                                            >
                                              <a
                                                href="#"
                                                onClick={[Function]}
                                                onKeyDown={[Function]}
                                                role="menuitem"
                                                tabIndex="-1"
                                              >
                                                10 Seconds
                                              </a>
                                            </SafeAnchor>
                                          </li>
                                        </MenuItem>
                                        <MenuItem
                                          bsClass="dropdown"
                                          disabled={false}
                                          divider={false}
                                          header={false}
                                          key=".$RefreshControls-30 Seconds"
                                          onClick={[Function]}
                                          onKeyDown={[Function]}
                                          onSelect={[Function]}
                                        >
                                          <li
                                            className=""
                                            role="presentation"
                                          >
                                            <SafeAnchor
                                              componentClass="a"
                                              onClick={[Function]}
                                              onKeyDown={[Function]}
                                              role="menuitem"
                                              tabIndex="-1"
                                            >
                                              <a
                                                href="#"
                                                onClick={[Function]}
                                                onKeyDown={[Function]}
                                                role="menuitem"
                                                tabIndex="-1"
                                              >
                                                30 Seconds
                                              </a>
                                            </SafeAnchor>
                                          </li>
                                        </MenuItem>
                                        <MenuItem
                                          bsClass="dropdown"
                                          disabled={false}
                                          divider={false}
                                          header={false}
                                          key=".$RefreshControls-1 Minute"
                                          onClick={[Function]}
                                          onKeyDown={[Function]}
                                          onSelect={[Function]}
                                        >
                                          <li
                                            className=""
                                            role="presentation"
                                          >
                                            <SafeAnchor
                                              componentClass="a"
                                              onClick={[Function]}
                                              onKeyDown={[Function]}
                                              role="menuitem"
                                              tabIndex="-1"
                                            >
                                              <a
                                                href="#"
                                                onClick={[Function]}
                                                onKeyDown={[Function]}
                                                role="menuitem"
                                                tabIndex="-1"
                                              >
                                                1 Minute
                                              </a>
                                            </SafeAnchor>
                                          </li>
                                        </MenuItem>
                                        <MenuItem
                                          bsClass="dropdown"
                                          disabled={false}
                                          divider={false}
                                          header={false}
                                          key=".$RefreshControls-5 Minutes"
                                          onClick={[Function]}
                                          onKeyDown={[Function]}
                                          onSelect={[Function]}
                                        >
                                          <li
                                            className=""
                                            role="presentation"
                                          >
                                            <SafeAnchor
                                              componentClass="a"
                                              onClick={[Function]}
                                              onKeyDown={[Function]}
                                              role="menuitem"
                                              tabIndex="-1"
                                            >
                                              <a
                                                href="#"
                                                onClick={[Function]}
                                                onKeyDown={[Function]}
                                                role="menuitem"
                                                tabIndex="-1"
                                              >
                                                5 Minutes
                                              </a>
                                            </SafeAnchor>
                                          </li>
                                        </MenuItem>
                                      </ul>
                                    </RootCloseWrapper>
                                  </DropdownMenu>
                                </div>
                              </ButtonGroup>
                            </Dropdown>
                          </Uncontrolled(Dropdown)>
                        </ForwardRef>
                      </DropdownButton>
                    </StyledComponent>
                  </DropdownButton>
                </div>
              </ButtonGroup>
            </StyledComponent>
          </RefreshControls__FlexibleButtonGroup>
        </div>
      </StyledComponent>
    </RefreshControls__ControlsContainer>
  </RefreshControls>
</Component>
`;

exports[`RefreshControls rendering it renders refresh controlls with enabled: true and interval: 2000 1`] = `
<Component
  refreshConfig={
    Object {
      "enabled": true,
      "interval": 2000,
    }
  }
>
  <RefreshControls
    refreshConfig={
      Object {
        "enabled": true,
        "interval": 2000,
      }
    }
  >
    <RefreshControls__ControlsContainer
      className="pull-right"
    >
      <StyledComponent
        className="pull-right"
        forwardedComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "RefreshControls__ControlsContainer-sc-1pygk8n-0",
              "isStatic": true,
              "lastClassName": "kShVuS",
              "rules": Array [
                "max-width:100%;",
              ],
            },
            "displayName": "RefreshControls__ControlsContainer",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "RefreshControls__ControlsContainer-sc-1pygk8n-0",
            "target": "div",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
      >
        <div
          className="pull-right RefreshControls__ControlsContainer-sc-1pygk8n-0 kShVuS"
        >
          <RefreshControls__FlexibleButtonGroup>
            <StyledComponent
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "RefreshControls__FlexibleButtonGroup-sc-1pygk8n-1",
                    "isStatic": true,
                    "lastClassName": "etyOYS",
                    "rules": Array [
                      "display:flex;> .btn-group{max-width:calc(100% - 34px);.btn:first-child{max-width:100%;}}",
                    ],
                  },
                  "displayName": "RefreshControls__FlexibleButtonGroup",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "RefreshControls__FlexibleButtonGroup-sc-1pygk8n-1",
                  "target": [Function],
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
            >
              <ButtonGroup
                block={false}
                bsClass="btn-group"
                className="RefreshControls__FlexibleButtonGroup-sc-1pygk8n-1 etyOYS"
                justified={false}
                vertical={false}
              >
                <div
                  className="RefreshControls__FlexibleButtonGroup-sc-1pygk8n-1 etyOYS btn-group"
                >
                  <ForwardRef
                    bsStyle="default"
                    onClick={[Function]}
                  >
                    <Button
                      bsStyle="default"
                      onClick={[Function]}
                    >
                      <StyledComponent
                        bsStyle="default"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "SIZES": Array [
                              "large",
                              "small",
                              "xsmall",
                            ],
                            "STYLES": Array [
                              "success",
                              "warning",
                              "danger",
                              "info",
                              "default",
                              "primary",
                              "link",
                            ],
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Button-c9cbmb-0",
                              "isStatic": false,
                              "lastClassName": "iKWoaE",
                              "rules": Array [
                                [Function],
                              ],
                            },
                            "displayName": "Button",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Button-c9cbmb-0",
                            "target": [Function],
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                        onClick={[Function]}
                      >
                        <Button
                          active={false}
                          block={false}
                          bsClass="btn"
                          bsStyle="default"
                          className="Button-c9cbmb-0 iKWoaE"
                          disabled={false}
                          onClick={[Function]}
                        >
                          <button
                            className="Button-c9cbmb-0 iKWoaE btn btn-default"
                            disabled={false}
                            onClick={[Function]}
                            type="button"
                          >
                            <ForwardRef
                              fixedWidth={false}
                              inverse={false}
                              name="pause"
                              pulse={false}
                              spin={false}
                            >
                              <i
                                className="fa fa-pause"
                              />
                            </ForwardRef>
                          </button>
                        </Button>
                      </StyledComponent>
                    </Button>
                  </ForwardRef>
                  <DropdownButton
                    id="refresh-options-dropdown"
                    title={
                      <ForwardRef(RefreshControls__ButtonLabel)>
                        <React.Fragment>
                          Update every 
                          <span>
                            2
                             
                            <Pluralize
                              plural="seconds"
                              singular="second"
                              value={2}
                            />
                          </span>
                        </React.Fragment>
                      </ForwardRef(RefreshControls__ButtonLabel)>
                    }
                  >
                    <StyledComponent
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "DropdownButton-sc-1343dcx-0",
                            "isStatic": false,
                            "lastClassName": "jgZJTb",
                            "rules": Array [
                              [Function],
                              ";",
                              "& ~",
                              " .dropdown-menu{> li > a{color:",
                              "#1F1F1F",
                              ";:hover,:focus{color:",
                              "#484848",
                              ";background-color:",
                              "#F1F2F2",
                              ";}}> .active > a{background-color:",
                              "#6DC6E7",
                              ";color:",
                              "#f7fcfd",
                              ";:hover,:focus{background-color:",
                              "#16ACE3",
                              ";color:",
                              "#f3fafd",
                              ";}}> .disabled > a{color:",
                              "#8f8f8f",
                              ";:hover,:focus{background-color:",
                              "#F1F2F2",
                              ";color:",
                              "#b0b0b0",
                              ";}}}",
                              ";",
                            ],
                          },
                          "displayName": "DropdownButton",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "DropdownButton-sc-1343dcx-0",
                          "target": [Function],
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                      id="refresh-options-dropdown"
                      title={
                        <ForwardRef(RefreshControls__ButtonLabel)>
                          <React.Fragment>
                            Update every 
                            <span>
                              2
                               
                              <Pluralize
                                plural="seconds"
                                singular="second"
                                value={2}
                              />
                            </span>
                          </React.Fragment>
                        </ForwardRef(RefreshControls__ButtonLabel)>
                      }
                    >
                      <DropdownButton
                        className="DropdownButton-sc-1343dcx-0 jgZJTb"
                        id="refresh-options-dropdown"
                        title={
                          <ForwardRef(RefreshControls__ButtonLabel)>
                            <React.Fragment>
                              Update every 
                              <span>
                                2
                                 
                                <Pluralize
                                  plural="seconds"
                                  singular="second"
                                  value={2}
                                />
                              </span>
                            </React.Fragment>
                          </ForwardRef(RefreshControls__ButtonLabel)>
                        }
                      >
                        <ForwardRef
                          id="refresh-options-dropdown"
                        >
                          <Uncontrolled(Dropdown)
                            id="refresh-options-dropdown"
                            innerRef={null}
                          >
                            <Dropdown
                              bsClass="dropdown"
                              componentClass={[Function]}
                              id="refresh-options-dropdown"
                              onToggle={[Function]}
                            >
                              <ButtonGroup
                                block={false}
                                bsClass="btn-group"
                                className="dropdown"
                                justified={false}
                                vertical={false}
                              >
                                <div
                                  className="dropdown btn-group"
                                >
                                  <DropdownToggle
                                    bsClass="dropdown-toggle"
                                    bsRole="toggle"
                                    className="DropdownButton-sc-1343dcx-0 jgZJTb"
                                    id="refresh-options-dropdown"
                                    key=".0"
                                    onClick={[Function]}
                                    onKeyDown={[Function]}
                                    open={false}
                                    useAnchor={false}
                                  >
                                    <Button
                                      active={false}
                                      aria-expanded={false}
                                      aria-haspopup={true}
                                      block={false}
                                      bsClass="btn"
                                      bsStyle="default"
                                      className="DropdownButton-sc-1343dcx-0 jgZJTb dropdown-toggle"
                                      disabled={false}
                                      id="refresh-options-dropdown"
                                      onClick={[Function]}
                                      onKeyDown={[Function]}
                                      role="button"
                                    >
                                      <button
                                        aria-expanded={false}
                                        aria-haspopup={true}
                                        className="DropdownButton-sc-1343dcx-0 jgZJTb dropdown-toggle btn btn-default"
                                        disabled={false}
                                        id="refresh-options-dropdown"
                                        onClick={[Function]}
                                        onKeyDown={[Function]}
                                        role="button"
                                        type="button"
                                      >
                                        <RefreshControls__ButtonLabel>
                                          <StyledComponent
                                            forwardedComponent={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "attrs": Array [],
                                                "componentStyle": ComponentStyle {
                                                  "componentId": "RefreshControls__ButtonLabel-sc-1pygk8n-2",
                                                  "isStatic": true,
                                                  "lastClassName": "jztvlP",
                                                  "rules": Array [
                                                    "display:inline-block;text-overflow:ellipsis;overflow:hidden;max-width:calc(100% - 9px);vertical-align:inherit;",
                                                  ],
                                                },
                                                "displayName": "RefreshControls__ButtonLabel",
                                                "foldedComponentIds": Array [],
                                                "render": [Function],
                                                "styledComponentId": "RefreshControls__ButtonLabel-sc-1pygk8n-2",
                                                "target": "div",
                                                "toString": [Function],
                                                "warnTooManyClasses": [Function],
                                                "withComponent": [Function],
                                              }
                                            }
                                            forwardedRef={null}
                                          >
                                            <div
                                              className="RefreshControls__ButtonLabel-sc-1pygk8n-2 jztvlP"
                                            >
                                              Update every 
                                              <span>
                                                2
                                                 
                                                <Pluralize
                                                  plural="seconds"
                                                  singular="second"
                                                  value={2}
                                                >
                                                  <span>
                                                    seconds
                                                  </span>
                                                </Pluralize>
                                              </span>
                                            </div>
                                          </StyledComponent>
                                        </RefreshControls__ButtonLabel>
                                         
                                        <span
                                          className="caret"
                                        />
                                      </button>
                                    </Button>
                                  </DropdownToggle>
                                  <DropdownMenu
                                    bsClass="dropdown-menu"
                                    bsRole="menu"
                                    key=".1"
                                    labelledBy="refresh-options-dropdown"
                                    onClose={[Function]}
                                    onSelect={[Function]}
                                    pullRight={false}
                                  >
                                    <RootCloseWrapper
                                      disabled={true}
                                      event="click"
                                      onRootClose={[Function]}
                                    >
                                      <ul
                                        aria-labelledby="refresh-options-dropdown"
                                        className="dropdown-menu"
                                        role="menu"
                                      >
                                        <MenuItem
                                          bsClass="dropdown"
                                          disabled={false}
                                          divider={false}
                                          header={false}
                                          key=".$RefreshControls-1 Second"
                                          onClick={[Function]}
                                          onKeyDown={[Function]}
                                          onSelect={[Function]}
                                        >
                                          <li
                                            className=""
                                            role="presentation"
                                          >
                                            <SafeAnchor
                                              componentClass="a"
                                              onClick={[Function]}
                                              onKeyDown={[Function]}
                                              role="menuitem"
                                              tabIndex="-1"
                                            >
                                              <a
                                                href="#"
                                                onClick={[Function]}
                                                onKeyDown={[Function]}
                                                role="menuitem"
                                                tabIndex="-1"
                                              >
                                                1 Second
                                              </a>
                                            </SafeAnchor>
                                          </li>
                                        </MenuItem>
                                        <MenuItem
                                          bsClass="dropdown"
                                          disabled={false}
                                          divider={false}
                                          header={false}
                                          key=".$RefreshControls-2 Seconds"
                                          onClick={[Function]}
                                          onKeyDown={[Function]}
                                          onSelect={[Function]}
                                        >
                                          <li
                                            className=""
                                            role="presentation"
                                          >
                                            <SafeAnchor
                                              componentClass="a"
                                              onClick={[Function]}
                                              onKeyDown={[Function]}
                                              role="menuitem"
                                              tabIndex="-1"
                                            >
                                              <a
                                                href="#"
                                                onClick={[Function]}
                                                onKeyDown={[Function]}
                                                role="menuitem"
                                                tabIndex="-1"
                                              >
                                                2 Seconds
                                              </a>
                                            </SafeAnchor>
                                          </li>
                                        </MenuItem>
                                        <MenuItem
                                          bsClass="dropdown"
                                          disabled={false}
                                          divider={false}
                                          header={false}
                                          key=".$RefreshControls-5 Seconds"
                                          onClick={[Function]}
                                          onKeyDown={[Function]}
                                          onSelect={[Function]}
                                        >
                                          <li
                                            className=""
                                            role="presentation"
                                          >
                                            <SafeAnchor
                                              componentClass="a"
                                              onClick={[Function]}
                                              onKeyDown={[Function]}
                                              role="menuitem"
                                              tabIndex="-1"
                                            >
                                              <a
                                                href="#"
                                                onClick={[Function]}
                                                onKeyDown={[Function]}
                                                role="menuitem"
                                                tabIndex="-1"
                                              >
                                                5 Seconds
                                              </a>
                                            </SafeAnchor>
                                          </li>
                                        </MenuItem>
                                        <MenuItem
                                          bsClass="dropdown"
                                          disabled={false}
                                          divider={false}
                                          header={false}
                                          key=".$RefreshControls-10 Seconds"
                                          onClick={[Function]}
                                          onKeyDown={[Function]}
                                          onSelect={[Function]}
                                        >
                                          <li
                                            className=""
                                            role="presentation"
                                          >
                                            <SafeAnchor
                                              componentClass="a"
                                              onClick={[Function]}
                                              onKeyDown={[Function]}
                                              role="menuitem"
                                              tabIndex="-1"
                                            >
                                              <a
                                                href="#"
                                                onClick={[Function]}
                                                onKeyDown={[Function]}
                                                role="menuitem"
                                                tabIndex="-1"
                                              >
                                                10 Seconds
                                              </a>
                                            </SafeAnchor>
                                          </li>
                                        </MenuItem>
                                        <MenuItem
                                          bsClass="dropdown"
                                          disabled={false}
                                          divider={false}
                                          header={false}
                                          key=".$RefreshControls-30 Seconds"
                                          onClick={[Function]}
                                          onKeyDown={[Function]}
                                          onSelect={[Function]}
                                        >
                                          <li
                                            className=""
                                            role="presentation"
                                          >
                                            <SafeAnchor
                                              componentClass="a"
                                              onClick={[Function]}
                                              onKeyDown={[Function]}
                                              role="menuitem"
                                              tabIndex="-1"
                                            >
                                              <a
                                                href="#"
                                                onClick={[Function]}
                                                onKeyDown={[Function]}
                                                role="menuitem"
                                                tabIndex="-1"
                                              >
                                                30 Seconds
                                              </a>
                                            </SafeAnchor>
                                          </li>
                                        </MenuItem>
                                        <MenuItem
                                          bsClass="dropdown"
                                          disabled={false}
                                          divider={false}
                                          header={false}
                                          key=".$RefreshControls-1 Minute"
                                          onClick={[Function]}
                                          onKeyDown={[Function]}
                                          onSelect={[Function]}
                                        >
                                          <li
                                            className=""
                                            role="presentation"
                                          >
                                            <SafeAnchor
                                              componentClass="a"
                                              onClick={[Function]}
                                              onKeyDown={[Function]}
                                              role="menuitem"
                                              tabIndex="-1"
                                            >
                                              <a
                                                href="#"
                                                onClick={[Function]}
                                                onKeyDown={[Function]}
                                                role="menuitem"
                                                tabIndex="-1"
                                              >
                                                1 Minute
                                              </a>
                                            </SafeAnchor>
                                          </li>
                                        </MenuItem>
                                        <MenuItem
                                          bsClass="dropdown"
                                          disabled={false}
                                          divider={false}
                                          header={false}
                                          key=".$RefreshControls-5 Minutes"
                                          onClick={[Function]}
                                          onKeyDown={[Function]}
                                          onSelect={[Function]}
                                        >
                                          <li
                                            className=""
                                            role="presentation"
                                          >
                                            <SafeAnchor
                                              componentClass="a"
                                              onClick={[Function]}
                                              onKeyDown={[Function]}
                                              role="menuitem"
                                              tabIndex="-1"
                                            >
                                              <a
                                                href="#"
                                                onClick={[Function]}
                                                onKeyDown={[Function]}
                                                role="menuitem"
                                                tabIndex="-1"
                                              >
                                                5 Minutes
                                              </a>
                                            </SafeAnchor>
                                          </li>
                                        </MenuItem>
                                      </ul>
                                    </RootCloseWrapper>
                                  </DropdownMenu>
                                </div>
                              </ButtonGroup>
                            </Dropdown>
                          </Uncontrolled(Dropdown)>
                        </ForwardRef>
                      </DropdownButton>
                    </StyledComponent>
                  </DropdownButton>
                </div>
              </ButtonGroup>
            </StyledComponent>
          </RefreshControls__FlexibleButtonGroup>
        </div>
      </StyledComponent>
    </RefreshControls__ControlsContainer>
  </RefreshControls>
</Component>
`;

exports[`RefreshControls rendering it renders refresh controlls with enabled: true and interval: 5000 1`] = `
<Component
  refreshConfig={
    Object {
      "enabled": true,
      "interval": 5000,
    }
  }
>
  <RefreshControls
    refreshConfig={
      Object {
        "enabled": true,
        "interval": 5000,
      }
    }
  >
    <RefreshControls__ControlsContainer
      className="pull-right"
    >
      <StyledComponent
        className="pull-right"
        forwardedComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "RefreshControls__ControlsContainer-sc-1pygk8n-0",
              "isStatic": true,
              "lastClassName": "kShVuS",
              "rules": Array [
                "max-width:100%;",
              ],
            },
            "displayName": "RefreshControls__ControlsContainer",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "RefreshControls__ControlsContainer-sc-1pygk8n-0",
            "target": "div",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
      >
        <div
          className="pull-right RefreshControls__ControlsContainer-sc-1pygk8n-0 kShVuS"
        >
          <RefreshControls__FlexibleButtonGroup>
            <StyledComponent
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "RefreshControls__FlexibleButtonGroup-sc-1pygk8n-1",
                    "isStatic": true,
                    "lastClassName": "etyOYS",
                    "rules": Array [
                      "display:flex;> .btn-group{max-width:calc(100% - 34px);.btn:first-child{max-width:100%;}}",
                    ],
                  },
                  "displayName": "RefreshControls__FlexibleButtonGroup",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "RefreshControls__FlexibleButtonGroup-sc-1pygk8n-1",
                  "target": [Function],
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
            >
              <ButtonGroup
                block={false}
                bsClass="btn-group"
                className="RefreshControls__FlexibleButtonGroup-sc-1pygk8n-1 etyOYS"
                justified={false}
                vertical={false}
              >
                <div
                  className="RefreshControls__FlexibleButtonGroup-sc-1pygk8n-1 etyOYS btn-group"
                >
                  <ForwardRef
                    bsStyle="default"
                    onClick={[Function]}
                  >
                    <Button
                      bsStyle="default"
                      onClick={[Function]}
                    >
                      <StyledComponent
                        bsStyle="default"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "SIZES": Array [
                              "large",
                              "small",
                              "xsmall",
                            ],
                            "STYLES": Array [
                              "success",
                              "warning",
                              "danger",
                              "info",
                              "default",
                              "primary",
                              "link",
                            ],
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Button-c9cbmb-0",
                              "isStatic": false,
                              "lastClassName": "iKWoaE",
                              "rules": Array [
                                [Function],
                              ],
                            },
                            "displayName": "Button",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Button-c9cbmb-0",
                            "target": [Function],
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                        onClick={[Function]}
                      >
                        <Button
                          active={false}
                          block={false}
                          bsClass="btn"
                          bsStyle="default"
                          className="Button-c9cbmb-0 iKWoaE"
                          disabled={false}
                          onClick={[Function]}
                        >
                          <button
                            className="Button-c9cbmb-0 iKWoaE btn btn-default"
                            disabled={false}
                            onClick={[Function]}
                            type="button"
                          >
                            <ForwardRef
                              fixedWidth={false}
                              inverse={false}
                              name="pause"
                              pulse={false}
                              spin={false}
                            >
                              <i
                                className="fa fa-pause"
                              />
                            </ForwardRef>
                          </button>
                        </Button>
                      </StyledComponent>
                    </Button>
                  </ForwardRef>
                  <DropdownButton
                    id="refresh-options-dropdown"
                    title={
                      <ForwardRef(RefreshControls__ButtonLabel)>
                        <React.Fragment>
                          Update every 
                          <span>
                            5
                             
                            <Pluralize
                              plural="seconds"
                              singular="second"
                              value={5}
                            />
                          </span>
                        </React.Fragment>
                      </ForwardRef(RefreshControls__ButtonLabel)>
                    }
                  >
                    <StyledComponent
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "DropdownButton-sc-1343dcx-0",
                            "isStatic": false,
                            "lastClassName": "jgZJTb",
                            "rules": Array [
                              [Function],
                              ";",
                              "& ~",
                              " .dropdown-menu{> li > a{color:",
                              "#1F1F1F",
                              ";:hover,:focus{color:",
                              "#484848",
                              ";background-color:",
                              "#F1F2F2",
                              ";}}> .active > a{background-color:",
                              "#6DC6E7",
                              ";color:",
                              "#f7fcfd",
                              ";:hover,:focus{background-color:",
                              "#16ACE3",
                              ";color:",
                              "#f3fafd",
                              ";}}> .disabled > a{color:",
                              "#8f8f8f",
                              ";:hover,:focus{background-color:",
                              "#F1F2F2",
                              ";color:",
                              "#b0b0b0",
                              ";}}}",
                              ";",
                            ],
                          },
                          "displayName": "DropdownButton",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "DropdownButton-sc-1343dcx-0",
                          "target": [Function],
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                      id="refresh-options-dropdown"
                      title={
                        <ForwardRef(RefreshControls__ButtonLabel)>
                          <React.Fragment>
                            Update every 
                            <span>
                              5
                               
                              <Pluralize
                                plural="seconds"
                                singular="second"
                                value={5}
                              />
                            </span>
                          </React.Fragment>
                        </ForwardRef(RefreshControls__ButtonLabel)>
                      }
                    >
                      <DropdownButton
                        className="DropdownButton-sc-1343dcx-0 jgZJTb"
                        id="refresh-options-dropdown"
                        title={
                          <ForwardRef(RefreshControls__ButtonLabel)>
                            <React.Fragment>
                              Update every 
                              <span>
                                5
                                 
                                <Pluralize
                                  plural="seconds"
                                  singular="second"
                                  value={5}
                                />
                              </span>
                            </React.Fragment>
                          </ForwardRef(RefreshControls__ButtonLabel)>
                        }
                      >
                        <ForwardRef
                          id="refresh-options-dropdown"
                        >
                          <Uncontrolled(Dropdown)
                            id="refresh-options-dropdown"
                            innerRef={null}
                          >
                            <Dropdown
                              bsClass="dropdown"
                              componentClass={[Function]}
                              id="refresh-options-dropdown"
                              onToggle={[Function]}
                            >
                              <ButtonGroup
                                block={false}
                                bsClass="btn-group"
                                className="dropdown"
                                justified={false}
                                vertical={false}
                              >
                                <div
                                  className="dropdown btn-group"
                                >
                                  <DropdownToggle
                                    bsClass="dropdown-toggle"
                                    bsRole="toggle"
                                    className="DropdownButton-sc-1343dcx-0 jgZJTb"
                                    id="refresh-options-dropdown"
                                    key=".0"
                                    onClick={[Function]}
                                    onKeyDown={[Function]}
                                    open={false}
                                    useAnchor={false}
                                  >
                                    <Button
                                      active={false}
                                      aria-expanded={false}
                                      aria-haspopup={true}
                                      block={false}
                                      bsClass="btn"
                                      bsStyle="default"
                                      className="DropdownButton-sc-1343dcx-0 jgZJTb dropdown-toggle"
                                      disabled={false}
                                      id="refresh-options-dropdown"
                                      onClick={[Function]}
                                      onKeyDown={[Function]}
                                      role="button"
                                    >
                                      <button
                                        aria-expanded={false}
                                        aria-haspopup={true}
                                        className="DropdownButton-sc-1343dcx-0 jgZJTb dropdown-toggle btn btn-default"
                                        disabled={false}
                                        id="refresh-options-dropdown"
                                        onClick={[Function]}
                                        onKeyDown={[Function]}
                                        role="button"
                                        type="button"
                                      >
                                        <RefreshControls__ButtonLabel>
                                          <StyledComponent
                                            forwardedComponent={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "attrs": Array [],
                                                "componentStyle": ComponentStyle {
                                                  "componentId": "RefreshControls__ButtonLabel-sc-1pygk8n-2",
                                                  "isStatic": true,
                                                  "lastClassName": "jztvlP",
                                                  "rules": Array [
                                                    "display:inline-block;text-overflow:ellipsis;overflow:hidden;max-width:calc(100% - 9px);vertical-align:inherit;",
                                                  ],
                                                },
                                                "displayName": "RefreshControls__ButtonLabel",
                                                "foldedComponentIds": Array [],
                                                "render": [Function],
                                                "styledComponentId": "RefreshControls__ButtonLabel-sc-1pygk8n-2",
                                                "target": "div",
                                                "toString": [Function],
                                                "warnTooManyClasses": [Function],
                                                "withComponent": [Function],
                                              }
                                            }
                                            forwardedRef={null}
                                          >
                                            <div
                                              className="RefreshControls__ButtonLabel-sc-1pygk8n-2 jztvlP"
                                            >
                                              Update every 
                                              <span>
                                                5
                                                 
                                                <Pluralize
                                                  plural="seconds"
                                                  singular="second"
                                                  value={5}
                                                >
                                                  <span>
                                                    seconds
                                                  </span>
                                                </Pluralize>
                                              </span>
                                            </div>
                                          </StyledComponent>
                                        </RefreshControls__ButtonLabel>
                                         
                                        <span
                                          className="caret"
                                        />
                                      </button>
                                    </Button>
                                  </DropdownToggle>
                                  <DropdownMenu
                                    bsClass="dropdown-menu"
                                    bsRole="menu"
                                    key=".1"
                                    labelledBy="refresh-options-dropdown"
                                    onClose={[Function]}
                                    onSelect={[Function]}
                                    pullRight={false}
                                  >
                                    <RootCloseWrapper
                                      disabled={true}
                                      event="click"
                                      onRootClose={[Function]}
                                    >
                                      <ul
                                        aria-labelledby="refresh-options-dropdown"
                                        className="dropdown-menu"
                                        role="menu"
                                      >
                                        <MenuItem
                                          bsClass="dropdown"
                                          disabled={false}
                                          divider={false}
                                          header={false}
                                          key=".$RefreshControls-1 Second"
                                          onClick={[Function]}
                                          onKeyDown={[Function]}
                                          onSelect={[Function]}
                                        >
                                          <li
                                            className=""
                                            role="presentation"
                                          >
                                            <SafeAnchor
                                              componentClass="a"
                                              onClick={[Function]}
                                              onKeyDown={[Function]}
                                              role="menuitem"
                                              tabIndex="-1"
                                            >
                                              <a
                                                href="#"
                                                onClick={[Function]}
                                                onKeyDown={[Function]}
                                                role="menuitem"
                                                tabIndex="-1"
                                              >
                                                1 Second
                                              </a>
                                            </SafeAnchor>
                                          </li>
                                        </MenuItem>
                                        <MenuItem
                                          bsClass="dropdown"
                                          disabled={false}
                                          divider={false}
                                          header={false}
                                          key=".$RefreshControls-2 Seconds"
                                          onClick={[Function]}
                                          onKeyDown={[Function]}
                                          onSelect={[Function]}
                                        >
                                          <li
                                            className=""
                                            role="presentation"
                                          >
                                            <SafeAnchor
                                              componentClass="a"
                                              onClick={[Function]}
                                              onKeyDown={[Function]}
                                              role="menuitem"
                                              tabIndex="-1"
                                            >
                                              <a
                                                href="#"
                                                onClick={[Function]}
                                                onKeyDown={[Function]}
                                                role="menuitem"
                                                tabIndex="-1"
                                              >
                                                2 Seconds
                                              </a>
                                            </SafeAnchor>
                                          </li>
                                        </MenuItem>
                                        <MenuItem
                                          bsClass="dropdown"
                                          disabled={false}
                                          divider={false}
                                          header={false}
                                          key=".$RefreshControls-5 Seconds"
                                          onClick={[Function]}
                                          onKeyDown={[Function]}
                                          onSelect={[Function]}
                                        >
                                          <li
                                            className=""
                                            role="presentation"
                                          >
                                            <SafeAnchor
                                              componentClass="a"
                                              onClick={[Function]}
                                              onKeyDown={[Function]}
                                              role="menuitem"
                                              tabIndex="-1"
                                            >
                                              <a
                                                href="#"
                                                onClick={[Function]}
                                                onKeyDown={[Function]}
                                                role="menuitem"
                                                tabIndex="-1"
                                              >
                                                5 Seconds
                                              </a>
                                            </SafeAnchor>
                                          </li>
                                        </MenuItem>
                                        <MenuItem
                                          bsClass="dropdown"
                                          disabled={false}
                                          divider={false}
                                          header={false}
                                          key=".$RefreshControls-10 Seconds"
                                          onClick={[Function]}
                                          onKeyDown={[Function]}
                                          onSelect={[Function]}
                                        >
                                          <li
                                            className=""
                                            role="presentation"
                                          >
                                            <SafeAnchor
                                              componentClass="a"
                                              onClick={[Function]}
                                              onKeyDown={[Function]}
                                              role="menuitem"
                                              tabIndex="-1"
                                            >
                                              <a
                                                href="#"
                                                onClick={[Function]}
                                                onKeyDown={[Function]}
                                                role="menuitem"
                                                tabIndex="-1"
                                              >
                                                10 Seconds
                                              </a>
                                            </SafeAnchor>
                                          </li>
                                        </MenuItem>
                                        <MenuItem
                                          bsClass="dropdown"
                                          disabled={false}
                                          divider={false}
                                          header={false}
                                          key=".$RefreshControls-30 Seconds"
                                          onClick={[Function]}
                                          onKeyDown={[Function]}
                                          onSelect={[Function]}
                                        >
                                          <li
                                            className=""
                                            role="presentation"
                                          >
                                            <SafeAnchor
                                              componentClass="a"
                                              onClick={[Function]}
                                              onKeyDown={[Function]}
                                              role="menuitem"
                                              tabIndex="-1"
                                            >
                                              <a
                                                href="#"
                                                onClick={[Function]}
                                                onKeyDown={[Function]}
                                                role="menuitem"
                                                tabIndex="-1"
                                              >
                                                30 Seconds
                                              </a>
                                            </SafeAnchor>
                                          </li>
                                        </MenuItem>
                                        <MenuItem
                                          bsClass="dropdown"
                                          disabled={false}
                                          divider={false}
                                          header={false}
                                          key=".$RefreshControls-1 Minute"
                                          onClick={[Function]}
                                          onKeyDown={[Function]}
                                          onSelect={[Function]}
                                        >
                                          <li
                                            className=""
                                            role="presentation"
                                          >
                                            <SafeAnchor
                                              componentClass="a"
                                              onClick={[Function]}
                                              onKeyDown={[Function]}
                                              role="menuitem"
                                              tabIndex="-1"
                                            >
                                              <a
                                                href="#"
                                                onClick={[Function]}
                                                onKeyDown={[Function]}
                                                role="menuitem"
                                                tabIndex="-1"
                                              >
                                                1 Minute
                                              </a>
                                            </SafeAnchor>
                                          </li>
                                        </MenuItem>
                                        <MenuItem
                                          bsClass="dropdown"
                                          disabled={false}
                                          divider={false}
                                          header={false}
                                          key=".$RefreshControls-5 Minutes"
                                          onClick={[Function]}
                                          onKeyDown={[Function]}
                                          onSelect={[Function]}
                                        >
                                          <li
                                            className=""
                                            role="presentation"
                                          >
                                            <SafeAnchor
                                              componentClass="a"
                                              onClick={[Function]}
                                              onKeyDown={[Function]}
                                              role="menuitem"
                                              tabIndex="-1"
                                            >
                                              <a
                                                href="#"
                                                onClick={[Function]}
                                                onKeyDown={[Function]}
                                                role="menuitem"
                                                tabIndex="-1"
                                              >
                                                5 Minutes
                                              </a>
                                            </SafeAnchor>
                                          </li>
                                        </MenuItem>
                                      </ul>
                                    </RootCloseWrapper>
                                  </DropdownMenu>
                                </div>
                              </ButtonGroup>
                            </Dropdown>
                          </Uncontrolled(Dropdown)>
                        </ForwardRef>
                      </DropdownButton>
                    </StyledComponent>
                  </DropdownButton>
                </div>
              </ButtonGroup>
            </StyledComponent>
          </RefreshControls__FlexibleButtonGroup>
        </div>
      </StyledComponent>
    </RefreshControls__ControlsContainer>
  </RefreshControls>
</Component>
`;

exports[`RefreshControls rendering it renders refresh controlls with enabled: true and interval: 10000 1`] = `
<Component
  refreshConfig={
    Object {
      "enabled": true,
      "interval": 10000,
    }
  }
>
  <RefreshControls
    refreshConfig={
      Object {
        "enabled": true,
        "interval": 10000,
      }
    }
  >
    <RefreshControls__ControlsContainer
      className="pull-right"
    >
      <StyledComponent
        className="pull-right"
        forwardedComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "RefreshControls__ControlsContainer-sc-1pygk8n-0",
              "isStatic": true,
              "lastClassName": "kShVuS",
              "rules": Array [
                "max-width:100%;",
              ],
            },
            "displayName": "RefreshControls__ControlsContainer",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "RefreshControls__ControlsContainer-sc-1pygk8n-0",
            "target": "div",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
      >
        <div
          className="pull-right RefreshControls__ControlsContainer-sc-1pygk8n-0 kShVuS"
        >
          <RefreshControls__FlexibleButtonGroup>
            <StyledComponent
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "RefreshControls__FlexibleButtonGroup-sc-1pygk8n-1",
                    "isStatic": true,
                    "lastClassName": "etyOYS",
                    "rules": Array [
                      "display:flex;> .btn-group{max-width:calc(100% - 34px);.btn:first-child{max-width:100%;}}",
                    ],
                  },
                  "displayName": "RefreshControls__FlexibleButtonGroup",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "RefreshControls__FlexibleButtonGroup-sc-1pygk8n-1",
                  "target": [Function],
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
            >
              <ButtonGroup
                block={false}
                bsClass="btn-group"
                className="RefreshControls__FlexibleButtonGroup-sc-1pygk8n-1 etyOYS"
                justified={false}
                vertical={false}
              >
                <div
                  className="RefreshControls__FlexibleButtonGroup-sc-1pygk8n-1 etyOYS btn-group"
                >
                  <ForwardRef
                    bsStyle="default"
                    onClick={[Function]}
                  >
                    <Button
                      bsStyle="default"
                      onClick={[Function]}
                    >
                      <StyledComponent
                        bsStyle="default"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "SIZES": Array [
                              "large",
                              "small",
                              "xsmall",
                            ],
                            "STYLES": Array [
                              "success",
                              "warning",
                              "danger",
                              "info",
                              "default",
                              "primary",
                              "link",
                            ],
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Button-c9cbmb-0",
                              "isStatic": false,
                              "lastClassName": "iKWoaE",
                              "rules": Array [
                                [Function],
                              ],
                            },
                            "displayName": "Button",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Button-c9cbmb-0",
                            "target": [Function],
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                        onClick={[Function]}
                      >
                        <Button
                          active={false}
                          block={false}
                          bsClass="btn"
                          bsStyle="default"
                          className="Button-c9cbmb-0 iKWoaE"
                          disabled={false}
                          onClick={[Function]}
                        >
                          <button
                            className="Button-c9cbmb-0 iKWoaE btn btn-default"
                            disabled={false}
                            onClick={[Function]}
                            type="button"
                          >
                            <ForwardRef
                              fixedWidth={false}
                              inverse={false}
                              name="pause"
                              pulse={false}
                              spin={false}
                            >
                              <i
                                className="fa fa-pause"
                              />
                            </ForwardRef>
                          </button>
                        </Button>
                      </StyledComponent>
                    </Button>
                  </ForwardRef>
                  <DropdownButton
                    id="refresh-options-dropdown"
                    title={
                      <ForwardRef(RefreshControls__ButtonLabel)>
                        <React.Fragment>
                          Update every 
                          <span>
                            10
                             
                            <Pluralize
                              plural="seconds"
                              singular="second"
                              value={10}
                            />
                          </span>
                        </React.Fragment>
                      </ForwardRef(RefreshControls__ButtonLabel)>
                    }
                  >
                    <StyledComponent
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "DropdownButton-sc-1343dcx-0",
                            "isStatic": false,
                            "lastClassName": "jgZJTb",
                            "rules": Array [
                              [Function],
                              ";",
                              "& ~",
                              " .dropdown-menu{> li > a{color:",
                              "#1F1F1F",
                              ";:hover,:focus{color:",
                              "#484848",
                              ";background-color:",
                              "#F1F2F2",
                              ";}}> .active > a{background-color:",
                              "#6DC6E7",
                              ";color:",
                              "#f7fcfd",
                              ";:hover,:focus{background-color:",
                              "#16ACE3",
                              ";color:",
                              "#f3fafd",
                              ";}}> .disabled > a{color:",
                              "#8f8f8f",
                              ";:hover,:focus{background-color:",
                              "#F1F2F2",
                              ";color:",
                              "#b0b0b0",
                              ";}}}",
                              ";",
                            ],
                          },
                          "displayName": "DropdownButton",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "DropdownButton-sc-1343dcx-0",
                          "target": [Function],
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                      id="refresh-options-dropdown"
                      title={
                        <ForwardRef(RefreshControls__ButtonLabel)>
                          <React.Fragment>
                            Update every 
                            <span>
                              10
                               
                              <Pluralize
                                plural="seconds"
                                singular="second"
                                value={10}
                              />
                            </span>
                          </React.Fragment>
                        </ForwardRef(RefreshControls__ButtonLabel)>
                      }
                    >
                      <DropdownButton
                        className="DropdownButton-sc-1343dcx-0 jgZJTb"
                        id="refresh-options-dropdown"
                        title={
                          <ForwardRef(RefreshControls__ButtonLabel)>
                            <React.Fragment>
                              Update every 
                              <span>
                                10
                                 
                                <Pluralize
                                  plural="seconds"
                                  singular="second"
                                  value={10}
                                />
                              </span>
                            </React.Fragment>
                          </ForwardRef(RefreshControls__ButtonLabel)>
                        }
                      >
                        <ForwardRef
                          id="refresh-options-dropdown"
                        >
                          <Uncontrolled(Dropdown)
                            id="refresh-options-dropdown"
                            innerRef={null}
                          >
                            <Dropdown
                              bsClass="dropdown"
                              componentClass={[Function]}
                              id="refresh-options-dropdown"
                              onToggle={[Function]}
                            >
                              <ButtonGroup
                                block={false}
                                bsClass="btn-group"
                                className="dropdown"
                                justified={false}
                                vertical={false}
                              >
                                <div
                                  className="dropdown btn-group"
                                >
                                  <DropdownToggle
                                    bsClass="dropdown-toggle"
                                    bsRole="toggle"
                                    className="DropdownButton-sc-1343dcx-0 jgZJTb"
                                    id="refresh-options-dropdown"
                                    key=".0"
                                    onClick={[Function]}
                                    onKeyDown={[Function]}
                                    open={false}
                                    useAnchor={false}
                                  >
                                    <Button
                                      active={false}
                                      aria-expanded={false}
                                      aria-haspopup={true}
                                      block={false}
                                      bsClass="btn"
                                      bsStyle="default"
                                      className="DropdownButton-sc-1343dcx-0 jgZJTb dropdown-toggle"
                                      disabled={false}
                                      id="refresh-options-dropdown"
                                      onClick={[Function]}
                                      onKeyDown={[Function]}
                                      role="button"
                                    >
                                      <button
                                        aria-expanded={false}
                                        aria-haspopup={true}
                                        className="DropdownButton-sc-1343dcx-0 jgZJTb dropdown-toggle btn btn-default"
                                        disabled={false}
                                        id="refresh-options-dropdown"
                                        onClick={[Function]}
                                        onKeyDown={[Function]}
                                        role="button"
                                        type="button"
                                      >
                                        <RefreshControls__ButtonLabel>
                                          <StyledComponent
                                            forwardedComponent={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "attrs": Array [],
                                                "componentStyle": ComponentStyle {
                                                  "componentId": "RefreshControls__ButtonLabel-sc-1pygk8n-2",
                                                  "isStatic": true,
                                                  "lastClassName": "jztvlP",
                                                  "rules": Array [
                                                    "display:inline-block;text-overflow:ellipsis;overflow:hidden;max-width:calc(100% - 9px);vertical-align:inherit;",
                                                  ],
                                                },
                                                "displayName": "RefreshControls__ButtonLabel",
                                                "foldedComponentIds": Array [],
                                                "render": [Function],
                                                "styledComponentId": "RefreshControls__ButtonLabel-sc-1pygk8n-2",
                                                "target": "div",
                                                "toString": [Function],
                                                "warnTooManyClasses": [Function],
                                                "withComponent": [Function],
                                              }
                                            }
                                            forwardedRef={null}
                                          >
                                            <div
                                              className="RefreshControls__ButtonLabel-sc-1pygk8n-2 jztvlP"
                                            >
                                              Update every 
                                              <span>
                                                10
                                                 
                                                <Pluralize
                                                  plural="seconds"
                                                  singular="second"
                                                  value={10}
                                                >
                                                  <span>
                                                    seconds
                                                  </span>
                                                </Pluralize>
                                              </span>
                                            </div>
                                          </StyledComponent>
                                        </RefreshControls__ButtonLabel>
                                         
                                        <span
                                          className="caret"
                                        />
                                      </button>
                                    </Button>
                                  </DropdownToggle>
                                  <DropdownMenu
                                    bsClass="dropdown-menu"
                                    bsRole="menu"
                                    key=".1"
                                    labelledBy="refresh-options-dropdown"
                                    onClose={[Function]}
                                    onSelect={[Function]}
                                    pullRight={false}
                                  >
                                    <RootCloseWrapper
                                      disabled={true}
                                      event="click"
                                      onRootClose={[Function]}
                                    >
                                      <ul
                                        aria-labelledby="refresh-options-dropdown"
                                        className="dropdown-menu"
                                        role="menu"
                                      >
                                        <MenuItem
                                          bsClass="dropdown"
                                          disabled={false}
                                          divider={false}
                                          header={false}
                                          key=".$RefreshControls-1 Second"
                                          onClick={[Function]}
                                          onKeyDown={[Function]}
                                          onSelect={[Function]}
                                        >
                                          <li
                                            className=""
                                            role="presentation"
                                          >
                                            <SafeAnchor
                                              componentClass="a"
                                              onClick={[Function]}
                                              onKeyDown={[Function]}
                                              role="menuitem"
                                              tabIndex="-1"
                                            >
                                              <a
                                                href="#"
                                                onClick={[Function]}
                                                onKeyDown={[Function]}
                                                role="menuitem"
                                                tabIndex="-1"
                                              >
                                                1 Second
                                              </a>
                                            </SafeAnchor>
                                          </li>
                                        </MenuItem>
                                        <MenuItem
                                          bsClass="dropdown"
                                          disabled={false}
                                          divider={false}
                                          header={false}
                                          key=".$RefreshControls-2 Seconds"
                                          onClick={[Function]}
                                          onKeyDown={[Function]}
                                          onSelect={[Function]}
                                        >
                                          <li
                                            className=""
                                            role="presentation"
                                          >
                                            <SafeAnchor
                                              componentClass="a"
                                              onClick={[Function]}
                                              onKeyDown={[Function]}
                                              role="menuitem"
                                              tabIndex="-1"
                                            >
                                              <a
                                                href="#"
                                                onClick={[Function]}
                                                onKeyDown={[Function]}
                                                role="menuitem"
                                                tabIndex="-1"
                                              >
                                                2 Seconds
                                              </a>
                                            </SafeAnchor>
                                          </li>
                                        </MenuItem>
                                        <MenuItem
                                          bsClass="dropdown"
                                          disabled={false}
                                          divider={false}
                                          header={false}
                                          key=".$RefreshControls-5 Seconds"
                                          onClick={[Function]}
                                          onKeyDown={[Function]}
                                          onSelect={[Function]}
                                        >
                                          <li
                                            className=""
                                            role="presentation"
                                          >
                                            <SafeAnchor
                                              componentClass="a"
                                              onClick={[Function]}
                                              onKeyDown={[Function]}
                                              role="menuitem"
                                              tabIndex="-1"
                                            >
                                              <a
                                                href="#"
                                                onClick={[Function]}
                                                onKeyDown={[Function]}
                                                role="menuitem"
                                                tabIndex="-1"
                                              >
                                                5 Seconds
                                              </a>
                                            </SafeAnchor>
                                          </li>
                                        </MenuItem>
                                        <MenuItem
                                          bsClass="dropdown"
                                          disabled={false}
                                          divider={false}
                                          header={false}
                                          key=".$RefreshControls-10 Seconds"
                                          onClick={[Function]}
                                          onKeyDown={[Function]}
                                          onSelect={[Function]}
                                        >
                                          <li
                                            className=""
                                            role="presentation"
                                          >
                                            <SafeAnchor
                                              componentClass="a"
                                              onClick={[Function]}
                                              onKeyDown={[Function]}
                                              role="menuitem"
                                              tabIndex="-1"
                                            >
                                              <a
                                                href="#"
                                                onClick={[Function]}
                                                onKeyDown={[Function]}
                                                role="menuitem"
                                                tabIndex="-1"
                                              >
                                                10 Seconds
                                              </a>
                                            </SafeAnchor>
                                          </li>
                                        </MenuItem>
                                        <MenuItem
                                          bsClass="dropdown"
                                          disabled={false}
                                          divider={false}
                                          header={false}
                                          key=".$RefreshControls-30 Seconds"
                                          onClick={[Function]}
                                          onKeyDown={[Function]}
                                          onSelect={[Function]}
                                        >
                                          <li
                                            className=""
                                            role="presentation"
                                          >
                                            <SafeAnchor
                                              componentClass="a"
                                              onClick={[Function]}
                                              onKeyDown={[Function]}
                                              role="menuitem"
                                              tabIndex="-1"
                                            >
                                              <a
                                                href="#"
                                                onClick={[Function]}
                                                onKeyDown={[Function]}
                                                role="menuitem"
                                                tabIndex="-1"
                                              >
                                                30 Seconds
                                              </a>
                                            </SafeAnchor>
                                          </li>
                                        </MenuItem>
                                        <MenuItem
                                          bsClass="dropdown"
                                          disabled={false}
                                          divider={false}
                                          header={false}
                                          key=".$RefreshControls-1 Minute"
                                          onClick={[Function]}
                                          onKeyDown={[Function]}
                                          onSelect={[Function]}
                                        >
                                          <li
                                            className=""
                                            role="presentation"
                                          >
                                            <SafeAnchor
                                              componentClass="a"
                                              onClick={[Function]}
                                              onKeyDown={[Function]}
                                              role="menuitem"
                                              tabIndex="-1"
                                            >
                                              <a
                                                href="#"
                                                onClick={[Function]}
                                                onKeyDown={[Function]}
                                                role="menuitem"
                                                tabIndex="-1"
                                              >
                                                1 Minute
                                              </a>
                                            </SafeAnchor>
                                          </li>
                                        </MenuItem>
                                        <MenuItem
                                          bsClass="dropdown"
                                          disabled={false}
                                          divider={false}
                                          header={false}
                                          key=".$RefreshControls-5 Minutes"
                                          onClick={[Function]}
                                          onKeyDown={[Function]}
                                          onSelect={[Function]}
                                        >
                                          <li
                                            className=""
                                            role="presentation"
                                          >
                                            <SafeAnchor
                                              componentClass="a"
                                              onClick={[Function]}
                                              onKeyDown={[Function]}
                                              role="menuitem"
                                              tabIndex="-1"
                                            >
                                              <a
                                                href="#"
                                                onClick={[Function]}
                                                onKeyDown={[Function]}
                                                role="menuitem"
                                                tabIndex="-1"
                                              >
                                                5 Minutes
                                              </a>
                                            </SafeAnchor>
                                          </li>
                                        </MenuItem>
                                      </ul>
                                    </RootCloseWrapper>
                                  </DropdownMenu>
                                </div>
                              </ButtonGroup>
                            </Dropdown>
                          </Uncontrolled(Dropdown)>
                        </ForwardRef>
                      </DropdownButton>
                    </StyledComponent>
                  </DropdownButton>
                </div>
              </ButtonGroup>
            </StyledComponent>
          </RefreshControls__FlexibleButtonGroup>
        </div>
      </StyledComponent>
    </RefreshControls__ControlsContainer>
  </RefreshControls>
</Component>
`;

exports[`RefreshControls rendering it renders refresh controlls with enabled: true and interval: 30000 1`] = `
<Component
  refreshConfig={
    Object {
      "enabled": true,
      "interval": 30000,
    }
  }
>
  <RefreshControls
    refreshConfig={
      Object {
        "enabled": true,
        "interval": 30000,
      }
    }
  >
    <RefreshControls__ControlsContainer
      className="pull-right"
    >
      <StyledComponent
        className="pull-right"
        forwardedComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "RefreshControls__ControlsContainer-sc-1pygk8n-0",
              "isStatic": true,
              "lastClassName": "kShVuS",
              "rules": Array [
                "max-width:100%;",
              ],
            },
            "displayName": "RefreshControls__ControlsContainer",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "RefreshControls__ControlsContainer-sc-1pygk8n-0",
            "target": "div",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
      >
        <div
          className="pull-right RefreshControls__ControlsContainer-sc-1pygk8n-0 kShVuS"
        >
          <RefreshControls__FlexibleButtonGroup>
            <StyledComponent
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "RefreshControls__FlexibleButtonGroup-sc-1pygk8n-1",
                    "isStatic": true,
                    "lastClassName": "etyOYS",
                    "rules": Array [
                      "display:flex;> .btn-group{max-width:calc(100% - 34px);.btn:first-child{max-width:100%;}}",
                    ],
                  },
                  "displayName": "RefreshControls__FlexibleButtonGroup",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "RefreshControls__FlexibleButtonGroup-sc-1pygk8n-1",
                  "target": [Function],
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
            >
              <ButtonGroup
                block={false}
                bsClass="btn-group"
                className="RefreshControls__FlexibleButtonGroup-sc-1pygk8n-1 etyOYS"
                justified={false}
                vertical={false}
              >
                <div
                  className="RefreshControls__FlexibleButtonGroup-sc-1pygk8n-1 etyOYS btn-group"
                >
                  <ForwardRef
                    bsStyle="default"
                    onClick={[Function]}
                  >
                    <Button
                      bsStyle="default"
                      onClick={[Function]}
                    >
                      <StyledComponent
                        bsStyle="default"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "SIZES": Array [
                              "large",
                              "small",
                              "xsmall",
                            ],
                            "STYLES": Array [
                              "success",
                              "warning",
                              "danger",
                              "info",
                              "default",
                              "primary",
                              "link",
                            ],
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Button-c9cbmb-0",
                              "isStatic": false,
                              "lastClassName": "iKWoaE",
                              "rules": Array [
                                [Function],
                              ],
                            },
                            "displayName": "Button",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Button-c9cbmb-0",
                            "target": [Function],
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                        onClick={[Function]}
                      >
                        <Button
                          active={false}
                          block={false}
                          bsClass="btn"
                          bsStyle="default"
                          className="Button-c9cbmb-0 iKWoaE"
                          disabled={false}
                          onClick={[Function]}
                        >
                          <button
                            className="Button-c9cbmb-0 iKWoaE btn btn-default"
                            disabled={false}
                            onClick={[Function]}
                            type="button"
                          >
                            <ForwardRef
                              fixedWidth={false}
                              inverse={false}
                              name="pause"
                              pulse={false}
                              spin={false}
                            >
                              <i
                                className="fa fa-pause"
                              />
                            </ForwardRef>
                          </button>
                        </Button>
                      </StyledComponent>
                    </Button>
                  </ForwardRef>
                  <DropdownButton
                    id="refresh-options-dropdown"
                    title={
                      <ForwardRef(RefreshControls__ButtonLabel)>
                        <React.Fragment>
                          Update every 
                          <span>
                            30
                             
                            <Pluralize
                              plural="seconds"
                              singular="second"
                              value={30}
                            />
                          </span>
                        </React.Fragment>
                      </ForwardRef(RefreshControls__ButtonLabel)>
                    }
                  >
                    <StyledComponent
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "DropdownButton-sc-1343dcx-0",
                            "isStatic": false,
                            "lastClassName": "jgZJTb",
                            "rules": Array [
                              [Function],
                              ";",
                              "& ~",
                              " .dropdown-menu{> li > a{color:",
                              "#1F1F1F",
                              ";:hover,:focus{color:",
                              "#484848",
                              ";background-color:",
                              "#F1F2F2",
                              ";}}> .active > a{background-color:",
                              "#6DC6E7",
                              ";color:",
                              "#f7fcfd",
                              ";:hover,:focus{background-color:",
                              "#16ACE3",
                              ";color:",
                              "#f3fafd",
                              ";}}> .disabled > a{color:",
                              "#8f8f8f",
                              ";:hover,:focus{background-color:",
                              "#F1F2F2",
                              ";color:",
                              "#b0b0b0",
                              ";}}}",
                              ";",
                            ],
                          },
                          "displayName": "DropdownButton",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "DropdownButton-sc-1343dcx-0",
                          "target": [Function],
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                      id="refresh-options-dropdown"
                      title={
                        <ForwardRef(RefreshControls__ButtonLabel)>
                          <React.Fragment>
                            Update every 
                            <span>
                              30
                               
                              <Pluralize
                                plural="seconds"
                                singular="second"
                                value={30}
                              />
                            </span>
                          </React.Fragment>
                        </ForwardRef(RefreshControls__ButtonLabel)>
                      }
                    >
                      <DropdownButton
                        className="DropdownButton-sc-1343dcx-0 jgZJTb"
                        id="refresh-options-dropdown"
                        title={
                          <ForwardRef(RefreshControls__ButtonLabel)>
                            <React.Fragment>
                              Update every 
                              <span>
                                30
                                 
                                <Pluralize
                                  plural="seconds"
                                  singular="second"
                                  value={30}
                                />
                              </span>
                            </React.Fragment>
                          </ForwardRef(RefreshControls__ButtonLabel)>
                        }
                      >
                        <ForwardRef
                          id="refresh-options-dropdown"
                        >
                          <Uncontrolled(Dropdown)
                            id="refresh-options-dropdown"
                            innerRef={null}
                          >
                            <Dropdown
                              bsClass="dropdown"
                              componentClass={[Function]}
                              id="refresh-options-dropdown"
                              onToggle={[Function]}
                            >
                              <ButtonGroup
                                block={false}
                                bsClass="btn-group"
                                className="dropdown"
                                justified={false}
                                vertical={false}
                              >
                                <div
                                  className="dropdown btn-group"
                                >
                                  <DropdownToggle
                                    bsClass="dropdown-toggle"
                                    bsRole="toggle"
                                    className="DropdownButton-sc-1343dcx-0 jgZJTb"
                                    id="refresh-options-dropdown"
                                    key=".0"
                                    onClick={[Function]}
                                    onKeyDown={[Function]}
                                    open={false}
                                    useAnchor={false}
                                  >
                                    <Button
                                      active={false}
                                      aria-expanded={false}
                                      aria-haspopup={true}
                                      block={false}
                                      bsClass="btn"
                                      bsStyle="default"
                                      className="DropdownButton-sc-1343dcx-0 jgZJTb dropdown-toggle"
                                      disabled={false}
                                      id="refresh-options-dropdown"
                                      onClick={[Function]}
                                      onKeyDown={[Function]}
                                      role="button"
                                    >
                                      <button
                                        aria-expanded={false}
                                        aria-haspopup={true}
                                        className="DropdownButton-sc-1343dcx-0 jgZJTb dropdown-toggle btn btn-default"
                                        disabled={false}
                                        id="refresh-options-dropdown"
                                        onClick={[Function]}
                                        onKeyDown={[Function]}
                                        role="button"
                                        type="button"
                                      >
                                        <RefreshControls__ButtonLabel>
                                          <StyledComponent
                                            forwardedComponent={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "attrs": Array [],
                                                "componentStyle": ComponentStyle {
                                                  "componentId": "RefreshControls__ButtonLabel-sc-1pygk8n-2",
                                                  "isStatic": true,
                                                  "lastClassName": "jztvlP",
                                                  "rules": Array [
                                                    "display:inline-block;text-overflow:ellipsis;overflow:hidden;max-width:calc(100% - 9px);vertical-align:inherit;",
                                                  ],
                                                },
                                                "displayName": "RefreshControls__ButtonLabel",
                                                "foldedComponentIds": Array [],
                                                "render": [Function],
                                                "styledComponentId": "RefreshControls__ButtonLabel-sc-1pygk8n-2",
                                                "target": "div",
                                                "toString": [Function],
                                                "warnTooManyClasses": [Function],
                                                "withComponent": [Function],
                                              }
                                            }
                                            forwardedRef={null}
                                          >
                                            <div
                                              className="RefreshControls__ButtonLabel-sc-1pygk8n-2 jztvlP"
                                            >
                                              Update every 
                                              <span>
                                                30
                                                 
                                                <Pluralize
                                                  plural="seconds"
                                                  singular="second"
                                                  value={30}
                                                >
                                                  <span>
                                                    seconds
                                                  </span>
                                                </Pluralize>
                                              </span>
                                            </div>
                                          </StyledComponent>
                                        </RefreshControls__ButtonLabel>
                                         
                                        <span
                                          className="caret"
                                        />
                                      </button>
                                    </Button>
                                  </DropdownToggle>
                                  <DropdownMenu
                                    bsClass="dropdown-menu"
                                    bsRole="menu"
                                    key=".1"
                                    labelledBy="refresh-options-dropdown"
                                    onClose={[Function]}
                                    onSelect={[Function]}
                                    pullRight={false}
                                  >
                                    <RootCloseWrapper
                                      disabled={true}
                                      event="click"
                                      onRootClose={[Function]}
                                    >
                                      <ul
                                        aria-labelledby="refresh-options-dropdown"
                                        className="dropdown-menu"
                                        role="menu"
                                      >
                                        <MenuItem
                                          bsClass="dropdown"
                                          disabled={false}
                                          divider={false}
                                          header={false}
                                          key=".$RefreshControls-1 Second"
                                          onClick={[Function]}
                                          onKeyDown={[Function]}
                                          onSelect={[Function]}
                                        >
                                          <li
                                            className=""
                                            role="presentation"
                                          >
                                            <SafeAnchor
                                              componentClass="a"
                                              onClick={[Function]}
                                              onKeyDown={[Function]}
                                              role="menuitem"
                                              tabIndex="-1"
                                            >
                                              <a
                                                href="#"
                                                onClick={[Function]}
                                                onKeyDown={[Function]}
                                                role="menuitem"
                                                tabIndex="-1"
                                              >
                                                1 Second
                                              </a>
                                            </SafeAnchor>
                                          </li>
                                        </MenuItem>
                                        <MenuItem
                                          bsClass="dropdown"
                                          disabled={false}
                                          divider={false}
                                          header={false}
                                          key=".$RefreshControls-2 Seconds"
                                          onClick={[Function]}
                                          onKeyDown={[Function]}
                                          onSelect={[Function]}
                                        >
                                          <li
                                            className=""
                                            role="presentation"
                                          >
                                            <SafeAnchor
                                              componentClass="a"
                                              onClick={[Function]}
                                              onKeyDown={[Function]}
                                              role="menuitem"
                                              tabIndex="-1"
                                            >
                                              <a
                                                href="#"
                                                onClick={[Function]}
                                                onKeyDown={[Function]}
                                                role="menuitem"
                                                tabIndex="-1"
                                              >
                                                2 Seconds
                                              </a>
                                            </SafeAnchor>
                                          </li>
                                        </MenuItem>
                                        <MenuItem
                                          bsClass="dropdown"
                                          disabled={false}
                                          divider={false}
                                          header={false}
                                          key=".$RefreshControls-5 Seconds"
                                          onClick={[Function]}
                                          onKeyDown={[Function]}
                                          onSelect={[Function]}
                                        >
                                          <li
                                            className=""
                                            role="presentation"
                                          >
                                            <SafeAnchor
                                              componentClass="a"
                                              onClick={[Function]}
                                              onKeyDown={[Function]}
                                              role="menuitem"
                                              tabIndex="-1"
                                            >
                                              <a
                                                href="#"
                                                onClick={[Function]}
                                                onKeyDown={[Function]}
                                                role="menuitem"
                                                tabIndex="-1"
                                              >
                                                5 Seconds
                                              </a>
                                            </SafeAnchor>
                                          </li>
                                        </MenuItem>
                                        <MenuItem
                                          bsClass="dropdown"
                                          disabled={false}
                                          divider={false}
                                          header={false}
                                          key=".$RefreshControls-10 Seconds"
                                          onClick={[Function]}
                                          onKeyDown={[Function]}
                                          onSelect={[Function]}
                                        >
                                          <li
                                            className=""
                                            role="presentation"
                                          >
                                            <SafeAnchor
                                              componentClass="a"
                                              onClick={[Function]}
                                              onKeyDown={[Function]}
                                              role="menuitem"
                                              tabIndex="-1"
                                            >
                                              <a
                                                href="#"
                                                onClick={[Function]}
                                                onKeyDown={[Function]}
                                                role="menuitem"
                                                tabIndex="-1"
                                              >
                                                10 Seconds
                                              </a>
                                            </SafeAnchor>
                                          </li>
                                        </MenuItem>
                                        <MenuItem
                                          bsClass="dropdown"
                                          disabled={false}
                                          divider={false}
                                          header={false}
                                          key=".$RefreshControls-30 Seconds"
                                          onClick={[Function]}
                                          onKeyDown={[Function]}
                                          onSelect={[Function]}
                                        >
                                          <li
                                            className=""
                                            role="presentation"
                                          >
                                            <SafeAnchor
                                              componentClass="a"
                                              onClick={[Function]}
                                              onKeyDown={[Function]}
                                              role="menuitem"
                                              tabIndex="-1"
                                            >
                                              <a
                                                href="#"
                                                onClick={[Function]}
                                                onKeyDown={[Function]}
                                                role="menuitem"
                                                tabIndex="-1"
                                              >
                                                30 Seconds
                                              </a>
                                            </SafeAnchor>
                                          </li>
                                        </MenuItem>
                                        <MenuItem
                                          bsClass="dropdown"
                                          disabled={false}
                                          divider={false}
                                          header={false}
                                          key=".$RefreshControls-1 Minute"
                                          onClick={[Function]}
                                          onKeyDown={[Function]}
                                          onSelect={[Function]}
                                        >
                                          <li
                                            className=""
                                            role="presentation"
                                          >
                                            <SafeAnchor
                                              componentClass="a"
                                              onClick={[Function]}
                                              onKeyDown={[Function]}
                                              role="menuitem"
                                              tabIndex="-1"
                                            >
                                              <a
                                                href="#"
                                                onClick={[Function]}
                                                onKeyDown={[Function]}
                                                role="menuitem"
                                                tabIndex="-1"
                                              >
                                                1 Minute
                                              </a>
                                            </SafeAnchor>
                                          </li>
                                        </MenuItem>
                                        <MenuItem
                                          bsClass="dropdown"
                                          disabled={false}
                                          divider={false}
                                          header={false}
                                          key=".$RefreshControls-5 Minutes"
                                          onClick={[Function]}
                                          onKeyDown={[Function]}
                                          onSelect={[Function]}
                                        >
                                          <li
                                            className=""
                                            role="presentation"
                                          >
                                            <SafeAnchor
                                              componentClass="a"
                                              onClick={[Function]}
                                              onKeyDown={[Function]}
                                              role="menuitem"
                                              tabIndex="-1"
                                            >
                                              <a
                                                href="#"
                                                onClick={[Function]}
                                                onKeyDown={[Function]}
                                                role="menuitem"
                                                tabIndex="-1"
                                              >
                                                5 Minutes
                                              </a>
                                            </SafeAnchor>
                                          </li>
                                        </MenuItem>
                                      </ul>
                                    </RootCloseWrapper>
                                  </DropdownMenu>
                                </div>
                              </ButtonGroup>
                            </Dropdown>
                          </Uncontrolled(Dropdown)>
                        </ForwardRef>
                      </DropdownButton>
                    </StyledComponent>
                  </DropdownButton>
                </div>
              </ButtonGroup>
            </StyledComponent>
          </RefreshControls__FlexibleButtonGroup>
        </div>
      </StyledComponent>
    </RefreshControls__ControlsContainer>
  </RefreshControls>
</Component>
`;

exports[`RefreshControls rendering it renders refresh controlls with enabled: true and interval: 60000 1`] = `
<Component
  refreshConfig={
    Object {
      "enabled": true,
      "interval": 60000,
    }
  }
>
  <RefreshControls
    refreshConfig={
      Object {
        "enabled": true,
        "interval": 60000,
      }
    }
  >
    <RefreshControls__ControlsContainer
      className="pull-right"
    >
      <StyledComponent
        className="pull-right"
        forwardedComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "RefreshControls__ControlsContainer-sc-1pygk8n-0",
              "isStatic": true,
              "lastClassName": "kShVuS",
              "rules": Array [
                "max-width:100%;",
              ],
            },
            "displayName": "RefreshControls__ControlsContainer",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "RefreshControls__ControlsContainer-sc-1pygk8n-0",
            "target": "div",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
      >
        <div
          className="pull-right RefreshControls__ControlsContainer-sc-1pygk8n-0 kShVuS"
        >
          <RefreshControls__FlexibleButtonGroup>
            <StyledComponent
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "RefreshControls__FlexibleButtonGroup-sc-1pygk8n-1",
                    "isStatic": true,
                    "lastClassName": "etyOYS",
                    "rules": Array [
                      "display:flex;> .btn-group{max-width:calc(100% - 34px);.btn:first-child{max-width:100%;}}",
                    ],
                  },
                  "displayName": "RefreshControls__FlexibleButtonGroup",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "RefreshControls__FlexibleButtonGroup-sc-1pygk8n-1",
                  "target": [Function],
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
            >
              <ButtonGroup
                block={false}
                bsClass="btn-group"
                className="RefreshControls__FlexibleButtonGroup-sc-1pygk8n-1 etyOYS"
                justified={false}
                vertical={false}
              >
                <div
                  className="RefreshControls__FlexibleButtonGroup-sc-1pygk8n-1 etyOYS btn-group"
                >
                  <ForwardRef
                    bsStyle="default"
                    onClick={[Function]}
                  >
                    <Button
                      bsStyle="default"
                      onClick={[Function]}
                    >
                      <StyledComponent
                        bsStyle="default"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "SIZES": Array [
                              "large",
                              "small",
                              "xsmall",
                            ],
                            "STYLES": Array [
                              "success",
                              "warning",
                              "danger",
                              "info",
                              "default",
                              "primary",
                              "link",
                            ],
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Button-c9cbmb-0",
                              "isStatic": false,
                              "lastClassName": "iKWoaE",
                              "rules": Array [
                                [Function],
                              ],
                            },
                            "displayName": "Button",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Button-c9cbmb-0",
                            "target": [Function],
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                        onClick={[Function]}
                      >
                        <Button
                          active={false}
                          block={false}
                          bsClass="btn"
                          bsStyle="default"
                          className="Button-c9cbmb-0 iKWoaE"
                          disabled={false}
                          onClick={[Function]}
                        >
                          <button
                            className="Button-c9cbmb-0 iKWoaE btn btn-default"
                            disabled={false}
                            onClick={[Function]}
                            type="button"
                          >
                            <ForwardRef
                              fixedWidth={false}
                              inverse={false}
                              name="pause"
                              pulse={false}
                              spin={false}
                            >
                              <i
                                className="fa fa-pause"
                              />
                            </ForwardRef>
                          </button>
                        </Button>
                      </StyledComponent>
                    </Button>
                  </ForwardRef>
                  <DropdownButton
                    id="refresh-options-dropdown"
                    title={
                      <ForwardRef(RefreshControls__ButtonLabel)>
                        <React.Fragment>
                          Update every 
                          <span>
                            1
                             
                            <Pluralize
                              plural="minutes"
                              singular="minute"
                              value={1}
                            />
                          </span>
                        </React.Fragment>
                      </ForwardRef(RefreshControls__ButtonLabel)>
                    }
                  >
                    <StyledComponent
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "DropdownButton-sc-1343dcx-0",
                            "isStatic": false,
                            "lastClassName": "jgZJTb",
                            "rules": Array [
                              [Function],
                              ";",
                              "& ~",
                              " .dropdown-menu{> li > a{color:",
                              "#1F1F1F",
                              ";:hover,:focus{color:",
                              "#484848",
                              ";background-color:",
                              "#F1F2F2",
                              ";}}> .active > a{background-color:",
                              "#6DC6E7",
                              ";color:",
                              "#f7fcfd",
                              ";:hover,:focus{background-color:",
                              "#16ACE3",
                              ";color:",
                              "#f3fafd",
                              ";}}> .disabled > a{color:",
                              "#8f8f8f",
                              ";:hover,:focus{background-color:",
                              "#F1F2F2",
                              ";color:",
                              "#b0b0b0",
                              ";}}}",
                              ";",
                            ],
                          },
                          "displayName": "DropdownButton",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "DropdownButton-sc-1343dcx-0",
                          "target": [Function],
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                      id="refresh-options-dropdown"
                      title={
                        <ForwardRef(RefreshControls__ButtonLabel)>
                          <React.Fragment>
                            Update every 
                            <span>
                              1
                               
                              <Pluralize
                                plural="minutes"
                                singular="minute"
                                value={1}
                              />
                            </span>
                          </React.Fragment>
                        </ForwardRef(RefreshControls__ButtonLabel)>
                      }
                    >
                      <DropdownButton
                        className="DropdownButton-sc-1343dcx-0 jgZJTb"
                        id="refresh-options-dropdown"
                        title={
                          <ForwardRef(RefreshControls__ButtonLabel)>
                            <React.Fragment>
                              Update every 
                              <span>
                                1
                                 
                                <Pluralize
                                  plural="minutes"
                                  singular="minute"
                                  value={1}
                                />
                              </span>
                            </React.Fragment>
                          </ForwardRef(RefreshControls__ButtonLabel)>
                        }
                      >
                        <ForwardRef
                          id="refresh-options-dropdown"
                        >
                          <Uncontrolled(Dropdown)
                            id="refresh-options-dropdown"
                            innerRef={null}
                          >
                            <Dropdown
                              bsClass="dropdown"
                              componentClass={[Function]}
                              id="refresh-options-dropdown"
                              onToggle={[Function]}
                            >
                              <ButtonGroup
                                block={false}
                                bsClass="btn-group"
                                className="dropdown"
                                justified={false}
                                vertical={false}
                              >
                                <div
                                  className="dropdown btn-group"
                                >
                                  <DropdownToggle
                                    bsClass="dropdown-toggle"
                                    bsRole="toggle"
                                    className="DropdownButton-sc-1343dcx-0 jgZJTb"
                                    id="refresh-options-dropdown"
                                    key=".0"
                                    onClick={[Function]}
                                    onKeyDown={[Function]}
                                    open={false}
                                    useAnchor={false}
                                  >
                                    <Button
                                      active={false}
                                      aria-expanded={false}
                                      aria-haspopup={true}
                                      block={false}
                                      bsClass="btn"
                                      bsStyle="default"
                                      className="DropdownButton-sc-1343dcx-0 jgZJTb dropdown-toggle"
                                      disabled={false}
                                      id="refresh-options-dropdown"
                                      onClick={[Function]}
                                      onKeyDown={[Function]}
                                      role="button"
                                    >
                                      <button
                                        aria-expanded={false}
                                        aria-haspopup={true}
                                        className="DropdownButton-sc-1343dcx-0 jgZJTb dropdown-toggle btn btn-default"
                                        disabled={false}
                                        id="refresh-options-dropdown"
                                        onClick={[Function]}
                                        onKeyDown={[Function]}
                                        role="button"
                                        type="button"
                                      >
                                        <RefreshControls__ButtonLabel>
                                          <StyledComponent
                                            forwardedComponent={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "attrs": Array [],
                                                "componentStyle": ComponentStyle {
                                                  "componentId": "RefreshControls__ButtonLabel-sc-1pygk8n-2",
                                                  "isStatic": true,
                                                  "lastClassName": "jztvlP",
                                                  "rules": Array [
                                                    "display:inline-block;text-overflow:ellipsis;overflow:hidden;max-width:calc(100% - 9px);vertical-align:inherit;",
                                                  ],
                                                },
                                                "displayName": "RefreshControls__ButtonLabel",
                                                "foldedComponentIds": Array [],
                                                "render": [Function],
                                                "styledComponentId": "RefreshControls__ButtonLabel-sc-1pygk8n-2",
                                                "target": "div",
                                                "toString": [Function],
                                                "warnTooManyClasses": [Function],
                                                "withComponent": [Function],
                                              }
                                            }
                                            forwardedRef={null}
                                          >
                                            <div
                                              className="RefreshControls__ButtonLabel-sc-1pygk8n-2 jztvlP"
                                            >
                                              Update every 
                                              <span>
                                                1
                                                 
                                                <Pluralize
                                                  plural="minutes"
                                                  singular="minute"
                                                  value={1}
                                                >
                                                  <span>
                                                    minute
                                                  </span>
                                                </Pluralize>
                                              </span>
                                            </div>
                                          </StyledComponent>
                                        </RefreshControls__ButtonLabel>
                                         
                                        <span
                                          className="caret"
                                        />
                                      </button>
                                    </Button>
                                  </DropdownToggle>
                                  <DropdownMenu
                                    bsClass="dropdown-menu"
                                    bsRole="menu"
                                    key=".1"
                                    labelledBy="refresh-options-dropdown"
                                    onClose={[Function]}
                                    onSelect={[Function]}
                                    pullRight={false}
                                  >
                                    <RootCloseWrapper
                                      disabled={true}
                                      event="click"
                                      onRootClose={[Function]}
                                    >
                                      <ul
                                        aria-labelledby="refresh-options-dropdown"
                                        className="dropdown-menu"
                                        role="menu"
                                      >
                                        <MenuItem
                                          bsClass="dropdown"
                                          disabled={false}
                                          divider={false}
                                          header={false}
                                          key=".$RefreshControls-1 Second"
                                          onClick={[Function]}
                                          onKeyDown={[Function]}
                                          onSelect={[Function]}
                                        >
                                          <li
                                            className=""
                                            role="presentation"
                                          >
                                            <SafeAnchor
                                              componentClass="a"
                                              onClick={[Function]}
                                              onKeyDown={[Function]}
                                              role="menuitem"
                                              tabIndex="-1"
                                            >
                                              <a
                                                href="#"
                                                onClick={[Function]}
                                                onKeyDown={[Function]}
                                                role="menuitem"
                                                tabIndex="-1"
                                              >
                                                1 Second
                                              </a>
                                            </SafeAnchor>
                                          </li>
                                        </MenuItem>
                                        <MenuItem
                                          bsClass="dropdown"
                                          disabled={false}
                                          divider={false}
                                          header={false}
                                          key=".$RefreshControls-2 Seconds"
                                          onClick={[Function]}
                                          onKeyDown={[Function]}
                                          onSelect={[Function]}
                                        >
                                          <li
                                            className=""
                                            role="presentation"
                                          >
                                            <SafeAnchor
                                              componentClass="a"
                                              onClick={[Function]}
                                              onKeyDown={[Function]}
                                              role="menuitem"
                                              tabIndex="-1"
                                            >
                                              <a
                                                href="#"
                                                onClick={[Function]}
                                                onKeyDown={[Function]}
                                                role="menuitem"
                                                tabIndex="-1"
                                              >
                                                2 Seconds
                                              </a>
                                            </SafeAnchor>
                                          </li>
                                        </MenuItem>
                                        <MenuItem
                                          bsClass="dropdown"
                                          disabled={false}
                                          divider={false}
                                          header={false}
                                          key=".$RefreshControls-5 Seconds"
                                          onClick={[Function]}
                                          onKeyDown={[Function]}
                                          onSelect={[Function]}
                                        >
                                          <li
                                            className=""
                                            role="presentation"
                                          >
                                            <SafeAnchor
                                              componentClass="a"
                                              onClick={[Function]}
                                              onKeyDown={[Function]}
                                              role="menuitem"
                                              tabIndex="-1"
                                            >
                                              <a
                                                href="#"
                                                onClick={[Function]}
                                                onKeyDown={[Function]}
                                                role="menuitem"
                                                tabIndex="-1"
                                              >
                                                5 Seconds
                                              </a>
                                            </SafeAnchor>
                                          </li>
                                        </MenuItem>
                                        <MenuItem
                                          bsClass="dropdown"
                                          disabled={false}
                                          divider={false}
                                          header={false}
                                          key=".$RefreshControls-10 Seconds"
                                          onClick={[Function]}
                                          onKeyDown={[Function]}
                                          onSelect={[Function]}
                                        >
                                          <li
                                            className=""
                                            role="presentation"
                                          >
                                            <SafeAnchor
                                              componentClass="a"
                                              onClick={[Function]}
                                              onKeyDown={[Function]}
                                              role="menuitem"
                                              tabIndex="-1"
                                            >
                                              <a
                                                href="#"
                                                onClick={[Function]}
                                                onKeyDown={[Function]}
                                                role="menuitem"
                                                tabIndex="-1"
                                              >
                                                10 Seconds
                                              </a>
                                            </SafeAnchor>
                                          </li>
                                        </MenuItem>
                                        <MenuItem
                                          bsClass="dropdown"
                                          disabled={false}
                                          divider={false}
                                          header={false}
                                          key=".$RefreshControls-30 Seconds"
                                          onClick={[Function]}
                                          onKeyDown={[Function]}
                                          onSelect={[Function]}
                                        >
                                          <li
                                            className=""
                                            role="presentation"
                                          >
                                            <SafeAnchor
                                              componentClass="a"
                                              onClick={[Function]}
                                              onKeyDown={[Function]}
                                              role="menuitem"
                                              tabIndex="-1"
                                            >
                                              <a
                                                href="#"
                                                onClick={[Function]}
                                                onKeyDown={[Function]}
                                                role="menuitem"
                                                tabIndex="-1"
                                              >
                                                30 Seconds
                                              </a>
                                            </SafeAnchor>
                                          </li>
                                        </MenuItem>
                                        <MenuItem
                                          bsClass="dropdown"
                                          disabled={false}
                                          divider={false}
                                          header={false}
                                          key=".$RefreshControls-1 Minute"
                                          onClick={[Function]}
                                          onKeyDown={[Function]}
                                          onSelect={[Function]}
                                        >
                                          <li
                                            className=""
                                            role="presentation"
                                          >
                                            <SafeAnchor
                                              componentClass="a"
                                              onClick={[Function]}
                                              onKeyDown={[Function]}
                                              role="menuitem"
                                              tabIndex="-1"
                                            >
                                              <a
                                                href="#"
                                                onClick={[Function]}
                                                onKeyDown={[Function]}
                                                role="menuitem"
                                                tabIndex="-1"
                                              >
                                                1 Minute
                                              </a>
                                            </SafeAnchor>
                                          </li>
                                        </MenuItem>
                                        <MenuItem
                                          bsClass="dropdown"
                                          disabled={false}
                                          divider={false}
                                          header={false}
                                          key=".$RefreshControls-5 Minutes"
                                          onClick={[Function]}
                                          onKeyDown={[Function]}
                                          onSelect={[Function]}
                                        >
                                          <li
                                            className=""
                                            role="presentation"
                                          >
                                            <SafeAnchor
                                              componentClass="a"
                                              onClick={[Function]}
                                              onKeyDown={[Function]}
                                              role="menuitem"
                                              tabIndex="-1"
                                            >
                                              <a
                                                href="#"
                                                onClick={[Function]}
                                                onKeyDown={[Function]}
                                                role="menuitem"
                                                tabIndex="-1"
                                              >
                                                5 Minutes
                                              </a>
                                            </SafeAnchor>
                                          </li>
                                        </MenuItem>
                                      </ul>
                                    </RootCloseWrapper>
                                  </DropdownMenu>
                                </div>
                              </ButtonGroup>
                            </Dropdown>
                          </Uncontrolled(Dropdown)>
                        </ForwardRef>
                      </DropdownButton>
                    </StyledComponent>
                  </DropdownButton>
                </div>
              </ButtonGroup>
            </StyledComponent>
          </RefreshControls__FlexibleButtonGroup>
        </div>
      </StyledComponent>
    </RefreshControls__ControlsContainer>
  </RefreshControls>
</Component>
`;

exports[`RefreshControls rendering it renders refresh controlls with enabled: true and interval: 300000 1`] = `
<Component
  refreshConfig={
    Object {
      "enabled": true,
      "interval": 300000,
    }
  }
>
  <RefreshControls
    refreshConfig={
      Object {
        "enabled": true,
        "interval": 300000,
      }
    }
  >
    <RefreshControls__ControlsContainer
      className="pull-right"
    >
      <StyledComponent
        className="pull-right"
        forwardedComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "RefreshControls__ControlsContainer-sc-1pygk8n-0",
              "isStatic": true,
              "lastClassName": "kShVuS",
              "rules": Array [
                "max-width:100%;",
              ],
            },
            "displayName": "RefreshControls__ControlsContainer",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "RefreshControls__ControlsContainer-sc-1pygk8n-0",
            "target": "div",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
      >
        <div
          className="pull-right RefreshControls__ControlsContainer-sc-1pygk8n-0 kShVuS"
        >
          <RefreshControls__FlexibleButtonGroup>
            <StyledComponent
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "RefreshControls__FlexibleButtonGroup-sc-1pygk8n-1",
                    "isStatic": true,
                    "lastClassName": "etyOYS",
                    "rules": Array [
                      "display:flex;> .btn-group{max-width:calc(100% - 34px);.btn:first-child{max-width:100%;}}",
                    ],
                  },
                  "displayName": "RefreshControls__FlexibleButtonGroup",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "RefreshControls__FlexibleButtonGroup-sc-1pygk8n-1",
                  "target": [Function],
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
            >
              <ButtonGroup
                block={false}
                bsClass="btn-group"
                className="RefreshControls__FlexibleButtonGroup-sc-1pygk8n-1 etyOYS"
                justified={false}
                vertical={false}
              >
                <div
                  className="RefreshControls__FlexibleButtonGroup-sc-1pygk8n-1 etyOYS btn-group"
                >
                  <ForwardRef
                    bsStyle="default"
                    onClick={[Function]}
                  >
                    <Button
                      bsStyle="default"
                      onClick={[Function]}
                    >
                      <StyledComponent
                        bsStyle="default"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "SIZES": Array [
                              "large",
                              "small",
                              "xsmall",
                            ],
                            "STYLES": Array [
                              "success",
                              "warning",
                              "danger",
                              "info",
                              "default",
                              "primary",
                              "link",
                            ],
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Button-c9cbmb-0",
                              "isStatic": false,
                              "lastClassName": "iKWoaE",
                              "rules": Array [
                                [Function],
                              ],
                            },
                            "displayName": "Button",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Button-c9cbmb-0",
                            "target": [Function],
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                        onClick={[Function]}
                      >
                        <Button
                          active={false}
                          block={false}
                          bsClass="btn"
                          bsStyle="default"
                          className="Button-c9cbmb-0 iKWoaE"
                          disabled={false}
                          onClick={[Function]}
                        >
                          <button
                            className="Button-c9cbmb-0 iKWoaE btn btn-default"
                            disabled={false}
                            onClick={[Function]}
                            type="button"
                          >
                            <ForwardRef
                              fixedWidth={false}
                              inverse={false}
                              name="pause"
                              pulse={false}
                              spin={false}
                            >
                              <i
                                className="fa fa-pause"
                              />
                            </ForwardRef>
                          </button>
                        </Button>
                      </StyledComponent>
                    </Button>
                  </ForwardRef>
                  <DropdownButton
                    id="refresh-options-dropdown"
                    title={
                      <ForwardRef(RefreshControls__ButtonLabel)>
                        <React.Fragment>
                          Update every 
                          <span>
                            5
                             
                            <Pluralize
                              plural="minutes"
                              singular="minute"
                              value={5}
                            />
                          </span>
                        </React.Fragment>
                      </ForwardRef(RefreshControls__ButtonLabel)>
                    }
                  >
                    <StyledComponent
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "DropdownButton-sc-1343dcx-0",
                            "isStatic": false,
                            "lastClassName": "jgZJTb",
                            "rules": Array [
                              [Function],
                              ";",
                              "& ~",
                              " .dropdown-menu{> li > a{color:",
                              "#1F1F1F",
                              ";:hover,:focus{color:",
                              "#484848",
                              ";background-color:",
                              "#F1F2F2",
                              ";}}> .active > a{background-color:",
                              "#6DC6E7",
                              ";color:",
                              "#f7fcfd",
                              ";:hover,:focus{background-color:",
                              "#16ACE3",
                              ";color:",
                              "#f3fafd",
                              ";}}> .disabled > a{color:",
                              "#8f8f8f",
                              ";:hover,:focus{background-color:",
                              "#F1F2F2",
                              ";color:",
                              "#b0b0b0",
                              ";}}}",
                              ";",
                            ],
                          },
                          "displayName": "DropdownButton",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "DropdownButton-sc-1343dcx-0",
                          "target": [Function],
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                      id="refresh-options-dropdown"
                      title={
                        <ForwardRef(RefreshControls__ButtonLabel)>
                          <React.Fragment>
                            Update every 
                            <span>
                              5
                               
                              <Pluralize
                                plural="minutes"
                                singular="minute"
                                value={5}
                              />
                            </span>
                          </React.Fragment>
                        </ForwardRef(RefreshControls__ButtonLabel)>
                      }
                    >
                      <DropdownButton
                        className="DropdownButton-sc-1343dcx-0 jgZJTb"
                        id="refresh-options-dropdown"
                        title={
                          <ForwardRef(RefreshControls__ButtonLabel)>
                            <React.Fragment>
                              Update every 
                              <span>
                                5
                                 
                                <Pluralize
                                  plural="minutes"
                                  singular="minute"
                                  value={5}
                                />
                              </span>
                            </React.Fragment>
                          </ForwardRef(RefreshControls__ButtonLabel)>
                        }
                      >
                        <ForwardRef
                          id="refresh-options-dropdown"
                        >
                          <Uncontrolled(Dropdown)
                            id="refresh-options-dropdown"
                            innerRef={null}
                          >
                            <Dropdown
                              bsClass="dropdown"
                              componentClass={[Function]}
                              id="refresh-options-dropdown"
                              onToggle={[Function]}
                            >
                              <ButtonGroup
                                block={false}
                                bsClass="btn-group"
                                className="dropdown"
                                justified={false}
                                vertical={false}
                              >
                                <div
                                  className="dropdown btn-group"
                                >
                                  <DropdownToggle
                                    bsClass="dropdown-toggle"
                                    bsRole="toggle"
                                    className="DropdownButton-sc-1343dcx-0 jgZJTb"
                                    id="refresh-options-dropdown"
                                    key=".0"
                                    onClick={[Function]}
                                    onKeyDown={[Function]}
                                    open={false}
                                    useAnchor={false}
                                  >
                                    <Button
                                      active={false}
                                      aria-expanded={false}
                                      aria-haspopup={true}
                                      block={false}
                                      bsClass="btn"
                                      bsStyle="default"
                                      className="DropdownButton-sc-1343dcx-0 jgZJTb dropdown-toggle"
                                      disabled={false}
                                      id="refresh-options-dropdown"
                                      onClick={[Function]}
                                      onKeyDown={[Function]}
                                      role="button"
                                    >
                                      <button
                                        aria-expanded={false}
                                        aria-haspopup={true}
                                        className="DropdownButton-sc-1343dcx-0 jgZJTb dropdown-toggle btn btn-default"
                                        disabled={false}
                                        id="refresh-options-dropdown"
                                        onClick={[Function]}
                                        onKeyDown={[Function]}
                                        role="button"
                                        type="button"
                                      >
                                        <RefreshControls__ButtonLabel>
                                          <StyledComponent
                                            forwardedComponent={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "attrs": Array [],
                                                "componentStyle": ComponentStyle {
                                                  "componentId": "RefreshControls__ButtonLabel-sc-1pygk8n-2",
                                                  "isStatic": true,
                                                  "lastClassName": "jztvlP",
                                                  "rules": Array [
                                                    "display:inline-block;text-overflow:ellipsis;overflow:hidden;max-width:calc(100% - 9px);vertical-align:inherit;",
                                                  ],
                                                },
                                                "displayName": "RefreshControls__ButtonLabel",
                                                "foldedComponentIds": Array [],
                                                "render": [Function],
                                                "styledComponentId": "RefreshControls__ButtonLabel-sc-1pygk8n-2",
                                                "target": "div",
                                                "toString": [Function],
                                                "warnTooManyClasses": [Function],
                                                "withComponent": [Function],
                                              }
                                            }
                                            forwardedRef={null}
                                          >
                                            <div
                                              className="RefreshControls__ButtonLabel-sc-1pygk8n-2 jztvlP"
                                            >
                                              Update every 
                                              <span>
                                                5
                                                 
                                                <Pluralize
                                                  plural="minutes"
                                                  singular="minute"
                                                  value={5}
                                                >
                                                  <span>
                                                    minutes
                                                  </span>
                                                </Pluralize>
                                              </span>
                                            </div>
                                          </StyledComponent>
                                        </RefreshControls__ButtonLabel>
                                         
                                        <span
                                          className="caret"
                                        />
                                      </button>
                                    </Button>
                                  </DropdownToggle>
                                  <DropdownMenu
                                    bsClass="dropdown-menu"
                                    bsRole="menu"
                                    key=".1"
                                    labelledBy="refresh-options-dropdown"
                                    onClose={[Function]}
                                    onSelect={[Function]}
                                    pullRight={false}
                                  >
                                    <RootCloseWrapper
                                      disabled={true}
                                      event="click"
                                      onRootClose={[Function]}
                                    >
                                      <ul
                                        aria-labelledby="refresh-options-dropdown"
                                        className="dropdown-menu"
                                        role="menu"
                                      >
                                        <MenuItem
                                          bsClass="dropdown"
                                          disabled={false}
                                          divider={false}
                                          header={false}
                                          key=".$RefreshControls-1 Second"
                                          onClick={[Function]}
                                          onKeyDown={[Function]}
                                          onSelect={[Function]}
                                        >
                                          <li
                                            className=""
                                            role="presentation"
                                          >
                                            <SafeAnchor
                                              componentClass="a"
                                              onClick={[Function]}
                                              onKeyDown={[Function]}
                                              role="menuitem"
                                              tabIndex="-1"
                                            >
                                              <a
                                                href="#"
                                                onClick={[Function]}
                                                onKeyDown={[Function]}
                                                role="menuitem"
                                                tabIndex="-1"
                                              >
                                                1 Second
                                              </a>
                                            </SafeAnchor>
                                          </li>
                                        </MenuItem>
                                        <MenuItem
                                          bsClass="dropdown"
                                          disabled={false}
                                          divider={false}
                                          header={false}
                                          key=".$RefreshControls-2 Seconds"
                                          onClick={[Function]}
                                          onKeyDown={[Function]}
                                          onSelect={[Function]}
                                        >
                                          <li
                                            className=""
                                            role="presentation"
                                          >
                                            <SafeAnchor
                                              componentClass="a"
                                              onClick={[Function]}
                                              onKeyDown={[Function]}
                                              role="menuitem"
                                              tabIndex="-1"
                                            >
                                              <a
                                                href="#"
                                                onClick={[Function]}
                                                onKeyDown={[Function]}
                                                role="menuitem"
                                                tabIndex="-1"
                                              >
                                                2 Seconds
                                              </a>
                                            </SafeAnchor>
                                          </li>
                                        </MenuItem>
                                        <MenuItem
                                          bsClass="dropdown"
                                          disabled={false}
                                          divider={false}
                                          header={false}
                                          key=".$RefreshControls-5 Seconds"
                                          onClick={[Function]}
                                          onKeyDown={[Function]}
                                          onSelect={[Function]}
                                        >
                                          <li
                                            className=""
                                            role="presentation"
                                          >
                                            <SafeAnchor
                                              componentClass="a"
                                              onClick={[Function]}
                                              onKeyDown={[Function]}
                                              role="menuitem"
                                              tabIndex="-1"
                                            >
                                              <a
                                                href="#"
                                                onClick={[Function]}
                                                onKeyDown={[Function]}
                                                role="menuitem"
                                                tabIndex="-1"
                                              >
                                                5 Seconds
                                              </a>
                                            </SafeAnchor>
                                          </li>
                                        </MenuItem>
                                        <MenuItem
                                          bsClass="dropdown"
                                          disabled={false}
                                          divider={false}
                                          header={false}
                                          key=".$RefreshControls-10 Seconds"
                                          onClick={[Function]}
                                          onKeyDown={[Function]}
                                          onSelect={[Function]}
                                        >
                                          <li
                                            className=""
                                            role="presentation"
                                          >
                                            <SafeAnchor
                                              componentClass="a"
                                              onClick={[Function]}
                                              onKeyDown={[Function]}
                                              role="menuitem"
                                              tabIndex="-1"
                                            >
                                              <a
                                                href="#"
                                                onClick={[Function]}
                                                onKeyDown={[Function]}
                                                role="menuitem"
                                                tabIndex="-1"
                                              >
                                                10 Seconds
                                              </a>
                                            </SafeAnchor>
                                          </li>
                                        </MenuItem>
                                        <MenuItem
                                          bsClass="dropdown"
                                          disabled={false}
                                          divider={false}
                                          header={false}
                                          key=".$RefreshControls-30 Seconds"
                                          onClick={[Function]}
                                          onKeyDown={[Function]}
                                          onSelect={[Function]}
                                        >
                                          <li
                                            className=""
                                            role="presentation"
                                          >
                                            <SafeAnchor
                                              componentClass="a"
                                              onClick={[Function]}
                                              onKeyDown={[Function]}
                                              role="menuitem"
                                              tabIndex="-1"
                                            >
                                              <a
                                                href="#"
                                                onClick={[Function]}
                                                onKeyDown={[Function]}
                                                role="menuitem"
                                                tabIndex="-1"
                                              >
                                                30 Seconds
                                              </a>
                                            </SafeAnchor>
                                          </li>
                                        </MenuItem>
                                        <MenuItem
                                          bsClass="dropdown"
                                          disabled={false}
                                          divider={false}
                                          header={false}
                                          key=".$RefreshControls-1 Minute"
                                          onClick={[Function]}
                                          onKeyDown={[Function]}
                                          onSelect={[Function]}
                                        >
                                          <li
                                            className=""
                                            role="presentation"
                                          >
                                            <SafeAnchor
                                              componentClass="a"
                                              onClick={[Function]}
                                              onKeyDown={[Function]}
                                              role="menuitem"
                                              tabIndex="-1"
                                            >
                                              <a
                                                href="#"
                                                onClick={[Function]}
                                                onKeyDown={[Function]}
                                                role="menuitem"
                                                tabIndex="-1"
                                              >
                                                1 Minute
                                              </a>
                                            </SafeAnchor>
                                          </li>
                                        </MenuItem>
                                        <MenuItem
                                          bsClass="dropdown"
                                          disabled={false}
                                          divider={false}
                                          header={false}
                                          key=".$RefreshControls-5 Minutes"
                                          onClick={[Function]}
                                          onKeyDown={[Function]}
                                          onSelect={[Function]}
                                        >
                                          <li
                                            className=""
                                            role="presentation"
                                          >
                                            <SafeAnchor
                                              componentClass="a"
                                              onClick={[Function]}
                                              onKeyDown={[Function]}
                                              role="menuitem"
                                              tabIndex="-1"
                                            >
                                              <a
                                                href="#"
                                                onClick={[Function]}
                                                onKeyDown={[Function]}
                                                role="menuitem"
                                                tabIndex="-1"
                                              >
                                                5 Minutes
                                              </a>
                                            </SafeAnchor>
                                          </li>
                                        </MenuItem>
                                      </ul>
                                    </RootCloseWrapper>
                                  </DropdownMenu>
                                </div>
                              </ButtonGroup>
                            </Dropdown>
                          </Uncontrolled(Dropdown)>
                        </ForwardRef>
                      </DropdownButton>
                    </StyledComponent>
                  </DropdownButton>
                </div>
              </ButtonGroup>
            </StyledComponent>
          </RefreshControls__FlexibleButtonGroup>
        </div>
      </StyledComponent>
    </RefreshControls__ControlsContainer>
  </RefreshControls>
</Component>
`;
