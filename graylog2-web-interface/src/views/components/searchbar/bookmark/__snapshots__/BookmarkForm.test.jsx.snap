// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`BookmarkForm render the BookmarkForm should render create new 1`] = `
<BookmarkForm
  disableCreateNew={false}
  isCreateNew={true}
  onChangeTitle={[Function]}
  saveAsSearch={[Function]}
  saveSearch={[Function]}
  target={[Function]}
  toggleModal={[Function]}
  value="new Title"
>
  <MockPortal>
    <mock-portal>
      <MockPosition
        container={<body />}
        placement="left"
        target={[Function]}
      >
        <mock-position
          container={<body />}
          placement="left"
          target={[Function]}
        >
          <Popover
            id="bookmark-popover"
            title="Name of search"
          >
            <StyledComponent
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "Popover-wd1j0g-0",
                    "isStatic": false,
                    "lastClassName": "iEDjLb",
                    "rules": Array [
                      [Function],
                    ],
                  },
                  "displayName": "Popover",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "Popover-wd1j0g-0",
                  "target": [Function],
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
              id="bookmark-popover"
              title="Name of search"
            >
              <Popover
                bsClass="popover"
                className="Popover-wd1j0g-0 iEDjLb"
                id="bookmark-popover"
                placement="right"
                title="Name of search"
              >
                <div
                  className="Popover-wd1j0g-0 iEDjLb popover right"
                  id="bookmark-popover"
                  role="tooltip"
                  style={
                    Object {
                      "display": "block",
                      "left": undefined,
                      "top": undefined,
                    }
                  }
                >
                  <div
                    className="arrow"
                    style={
                      Object {
                        "left": undefined,
                        "top": undefined,
                      }
                    }
                  />
                  <h3
                    className="popover-title"
                  >
                    Name of search
                  </h3>
                  <div
                    className="popover-content"
                  >
                    <form>
                      <FormGroup
                        bsClass="form-group"
                      >
                        <div
                          className="form-group"
                        >
                          <ControlLabel>
                            <StyledComponent
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "ControlLabel-sc-1edmum5-0",
                                    "isStatic": false,
                                    "lastClassName": "jmEvcm",
                                    "rules": Array [
                                      [Function],
                                    ],
                                  },
                                  "displayName": "ControlLabel",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "ControlLabel-sc-1edmum5-0",
                                  "target": [Function],
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <ControlLabel
                                bsClass="control-label"
                                className="ControlLabel-sc-1edmum5-0 jmEvcm"
                                srOnly={false}
                              >
                                <label
                                  className="ControlLabel-sc-1edmum5-0 jmEvcm control-label"
                                >
                                  Title
                                </label>
                              </ControlLabel>
                            </StyledComponent>
                          </ControlLabel>
                          <FormControl
                            onChange={[Function]}
                            placeholder="Enter title"
                            type="text"
                            value="new Title"
                          >
                            <StyledComponent
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "Feedback": [Function],
                                  "SIZES": Array [
                                    "small",
                                    "large",
                                  ],
                                  "Static": [Function],
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "FormControl-sc-1amoaox-0",
                                    "isStatic": false,
                                    "lastClassName": "lpicKK",
                                    "rules": Array [
                                      [Function],
                                    ],
                                  },
                                  "displayName": "FormControl",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "FormControl-sc-1amoaox-0",
                                  "target": [Function],
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                              onChange={[Function]}
                              placeholder="Enter title"
                              type="text"
                              value="new Title"
                            >
                              <FormControl
                                bsClass="form-control"
                                className="FormControl-sc-1amoaox-0 lpicKK"
                                componentClass="input"
                                onChange={[Function]}
                                placeholder="Enter title"
                                type="text"
                                value="new Title"
                              >
                                <input
                                  className="FormControl-sc-1amoaox-0 lpicKK form-control"
                                  onChange={[Function]}
                                  placeholder="Enter title"
                                  type="text"
                                  value="new Title"
                                />
                              </FormControl>
                            </StyledComponent>
                          </FormControl>
                        </div>
                      </FormGroup>
                      <ForwardRef
                        bsStyle="info"
                        className="button"
                        disabled={false}
                        onClick={[Function]}
                        type="submit"
                      >
                        <Button__StyledButton
                          bsStyle="info"
                          className="button"
                          disabled={false}
                          onClick={[Function]}
                          type="submit"
                        >
                          <StyledComponent
                            bsStyle="info"
                            className="button"
                            disabled={false}
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "SIZES": Array [
                                  "large",
                                  "small",
                                  "xsmall",
                                ],
                                "STYLES": Array [
                                  "success",
                                  "warning",
                                  "danger",
                                  "info",
                                  "default",
                                  "primary",
                                  "link",
                                ],
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "Button__StyledButton-c9cbmb-0",
                                  "isStatic": false,
                                  "lastClassName": "hYkHdk",
                                  "rules": Array [
                                    [Function],
                                  ],
                                },
                                "displayName": "Button__StyledButton",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "Button__StyledButton-c9cbmb-0",
                                "target": [Function],
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                            onClick={[Function]}
                            type="submit"
                          >
                            <Button
                              active={false}
                              block={false}
                              bsClass="btn"
                              bsStyle="info"
                              className="button Button__StyledButton-c9cbmb-0 cAlWKw"
                              disabled={false}
                              onClick={[Function]}
                              type="submit"
                            >
                              <button
                                className="button Button__StyledButton-c9cbmb-0 cAlWKw btn btn-info"
                                disabled={false}
                                onClick={[Function]}
                                type="submit"
                              >
                                Create new
                              </button>
                            </Button>
                          </StyledComponent>
                        </Button__StyledButton>
                      </ForwardRef>
                      <ForwardRef
                        bsStyle="default"
                        className="button"
                        onClick={[Function]}
                      >
                        <Button__StyledButton
                          bsStyle="default"
                          className="button"
                          onClick={[Function]}
                        >
                          <StyledComponent
                            bsStyle="default"
                            className="button"
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "SIZES": Array [
                                  "large",
                                  "small",
                                  "xsmall",
                                ],
                                "STYLES": Array [
                                  "success",
                                  "warning",
                                  "danger",
                                  "info",
                                  "default",
                                  "primary",
                                  "link",
                                ],
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "Button__StyledButton-c9cbmb-0",
                                  "isStatic": false,
                                  "lastClassName": "hYkHdk",
                                  "rules": Array [
                                    [Function],
                                  ],
                                },
                                "displayName": "Button__StyledButton",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "Button__StyledButton-c9cbmb-0",
                                "target": [Function],
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                            onClick={[Function]}
                          >
                            <Button
                              active={false}
                              block={false}
                              bsClass="btn"
                              bsStyle="default"
                              className="button Button__StyledButton-c9cbmb-0 hYkHdk"
                              disabled={false}
                              onClick={[Function]}
                            >
                              <button
                                className="button Button__StyledButton-c9cbmb-0 hYkHdk btn btn-default"
                                disabled={false}
                                onClick={[Function]}
                                type="button"
                              >
                                Cancel
                              </button>
                            </Button>
                          </StyledComponent>
                        </Button__StyledButton>
                      </ForwardRef>
                    </form>
                  </div>
                </div>
              </Popover>
            </StyledComponent>
          </Popover>
        </mock-position>
      </MockPosition>
    </mock-portal>
  </MockPortal>
</BookmarkForm>
`;

exports[`BookmarkForm render the BookmarkForm should render disabled create new 1`] = `
<BookmarkForm
  disableCreateNew={true}
  isCreateNew={false}
  onChangeTitle={[Function]}
  saveAsSearch={[Function]}
  saveSearch={[Function]}
  target={[Function]}
  toggleModal={[Function]}
  value="new Title"
>
  <MockPortal>
    <mock-portal>
      <MockPosition
        container={<body />}
        placement="left"
        target={[Function]}
      >
        <mock-position
          container={<body />}
          placement="left"
          target={[Function]}
        >
          <Popover
            id="bookmark-popover"
            title="Name of search"
          >
            <StyledComponent
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "Popover-wd1j0g-0",
                    "isStatic": false,
                    "lastClassName": "iEDjLb",
                    "rules": Array [
                      [Function],
                    ],
                  },
                  "displayName": "Popover",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "Popover-wd1j0g-0",
                  "target": [Function],
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
              id="bookmark-popover"
              title="Name of search"
            >
              <Popover
                bsClass="popover"
                className="Popover-wd1j0g-0 iEDjLb"
                id="bookmark-popover"
                placement="right"
                title="Name of search"
              >
                <div
                  className="Popover-wd1j0g-0 iEDjLb popover right"
                  id="bookmark-popover"
                  role="tooltip"
                  style={
                    Object {
                      "display": "block",
                      "left": undefined,
                      "top": undefined,
                    }
                  }
                >
                  <div
                    className="arrow"
                    style={
                      Object {
                        "left": undefined,
                        "top": undefined,
                      }
                    }
                  />
                  <h3
                    className="popover-title"
                  >
                    Name of search
                  </h3>
                  <div
                    className="popover-content"
                  >
                    <form>
                      <FormGroup
                        bsClass="form-group"
                      >
                        <div
                          className="form-group"
                        >
                          <ControlLabel>
                            <StyledComponent
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "ControlLabel-sc-1edmum5-0",
                                    "isStatic": false,
                                    "lastClassName": "jmEvcm",
                                    "rules": Array [
                                      [Function],
                                    ],
                                  },
                                  "displayName": "ControlLabel",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "ControlLabel-sc-1edmum5-0",
                                  "target": [Function],
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <ControlLabel
                                bsClass="control-label"
                                className="ControlLabel-sc-1edmum5-0 jmEvcm"
                                srOnly={false}
                              >
                                <label
                                  className="ControlLabel-sc-1edmum5-0 jmEvcm control-label"
                                >
                                  Title
                                </label>
                              </ControlLabel>
                            </StyledComponent>
                          </ControlLabel>
                          <FormControl
                            onChange={[Function]}
                            placeholder="Enter title"
                            type="text"
                            value="new Title"
                          >
                            <StyledComponent
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "Feedback": [Function],
                                  "SIZES": Array [
                                    "small",
                                    "large",
                                  ],
                                  "Static": [Function],
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "FormControl-sc-1amoaox-0",
                                    "isStatic": false,
                                    "lastClassName": "lpicKK",
                                    "rules": Array [
                                      [Function],
                                    ],
                                  },
                                  "displayName": "FormControl",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "FormControl-sc-1amoaox-0",
                                  "target": [Function],
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                              onChange={[Function]}
                              placeholder="Enter title"
                              type="text"
                              value="new Title"
                            >
                              <FormControl
                                bsClass="form-control"
                                className="FormControl-sc-1amoaox-0 lpicKK"
                                componentClass="input"
                                onChange={[Function]}
                                placeholder="Enter title"
                                type="text"
                                value="new Title"
                              >
                                <input
                                  className="FormControl-sc-1amoaox-0 lpicKK form-control"
                                  onChange={[Function]}
                                  placeholder="Enter title"
                                  type="text"
                                  value="new Title"
                                />
                              </FormControl>
                            </StyledComponent>
                          </FormControl>
                        </div>
                      </FormGroup>
                      <ForwardRef
                        bsStyle="primary"
                        className="button"
                        onClick={[Function]}
                        type="submit"
                      >
                        <Button__StyledButton
                          bsStyle="primary"
                          className="button"
                          onClick={[Function]}
                          type="submit"
                        >
                          <StyledComponent
                            bsStyle="primary"
                            className="button"
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "SIZES": Array [
                                  "large",
                                  "small",
                                  "xsmall",
                                ],
                                "STYLES": Array [
                                  "success",
                                  "warning",
                                  "danger",
                                  "info",
                                  "default",
                                  "primary",
                                  "link",
                                ],
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "Button__StyledButton-c9cbmb-0",
                                  "isStatic": false,
                                  "lastClassName": "hYkHdk",
                                  "rules": Array [
                                    [Function],
                                  ],
                                },
                                "displayName": "Button__StyledButton",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "Button__StyledButton-c9cbmb-0",
                                "target": [Function],
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                            onClick={[Function]}
                            type="submit"
                          >
                            <Button
                              active={false}
                              block={false}
                              bsClass="btn"
                              bsStyle="primary"
                              className="button Button__StyledButton-c9cbmb-0 dYxYaY"
                              disabled={false}
                              onClick={[Function]}
                              type="submit"
                            >
                              <button
                                className="button Button__StyledButton-c9cbmb-0 dYxYaY btn btn-primary"
                                disabled={false}
                                onClick={[Function]}
                                type="submit"
                              >
                                Save
                              </button>
                            </Button>
                          </StyledComponent>
                        </Button__StyledButton>
                      </ForwardRef>
                      <ForwardRef
                        bsStyle="info"
                        className="button"
                        disabled={true}
                        onClick={[Function]}
                        type="submit"
                      >
                        <Button__StyledButton
                          bsStyle="info"
                          className="button"
                          disabled={true}
                          onClick={[Function]}
                          type="submit"
                        >
                          <StyledComponent
                            bsStyle="info"
                            className="button"
                            disabled={true}
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "SIZES": Array [
                                  "large",
                                  "small",
                                  "xsmall",
                                ],
                                "STYLES": Array [
                                  "success",
                                  "warning",
                                  "danger",
                                  "info",
                                  "default",
                                  "primary",
                                  "link",
                                ],
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "Button__StyledButton-c9cbmb-0",
                                  "isStatic": false,
                                  "lastClassName": "hYkHdk",
                                  "rules": Array [
                                    [Function],
                                  ],
                                },
                                "displayName": "Button__StyledButton",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "Button__StyledButton-c9cbmb-0",
                                "target": [Function],
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                            onClick={[Function]}
                            type="submit"
                          >
                            <Button
                              active={false}
                              block={false}
                              bsClass="btn"
                              bsStyle="info"
                              className="button Button__StyledButton-c9cbmb-0 cAlWKw"
                              disabled={true}
                              onClick={[Function]}
                              type="submit"
                            >
                              <button
                                className="button Button__StyledButton-c9cbmb-0 cAlWKw btn btn-info"
                                disabled={true}
                                onClick={[Function]}
                                type="submit"
                              >
                                Save as
                              </button>
                            </Button>
                          </StyledComponent>
                        </Button__StyledButton>
                      </ForwardRef>
                      <ForwardRef
                        bsStyle="default"
                        className="button"
                        onClick={[Function]}
                      >
                        <Button__StyledButton
                          bsStyle="default"
                          className="button"
                          onClick={[Function]}
                        >
                          <StyledComponent
                            bsStyle="default"
                            className="button"
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "SIZES": Array [
                                  "large",
                                  "small",
                                  "xsmall",
                                ],
                                "STYLES": Array [
                                  "success",
                                  "warning",
                                  "danger",
                                  "info",
                                  "default",
                                  "primary",
                                  "link",
                                ],
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "Button__StyledButton-c9cbmb-0",
                                  "isStatic": false,
                                  "lastClassName": "hYkHdk",
                                  "rules": Array [
                                    [Function],
                                  ],
                                },
                                "displayName": "Button__StyledButton",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "Button__StyledButton-c9cbmb-0",
                                "target": [Function],
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                            onClick={[Function]}
                          >
                            <Button
                              active={false}
                              block={false}
                              bsClass="btn"
                              bsStyle="default"
                              className="button Button__StyledButton-c9cbmb-0 hYkHdk"
                              disabled={false}
                              onClick={[Function]}
                            >
                              <button
                                className="button Button__StyledButton-c9cbmb-0 hYkHdk btn btn-default"
                                disabled={false}
                                onClick={[Function]}
                                type="button"
                              >
                                Cancel
                              </button>
                            </Button>
                          </StyledComponent>
                        </Button__StyledButton>
                      </ForwardRef>
                    </form>
                  </div>
                </div>
              </Popover>
            </StyledComponent>
          </Popover>
        </mock-position>
      </MockPosition>
    </mock-portal>
  </MockPortal>
</BookmarkForm>
`;

exports[`BookmarkForm render the BookmarkForm should render save 1`] = `
<BookmarkForm
  disableCreateNew={false}
  isCreateNew={false}
  onChangeTitle={[Function]}
  saveAsSearch={[Function]}
  saveSearch={[Function]}
  target={[Function]}
  toggleModal={[Function]}
  value="new Title"
>
  <MockPortal>
    <mock-portal>
      <MockPosition
        container={<body />}
        placement="left"
        target={[Function]}
      >
        <mock-position
          container={<body />}
          placement="left"
          target={[Function]}
        >
          <Popover
            id="bookmark-popover"
            title="Name of search"
          >
            <StyledComponent
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "Popover-wd1j0g-0",
                    "isStatic": false,
                    "lastClassName": "iEDjLb",
                    "rules": Array [
                      [Function],
                    ],
                  },
                  "displayName": "Popover",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "Popover-wd1j0g-0",
                  "target": [Function],
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
              id="bookmark-popover"
              title="Name of search"
            >
              <Popover
                bsClass="popover"
                className="Popover-wd1j0g-0 iEDjLb"
                id="bookmark-popover"
                placement="right"
                title="Name of search"
              >
                <div
                  className="Popover-wd1j0g-0 iEDjLb popover right"
                  id="bookmark-popover"
                  role="tooltip"
                  style={
                    Object {
                      "display": "block",
                      "left": undefined,
                      "top": undefined,
                    }
                  }
                >
                  <div
                    className="arrow"
                    style={
                      Object {
                        "left": undefined,
                        "top": undefined,
                      }
                    }
                  />
                  <h3
                    className="popover-title"
                  >
                    Name of search
                  </h3>
                  <div
                    className="popover-content"
                  >
                    <form>
                      <FormGroup
                        bsClass="form-group"
                      >
                        <div
                          className="form-group"
                        >
                          <ControlLabel>
                            <StyledComponent
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "ControlLabel-sc-1edmum5-0",
                                    "isStatic": false,
                                    "lastClassName": "jmEvcm",
                                    "rules": Array [
                                      [Function],
                                    ],
                                  },
                                  "displayName": "ControlLabel",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "ControlLabel-sc-1edmum5-0",
                                  "target": [Function],
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <ControlLabel
                                bsClass="control-label"
                                className="ControlLabel-sc-1edmum5-0 jmEvcm"
                                srOnly={false}
                              >
                                <label
                                  className="ControlLabel-sc-1edmum5-0 jmEvcm control-label"
                                >
                                  Title
                                </label>
                              </ControlLabel>
                            </StyledComponent>
                          </ControlLabel>
                          <FormControl
                            onChange={[Function]}
                            placeholder="Enter title"
                            type="text"
                            value="new Title"
                          >
                            <StyledComponent
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "Feedback": [Function],
                                  "SIZES": Array [
                                    "small",
                                    "large",
                                  ],
                                  "Static": [Function],
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "FormControl-sc-1amoaox-0",
                                    "isStatic": false,
                                    "lastClassName": "lpicKK",
                                    "rules": Array [
                                      [Function],
                                    ],
                                  },
                                  "displayName": "FormControl",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "FormControl-sc-1amoaox-0",
                                  "target": [Function],
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                              onChange={[Function]}
                              placeholder="Enter title"
                              type="text"
                              value="new Title"
                            >
                              <FormControl
                                bsClass="form-control"
                                className="FormControl-sc-1amoaox-0 lpicKK"
                                componentClass="input"
                                onChange={[Function]}
                                placeholder="Enter title"
                                type="text"
                                value="new Title"
                              >
                                <input
                                  className="FormControl-sc-1amoaox-0 lpicKK form-control"
                                  onChange={[Function]}
                                  placeholder="Enter title"
                                  type="text"
                                  value="new Title"
                                />
                              </FormControl>
                            </StyledComponent>
                          </FormControl>
                        </div>
                      </FormGroup>
                      <ForwardRef
                        bsStyle="primary"
                        className="button"
                        onClick={[Function]}
                        type="submit"
                      >
                        <Button__StyledButton
                          bsStyle="primary"
                          className="button"
                          onClick={[Function]}
                          type="submit"
                        >
                          <StyledComponent
                            bsStyle="primary"
                            className="button"
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "SIZES": Array [
                                  "large",
                                  "small",
                                  "xsmall",
                                ],
                                "STYLES": Array [
                                  "success",
                                  "warning",
                                  "danger",
                                  "info",
                                  "default",
                                  "primary",
                                  "link",
                                ],
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "Button__StyledButton-c9cbmb-0",
                                  "isStatic": false,
                                  "lastClassName": "hYkHdk",
                                  "rules": Array [
                                    [Function],
                                  ],
                                },
                                "displayName": "Button__StyledButton",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "Button__StyledButton-c9cbmb-0",
                                "target": [Function],
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                            onClick={[Function]}
                            type="submit"
                          >
                            <Button
                              active={false}
                              block={false}
                              bsClass="btn"
                              bsStyle="primary"
                              className="button Button__StyledButton-c9cbmb-0 dYxYaY"
                              disabled={false}
                              onClick={[Function]}
                              type="submit"
                            >
                              <button
                                className="button Button__StyledButton-c9cbmb-0 dYxYaY btn btn-primary"
                                disabled={false}
                                onClick={[Function]}
                                type="submit"
                              >
                                Save
                              </button>
                            </Button>
                          </StyledComponent>
                        </Button__StyledButton>
                      </ForwardRef>
                      <ForwardRef
                        bsStyle="info"
                        className="button"
                        disabled={false}
                        onClick={[Function]}
                        type="submit"
                      >
                        <Button__StyledButton
                          bsStyle="info"
                          className="button"
                          disabled={false}
                          onClick={[Function]}
                          type="submit"
                        >
                          <StyledComponent
                            bsStyle="info"
                            className="button"
                            disabled={false}
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "SIZES": Array [
                                  "large",
                                  "small",
                                  "xsmall",
                                ],
                                "STYLES": Array [
                                  "success",
                                  "warning",
                                  "danger",
                                  "info",
                                  "default",
                                  "primary",
                                  "link",
                                ],
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "Button__StyledButton-c9cbmb-0",
                                  "isStatic": false,
                                  "lastClassName": "hYkHdk",
                                  "rules": Array [
                                    [Function],
                                  ],
                                },
                                "displayName": "Button__StyledButton",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "Button__StyledButton-c9cbmb-0",
                                "target": [Function],
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                            onClick={[Function]}
                            type="submit"
                          >
                            <Button
                              active={false}
                              block={false}
                              bsClass="btn"
                              bsStyle="info"
                              className="button Button__StyledButton-c9cbmb-0 cAlWKw"
                              disabled={false}
                              onClick={[Function]}
                              type="submit"
                            >
                              <button
                                className="button Button__StyledButton-c9cbmb-0 cAlWKw btn btn-info"
                                disabled={false}
                                onClick={[Function]}
                                type="submit"
                              >
                                Save as
                              </button>
                            </Button>
                          </StyledComponent>
                        </Button__StyledButton>
                      </ForwardRef>
                      <ForwardRef
                        bsStyle="default"
                        className="button"
                        onClick={[Function]}
                      >
                        <Button__StyledButton
                          bsStyle="default"
                          className="button"
                          onClick={[Function]}
                        >
                          <StyledComponent
                            bsStyle="default"
                            className="button"
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "SIZES": Array [
                                  "large",
                                  "small",
                                  "xsmall",
                                ],
                                "STYLES": Array [
                                  "success",
                                  "warning",
                                  "danger",
                                  "info",
                                  "default",
                                  "primary",
                                  "link",
                                ],
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "Button__StyledButton-c9cbmb-0",
                                  "isStatic": false,
                                  "lastClassName": "hYkHdk",
                                  "rules": Array [
                                    [Function],
                                  ],
                                },
                                "displayName": "Button__StyledButton",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "Button__StyledButton-c9cbmb-0",
                                "target": [Function],
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                            onClick={[Function]}
                          >
                            <Button
                              active={false}
                              block={false}
                              bsClass="btn"
                              bsStyle="default"
                              className="button Button__StyledButton-c9cbmb-0 hYkHdk"
                              disabled={false}
                              onClick={[Function]}
                            >
                              <button
                                className="button Button__StyledButton-c9cbmb-0 hYkHdk btn btn-default"
                                disabled={false}
                                onClick={[Function]}
                                type="button"
                              >
                                Cancel
                              </button>
                            </Button>
                          </StyledComponent>
                        </Button__StyledButton>
                      </ForwardRef>
                    </form>
                  </div>
                </div>
              </Popover>
            </StyledComponent>
          </Popover>
        </mock-position>
      </MockPosition>
    </mock-portal>
  </MockPortal>
</BookmarkForm>
`;
