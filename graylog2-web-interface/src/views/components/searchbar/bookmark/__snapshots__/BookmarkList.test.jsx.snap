// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`BookmarkList render the BookmarkList should handle toggleModal 1`] = `
<ModalDialog
  bsClass="modal"
  className="fade in"
  onClick={[Function]}
  role="document"
  style={
    Object {
      "paddingLeft": undefined,
      "paddingRight": 0,
    }
  }
  tabIndex="-1"
>
  <div
    className="fade in modal"
    onClick={[Function]}
    role="dialog"
    style={
      Object {
        "display": "block",
        "paddingLeft": undefined,
        "paddingRight": 0,
      }
    }
    tabIndex="-1"
  >
    <div
      className="modal-dialog"
    >
      <div
        className="modal-content"
        role="document"
      >
        <ModalBody
          bsClass="modal-body"
          componentClass="div"
        >
          <div
            className="modal-body"
          >
            <SearchForm
              buttonLeftMargin={5}
              label={null}
              loadingLabel="Loading..."
              onQueryChange={[Function]}
              onReset={[Function]}
              onSearch={[Function]}
              placeholder="Enter search query..."
              query=""
              queryHelpComponent={null}
              queryWidth="auto"
              resetButtonLabel="Reset"
              searchBsStyle="default"
              searchButtonLabel="Search"
              topMargin={15}
              useLoadingState={false}
              wrapperClass="search"
            >
              <div
                className="search"
                style={
                  Object {
                    "marginTop": 15,
                  }
                }
              >
                <form
                  className="form-inline"
                  onSubmit={[Function]}
                >
                  <div
                    className="form-group has-feedback"
                  >
                    <input
                      autoComplete="off"
                      className="query form-control"
                      id="common-search-form-query-input"
                      onChange={[Function]}
                      placeholder="Enter search query..."
                      spellCheck="false"
                      style={
                        Object {
                          "width": "auto",
                        }
                      }
                      type="text"
                      value=""
                    />
                  </div>
                  <div
                    className="form-group"
                    style={
                      Object {
                        "marginLeft": 5,
                      }
                    }
                  >
                    <ForwardRef
                      active={false}
                      bsStyle="default"
                      className="submit-button"
                      disabled={false}
                      type="submit"
                    >
                      <Button__StyledButton
                        bsStyle="default"
                        className="submit-button"
                        disabled={false}
                        type="submit"
                      >
                        <StyledComponent
                          bsStyle="default"
                          className="submit-button"
                          disabled={false}
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "SIZES": Array [
                                "large",
                                "small",
                                "xsmall",
                              ],
                              "STYLES": Array [
                                "success",
                                "warning",
                                "danger",
                                "info",
                                "default",
                                "primary",
                                "link",
                              ],
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "Button__StyledButton-c9cbmb-0",
                                "isStatic": false,
                                "lastClassName": "kRDLih",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Button__StyledButton",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "Button__StyledButton-c9cbmb-0",
                              "target": [Function],
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          type="submit"
                        >
                          <Button
                            active={false}
                            block={false}
                            bsClass="btn"
                            bsStyle="default"
                            className="submit-button Button__StyledButton-c9cbmb-0 kRDLih"
                            disabled={false}
                            type="submit"
                          >
                            <button
                              className="submit-button Button__StyledButton-c9cbmb-0 kRDLih btn btn-default"
                              disabled={false}
                              type="submit"
                            >
                              Search
                            </button>
                          </Button>
                        </StyledComponent>
                      </Button__StyledButton>
                    </ForwardRef>
                  </div>
                  <div
                    className="form-group"
                    style={
                      Object {
                        "marginLeft": 5,
                      }
                    }
                  >
                    <ForwardRef
                      active={false}
                      bsStyle="default"
                      className="reset-button"
                      onClick={[Function]}
                      type="reset"
                    >
                      <Button__StyledButton
                        bsStyle="default"
                        className="reset-button"
                        onClick={[Function]}
                        type="reset"
                      >
                        <StyledComponent
                          bsStyle="default"
                          className="reset-button"
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "SIZES": Array [
                                "large",
                                "small",
                                "xsmall",
                              ],
                              "STYLES": Array [
                                "success",
                                "warning",
                                "danger",
                                "info",
                                "default",
                                "primary",
                                "link",
                              ],
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "Button__StyledButton-c9cbmb-0",
                                "isStatic": false,
                                "lastClassName": "kRDLih",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Button__StyledButton",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "Button__StyledButton-c9cbmb-0",
                              "target": [Function],
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          onClick={[Function]}
                          type="reset"
                        >
                          <Button
                            active={false}
                            block={false}
                            bsClass="btn"
                            bsStyle="default"
                            className="reset-button Button__StyledButton-c9cbmb-0 kRDLih"
                            disabled={false}
                            onClick={[Function]}
                            type="reset"
                          >
                            <button
                              className="reset-button Button__StyledButton-c9cbmb-0 kRDLih btn btn-default"
                              disabled={false}
                              onClick={[Function]}
                              type="reset"
                            >
                              Reset
                            </button>
                          </Button>
                        </StyledComponent>
                      </Button__StyledButton>
                    </ForwardRef>
                  </div>
                </form>
              </div>
            </SearchForm>
            <PaginatedList
              activePage={1}
              onChange={[Function]}
              pageSize={5}
              pageSizes={
                Array [
                  5,
                  10,
                  15,
                ]
              }
              showPageSizeSelect={true}
              totalItems={1}
            >
              <span>
                <div
                  className="form-inline page-size"
                  style={
                    Object {
                      "float": "right",
                    }
                  }
                >
                  <Input
                    addonAfter={null}
                    bsSize="small"
                    bsStyle={null}
                    buttonAfter={null}
                    help=""
                    id="page-size"
                    label="Show:"
                    onChange={[Function]}
                    placeholder=""
                    type="select"
                    value={5}
                  >
                    <FormGroup
                      bsClass="form-group"
                      controlId="page-size"
                      validationState={null}
                    >
                      <div
                        className="form-group"
                      >
                        <ControlLabel
                          bsClass="control-label"
                          srOnly={false}
                        >
                          <label
                            className="control-label"
                            htmlFor="page-size"
                          >
                            Show:
                          </label>
                        </ControlLabel>
                        <InputWrapper>
                          <span>
                            <FormControl
                              bsClass="form-control"
                              bsSize="small"
                              componentClass="select"
                              inputRef={[Function]}
                              label="Show:"
                              name="page-size"
                              onChange={[Function]}
                              placeholder=""
                              type="select"
                              value={5}
                            >
                              <select
                                className="form-control input-sm"
                                id="page-size"
                                label="Show:"
                                name="page-size"
                                onChange={[Function]}
                                placeholder=""
                                type="select"
                                value={5}
                              >
                                <option
                                  key="option-5"
                                  value={5}
                                >
                                  5
                                </option>
                                <option
                                  key="option-10"
                                  value={10}
                                >
                                  10
                                </option>
                                <option
                                  key="option-15"
                                  value={15}
                                >
                                  15
                                </option>
                              </select>
                            </FormControl>
                          </span>
                        </InputWrapper>
                      </div>
                    </FormGroup>
                  </Input>
                </div>
                <ListGroup
                  bsClass="list-group"
                >
                  <div
                    className="list-group"
                  >
                    <ListGroupItem
                      active={false}
                      bsClass="list-group-item"
                      header="test-0"
                      key="foo-bar-0"
                      listItem={false}
                      onClick={[Function]}
                    >
                      <button
                        className="list-group-item"
                        onClick={[Function]}
                        type="button"
                      >
                        <h4
                          className="list-group-item-heading"
                        >
                          test-0
                        </h4>
                        <p
                          className="list-group-item-text"
                        />
                      </button>
                    </ListGroupItem>
                  </div>
                </ListGroup>
                <div
                  className="text-center"
                >
                  <Pagination
                    activePage={1}
                    boundaryLinks={false}
                    bsClass="pagination"
                    bsSize="small"
                    ellipsis={true}
                    first={true}
                    items={1}
                    last={true}
                    maxButtons={10}
                    next={true}
                    onSelect={[Function]}
                    prev={true}
                  >
                    <ul
                      className="pagination pagination-sm"
                    >
                      <PaginationButton
                        active={false}
                        componentClass={[Function]}
                        disabled={true}
                        eventKey={1}
                        onSelect={[Function]}
                      >
                        <li
                          className="disabled"
                        >
                          <SafeAnchor
                            componentClass="a"
                            disabled={true}
                            onClick={[Function]}
                          >
                            <a
                              href="#"
                              onClick={[Function]}
                              onKeyDown={[Function]}
                              role="button"
                              style={
                                Object {
                                  "pointerEvents": "none",
                                }
                              }
                              tabIndex={-1}
                            >
                              <span
                                aria-label="First"
                              >
                                «
                              </span>
                            </a>
                          </SafeAnchor>
                        </li>
                      </PaginationButton>
                      <PaginationButton
                        active={false}
                        componentClass={[Function]}
                        disabled={true}
                        eventKey={0}
                        onSelect={[Function]}
                      >
                        <li
                          className="disabled"
                        >
                          <SafeAnchor
                            componentClass="a"
                            disabled={true}
                            onClick={[Function]}
                          >
                            <a
                              href="#"
                              onClick={[Function]}
                              onKeyDown={[Function]}
                              role="button"
                              style={
                                Object {
                                  "pointerEvents": "none",
                                }
                              }
                              tabIndex={-1}
                            >
                              <span
                                aria-label="Previous"
                              >
                                ‹
                              </span>
                            </a>
                          </SafeAnchor>
                        </li>
                      </PaginationButton>
                      <PaginationButton
                        active={true}
                        componentClass={[Function]}
                        disabled={false}
                        eventKey={1}
                        key="1"
                        onSelect={[Function]}
                      >
                        <li
                          className="active"
                        >
                          <SafeAnchor
                            componentClass="a"
                            disabled={false}
                            onClick={[Function]}
                          >
                            <a
                              href="#"
                              onClick={[Function]}
                              onKeyDown={[Function]}
                              role="button"
                            >
                              1
                            </a>
                          </SafeAnchor>
                        </li>
                      </PaginationButton>
                      <PaginationButton
                        active={false}
                        componentClass={[Function]}
                        disabled={true}
                        eventKey={2}
                        onSelect={[Function]}
                      >
                        <li
                          className="disabled"
                        >
                          <SafeAnchor
                            componentClass="a"
                            disabled={true}
                            onClick={[Function]}
                          >
                            <a
                              href="#"
                              onClick={[Function]}
                              onKeyDown={[Function]}
                              role="button"
                              style={
                                Object {
                                  "pointerEvents": "none",
                                }
                              }
                              tabIndex={-1}
                            >
                              <span
                                aria-label="Next"
                              >
                                ›
                              </span>
                            </a>
                          </SafeAnchor>
                        </li>
                      </PaginationButton>
                      <PaginationButton
                        active={false}
                        componentClass={[Function]}
                        disabled={true}
                        eventKey={1}
                        onSelect={[Function]}
                      >
                        <li
                          className="disabled"
                        >
                          <SafeAnchor
                            componentClass="a"
                            disabled={true}
                            onClick={[Function]}
                          >
                            <a
                              href="#"
                              onClick={[Function]}
                              onKeyDown={[Function]}
                              role="button"
                              style={
                                Object {
                                  "pointerEvents": "none",
                                }
                              }
                              tabIndex={-1}
                            >
                              <span
                                aria-label="Last"
                              >
                                »
                              </span>
                            </a>
                          </SafeAnchor>
                        </li>
                      </PaginationButton>
                    </ul>
                  </Pagination>
                </div>
              </span>
            </PaginatedList>
          </div>
        </ModalBody>
        <ModalFooter
          bsClass="modal-footer"
          componentClass="div"
        >
          <div
            className="modal-footer"
          >
            <ForwardRef
              active={false}
              bsStyle="primary"
              disabled={true}
              onClick={[Function]}
            >
              <Button__StyledButton
                bsStyle="primary"
                disabled={true}
                onClick={[Function]}
              >
                <StyledComponent
                  bsStyle="primary"
                  disabled={true}
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "SIZES": Array [
                        "large",
                        "small",
                        "xsmall",
                      ],
                      "STYLES": Array [
                        "success",
                        "warning",
                        "danger",
                        "info",
                        "default",
                        "primary",
                        "link",
                      ],
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "Button__StyledButton-c9cbmb-0",
                        "isStatic": false,
                        "lastClassName": "kRDLih",
                        "rules": Array [
                          [Function],
                        ],
                      },
                      "displayName": "Button__StyledButton",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "Button__StyledButton-c9cbmb-0",
                      "target": [Function],
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                  onClick={[Function]}
                >
                  <Button
                    active={false}
                    block={false}
                    bsClass="btn"
                    bsStyle="primary"
                    className="Button__StyledButton-c9cbmb-0 kRDLih"
                    disabled={true}
                    onClick={[Function]}
                  >
                    <button
                      className="Button__StyledButton-c9cbmb-0 kRDLih btn btn-primary"
                      disabled={true}
                      onClick={[Function]}
                      type="button"
                    >
                      Load
                    </button>
                  </Button>
                </StyledComponent>
              </Button__StyledButton>
            </ForwardRef>
            <ForwardRef
              active={false}
              bsStyle="default"
              disabled={true}
              onClick={[Function]}
            >
              <Button__StyledButton
                bsStyle="default"
                disabled={true}
                onClick={[Function]}
              >
                <StyledComponent
                  bsStyle="default"
                  disabled={true}
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "SIZES": Array [
                        "large",
                        "small",
                        "xsmall",
                      ],
                      "STYLES": Array [
                        "success",
                        "warning",
                        "danger",
                        "info",
                        "default",
                        "primary",
                        "link",
                      ],
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "Button__StyledButton-c9cbmb-0",
                        "isStatic": false,
                        "lastClassName": "kRDLih",
                        "rules": Array [
                          [Function],
                        ],
                      },
                      "displayName": "Button__StyledButton",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "Button__StyledButton-c9cbmb-0",
                      "target": [Function],
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                  onClick={[Function]}
                >
                  <Button
                    active={false}
                    block={false}
                    bsClass="btn"
                    bsStyle="default"
                    className="Button__StyledButton-c9cbmb-0 kRDLih"
                    disabled={true}
                    onClick={[Function]}
                  >
                    <button
                      className="Button__StyledButton-c9cbmb-0 kRDLih btn btn-default"
                      disabled={true}
                      onClick={[Function]}
                      type="button"
                    >
                      Delete
                    </button>
                  </Button>
                </StyledComponent>
              </Button__StyledButton>
            </ForwardRef>
            <ForwardRef
              active={false}
              bsStyle="default"
              onClick={[Function]}
            >
              <Button__StyledButton
                bsStyle="default"
                onClick={[Function]}
              >
                <StyledComponent
                  bsStyle="default"
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "SIZES": Array [
                        "large",
                        "small",
                        "xsmall",
                      ],
                      "STYLES": Array [
                        "success",
                        "warning",
                        "danger",
                        "info",
                        "default",
                        "primary",
                        "link",
                      ],
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "Button__StyledButton-c9cbmb-0",
                        "isStatic": false,
                        "lastClassName": "kRDLih",
                        "rules": Array [
                          [Function],
                        ],
                      },
                      "displayName": "Button__StyledButton",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "Button__StyledButton-c9cbmb-0",
                      "target": [Function],
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                  onClick={[Function]}
                >
                  <Button
                    active={false}
                    block={false}
                    bsClass="btn"
                    bsStyle="default"
                    className="Button__StyledButton-c9cbmb-0 kRDLih"
                    disabled={false}
                    onClick={[Function]}
                  >
                    <button
                      className="Button__StyledButton-c9cbmb-0 kRDLih btn btn-default"
                      disabled={false}
                      onClick={[Function]}
                      type="button"
                    >
                      Cancel
                    </button>
                  </Button>
                </StyledComponent>
              </Button__StyledButton>
            </ForwardRef>
          </div>
        </ModalFooter>
      </div>
    </div>
  </div>
</ModalDialog>
`;

exports[`BookmarkList render the BookmarkList should render empty 1`] = `
<ModalDialog
  bsClass="modal"
  className="fade in"
  onClick={[Function]}
  role="document"
  style={
    Object {
      "paddingLeft": undefined,
      "paddingRight": 0,
    }
  }
  tabIndex="-1"
>
  <div
    className="fade in modal"
    onClick={[Function]}
    role="dialog"
    style={
      Object {
        "display": "block",
        "paddingLeft": undefined,
        "paddingRight": 0,
      }
    }
    tabIndex="-1"
  >
    <div
      className="modal-dialog"
    >
      <div
        className="modal-content"
        role="document"
      >
        <ModalBody
          bsClass="modal-body"
          componentClass="div"
        >
          <div
            className="modal-body"
          >
            <SearchForm
              buttonLeftMargin={5}
              label={null}
              loadingLabel="Loading..."
              onQueryChange={[Function]}
              onReset={[Function]}
              onSearch={[Function]}
              placeholder="Enter search query..."
              query=""
              queryHelpComponent={null}
              queryWidth="auto"
              resetButtonLabel="Reset"
              searchBsStyle="default"
              searchButtonLabel="Search"
              topMargin={15}
              useLoadingState={false}
              wrapperClass="search"
            >
              <div
                className="search"
                style={
                  Object {
                    "marginTop": 15,
                  }
                }
              >
                <form
                  className="form-inline"
                  onSubmit={[Function]}
                >
                  <div
                    className="form-group has-feedback"
                  >
                    <input
                      autoComplete="off"
                      className="query form-control"
                      id="common-search-form-query-input"
                      onChange={[Function]}
                      placeholder="Enter search query..."
                      spellCheck="false"
                      style={
                        Object {
                          "width": "auto",
                        }
                      }
                      type="text"
                      value=""
                    />
                  </div>
                  <div
                    className="form-group"
                    style={
                      Object {
                        "marginLeft": 5,
                      }
                    }
                  >
                    <ForwardRef
                      active={false}
                      bsStyle="default"
                      className="submit-button"
                      disabled={false}
                      type="submit"
                    >
                      <Button__StyledButton
                        bsStyle="default"
                        className="submit-button"
                        disabled={false}
                        type="submit"
                      >
                        <StyledComponent
                          bsStyle="default"
                          className="submit-button"
                          disabled={false}
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "SIZES": Array [
                                "large",
                                "small",
                                "xsmall",
                              ],
                              "STYLES": Array [
                                "success",
                                "warning",
                                "danger",
                                "info",
                                "default",
                                "primary",
                                "link",
                              ],
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "Button__StyledButton-c9cbmb-0",
                                "isStatic": false,
                                "lastClassName": "kRDLih",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Button__StyledButton",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "Button__StyledButton-c9cbmb-0",
                              "target": [Function],
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          type="submit"
                        >
                          <Button
                            active={false}
                            block={false}
                            bsClass="btn"
                            bsStyle="default"
                            className="submit-button Button__StyledButton-c9cbmb-0 kRDLih"
                            disabled={false}
                            type="submit"
                          >
                            <button
                              className="submit-button Button__StyledButton-c9cbmb-0 kRDLih btn btn-default"
                              disabled={false}
                              type="submit"
                            >
                              Search
                            </button>
                          </Button>
                        </StyledComponent>
                      </Button__StyledButton>
                    </ForwardRef>
                  </div>
                  <div
                    className="form-group"
                    style={
                      Object {
                        "marginLeft": 5,
                      }
                    }
                  >
                    <ForwardRef
                      active={false}
                      bsStyle="default"
                      className="reset-button"
                      onClick={[Function]}
                      type="reset"
                    >
                      <Button__StyledButton
                        bsStyle="default"
                        className="reset-button"
                        onClick={[Function]}
                        type="reset"
                      >
                        <StyledComponent
                          bsStyle="default"
                          className="reset-button"
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "SIZES": Array [
                                "large",
                                "small",
                                "xsmall",
                              ],
                              "STYLES": Array [
                                "success",
                                "warning",
                                "danger",
                                "info",
                                "default",
                                "primary",
                                "link",
                              ],
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "Button__StyledButton-c9cbmb-0",
                                "isStatic": false,
                                "lastClassName": "kRDLih",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Button__StyledButton",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "Button__StyledButton-c9cbmb-0",
                              "target": [Function],
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          onClick={[Function]}
                          type="reset"
                        >
                          <Button
                            active={false}
                            block={false}
                            bsClass="btn"
                            bsStyle="default"
                            className="reset-button Button__StyledButton-c9cbmb-0 kRDLih"
                            disabled={false}
                            onClick={[Function]}
                            type="reset"
                          >
                            <button
                              className="reset-button Button__StyledButton-c9cbmb-0 kRDLih btn btn-default"
                              disabled={false}
                              onClick={[Function]}
                              type="reset"
                            >
                              Reset
                            </button>
                          </Button>
                        </StyledComponent>
                      </Button__StyledButton>
                    </ForwardRef>
                  </div>
                </form>
              </div>
            </SearchForm>
            <PaginatedList
              activePage={0}
              onChange={[Function]}
              pageSize={5}
              pageSizes={
                Array [
                  5,
                  10,
                  15,
                ]
              }
              showPageSizeSelect={true}
              totalItems={0}
            >
              <span>
                <div
                  className="form-inline page-size"
                  style={
                    Object {
                      "float": "right",
                    }
                  }
                >
                  <Input
                    addonAfter={null}
                    bsSize="small"
                    bsStyle={null}
                    buttonAfter={null}
                    help=""
                    id="page-size"
                    label="Show:"
                    onChange={[Function]}
                    placeholder=""
                    type="select"
                    value={5}
                  >
                    <FormGroup
                      bsClass="form-group"
                      controlId="page-size"
                      validationState={null}
                    >
                      <div
                        className="form-group"
                      >
                        <ControlLabel
                          bsClass="control-label"
                          srOnly={false}
                        >
                          <label
                            className="control-label"
                            htmlFor="page-size"
                          >
                            Show:
                          </label>
                        </ControlLabel>
                        <InputWrapper>
                          <span>
                            <FormControl
                              bsClass="form-control"
                              bsSize="small"
                              componentClass="select"
                              inputRef={[Function]}
                              label="Show:"
                              name="page-size"
                              onChange={[Function]}
                              placeholder=""
                              type="select"
                              value={5}
                            >
                              <select
                                className="form-control input-sm"
                                id="page-size"
                                label="Show:"
                                name="page-size"
                                onChange={[Function]}
                                placeholder=""
                                type="select"
                                value={5}
                              >
                                <option
                                  key="option-5"
                                  value={5}
                                >
                                  5
                                </option>
                                <option
                                  key="option-10"
                                  value={10}
                                >
                                  10
                                </option>
                                <option
                                  key="option-15"
                                  value={15}
                                >
                                  15
                                </option>
                              </select>
                            </FormControl>
                          </span>
                        </InputWrapper>
                      </div>
                    </FormGroup>
                  </Input>
                </div>
                <span>
                  No bookmarks found
                </span>
                <div
                  className="text-center"
                >
                  <Pagination
                    activePage={1}
                    boundaryLinks={false}
                    bsClass="pagination"
                    bsSize="small"
                    ellipsis={true}
                    first={true}
                    items={0}
                    last={true}
                    maxButtons={10}
                    next={true}
                    onSelect={[Function]}
                    prev={true}
                  >
                    <ul
                      className="pagination pagination-sm"
                    >
                      <PaginationButton
                        active={false}
                        componentClass={[Function]}
                        disabled={true}
                        eventKey={1}
                        onSelect={[Function]}
                      >
                        <li
                          className="disabled"
                        >
                          <SafeAnchor
                            componentClass="a"
                            disabled={true}
                            onClick={[Function]}
                          >
                            <a
                              href="#"
                              onClick={[Function]}
                              onKeyDown={[Function]}
                              role="button"
                              style={
                                Object {
                                  "pointerEvents": "none",
                                }
                              }
                              tabIndex={-1}
                            >
                              <span
                                aria-label="First"
                              >
                                «
                              </span>
                            </a>
                          </SafeAnchor>
                        </li>
                      </PaginationButton>
                      <PaginationButton
                        active={false}
                        componentClass={[Function]}
                        disabled={true}
                        eventKey={0}
                        onSelect={[Function]}
                      >
                        <li
                          className="disabled"
                        >
                          <SafeAnchor
                            componentClass="a"
                            disabled={true}
                            onClick={[Function]}
                          >
                            <a
                              href="#"
                              onClick={[Function]}
                              onKeyDown={[Function]}
                              role="button"
                              style={
                                Object {
                                  "pointerEvents": "none",
                                }
                              }
                              tabIndex={-1}
                            >
                              <span
                                aria-label="Previous"
                              >
                                ‹
                              </span>
                            </a>
                          </SafeAnchor>
                        </li>
                      </PaginationButton>
                      <PaginationButton
                        active={false}
                        componentClass={[Function]}
                        disabled={true}
                        eventKey={2}
                        onSelect={[Function]}
                      >
                        <li
                          className="disabled"
                        >
                          <SafeAnchor
                            componentClass="a"
                            disabled={true}
                            onClick={[Function]}
                          >
                            <a
                              href="#"
                              onClick={[Function]}
                              onKeyDown={[Function]}
                              role="button"
                              style={
                                Object {
                                  "pointerEvents": "none",
                                }
                              }
                              tabIndex={-1}
                            >
                              <span
                                aria-label="Next"
                              >
                                ›
                              </span>
                            </a>
                          </SafeAnchor>
                        </li>
                      </PaginationButton>
                      <PaginationButton
                        active={false}
                        componentClass={[Function]}
                        disabled={true}
                        eventKey={0}
                        onSelect={[Function]}
                      >
                        <li
                          className="disabled"
                        >
                          <SafeAnchor
                            componentClass="a"
                            disabled={true}
                            onClick={[Function]}
                          >
                            <a
                              href="#"
                              onClick={[Function]}
                              onKeyDown={[Function]}
                              role="button"
                              style={
                                Object {
                                  "pointerEvents": "none",
                                }
                              }
                              tabIndex={-1}
                            >
                              <span
                                aria-label="Last"
                              >
                                »
                              </span>
                            </a>
                          </SafeAnchor>
                        </li>
                      </PaginationButton>
                    </ul>
                  </Pagination>
                </div>
              </span>
            </PaginatedList>
          </div>
        </ModalBody>
        <ModalFooter
          bsClass="modal-footer"
          componentClass="div"
        >
          <div
            className="modal-footer"
          >
            <ForwardRef
              active={false}
              bsStyle="primary"
              disabled={true}
              onClick={[Function]}
            >
              <Button__StyledButton
                bsStyle="primary"
                disabled={true}
                onClick={[Function]}
              >
                <StyledComponent
                  bsStyle="primary"
                  disabled={true}
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "SIZES": Array [
                        "large",
                        "small",
                        "xsmall",
                      ],
                      "STYLES": Array [
                        "success",
                        "warning",
                        "danger",
                        "info",
                        "default",
                        "primary",
                        "link",
                      ],
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "Button__StyledButton-c9cbmb-0",
                        "isStatic": false,
                        "lastClassName": "kRDLih",
                        "rules": Array [
                          [Function],
                        ],
                      },
                      "displayName": "Button__StyledButton",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "Button__StyledButton-c9cbmb-0",
                      "target": [Function],
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                  onClick={[Function]}
                >
                  <Button
                    active={false}
                    block={false}
                    bsClass="btn"
                    bsStyle="primary"
                    className="Button__StyledButton-c9cbmb-0 kRDLih"
                    disabled={true}
                    onClick={[Function]}
                  >
                    <button
                      className="Button__StyledButton-c9cbmb-0 kRDLih btn btn-primary"
                      disabled={true}
                      onClick={[Function]}
                      type="button"
                    >
                      Load
                    </button>
                  </Button>
                </StyledComponent>
              </Button__StyledButton>
            </ForwardRef>
            <ForwardRef
              active={false}
              bsStyle="default"
              disabled={true}
              onClick={[Function]}
            >
              <Button__StyledButton
                bsStyle="default"
                disabled={true}
                onClick={[Function]}
              >
                <StyledComponent
                  bsStyle="default"
                  disabled={true}
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "SIZES": Array [
                        "large",
                        "small",
                        "xsmall",
                      ],
                      "STYLES": Array [
                        "success",
                        "warning",
                        "danger",
                        "info",
                        "default",
                        "primary",
                        "link",
                      ],
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "Button__StyledButton-c9cbmb-0",
                        "isStatic": false,
                        "lastClassName": "kRDLih",
                        "rules": Array [
                          [Function],
                        ],
                      },
                      "displayName": "Button__StyledButton",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "Button__StyledButton-c9cbmb-0",
                      "target": [Function],
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                  onClick={[Function]}
                >
                  <Button
                    active={false}
                    block={false}
                    bsClass="btn"
                    bsStyle="default"
                    className="Button__StyledButton-c9cbmb-0 kRDLih"
                    disabled={true}
                    onClick={[Function]}
                  >
                    <button
                      className="Button__StyledButton-c9cbmb-0 kRDLih btn btn-default"
                      disabled={true}
                      onClick={[Function]}
                      type="button"
                    >
                      Delete
                    </button>
                  </Button>
                </StyledComponent>
              </Button__StyledButton>
            </ForwardRef>
            <ForwardRef
              active={false}
              bsStyle="default"
              onClick={[Function]}
            >
              <Button__StyledButton
                bsStyle="default"
                onClick={[Function]}
              >
                <StyledComponent
                  bsStyle="default"
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "SIZES": Array [
                        "large",
                        "small",
                        "xsmall",
                      ],
                      "STYLES": Array [
                        "success",
                        "warning",
                        "danger",
                        "info",
                        "default",
                        "primary",
                        "link",
                      ],
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "Button__StyledButton-c9cbmb-0",
                        "isStatic": false,
                        "lastClassName": "kRDLih",
                        "rules": Array [
                          [Function],
                        ],
                      },
                      "displayName": "Button__StyledButton",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "Button__StyledButton-c9cbmb-0",
                      "target": [Function],
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                  onClick={[Function]}
                >
                  <Button
                    active={false}
                    block={false}
                    bsClass="btn"
                    bsStyle="default"
                    className="Button__StyledButton-c9cbmb-0 kRDLih"
                    disabled={false}
                    onClick={[Function]}
                  >
                    <button
                      className="Button__StyledButton-c9cbmb-0 kRDLih btn btn-default"
                      disabled={false}
                      onClick={[Function]}
                      type="button"
                    >
                      Cancel
                    </button>
                  </Button>
                </StyledComponent>
              </Button__StyledButton>
            </ForwardRef>
          </div>
        </ModalFooter>
      </div>
    </div>
  </div>
</ModalDialog>
`;

exports[`BookmarkList render the BookmarkList should render with views 1`] = `
<ModalDialog
  bsClass="modal"
  className="fade in"
  onClick={[Function]}
  role="document"
  style={
    Object {
      "paddingLeft": undefined,
      "paddingRight": 0,
    }
  }
  tabIndex="-1"
>
  <div
    className="fade in modal"
    onClick={[Function]}
    role="dialog"
    style={
      Object {
        "display": "block",
        "paddingLeft": undefined,
        "paddingRight": 0,
      }
    }
    tabIndex="-1"
  >
    <div
      className="modal-dialog"
    >
      <div
        className="modal-content"
        role="document"
      >
        <ModalBody
          bsClass="modal-body"
          componentClass="div"
        >
          <div
            className="modal-body"
          >
            <SearchForm
              buttonLeftMargin={5}
              label={null}
              loadingLabel="Loading..."
              onQueryChange={[Function]}
              onReset={[Function]}
              onSearch={[Function]}
              placeholder="Enter search query..."
              query=""
              queryHelpComponent={null}
              queryWidth="auto"
              resetButtonLabel="Reset"
              searchBsStyle="default"
              searchButtonLabel="Search"
              topMargin={15}
              useLoadingState={false}
              wrapperClass="search"
            >
              <div
                className="search"
                style={
                  Object {
                    "marginTop": 15,
                  }
                }
              >
                <form
                  className="form-inline"
                  onSubmit={[Function]}
                >
                  <div
                    className="form-group has-feedback"
                  >
                    <input
                      autoComplete="off"
                      className="query form-control"
                      id="common-search-form-query-input"
                      onChange={[Function]}
                      placeholder="Enter search query..."
                      spellCheck="false"
                      style={
                        Object {
                          "width": "auto",
                        }
                      }
                      type="text"
                      value=""
                    />
                  </div>
                  <div
                    className="form-group"
                    style={
                      Object {
                        "marginLeft": 5,
                      }
                    }
                  >
                    <ForwardRef
                      active={false}
                      bsStyle="default"
                      className="submit-button"
                      disabled={false}
                      type="submit"
                    >
                      <Button__StyledButton
                        bsStyle="default"
                        className="submit-button"
                        disabled={false}
                        type="submit"
                      >
                        <StyledComponent
                          bsStyle="default"
                          className="submit-button"
                          disabled={false}
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "SIZES": Array [
                                "large",
                                "small",
                                "xsmall",
                              ],
                              "STYLES": Array [
                                "success",
                                "warning",
                                "danger",
                                "info",
                                "default",
                                "primary",
                                "link",
                              ],
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "Button__StyledButton-c9cbmb-0",
                                "isStatic": false,
                                "lastClassName": "kRDLih",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Button__StyledButton",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "Button__StyledButton-c9cbmb-0",
                              "target": [Function],
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          type="submit"
                        >
                          <Button
                            active={false}
                            block={false}
                            bsClass="btn"
                            bsStyle="default"
                            className="submit-button Button__StyledButton-c9cbmb-0 kRDLih"
                            disabled={false}
                            type="submit"
                          >
                            <button
                              className="submit-button Button__StyledButton-c9cbmb-0 kRDLih btn btn-default"
                              disabled={false}
                              type="submit"
                            >
                              Search
                            </button>
                          </Button>
                        </StyledComponent>
                      </Button__StyledButton>
                    </ForwardRef>
                  </div>
                  <div
                    className="form-group"
                    style={
                      Object {
                        "marginLeft": 5,
                      }
                    }
                  >
                    <ForwardRef
                      active={false}
                      bsStyle="default"
                      className="reset-button"
                      onClick={[Function]}
                      type="reset"
                    >
                      <Button__StyledButton
                        bsStyle="default"
                        className="reset-button"
                        onClick={[Function]}
                        type="reset"
                      >
                        <StyledComponent
                          bsStyle="default"
                          className="reset-button"
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "SIZES": Array [
                                "large",
                                "small",
                                "xsmall",
                              ],
                              "STYLES": Array [
                                "success",
                                "warning",
                                "danger",
                                "info",
                                "default",
                                "primary",
                                "link",
                              ],
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "Button__StyledButton-c9cbmb-0",
                                "isStatic": false,
                                "lastClassName": "kRDLih",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "Button__StyledButton",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "Button__StyledButton-c9cbmb-0",
                              "target": [Function],
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          onClick={[Function]}
                          type="reset"
                        >
                          <Button
                            active={false}
                            block={false}
                            bsClass="btn"
                            bsStyle="default"
                            className="reset-button Button__StyledButton-c9cbmb-0 kRDLih"
                            disabled={false}
                            onClick={[Function]}
                            type="reset"
                          >
                            <button
                              className="reset-button Button__StyledButton-c9cbmb-0 kRDLih btn btn-default"
                              disabled={false}
                              onClick={[Function]}
                              type="reset"
                            >
                              Reset
                            </button>
                          </Button>
                        </StyledComponent>
                      </Button__StyledButton>
                    </ForwardRef>
                  </div>
                </form>
              </div>
            </SearchForm>
            <PaginatedList
              activePage={1}
              onChange={[Function]}
              pageSize={5}
              pageSizes={
                Array [
                  5,
                  10,
                  15,
                ]
              }
              showPageSizeSelect={true}
              totalItems={1}
            >
              <span>
                <div
                  className="form-inline page-size"
                  style={
                    Object {
                      "float": "right",
                    }
                  }
                >
                  <Input
                    addonAfter={null}
                    bsSize="small"
                    bsStyle={null}
                    buttonAfter={null}
                    help=""
                    id="page-size"
                    label="Show:"
                    onChange={[Function]}
                    placeholder=""
                    type="select"
                    value={5}
                  >
                    <FormGroup
                      bsClass="form-group"
                      controlId="page-size"
                      validationState={null}
                    >
                      <div
                        className="form-group"
                      >
                        <ControlLabel
                          bsClass="control-label"
                          srOnly={false}
                        >
                          <label
                            className="control-label"
                            htmlFor="page-size"
                          >
                            Show:
                          </label>
                        </ControlLabel>
                        <InputWrapper>
                          <span>
                            <FormControl
                              bsClass="form-control"
                              bsSize="small"
                              componentClass="select"
                              inputRef={[Function]}
                              label="Show:"
                              name="page-size"
                              onChange={[Function]}
                              placeholder=""
                              type="select"
                              value={5}
                            >
                              <select
                                className="form-control input-sm"
                                id="page-size"
                                label="Show:"
                                name="page-size"
                                onChange={[Function]}
                                placeholder=""
                                type="select"
                                value={5}
                              >
                                <option
                                  key="option-5"
                                  value={5}
                                >
                                  5
                                </option>
                                <option
                                  key="option-10"
                                  value={10}
                                >
                                  10
                                </option>
                                <option
                                  key="option-15"
                                  value={15}
                                >
                                  15
                                </option>
                              </select>
                            </FormControl>
                          </span>
                        </InputWrapper>
                      </div>
                    </FormGroup>
                  </Input>
                </div>
                <ListGroup
                  bsClass="list-group"
                >
                  <div
                    className="list-group"
                  >
                    <ListGroupItem
                      active={false}
                      bsClass="list-group-item"
                      header="test-0"
                      key="foo-bar-0"
                      listItem={false}
                      onClick={[Function]}
                    >
                      <button
                        className="list-group-item"
                        onClick={[Function]}
                        type="button"
                      >
                        <h4
                          className="list-group-item-heading"
                        >
                          test-0
                        </h4>
                        <p
                          className="list-group-item-text"
                        />
                      </button>
                    </ListGroupItem>
                  </div>
                </ListGroup>
                <div
                  className="text-center"
                >
                  <Pagination
                    activePage={1}
                    boundaryLinks={false}
                    bsClass="pagination"
                    bsSize="small"
                    ellipsis={true}
                    first={true}
                    items={1}
                    last={true}
                    maxButtons={10}
                    next={true}
                    onSelect={[Function]}
                    prev={true}
                  >
                    <ul
                      className="pagination pagination-sm"
                    >
                      <PaginationButton
                        active={false}
                        componentClass={[Function]}
                        disabled={true}
                        eventKey={1}
                        onSelect={[Function]}
                      >
                        <li
                          className="disabled"
                        >
                          <SafeAnchor
                            componentClass="a"
                            disabled={true}
                            onClick={[Function]}
                          >
                            <a
                              href="#"
                              onClick={[Function]}
                              onKeyDown={[Function]}
                              role="button"
                              style={
                                Object {
                                  "pointerEvents": "none",
                                }
                              }
                              tabIndex={-1}
                            >
                              <span
                                aria-label="First"
                              >
                                «
                              </span>
                            </a>
                          </SafeAnchor>
                        </li>
                      </PaginationButton>
                      <PaginationButton
                        active={false}
                        componentClass={[Function]}
                        disabled={true}
                        eventKey={0}
                        onSelect={[Function]}
                      >
                        <li
                          className="disabled"
                        >
                          <SafeAnchor
                            componentClass="a"
                            disabled={true}
                            onClick={[Function]}
                          >
                            <a
                              href="#"
                              onClick={[Function]}
                              onKeyDown={[Function]}
                              role="button"
                              style={
                                Object {
                                  "pointerEvents": "none",
                                }
                              }
                              tabIndex={-1}
                            >
                              <span
                                aria-label="Previous"
                              >
                                ‹
                              </span>
                            </a>
                          </SafeAnchor>
                        </li>
                      </PaginationButton>
                      <PaginationButton
                        active={true}
                        componentClass={[Function]}
                        disabled={false}
                        eventKey={1}
                        key="1"
                        onSelect={[Function]}
                      >
                        <li
                          className="active"
                        >
                          <SafeAnchor
                            componentClass="a"
                            disabled={false}
                            onClick={[Function]}
                          >
                            <a
                              href="#"
                              onClick={[Function]}
                              onKeyDown={[Function]}
                              role="button"
                            >
                              1
                            </a>
                          </SafeAnchor>
                        </li>
                      </PaginationButton>
                      <PaginationButton
                        active={false}
                        componentClass={[Function]}
                        disabled={true}
                        eventKey={2}
                        onSelect={[Function]}
                      >
                        <li
                          className="disabled"
                        >
                          <SafeAnchor
                            componentClass="a"
                            disabled={true}
                            onClick={[Function]}
                          >
                            <a
                              href="#"
                              onClick={[Function]}
                              onKeyDown={[Function]}
                              role="button"
                              style={
                                Object {
                                  "pointerEvents": "none",
                                }
                              }
                              tabIndex={-1}
                            >
                              <span
                                aria-label="Next"
                              >
                                ›
                              </span>
                            </a>
                          </SafeAnchor>
                        </li>
                      </PaginationButton>
                      <PaginationButton
                        active={false}
                        componentClass={[Function]}
                        disabled={true}
                        eventKey={1}
                        onSelect={[Function]}
                      >
                        <li
                          className="disabled"
                        >
                          <SafeAnchor
                            componentClass="a"
                            disabled={true}
                            onClick={[Function]}
                          >
                            <a
                              href="#"
                              onClick={[Function]}
                              onKeyDown={[Function]}
                              role="button"
                              style={
                                Object {
                                  "pointerEvents": "none",
                                }
                              }
                              tabIndex={-1}
                            >
                              <span
                                aria-label="Last"
                              >
                                »
                              </span>
                            </a>
                          </SafeAnchor>
                        </li>
                      </PaginationButton>
                    </ul>
                  </Pagination>
                </div>
              </span>
            </PaginatedList>
          </div>
        </ModalBody>
        <ModalFooter
          bsClass="modal-footer"
          componentClass="div"
        >
          <div
            className="modal-footer"
          >
            <ForwardRef
              active={false}
              bsStyle="primary"
              disabled={true}
              onClick={[Function]}
            >
              <Button__StyledButton
                bsStyle="primary"
                disabled={true}
                onClick={[Function]}
              >
                <StyledComponent
                  bsStyle="primary"
                  disabled={true}
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "SIZES": Array [
                        "large",
                        "small",
                        "xsmall",
                      ],
                      "STYLES": Array [
                        "success",
                        "warning",
                        "danger",
                        "info",
                        "default",
                        "primary",
                        "link",
                      ],
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "Button__StyledButton-c9cbmb-0",
                        "isStatic": false,
                        "lastClassName": "kRDLih",
                        "rules": Array [
                          [Function],
                        ],
                      },
                      "displayName": "Button__StyledButton",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "Button__StyledButton-c9cbmb-0",
                      "target": [Function],
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                  onClick={[Function]}
                >
                  <Button
                    active={false}
                    block={false}
                    bsClass="btn"
                    bsStyle="primary"
                    className="Button__StyledButton-c9cbmb-0 kRDLih"
                    disabled={true}
                    onClick={[Function]}
                  >
                    <button
                      className="Button__StyledButton-c9cbmb-0 kRDLih btn btn-primary"
                      disabled={true}
                      onClick={[Function]}
                      type="button"
                    >
                      Load
                    </button>
                  </Button>
                </StyledComponent>
              </Button__StyledButton>
            </ForwardRef>
            <ForwardRef
              active={false}
              bsStyle="default"
              disabled={true}
              onClick={[Function]}
            >
              <Button__StyledButton
                bsStyle="default"
                disabled={true}
                onClick={[Function]}
              >
                <StyledComponent
                  bsStyle="default"
                  disabled={true}
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "SIZES": Array [
                        "large",
                        "small",
                        "xsmall",
                      ],
                      "STYLES": Array [
                        "success",
                        "warning",
                        "danger",
                        "info",
                        "default",
                        "primary",
                        "link",
                      ],
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "Button__StyledButton-c9cbmb-0",
                        "isStatic": false,
                        "lastClassName": "kRDLih",
                        "rules": Array [
                          [Function],
                        ],
                      },
                      "displayName": "Button__StyledButton",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "Button__StyledButton-c9cbmb-0",
                      "target": [Function],
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                  onClick={[Function]}
                >
                  <Button
                    active={false}
                    block={false}
                    bsClass="btn"
                    bsStyle="default"
                    className="Button__StyledButton-c9cbmb-0 kRDLih"
                    disabled={true}
                    onClick={[Function]}
                  >
                    <button
                      className="Button__StyledButton-c9cbmb-0 kRDLih btn btn-default"
                      disabled={true}
                      onClick={[Function]}
                      type="button"
                    >
                      Delete
                    </button>
                  </Button>
                </StyledComponent>
              </Button__StyledButton>
            </ForwardRef>
            <ForwardRef
              active={false}
              bsStyle="default"
              onClick={[Function]}
            >
              <Button__StyledButton
                bsStyle="default"
                onClick={[Function]}
              >
                <StyledComponent
                  bsStyle="default"
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "SIZES": Array [
                        "large",
                        "small",
                        "xsmall",
                      ],
                      "STYLES": Array [
                        "success",
                        "warning",
                        "danger",
                        "info",
                        "default",
                        "primary",
                        "link",
                      ],
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "Button__StyledButton-c9cbmb-0",
                        "isStatic": false,
                        "lastClassName": "kRDLih",
                        "rules": Array [
                          [Function],
                        ],
                      },
                      "displayName": "Button__StyledButton",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "Button__StyledButton-c9cbmb-0",
                      "target": [Function],
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                  onClick={[Function]}
                >
                  <Button
                    active={false}
                    block={false}
                    bsClass="btn"
                    bsStyle="default"
                    className="Button__StyledButton-c9cbmb-0 kRDLih"
                    disabled={false}
                    onClick={[Function]}
                  >
                    <button
                      className="Button__StyledButton-c9cbmb-0 kRDLih btn btn-default"
                      disabled={false}
                      onClick={[Function]}
                      type="button"
                    >
                      Cancel
                    </button>
                  </Button>
                </StyledComponent>
              </Button__StyledButton>
            </ForwardRef>
          </div>
        </ModalFooter>
      </div>
    </div>
  </div>
</ModalDialog>
`;
