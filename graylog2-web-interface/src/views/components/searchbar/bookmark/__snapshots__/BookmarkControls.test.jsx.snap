// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`BookmarkControls render the BookmarkControls should render not dirty 1`] = `
<ConnectStoresWrapper[BookmarkControls] stores=viewStoreState
  viewStoreState={
    Object {
      "activeQuery": "",
      "dirty": false,
      "view": Object {
        "created_at": undefined,
        "description": "description",
        "id": "id-beef",
        "owner": undefined,
        "properties": undefined,
        "search_id": "id-beef",
        "state": undefined,
        "summary": undefined,
        "title": "title",
        "type": undefined,
      },
    }
  }
>
  <BookmarkControls
    viewStoreState={
      Object {
        "activeQuery": "",
        "dirty": false,
        "view": Object {
          "created_at": undefined,
          "description": "description",
          "id": "id-beef",
          "owner": undefined,
          "properties": undefined,
          "search_id": "id-beef",
          "state": undefined,
          "summary": undefined,
          "title": "title",
          "type": undefined,
        },
      }
    }
  >
    <div
      className="position pull-right"
    >
      <ButtonGroup
        block={false}
        bsClass="btn-group"
        justified={false}
        vertical={false}
      >
        <div
          className="btn-group"
        >
          <Button
            active={false}
            block={false}
            bsClass="btn"
            bsStyle="default"
            disabled={true}
            onClick={[Function]}
            title="Empty search"
          >
            <button
              className="btn btn-default"
              disabled={true}
              onClick={[Function]}
              title="Empty search"
              type="button"
            >
              <i
                className="fa fa-eraser"
              />
            </button>
          </Button>
          <Button
            active={false}
            block={false}
            bsClass="btn"
            bsStyle="default"
            disabled={false}
            onClick={[Function]}
            title="Save search"
          >
            <button
              className="btn btn-default"
              disabled={false}
              onClick={[Function]}
              title="Save search"
              type="button"
            >
              <i
                className="fa fa-bookmark-o"
                style={
                  Object {
                    "color": "#007bff",
                  }
                }
              />
            </button>
          </Button>
          <Button
            active={false}
            block={false}
            bsClass="btn"
            bsStyle="default"
            disabled={false}
            onClick={[Function]}
            title="List of saved searches"
          >
            <button
              className="btn btn-default"
              disabled={false}
              onClick={[Function]}
              title="List of saved searches"
              type="button"
            >
              <i
                className="fa fa-folder-o"
              />
            </button>
          </Button>
          <ConnectStoresWrapper[BookmarkList] stores=views
            deleteBookmark={[Function]}
            loadBookmark={[Function]}
            showModal={false}
            toggleModal={[Function]}
          >
            <BookmarkList
              deleteBookmark={[Function]}
              loadBookmark={[Function]}
              showModal={false}
              toggleModal={[Function]}
              views={
                Object {
                  "list": undefined,
                  "pagination": Object {
                    "count": 0,
                    "page": 1,
                    "perPage": 10,
                    "total": 0,
                  },
                }
              }
            >
              <Modal
                animation={true}
                autoFocus={true}
                backdrop={true}
                bsClass="modal"
                dialogComponentClass={[Function]}
                enforceFocus={true}
                keyboard={true}
                manager={
                  ModalManager {
                    "add": [Function],
                    "containers": Array [],
                    "data": Array [],
                    "handleContainerOverflow": true,
                    "hideSiblingNodes": true,
                    "isTopModal": [Function],
                    "modals": Array [],
                    "remove": [Function],
                  }
                }
                onHide={[Function]}
                renderBackdrop={[Function]}
                restoreFocus={true}
                show={false}
              >
                <Modal
                  autoFocus={true}
                  backdrop={true}
                  backdropClassName="modal-backdrop"
                  backdropTransitionTimeout={150}
                  containerClassName="modal-open"
                  dialogTransitionTimeout={300}
                  enforceFocus={true}
                  keyboard={true}
                  manager={
                    ModalManager {
                      "add": [Function],
                      "containers": Array [],
                      "data": Array [],
                      "handleContainerOverflow": true,
                      "hideSiblingNodes": true,
                      "isTopModal": [Function],
                      "modals": Array [],
                      "remove": [Function],
                    }
                  }
                  onEntering={[Function]}
                  onExited={[Function]}
                  onHide={[Function]}
                  renderBackdrop={[Function]}
                  restoreFocus={true}
                  show={false}
                  transition={[Function]}
                />
              </Modal>
            </BookmarkList>
          </ConnectStoresWrapper[BookmarkList] stores=views>
        </div>
      </ButtonGroup>
    </div>
  </BookmarkControls>
</ConnectStoresWrapper[BookmarkControls] stores=viewStoreState>
`;

exports[`BookmarkControls render the BookmarkControls should render with context 1`] = `
<ConnectStoresWrapper[BookmarkControls] stores=viewStoreState
  viewStoreState={
    Object {
      "activeQuery": "",
      "dirty": true,
      "view": Object {
        "created_at": undefined,
        "description": "description",
        "id": "id-beef",
        "owner": undefined,
        "properties": undefined,
        "search_id": "id-beef",
        "state": undefined,
        "summary": undefined,
        "title": "title",
        "type": undefined,
      },
    }
  }
>
  <BookmarkControls
    viewStoreState={
      Object {
        "activeQuery": "",
        "dirty": true,
        "view": Object {
          "created_at": undefined,
          "description": "description",
          "id": "id-beef",
          "owner": undefined,
          "properties": undefined,
          "search_id": "id-beef",
          "state": undefined,
          "summary": undefined,
          "title": "title",
          "type": undefined,
        },
      }
    }
  >
    <div
      className="position pull-right"
    >
      <ButtonGroup
        block={false}
        bsClass="btn-group"
        justified={false}
        vertical={false}
      >
        <div
          className="btn-group"
        >
          <Button
            active={false}
            block={false}
            bsClass="btn"
            bsStyle="default"
            disabled={false}
            onClick={[Function]}
            title="Empty search"
          >
            <button
              className="btn btn-default"
              disabled={false}
              onClick={[Function]}
              title="Empty search"
              type="button"
            >
              <i
                className="fa fa-eraser"
              />
            </button>
          </Button>
          <Button
            active={false}
            block={false}
            bsClass="btn"
            bsStyle="default"
            disabled={false}
            onClick={[Function]}
            title="Unsaved changes"
          >
            <button
              className="btn btn-default"
              disabled={false}
              onClick={[Function]}
              title="Unsaved changes"
              type="button"
            >
              <i
                className="fa fa-bookmark"
                style={
                  Object {
                    "color": "#ffc107",
                  }
                }
              />
            </button>
          </Button>
          <Button
            active={false}
            block={false}
            bsClass="btn"
            bsStyle="default"
            disabled={false}
            onClick={[Function]}
            title="List of saved searches"
          >
            <button
              className="btn btn-default"
              disabled={false}
              onClick={[Function]}
              title="List of saved searches"
              type="button"
            >
              <i
                className="fa fa-folder-o"
              />
            </button>
          </Button>
          <ConnectStoresWrapper[BookmarkList] stores=views
            deleteBookmark={[Function]}
            loadBookmark={[Function]}
            showModal={false}
            toggleModal={[Function]}
          >
            <BookmarkList
              deleteBookmark={[Function]}
              loadBookmark={[Function]}
              showModal={false}
              toggleModal={[Function]}
              views={
                Object {
                  "list": undefined,
                  "pagination": Object {
                    "count": 0,
                    "page": 1,
                    "perPage": 10,
                    "total": 0,
                  },
                }
              }
            >
              <Modal
                animation={true}
                autoFocus={true}
                backdrop={true}
                bsClass="modal"
                dialogComponentClass={[Function]}
                enforceFocus={true}
                keyboard={true}
                manager={
                  ModalManager {
                    "add": [Function],
                    "containers": Array [],
                    "data": Array [],
                    "handleContainerOverflow": true,
                    "hideSiblingNodes": true,
                    "isTopModal": [Function],
                    "modals": Array [],
                    "remove": [Function],
                  }
                }
                onHide={[Function]}
                renderBackdrop={[Function]}
                restoreFocus={true}
                show={false}
              >
                <Modal
                  autoFocus={true}
                  backdrop={true}
                  backdropClassName="modal-backdrop"
                  backdropTransitionTimeout={150}
                  containerClassName="modal-open"
                  dialogTransitionTimeout={300}
                  enforceFocus={true}
                  keyboard={true}
                  manager={
                    ModalManager {
                      "add": [Function],
                      "containers": Array [],
                      "data": Array [],
                      "handleContainerOverflow": true,
                      "hideSiblingNodes": true,
                      "isTopModal": [Function],
                      "modals": Array [],
                      "remove": [Function],
                    }
                  }
                  onEntering={[Function]}
                  onExited={[Function]}
                  onHide={[Function]}
                  renderBackdrop={[Function]}
                  restoreFocus={true}
                  show={false}
                  transition={[Function]}
                />
              </Modal>
            </BookmarkList>
          </ConnectStoresWrapper[BookmarkList] stores=views>
        </div>
      </ButtonGroup>
    </div>
  </BookmarkControls>
</ConnectStoresWrapper[BookmarkControls] stores=viewStoreState>
`;
