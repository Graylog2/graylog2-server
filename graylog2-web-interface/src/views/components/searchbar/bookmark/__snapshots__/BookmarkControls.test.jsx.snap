// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`BookmarkControls render the BookmarkControls should render dirty 1`] = `
<ConnectStoresWrapper[BookmarkControls] stores=viewStoreState
  viewStoreState={
    Object {
      "activeQuery": "",
      "dirty": true,
      "view": Object {
        "created_at": undefined,
        "description": "description",
        "id": "id-beef",
        "owner": undefined,
        "properties": undefined,
        "search_id": "id-beef",
        "state": undefined,
        "summary": undefined,
        "title": "title",
        "type": undefined,
      },
    }
  }
>
  <BookmarkControls
    viewStoreState={
      Object {
        "activeQuery": "",
        "dirty": true,
        "view": Object {
          "created_at": undefined,
          "description": "description",
          "id": "id-beef",
          "owner": undefined,
          "properties": undefined,
          "search_id": "id-beef",
          "state": undefined,
          "summary": undefined,
          "title": "title",
          "type": undefined,
        },
      }
    }
  >
    <div
      className="pull-right"
    >
      <ButtonGroup
        block={false}
        bsClass="btn-group"
        justified={false}
        vertical={false}
      >
        <div
          className="btn-group"
        >
          <ForwardRef
            bsStyle="default"
            onClick={[Function]}
            title="Export to new dashboard"
          >
            <Button
              bsStyle="default"
              onClick={[Function]}
              title="Export to new dashboard"
            >
              <StyledComponent
                bsStyle="default"
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "SIZES": Array [
                      "large",
                      "small",
                      "xsmall",
                    ],
                    "STYLES": Array [
                      "success",
                      "warning",
                      "danger",
                      "info",
                      "default",
                      "primary",
                      "link",
                    ],
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "Button-c9cbmb-0",
                      "isStatic": false,
                      "lastClassName": "GLfOY",
                      "rules": Array [
                        [Function],
                      ],
                    },
                    "displayName": "Button",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "Button-c9cbmb-0",
                    "target": [Function],
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
                onClick={[Function]}
                title="Export to new dashboard"
              >
                <Button
                  active={false}
                  block={false}
                  bsClass="btn"
                  bsStyle="default"
                  className="Button-c9cbmb-0 GLfOY"
                  disabled={false}
                  onClick={[Function]}
                  title="Export to new dashboard"
                >
                  <button
                    className="Button-c9cbmb-0 GLfOY btn btn-default"
                    disabled={false}
                    onClick={[Function]}
                    title="Export to new dashboard"
                    type="button"
                  >
                    <ForwardRef
                      fixedWidth={false}
                      inverse={false}
                      name="dashboard"
                      pulse={false}
                      spin={false}
                    >
                      <i
                        className="fa fa-dashboard"
                      />
                    </ForwardRef>
                  </button>
                </Button>
              </StyledComponent>
            </Button>
          </ForwardRef>
          <ForwardRef
            bsStyle="default"
            disabled={false}
            onClick={[Function]}
            title="Empty search"
          >
            <Button
              bsStyle="default"
              disabled={false}
              onClick={[Function]}
              title="Empty search"
            >
              <StyledComponent
                bsStyle="default"
                disabled={false}
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "SIZES": Array [
                      "large",
                      "small",
                      "xsmall",
                    ],
                    "STYLES": Array [
                      "success",
                      "warning",
                      "danger",
                      "info",
                      "default",
                      "primary",
                      "link",
                    ],
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "Button-c9cbmb-0",
                      "isStatic": false,
                      "lastClassName": "GLfOY",
                      "rules": Array [
                        [Function],
                      ],
                    },
                    "displayName": "Button",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "Button-c9cbmb-0",
                    "target": [Function],
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
                onClick={[Function]}
                title="Empty search"
              >
                <Button
                  active={false}
                  block={false}
                  bsClass="btn"
                  bsStyle="default"
                  className="Button-c9cbmb-0 GLfOY"
                  disabled={false}
                  onClick={[Function]}
                  title="Empty search"
                >
                  <button
                    className="Button-c9cbmb-0 GLfOY btn btn-default"
                    disabled={false}
                    onClick={[Function]}
                    title="Empty search"
                    type="button"
                  >
                    <ForwardRef
                      fixedWidth={false}
                      inverse={false}
                      name="eraser"
                      pulse={false}
                      spin={false}
                    >
                      <i
                        className="fa fa-eraser"
                      />
                    </ForwardRef>
                  </button>
                </Button>
              </StyledComponent>
            </Button>
          </ForwardRef>
          <ForwardRef
            bsStyle="default"
            onClick={[Function]}
            title="Unsaved changes"
          >
            <Button
              bsStyle="default"
              onClick={[Function]}
              title="Unsaved changes"
            >
              <StyledComponent
                bsStyle="default"
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "SIZES": Array [
                      "large",
                      "small",
                      "xsmall",
                    ],
                    "STYLES": Array [
                      "success",
                      "warning",
                      "danger",
                      "info",
                      "default",
                      "primary",
                      "link",
                    ],
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "Button-c9cbmb-0",
                      "isStatic": false,
                      "lastClassName": "GLfOY",
                      "rules": Array [
                        [Function],
                      ],
                    },
                    "displayName": "Button",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "Button-c9cbmb-0",
                    "target": [Function],
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={[Function]}
                onClick={[Function]}
                title="Unsaved changes"
              >
                <Button
                  active={false}
                  block={false}
                  bsClass="btn"
                  bsStyle="default"
                  className="Button-c9cbmb-0 GLfOY"
                  disabled={false}
                  onClick={[Function]}
                  title="Unsaved changes"
                >
                  <button
                    className="Button-c9cbmb-0 GLfOY btn btn-default"
                    disabled={false}
                    onClick={[Function]}
                    title="Unsaved changes"
                    type="button"
                  >
                    <ForwardRef
                      fixedWidth={false}
                      inverse={false}
                      name="bookmark"
                      pulse={false}
                      spin={false}
                      style={
                        Object {
                          "color": "#ffc107",
                        }
                      }
                    >
                      <i
                        className="fa fa-bookmark"
                        style={
                          Object {
                            "color": "#ffc107",
                          }
                        }
                      />
                    </ForwardRef>
                  </button>
                </Button>
              </StyledComponent>
            </Button>
          </ForwardRef>
          <ForwardRef
            bsStyle="default"
            onClick={[Function]}
            title="List of saved searches"
          >
            <Button
              bsStyle="default"
              onClick={[Function]}
              title="List of saved searches"
            >
              <StyledComponent
                bsStyle="default"
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "SIZES": Array [
                      "large",
                      "small",
                      "xsmall",
                    ],
                    "STYLES": Array [
                      "success",
                      "warning",
                      "danger",
                      "info",
                      "default",
                      "primary",
                      "link",
                    ],
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "Button-c9cbmb-0",
                      "isStatic": false,
                      "lastClassName": "GLfOY",
                      "rules": Array [
                        [Function],
                      ],
                    },
                    "displayName": "Button",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "Button-c9cbmb-0",
                    "target": [Function],
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
                onClick={[Function]}
                title="List of saved searches"
              >
                <Button
                  active={false}
                  block={false}
                  bsClass="btn"
                  bsStyle="default"
                  className="Button-c9cbmb-0 GLfOY"
                  disabled={false}
                  onClick={[Function]}
                  title="List of saved searches"
                >
                  <button
                    className="Button-c9cbmb-0 GLfOY btn btn-default"
                    disabled={false}
                    onClick={[Function]}
                    title="List of saved searches"
                    type="button"
                  >
                    <ForwardRef
                      fixedWidth={false}
                      inverse={false}
                      name="folder-o"
                      pulse={false}
                      spin={false}
                    >
                      <i
                        className="fa fa-folder-o"
                      />
                    </ForwardRef>
                  </button>
                </Button>
              </StyledComponent>
            </Button>
          </ForwardRef>
        </div>
      </ButtonGroup>
    </div>
  </BookmarkControls>
</ConnectStoresWrapper[BookmarkControls] stores=viewStoreState>
`;

exports[`BookmarkControls render the BookmarkControls should render not dirty 1`] = `
<ConnectStoresWrapper[BookmarkControls] stores=viewStoreState
  viewStoreState={
    Object {
      "activeQuery": "",
      "dirty": false,
      "view": Object {
        "created_at": undefined,
        "description": "description",
        "id": "id-beef",
        "owner": undefined,
        "properties": undefined,
        "search_id": "id-beef",
        "state": undefined,
        "summary": undefined,
        "title": "title",
        "type": undefined,
      },
    }
  }
>
  <BookmarkControls
    viewStoreState={
      Object {
        "activeQuery": "",
        "dirty": false,
        "view": Object {
          "created_at": undefined,
          "description": "description",
          "id": "id-beef",
          "owner": undefined,
          "properties": undefined,
          "search_id": "id-beef",
          "state": undefined,
          "summary": undefined,
          "title": "title",
          "type": undefined,
        },
      }
    }
  >
    <div
      className="pull-right"
    >
      <ButtonGroup
        block={false}
        bsClass="btn-group"
        justified={false}
        vertical={false}
      >
        <div
          className="btn-group"
        >
          <ForwardRef
            bsStyle="default"
            onClick={[Function]}
            title="Export to new dashboard"
          >
            <Button
              bsStyle="default"
              onClick={[Function]}
              title="Export to new dashboard"
            >
              <StyledComponent
                bsStyle="default"
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "SIZES": Array [
                      "large",
                      "small",
                      "xsmall",
                    ],
                    "STYLES": Array [
                      "success",
                      "warning",
                      "danger",
                      "info",
                      "default",
                      "primary",
                      "link",
                    ],
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "Button-c9cbmb-0",
                      "isStatic": false,
                      "lastClassName": "GLfOY",
                      "rules": Array [
                        [Function],
                      ],
                    },
                    "displayName": "Button",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "Button-c9cbmb-0",
                    "target": [Function],
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
                onClick={[Function]}
                title="Export to new dashboard"
              >
                <Button
                  active={false}
                  block={false}
                  bsClass="btn"
                  bsStyle="default"
                  className="Button-c9cbmb-0 GLfOY"
                  disabled={false}
                  onClick={[Function]}
                  title="Export to new dashboard"
                >
                  <button
                    className="Button-c9cbmb-0 GLfOY btn btn-default"
                    disabled={false}
                    onClick={[Function]}
                    title="Export to new dashboard"
                    type="button"
                  >
                    <ForwardRef
                      fixedWidth={false}
                      inverse={false}
                      name="dashboard"
                      pulse={false}
                      spin={false}
                    >
                      <i
                        className="fa fa-dashboard"
                      />
                    </ForwardRef>
                  </button>
                </Button>
              </StyledComponent>
            </Button>
          </ForwardRef>
          <ForwardRef
            bsStyle="default"
            disabled={false}
            onClick={[Function]}
            title="Empty search"
          >
            <Button
              bsStyle="default"
              disabled={false}
              onClick={[Function]}
              title="Empty search"
            >
              <StyledComponent
                bsStyle="default"
                disabled={false}
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "SIZES": Array [
                      "large",
                      "small",
                      "xsmall",
                    ],
                    "STYLES": Array [
                      "success",
                      "warning",
                      "danger",
                      "info",
                      "default",
                      "primary",
                      "link",
                    ],
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "Button-c9cbmb-0",
                      "isStatic": false,
                      "lastClassName": "GLfOY",
                      "rules": Array [
                        [Function],
                      ],
                    },
                    "displayName": "Button",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "Button-c9cbmb-0",
                    "target": [Function],
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
                onClick={[Function]}
                title="Empty search"
              >
                <Button
                  active={false}
                  block={false}
                  bsClass="btn"
                  bsStyle="default"
                  className="Button-c9cbmb-0 GLfOY"
                  disabled={false}
                  onClick={[Function]}
                  title="Empty search"
                >
                  <button
                    className="Button-c9cbmb-0 GLfOY btn btn-default"
                    disabled={false}
                    onClick={[Function]}
                    title="Empty search"
                    type="button"
                  >
                    <ForwardRef
                      fixedWidth={false}
                      inverse={false}
                      name="eraser"
                      pulse={false}
                      spin={false}
                    >
                      <i
                        className="fa fa-eraser"
                      />
                    </ForwardRef>
                  </button>
                </Button>
              </StyledComponent>
            </Button>
          </ForwardRef>
          <ForwardRef
            bsStyle="default"
            onClick={[Function]}
            title="Saved search"
          >
            <Button
              bsStyle="default"
              onClick={[Function]}
              title="Saved search"
            >
              <StyledComponent
                bsStyle="default"
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "SIZES": Array [
                      "large",
                      "small",
                      "xsmall",
                    ],
                    "STYLES": Array [
                      "success",
                      "warning",
                      "danger",
                      "info",
                      "default",
                      "primary",
                      "link",
                    ],
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "Button-c9cbmb-0",
                      "isStatic": false,
                      "lastClassName": "GLfOY",
                      "rules": Array [
                        [Function],
                      ],
                    },
                    "displayName": "Button",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "Button-c9cbmb-0",
                    "target": [Function],
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={[Function]}
                onClick={[Function]}
                title="Saved search"
              >
                <Button
                  active={false}
                  block={false}
                  bsClass="btn"
                  bsStyle="default"
                  className="Button-c9cbmb-0 GLfOY"
                  disabled={false}
                  onClick={[Function]}
                  title="Saved search"
                >
                  <button
                    className="Button-c9cbmb-0 GLfOY btn btn-default"
                    disabled={false}
                    onClick={[Function]}
                    title="Saved search"
                    type="button"
                  >
                    <ForwardRef
                      fixedWidth={false}
                      inverse={false}
                      name="bookmark"
                      pulse={false}
                      spin={false}
                      style={
                        Object {
                          "color": "#007bff",
                        }
                      }
                    >
                      <i
                        className="fa fa-bookmark"
                        style={
                          Object {
                            "color": "#007bff",
                          }
                        }
                      />
                    </ForwardRef>
                  </button>
                </Button>
              </StyledComponent>
            </Button>
          </ForwardRef>
          <ForwardRef
            bsStyle="default"
            onClick={[Function]}
            title="List of saved searches"
          >
            <Button
              bsStyle="default"
              onClick={[Function]}
              title="List of saved searches"
            >
              <StyledComponent
                bsStyle="default"
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "SIZES": Array [
                      "large",
                      "small",
                      "xsmall",
                    ],
                    "STYLES": Array [
                      "success",
                      "warning",
                      "danger",
                      "info",
                      "default",
                      "primary",
                      "link",
                    ],
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "Button-c9cbmb-0",
                      "isStatic": false,
                      "lastClassName": "GLfOY",
                      "rules": Array [
                        [Function],
                      ],
                    },
                    "displayName": "Button",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "Button-c9cbmb-0",
                    "target": [Function],
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
                onClick={[Function]}
                title="List of saved searches"
              >
                <Button
                  active={false}
                  block={false}
                  bsClass="btn"
                  bsStyle="default"
                  className="Button-c9cbmb-0 GLfOY"
                  disabled={false}
                  onClick={[Function]}
                  title="List of saved searches"
                >
                  <button
                    className="Button-c9cbmb-0 GLfOY btn btn-default"
                    disabled={false}
                    onClick={[Function]}
                    title="List of saved searches"
                    type="button"
                  >
                    <ForwardRef
                      fixedWidth={false}
                      inverse={false}
                      name="folder-o"
                      pulse={false}
                      spin={false}
                    >
                      <i
                        className="fa fa-folder-o"
                      />
                    </ForwardRef>
                  </button>
                </Button>
              </StyledComponent>
            </Button>
          </ForwardRef>
        </div>
      </ButtonGroup>
    </div>
  </BookmarkControls>
</ConnectStoresWrapper[BookmarkControls] stores=viewStoreState>
`;

exports[`BookmarkControls render the BookmarkControls should render not dirty with unsaved view 1`] = `
<ConnectStoresWrapper[BookmarkControls] stores=viewStoreState
  viewStoreState={
    Object {
      "activeQuery": "",
      "dirty": false,
      "view": Object {
        "created_at": undefined,
        "description": "description",
        "id": undefined,
        "owner": undefined,
        "properties": undefined,
        "search_id": "id-beef",
        "state": undefined,
        "summary": undefined,
        "title": "title",
        "type": undefined,
      },
    }
  }
>
  <BookmarkControls
    viewStoreState={
      Object {
        "activeQuery": "",
        "dirty": false,
        "view": Object {
          "created_at": undefined,
          "description": "description",
          "id": undefined,
          "owner": undefined,
          "properties": undefined,
          "search_id": "id-beef",
          "state": undefined,
          "summary": undefined,
          "title": "title",
          "type": undefined,
        },
      }
    }
  >
    <div
      className="pull-right"
    >
      <ButtonGroup
        block={false}
        bsClass="btn-group"
        justified={false}
        vertical={false}
      >
        <div
          className="btn-group"
        >
          <ForwardRef
            bsStyle="default"
            onClick={[Function]}
            title="Export to new dashboard"
          >
            <Button
              bsStyle="default"
              onClick={[Function]}
              title="Export to new dashboard"
            >
              <StyledComponent
                bsStyle="default"
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "SIZES": Array [
                      "large",
                      "small",
                      "xsmall",
                    ],
                    "STYLES": Array [
                      "success",
                      "warning",
                      "danger",
                      "info",
                      "default",
                      "primary",
                      "link",
                    ],
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "Button-c9cbmb-0",
                      "isStatic": false,
                      "lastClassName": "GLfOY",
                      "rules": Array [
                        [Function],
                      ],
                    },
                    "displayName": "Button",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "Button-c9cbmb-0",
                    "target": [Function],
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
                onClick={[Function]}
                title="Export to new dashboard"
              >
                <Button
                  active={false}
                  block={false}
                  bsClass="btn"
                  bsStyle="default"
                  className="Button-c9cbmb-0 GLfOY"
                  disabled={false}
                  onClick={[Function]}
                  title="Export to new dashboard"
                >
                  <button
                    className="Button-c9cbmb-0 GLfOY btn btn-default"
                    disabled={false}
                    onClick={[Function]}
                    title="Export to new dashboard"
                    type="button"
                  >
                    <ForwardRef
                      fixedWidth={false}
                      inverse={false}
                      name="dashboard"
                      pulse={false}
                      spin={false}
                    >
                      <i
                        className="fa fa-dashboard"
                      />
                    </ForwardRef>
                  </button>
                </Button>
              </StyledComponent>
            </Button>
          </ForwardRef>
          <ForwardRef
            bsStyle="default"
            disabled={true}
            onClick={[Function]}
            title="Empty search"
          >
            <Button
              bsStyle="default"
              disabled={true}
              onClick={[Function]}
              title="Empty search"
            >
              <StyledComponent
                bsStyle="default"
                disabled={true}
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "SIZES": Array [
                      "large",
                      "small",
                      "xsmall",
                    ],
                    "STYLES": Array [
                      "success",
                      "warning",
                      "danger",
                      "info",
                      "default",
                      "primary",
                      "link",
                    ],
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "Button-c9cbmb-0",
                      "isStatic": false,
                      "lastClassName": "GLfOY",
                      "rules": Array [
                        [Function],
                      ],
                    },
                    "displayName": "Button",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "Button-c9cbmb-0",
                    "target": [Function],
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
                onClick={[Function]}
                title="Empty search"
              >
                <Button
                  active={false}
                  block={false}
                  bsClass="btn"
                  bsStyle="default"
                  className="Button-c9cbmb-0 GLfOY"
                  disabled={true}
                  onClick={[Function]}
                  title="Empty search"
                >
                  <button
                    className="Button-c9cbmb-0 GLfOY btn btn-default"
                    disabled={true}
                    onClick={[Function]}
                    title="Empty search"
                    type="button"
                  >
                    <ForwardRef
                      fixedWidth={false}
                      inverse={false}
                      name="eraser"
                      pulse={false}
                      spin={false}
                    >
                      <i
                        className="fa fa-eraser"
                      />
                    </ForwardRef>
                  </button>
                </Button>
              </StyledComponent>
            </Button>
          </ForwardRef>
          <ForwardRef
            bsStyle="default"
            onClick={[Function]}
            title="Save search"
          >
            <Button
              bsStyle="default"
              onClick={[Function]}
              title="Save search"
            >
              <StyledComponent
                bsStyle="default"
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "SIZES": Array [
                      "large",
                      "small",
                      "xsmall",
                    ],
                    "STYLES": Array [
                      "success",
                      "warning",
                      "danger",
                      "info",
                      "default",
                      "primary",
                      "link",
                    ],
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "Button-c9cbmb-0",
                      "isStatic": false,
                      "lastClassName": "GLfOY",
                      "rules": Array [
                        [Function],
                      ],
                    },
                    "displayName": "Button",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "Button-c9cbmb-0",
                    "target": [Function],
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={[Function]}
                onClick={[Function]}
                title="Save search"
              >
                <Button
                  active={false}
                  block={false}
                  bsClass="btn"
                  bsStyle="default"
                  className="Button-c9cbmb-0 GLfOY"
                  disabled={false}
                  onClick={[Function]}
                  title="Save search"
                >
                  <button
                    className="Button-c9cbmb-0 GLfOY btn btn-default"
                    disabled={false}
                    onClick={[Function]}
                    title="Save search"
                    type="button"
                  >
                    <ForwardRef
                      fixedWidth={false}
                      inverse={false}
                      name="bookmark-o"
                      pulse={false}
                      spin={false}
                      style={
                        Object {
                          "color": "",
                        }
                      }
                    >
                      <i
                        className="fa fa-bookmark-o"
                        style={
                          Object {
                            "color": "",
                          }
                        }
                      />
                    </ForwardRef>
                  </button>
                </Button>
              </StyledComponent>
            </Button>
          </ForwardRef>
          <ForwardRef
            bsStyle="default"
            onClick={[Function]}
            title="List of saved searches"
          >
            <Button
              bsStyle="default"
              onClick={[Function]}
              title="List of saved searches"
            >
              <StyledComponent
                bsStyle="default"
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "SIZES": Array [
                      "large",
                      "small",
                      "xsmall",
                    ],
                    "STYLES": Array [
                      "success",
                      "warning",
                      "danger",
                      "info",
                      "default",
                      "primary",
                      "link",
                    ],
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "Button-c9cbmb-0",
                      "isStatic": false,
                      "lastClassName": "GLfOY",
                      "rules": Array [
                        [Function],
                      ],
                    },
                    "displayName": "Button",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "Button-c9cbmb-0",
                    "target": [Function],
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
                onClick={[Function]}
                title="List of saved searches"
              >
                <Button
                  active={false}
                  block={false}
                  bsClass="btn"
                  bsStyle="default"
                  className="Button-c9cbmb-0 GLfOY"
                  disabled={false}
                  onClick={[Function]}
                  title="List of saved searches"
                >
                  <button
                    className="Button-c9cbmb-0 GLfOY btn btn-default"
                    disabled={false}
                    onClick={[Function]}
                    title="List of saved searches"
                    type="button"
                  >
                    <ForwardRef
                      fixedWidth={false}
                      inverse={false}
                      name="folder-o"
                      pulse={false}
                      spin={false}
                    >
                      <i
                        className="fa fa-folder-o"
                      />
                    </ForwardRef>
                  </button>
                </Button>
              </StyledComponent>
            </Button>
          </ForwardRef>
        </div>
      </ButtonGroup>
    </div>
  </BookmarkControls>
</ConnectStoresWrapper[BookmarkControls] stores=viewStoreState>
`;
