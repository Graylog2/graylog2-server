// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Highlight does not highlight string if length is negative 1`] = `
<PossiblyHighlight
  color="#ffec3d"
  field="foo"
  highlightRanges={
    Object {
      "foo": Array [
        Object {
          "length": -3,
          "start": 3,
        },
      ],
    }
  }
  value="foobar"
>
  foobar
</PossiblyHighlight>
`;

exports[`Highlight does not highlight string if range for field is absent 1`] = `
<PossiblyHighlight
  color="#ffec3d"
  field="foo"
  highlightRanges={
    Object {
      "bar": Array [
        Object {
          "length": 6,
          "start": 0,
        },
      ],
    }
  }
  value="foobar"
>
  foobar
</PossiblyHighlight>
`;

exports[`Highlight does not highlight string if start is negative 1`] = `
<PossiblyHighlight
  color="#ffec3d"
  field="foo"
  highlightRanges={
    Object {
      "foo": Array [
        Object {
          "length": 3,
          "start": -3,
        },
      ],
    }
  }
  value="foobar"
>
  foobar
</PossiblyHighlight>
`;

exports[`Highlight highlights remainder of string if length of range exceeds length of string 1`] = `
<PossiblyHighlight
  color="#ffec3d"
  field="foo"
  highlightRanges={
    Object {
      "foo": Array [
        Object {
          "length": 256,
          "start": 3,
        },
      ],
    }
  }
  value="foobar"
>
  foo
  <span
    key="highlight-0"
    style={
      Object {
        "backgroundColor": "#ffec3d",
      }
    }
  >
    bar
  </span>
</PossiblyHighlight>
`;

exports[`Highlight highlights string for multiple highlight ranges 1`] = `
<PossiblyHighlight
  color="#ffec3d"
  field="foo"
  highlightRanges={
    Object {
      "foo": Array [
        Object {
          "length": 5,
          "start": 4,
        },
        Object {
          "length": 10,
          "start": 14,
        },
      ],
    }
  }
  value="the brown fox jumps over the lazy dog"
>
  the 
  <span
    key="highlight-0"
    style={
      Object {
        "backgroundColor": "#ffec3d",
      }
    }
  >
    brown
  </span>
   fox 
  <span
    key="highlight-1"
    style={
      Object {
        "backgroundColor": "#ffec3d",
      }
    }
  >
    jumps over
  </span>
   the lazy dog
</PossiblyHighlight>
`;

exports[`Highlight highlights string for multiple highlight ranges where one is a complete subset of the other 1`] = `
<PossiblyHighlight
  color="#ffec3d"
  field="foo"
  highlightRanges={
    Object {
      "foo": Array [
        Object {
          "length": 5,
          "start": 4,
        },
        Object {
          "length": 1,
          "start": 7,
        },
      ],
    }
  }
  value="the brown fox jumps over the lazy dog"
>
  the 
  <span
    key="highlight-0"
    style={
      Object {
        "backgroundColor": "#ffec3d",
      }
    }
  >
    brown
  </span>
  <span
    key="highlight-1"
    style={
      Object {
        "backgroundColor": "#ffec3d",
      }
    }
  />
   fox jumps over the lazy dog
</PossiblyHighlight>
`;

exports[`Highlight highlights string for multiple, overlapping highlight ranges 1`] = `
<PossiblyHighlight
  color="#ffec3d"
  field="foo"
  highlightRanges={
    Object {
      "foo": Array [
        Object {
          "length": 5,
          "start": 4,
        },
        Object {
          "length": 10,
          "start": 7,
        },
      ],
    }
  }
  value="the brown fox jumps over the lazy dog"
>
  the 
  <span
    key="highlight-0"
    style={
      Object {
        "backgroundColor": "#ffec3d",
      }
    }
  >
    brown
  </span>
  <span
    key="highlight-1"
    style={
      Object {
        "backgroundColor": "#ffec3d",
      }
    }
  >
     fox jum
  </span>
  ps over the lazy dog
</PossiblyHighlight>
`;

exports[`Highlight highlights string for single highlight range 1`] = `
<PossiblyHighlight
  color="#ffec3d"
  field="foo"
  highlightRanges={
    Object {
      "foo": Array [
        Object {
          "length": 6,
          "start": 0,
        },
      ],
    }
  }
  value="foobar"
>
  <span
    key="highlight-0"
    style={
      Object {
        "backgroundColor": "#ffec3d",
      }
    }
  >
    foobar
  </span>
</PossiblyHighlight>
`;

exports[`Highlight returns unmodified string without ranges 1`] = `
<Highlight
  field="foo"
  value="bar"
>
  <PossiblyHighlight
    color="#ffec3d"
    field="foo"
    highlightRanges={Object {}}
    value="bar"
  >
    bar
  </PossiblyHighlight>
</Highlight>
`;

exports[`Highlight works for empty field & value 1`] = `
<Highlight
  field=""
  value=""
>
  <PossiblyHighlight
    color="#ffec3d"
    field=""
    highlightRanges={Object {}}
    value=""
  />
</Highlight>
`;
