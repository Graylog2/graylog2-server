// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SeriesConfiguration renders the configuration dialog 1`] = `
<SeriesConfiguration
  onClose={[Function]}
  series={
    Object {
      "config": Object {
        "name": undefined,
      },
      "function": "count()",
    }
  }
>
  <span>
    <FormGroup
      bsClass="form-group"
    >
      <div
        className="form-group"
      >
        <ControlLabel>
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "ControlLabel-sc-1edmum5-0",
                  "isStatic": false,
                  "lastClassName": "jmEvcm",
                  "rules": Array [
                    [Function],
                  ],
                },
                "displayName": "ControlLabel",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "ControlLabel-sc-1edmum5-0",
                "target": [Function],
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
          >
            <ControlLabel
              bsClass="control-label"
              className="ControlLabel-sc-1edmum5-0 jmEvcm"
              srOnly={false}
            >
              <label
                className="ControlLabel-sc-1edmum5-0 jmEvcm control-label"
              >
                Name
              </label>
            </ControlLabel>
          </StyledComponent>
        </ControlLabel>
        <FormControl
          onChange={[Function]}
          type="text"
          value="count()"
        >
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "Feedback": [Function],
                "SIZES": Array [
                  "small",
                  "large",
                ],
                "Static": [Function],
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "FormControl-sc-1amoaox-0",
                  "isStatic": false,
                  "lastClassName": "lpicKK",
                  "rules": Array [
                    [Function],
                  ],
                },
                "displayName": "FormControl",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "FormControl-sc-1amoaox-0",
                "target": [Function],
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
            onChange={[Function]}
            type="text"
            value="count()"
          >
            <FormControl
              bsClass="form-control"
              className="FormControl-sc-1amoaox-0 lpicKK"
              componentClass="input"
              onChange={[Function]}
              type="text"
              value="count()"
            >
              <input
                className="FormControl-sc-1amoaox-0 lpicKK form-control"
                onChange={[Function]}
                type="text"
                value="count()"
              />
            </FormControl>
          </StyledComponent>
        </FormControl>
        <HelpBlock>
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "HelpBlock-i8is92-0",
                  "isStatic": false,
                  "lastClassName": "fHJMjA",
                  "rules": Array [
                    [Function],
                  ],
                },
                "displayName": "HelpBlock",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "HelpBlock-i8is92-0",
                "target": [Function],
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
          >
            <HelpBlock
              bsClass="help-block"
              className="HelpBlock-i8is92-0 fHJMjA"
            >
              <span
                className="HelpBlock-i8is92-0 fHJMjA help-block"
              >
                The name of the series as it appears in the chart.
              </span>
            </HelpBlock>
          </StyledComponent>
        </HelpBlock>
      </div>
    </FormGroup>
    <div
      className="pull-right"
      style={
        Object {
          "marginBottom": "10px",
        }
      }
    >
      <ForwardRef
        bsStyle="success"
        onClick={[Function]}
      >
        <Button__StyledButton
          bsStyle="success"
          onClick={[Function]}
        >
          <StyledComponent
            bsStyle="success"
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "SIZES": Array [
                  "large",
                  "small",
                  "xsmall",
                ],
                "STYLES": Array [
                  "success",
                  "warning",
                  "danger",
                  "info",
                  "default",
                  "primary",
                  "link",
                ],
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "Button__StyledButton-c9cbmb-0",
                  "isStatic": false,
                  "lastClassName": "fnYQfY",
                  "rules": Array [
                    [Function],
                  ],
                },
                "displayName": "Button__StyledButton",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "Button__StyledButton-c9cbmb-0",
                "target": [Function],
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
            onClick={[Function]}
          >
            <Button
              active={false}
              block={false}
              bsClass="btn"
              bsStyle="success"
              className="Button__StyledButton-c9cbmb-0 fnYQfY"
              disabled={false}
              onClick={[Function]}
            >
              <button
                className="Button__StyledButton-c9cbmb-0 fnYQfY btn btn-success"
                disabled={false}
                onClick={[Function]}
                type="button"
              >
                Done
              </button>
            </Button>
          </StyledComponent>
        </Button__StyledButton>
      </ForwardRef>
    </div>
  </span>
</SeriesConfiguration>
`;
